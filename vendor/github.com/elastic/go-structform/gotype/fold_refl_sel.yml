# Licensed to Elasticsearch B.V. under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Elasticsearch B.V. licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

import:
  - types.yml

main: |
  package gotype

  var _reflPrimitivesMapping = map[reflect.Type]reFoldFn{
    {{ range data.primitiveTypes }}
      {{ $t := capitalize . }}
      t{{ $t }}: reFold{{ $t }},
      reflect.SliceOf(t{{ $t }}): reFoldArr{{ $t }},
      reflect.MapOf(tString, t{{ $t }}): reFoldMap{{ $t }},
    {{ end }}
  }

  func getReflectFoldPrimitive(t reflect.Type) reFoldFn {
    return _reflPrimitivesMapping[t]
  }

  func getReflectFoldPrimitiveKind(t reflect.Type) (reFoldFn, error) {
    switch t.Kind() {
    {{ range data.primitiveTypes }}
      {{ $t := capitalize . }}
      case reflect.{{ $t }}:
        return reFold{{ $t }}, nil
    {{ end }}
    default:
      return nil, errUnsupported
    }
  }
