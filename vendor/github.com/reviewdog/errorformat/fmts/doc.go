// Code generated by 'go generate'
// source: fmts/gendoc.go
// DO NOT EDIT!
// Please run '$ go generate ./...' instead to update this file

// Package fmts holds defined errorformats.
//
// Defined formats:
// 
// 	ansible
// 		ansible-lint	(ansible-lint -p playbook.yml) Checks playbooks for practices and behaviour that could potentially be improved - https://github.com/ansible/ansible-lint
// 	css
// 		stylelint	A mighty modern CSS linter - https://github.com/stylelint/stylelint
// 	env
// 		dotenv-linter	Linter for .env files - https://github.com/mgrachev/dotenv-linter
// 	go
// 		golangci-lint	(golangci-lint run --out-format=line-number) GolangCI-Lint is a linters aggregator. - https://github.com/golangci/golangci-lint
// 		golint	linter for Go source code - https://github.com/golang/lint
// 		govet	Vet examines Go source code and reports suspicious problems - https://golang.org/cmd/vet/
// 	javascript
// 		eslint	(eslint [-f stylish]) A fully pluggable tool for identifying and reporting on patterns in JavaScript - https://github.com/eslint/eslint
// 		eslint-compact	(eslint -f compact) A fully pluggable tool for identifying and reporting on patterns in JavaScript - https://github.com/eslint/eslint
// 	php
// 		phpstan	(phpstan --error-format=raw) PHP Static Analysis Tool - discover bugs in your code without running it! - https://github.com/phpstan/phpstan
// 	puppet
// 		puppet-lint	Check that your Puppet manifests conform to the style guide - https://github.com/rodjek/puppet-lint
// 	python
// 		pep8	Python style guide checker - https://pypi.python.org/pypi/pep8
// 	ruby
// 		brakeman	(brakeman --quiet --format tabs) A static analysis security vulnerability scanner for Ruby on Rails applications - https://github.com/presidentbeef/brakeman
// 		reek	(reek --single-line) Code smell detector for Ruby - https://github.com/troessner/reek
// 		rubocop	A Ruby static code analyzer, based on the community Ruby style guide - https://github.com/rubocop-hq/rubocop
// 	rust
// 		cargo-check	(cargo check -q --message-format=short) Check a local package and all of its dependencies for errors - https://github.com/rust-lang/cargo
// 		clippy	(cargo clippy -q --message-format=short) A bunch of lints to catch common mistakes and improve your Rust code - https://github.com/rust-lang/rust-clippy
// 	scala
// 		sbt	the interactive build tool - http://www.scala-sbt.org/
// 		sbt-scalastyle	Scalastyle - SBT plugin - http://www.scalastyle.org/sbt.html
// 		scalac	Scala compiler - http://www.scala-lang.org/
// 		scalastyle	Scalastyle - Command line - http://www.scalastyle.org/command-line.html
// 	typescript
// 		tsc	TypeScript compiler - https://www.typescriptlang.org/
// 		tslint	An extensible linter for the TypeScript language - https://github.com/palantir/tslint
package fmts
