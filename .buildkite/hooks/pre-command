#!/usr/bin/env bash

set -euo pipefail

if [[ "$BUILDKITE_PIPELINE_SLUG" == "filebeat" || "$BUILDKITE_PIPELINE_SLUG" == "auditbeat" || "$BUILDKITE_PIPELINE_SLUG" == "heartbeat" ]]; then
  source .buildkite/env-scripts/env.sh
  source .buildkite/env-scripts/util.sh
  source .buildkite/env-scripts/win-env.sh

  if [[ -z "${GOLANG_VERSION-""}" ]]; then
    export GOLANG_VERSION=$(cat "${WORKSPACE}/.go-version")
  fi
fi

if [[ "$BUILDKITE_PIPELINE_SLUG" == "beats-metricbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-libbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-packetbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-winlogbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-libbeat" ]]; then
  source .buildkite/scripts/setenv.sh
  if [[ "${BUILDKITE_COMMAND}" =~ ^buildkite-agent ]]; then
    echo "Skipped pre-command when running the Upload pipeline"
    exit 0
  fi
fi
