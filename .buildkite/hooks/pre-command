#!/usr/bin/env bash

set -euo pipefail

source .buildkite/scripts/common.sh

AWS_SERVICE_ACCOUNT_SECRET_PATH="kv/ci-shared/platform-ingest/aws_account_auth"

if [[ "$BUILDKITE_PIPELINE_SLUG" == "filebeat" || "$BUILDKITE_PIPELINE_SLUG" == "auditbeat" || "$BUILDKITE_PIPELINE_SLUG" == "heartbeat" ]]; then
  source .buildkite/env-scripts/env.sh
  source .buildkite/env-scripts/util.sh
  source .buildkite/env-scripts/win-env.sh

  if [[ -z "${GOLANG_VERSION-""}" ]]; then
    export GOLANG_VERSION=$(cat "${WORKSPACE}/.go-version")
  fi
fi

if [[ "$BUILDKITE_PIPELINE_SLUG" == "beats-metricbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-libbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-packetbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-winlogbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-libbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-metricbeat" ]]; then
  source .buildkite/scripts/setenv.sh
  if [[ "${BUILDKITE_COMMAND}" =~ ^buildkite-agent ]]; then
    echo "Skipped pre-command when running the Upload pipeline"
    exit 0
  fi
fi

if [[ "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-metricbeat" ]]; then
  if [[ "${BUILDKITE_STEP_KEY}" == "mandatory-int-test" || "${BUILDKITE_STEP_KEY}" == "mandatory-python-int-test" || "${BUILDKITE_STEP_KEY}" == "extended-cloud-test" ]]; then
    # Configure MODULE env variable.
    defineModuleFromTheChangeSet "${MODULE_DIR}"
  fi
  if [[ "${BUILDKITE_STEP_KEY}" == "extended-cloud-test" ]]; then
    # Start the required services for the required
    startCloudTestEnv "${MODULE_DIR}"

    # export AWS masked credentials
    BEATS_AWS_SECRET_KEY=$(retry 5 vault kv get -field secret_key ${AWS_SERVICE_ACCOUNT_SECRET_PATH})
    export BEATS_AWS_SECRET_KEY
    BEATS_AWS_ACCESS_KEY=$(retry 5 vault kv get -field access_key ${AWS_SERVICE_ACCOUNT_SECRET_PATH})
    export BEATS_AWS_ACCESS_KEY
  fi
fi
