#!/usr/bin/env bash

set -euo pipefail

# Secrets must be redacted
# https://buildkite.com/docs/pipelines/managing-log-output#redacted-environment-variables
AWS_SERVICE_ACCOUNT_SECRET_PATH="kv/ci-shared/platform-ingest/aws_account_auth"
PRIVATE_CI_GCS_CREDENTIALS_PATH="kv/ci-shared/platform-ingest/gcp-platform-ingest-ci-service-account"
DOCKER_REGISTRY_SECRET_PATH="kv/ci-shared/platform-ingest/docker_registry_prod"
PRIVATE_CI_GCS_CREDENTIALS_PATH="kv/ci-shared/platform-ingest/private_ci_artifacts_gcs_credentials"
GITHUB_TOKEN_VAULT_PATH="kv/ci-shared/platform-ingest/github_token"

retry() {
  local retries=$1
  shift
  local count=0
  until "$@"; do
    exit=$?
    wait=$((2 ** count))
    count=$((count + 1))
    if [ $count -lt "$retries" ]; then
      >&2 echo "Retry $count/$retries exited $exit, retrying in $wait seconds..."
      sleep $wait
    else
      >&2 echo "Retry $count/$retries exited $exit, no more retries left."
      return $exit
    fi
  done
  return 0
}


if [[ "$BUILDKITE_PIPELINE_SLUG" == "beats" || "$BUILDKITE_PIPELINE_SLUG" == "filebeat" || "$BUILDKITE_PIPELINE_SLUG" == "auditbeat" || "$BUILDKITE_PIPELINE_SLUG" == "heartbeat" || "$BUILDKITE_PIPELINE_SLUG" == "deploy-k8s" ]]; then
  source .buildkite/env-scripts/env.sh
  source .buildkite/env-scripts/util.sh

  if [[ -z "${GO_VERSION-""}" ]]; then
    export GO_VERSION=$(cat "${WORKSPACE}/.go-version")
  fi

  if [[ "$BUILDKITE_STEP_KEY" == macos* ]]; then
    ulimit -Sn 30000

    echo "--- Setting up environment"
    add_bin_path
    with_go
    with_mage
  fi

  if [[ "$BUILDKITE_STEP_KEY" == package* ]]; then
    export DOCKER_USERNAME_SECRET=$(retry_with_count 5 vault kv get -field user "${DOCKER_REGISTRY_SECRET_PATH}")
    export DOCKER_PASSWORD_SECRET=$(retry_with_count 5 vault kv get -field password "${DOCKER_REGISTRY_SECRET_PATH}")
    export GITHUB_TOKEN_SECRET=$(retry_with_count 5 vault kv get -field token ${GITHUB_TOKEN_VAULT_PATH})

    docker login -u "${DOCKER_USERNAME_SECRET}" -p "${DOCKER_PASSWORD_SECRET}" "${DOCKER_REGISTRY}" 2>/dev/null

    github_username=$(retry_with_count 5 vault kv get -field username ${GITHUB_TOKEN_VAULT_PATH})
    github_email=$(retry_with_count 5 vault kv get -field email ${GITHUB_TOKEN_VAULT_PATH})

    git config user.name "$github_username"
    git config user.email "$github_email"
  fi
fi

ENABLED_BEATS_PIPELINES_SLUGS=(
  "auditbeat"
  "filebeat"
  "beats-metricbeat"
  "beats-libbeat"
  "beats-packetbeat"
  "beats-winlogbeat"
  "beats-winlogbeat"
  "beats-xpack-libbeat"
  "beats-xpack-metricbeat"
  "beats-xpack-packetbeat"
  "beats-xpack-winlogbeat"
  "beats-xpack-dockerlogbeat"
  "beats-xpack-auditbeat"
  "beats-xpack-filebeat" 
  "beats-xpack-heartbeat" 
  "beats-xpack-osquerybeat"
  )

for slug in "${ENABLED_BEATS_PIPELINES_SLUGS[@]}"; do
  if [[ "$BUILDKITE_PIPELINE_SLUG" == "$slug" ]]; then
    source .buildkite/scripts/setenv.sh
    break
  fi
done

if [[ "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-metricbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-filebeat" ]]; then
  if [[ "$BUILDKITE_STEP_KEY" == "extended-cloud-test" ]]; then
    BEATS_AWS_SECRET_KEY=$(retry 5 vault kv get -field secret_key ${AWS_SERVICE_ACCOUNT_SECRET_PATH})
    export BEATS_AWS_SECRET_KEY
    BEATS_AWS_ACCESS_KEY=$(retry 5 vault kv get -field access_key ${AWS_SERVICE_ACCOUNT_SECRET_PATH})
    export BEATS_AWS_ACCESS_KEY
  fi
fi

if [[ "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-packetbeat" ]]; then
  if [[ "$BUILDKITE_STEP_KEY" == "extended-win-10-system-tests" || "$BUILDKITE_STEP_KEY" == "mandatory-win-2022-system-tests" ]]; then
    PRIVATE_CI_GCS_CREDENTIALS_SECRET=$(retry 5 vault kv get -field plaintext -format=json ${PRIVATE_CI_GCS_CREDENTIALS_PATH})
    export PRIVATE_CI_GCS_CREDENTIALS_SECRET
  fi
fi
