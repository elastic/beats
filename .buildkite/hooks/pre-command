#!/usr/bin/env bash

set -euo pipefail

if [[ "$BUILDKITE_PIPELINE_SLUG" == "filebeat" || "$BUILDKITE_PIPELINE_SLUG" == "auditbeat" || "$BUILDKITE_PIPELINE_SLUG" == "heartbeat" ]]; then
  source .buildkite/env-scripts/env.sh
  source .buildkite/env-scripts/util.sh
  source .buildkite/env-scripts/win-env.sh

  if [[ -z "${GOLANG_VERSION-""}" ]]; then
    export GOLANG_VERSION=$(cat "${WORKSPACE}/.go-version")
  fi
fi

if [[ "$BUILDKITE_PIPELINE_SLUG" == "beats-metricbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-libbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-packetbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-winlogbeat" || "$BUILDKITE_PIPELINE_SLUG" == "beats-xpack-libbeat" ]]; then
  source .buildkite/scripts/setenv.sh
  if [[ "${BUILDKITE_COMMAND}" =~ ^buildkite-agent ]]; then
    echo "Skipped pre-command when running the Upload pipeline"
    exit 0
  fi
fi


if [[ "$BUILDKITE_STEP_KEY" == package* ]]; then
## TEST THIS OUT - maybe golangcrossbuid fails for ARM because of this...
# Secrets must be redacted
# https://buildkite.com/docs/pipelines/managing-log-output#redacted-environment-variables
DOCKER_REGISTRY_SECRET_PATH="kv/ci-shared/platform-ingest/docker_registry_prod"
GITHUB_TOKEN_VAULT_PATH="kv/ci-shared/platform-ingest/github_token"
export DOCKER_USERNAME_SECRET=$(retry 5 vault kv get -field user "${DOCKER_REGISTRY_SECRET_PATH}")
export DOCKER_PASSWORD_SECRET=$(retry 5 vault kv get -field password "${DOCKER_REGISTRY_SECRET_PATH}")
export GITHUB_TOKEN_SECRET=$(retry 5 vault kv get -field token ${GITHUB_TOKEN_VAULT_PATH})

docker login -u "${DOCKER_USERNAME_SECRET}" -p "${DOCKER_PASSWORD_SECRET}" "${DOCKER_REGISTRY}" 2>/dev/null

github_username=$(retry 5 vault kv get -field username ${GITHUB_TOKEN_VAULT_PATH})
github_email=$(retry 5 vault kv get -field email ${GITHUB_TOKEN_VAULT_PATH})

git config user.name "$github_username"
git config user.email "$github_email"
echo "CONFIGURED"
fi