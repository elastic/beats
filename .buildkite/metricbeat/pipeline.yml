# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
env:
  SETUP_GVM_VERSION: 'v0.5.1'
  SETUP_MAGE_VERSION: '1.13.0'
  IMAGE_UBUNTU_X86_64: "family/core-ubuntu-2204"
  IMAGE_WIN_2016: "family/core-windows-2016"
  IMAGE_WIN_2019: "family/core-windows-2019"
  IMAGE_WIN_2022: "family/core-windows-2022"

steps:

  - group: "Mandatory Tests"
    key: "mandatory-tests"
#    if: define_condition_if_needed_for_group
    steps:
      # TODO: Ubuntu Unit Tests have some issues, it needs to be compared with the Jenkins pipeline, but it's difficult to find it :)
      # - label: ":linux: Ubuntu Unit Tests"
      #   key: "mandatory-linux-unit-test"
      #   command: ".buildkite/metricbeat/scripts/unit_tests.sh"
      #   agents:
      #     provider: "gcp"
      #     image: "${IMAGE_UBUNTU_X86_64}"
      #     machineType: "c2-standard-16"

      # - label: ":go: Go Intergration Tests"
      #   key: "mandatory-int-test"
      #   command: ".buildkite/metricbeat/scripts/go_int_tests.sh"
      #   agents:
      #     provider: "gcp"
      #     image: "${IMAGE_UBUNTU_X86_64}"
      #     machineType: "c2-standard-16"

      # - label: ":python: Python Integration Tests"
      #   key: "mandatory-python-int-test"
      #   command: ".buildkite/metricbeat/scripts/py_int_tests.sh"
      #   agents:
      #     provider: "gcp"
      #     image: "${IMAGE_UBUNTU_X86_64}"
      #     machineType: "c2-standard-16"

      # - label: ":negative_squared_cross_mark: Cross compile"
      #   key: "mandatory-cross-compile"
      #   command: ".buildkite/metricbeat/scripts/crosscompile.sh"
      #   agents:
      #     provider: "gcp"
      #     image: "${IMAGE_UBUNTU_X86_64}"
      #     machineType: "c2-standard-16"

      - label: ":windows: Windows Unit Tests - {{matrix.image}}"
        command: ".buildkite/metricbeat/scripts/win_unit_tests.ps1"
        key: "mandatory-win-unit-tests"
        agents:
          provider: "gcp"
          image: "{{matrix.image}}"
          machine_type: "n2-standard-8"
          disk_size: 200
          disk_type: "pd-ssd"
        matrix:
          setup:
            image:
              - "${IMAGE_WIN_2016}"
              - "${IMAGE_WIN_2022}"
        artifact_paths: "build/*.*"

#   - group: "Extended Tests"
#     key: "extended-tests"
# #    if: define_condition_if_needed_for_group
#     steps:
#       # TODO: MacOS Unit Tests have issues with the filesystem checking, it needs to compare with the Jenkins pipeline, and probably the tests have to be fixed :)
#       - label: ":mac: MacOS Unit Tests"
#         key: "extended-macos-unit-tests"
#         # if: build.env("GITHUB_PR_TRIGGER_COMMENT") == "/test metricbeat for macos" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/ || build.env("BUILDKITE_TAG") != ""
#         command: ".buildkite/metricbeat/scripts/unit_tests.sh"
#         agents:
#           provider: "orka"
#           imagePrefix: "generic-13-ventura-x64"

  - group: "Extended Windowds Tests"
    key: "extended-win-tests"
    steps:
      - label: ":windows: Win 2019 Unit Tests"
        key: "extended-win-2019-unit-tests"
        command: ".buildkite/metricbeat/scripts/win_unit_tests.ps1"
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2019}"
          machine_type: "n2-standard-8"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths: "build/*.*"

  - wait:
      allow_dependency_failure: true

  - label: ":junit: Junit annotate"
    plugins:
      - junit-annotate#v2.4.1:
          artifacts: "build/*.*"
          fail-build-on-error: true
    agents:
      provider: "gcp"
    depends_on:
      - step: "check"
        allow_failure: true