# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
name: "beats-metricbeat"

env:
  AWS_ARM_INSTANCE_TYPE: "t4g.xlarge"

  GCP_DEFAULT_MACHINE_TYPE: "c2d-highcpu-8"
  GCP_HI_PERF_MACHINE_TYPE: "c2d-highcpu-16"
  GCP_WIN_MACHINE_TYPE: "n2-standard-8"

  IMAGE_MACOS_ARM: "generic-13-ventura-arm"
  IMAGE_MACOS_X86_64: "generic-13-ventura-x64"
  IMAGE_UBUNTU_ARM_64: "platform-ingest-beats-ubuntu-2204-aarch64"
  IMAGE_UBUNTU_X86_64: "family/platform-ingest-beats-ubuntu-2204"
  IMAGE_WIN_10: "family/platform-ingest-beats-windows-10"
  IMAGE_WIN_11: "family/platform-ingest-beats-windows-11"
  IMAGE_WIN_2016: "family/platform-ingest-beats-windows-2016"
  IMAGE_WIN_2019: "family/platform-ingest-beats-windows-2019"
  IMAGE_WIN_2022: "family/platform-ingest-beats-windows-2022"

  # Integration Tests
  K8S_VERSION: "v1.29.0"
  ASDF_KIND_VERSION: "0.20.0"

  # Other deps
  ASDF_MAGE_VERSION: 1.15.0

  # Unit tests
  RACE_DETECTOR: "true"
  TEST_COVERAGE: "true"

steps:
  - group: "Metricbeat Mandatory Tests"
    key: "metricbeat-mandatory-tests"
    steps:
      - label: ":linux: Ubuntu Unit Tests"
        key: "mandatory-linux-unit-test"
        command: "cd metricbeat && mage build unitTest"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Ubuntu Unit Tests"

      - label: ":go: Go Integration Tests"
        key: "mandatory-int-test"
        command: |
          set -euo pipefail
          # defines the MODULE env var based on what's changed in a PR
          source .buildkite/scripts/changesets.sh
          defineModuleFromTheChangeSet metricbeat
          echo "~~~ Running tests"

          # TODO move this section to base image / pre-command hook
          echo "~~~ Installing kind"
          asdf plugin add kind
          asdf install kind $ASDF_KIND_VERSION

          .buildkite/deploy/kubernetes/scripts/kind-setup.sh

          echo "~~~ Running tests"
          export KUBECONFIG="$$PWD/kubecfg"
          cd metricbeat && mage goIntegTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Go Integration Tests"

      - label: ":python: Python Integration Tests"
        key: "mandatory-python-int-test"
        command: |
          set -euo pipefail
          # defines the MODULE env var based on what's changed in a PR
          source .buildkite/scripts/changesets.sh
          defineModuleFromTheChangeSet metricbeat
          echo "~~~ Running tests"

          # TODO move this section to base image / pre-command hook
          echo "~~~ Installing kind"
          asdf plugin add kind
          asdf install kind $ASDF_KIND_VERSION

          .buildkite/deploy/kubernetes/scripts/kind-setup.sh

          echo "~~~ Running tests"
          export KUBECONFIG="$$PWD/kubecfg"
          cd metricbeat && mage pythonIntegTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Python Integration Tests"

      - label: ":negative_squared_cross_mark: Cross compile"
        key: "mandatory-cross-compile"
        command: "make -C metricbeat crosscompile"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Cross compile"

      - label: ":windows: Windows 2016 Unit Tests"
        command: |
          Set-Location -Path metricbeat
          mage build unitTest
        key: "mandatory-win-2016-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2016}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Windows 2016 Unit Tests"

      - label: ":windows: Windows 2022 Unit Tests"
        command: |
          Set-Location -Path metricbeat
          mage build unitTest
        key: "mandatory-win-2022-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2022}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Windows 2022 Unit Tests"

  - group: "Metricbeat Extended Windows Tests"
    key: "metricbeat-extended-win-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*[Ww]indows.*/
    steps:
      - label: ":windows: Windows 10 Unit Tests"
        command: |
          Set-Location -Path metricbeat
          mage build unitTest
        key: "extended-win-10-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_10}"
          machineType: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Extended Windows 10 Unit Tests"

      - label: ":windows: Windows 11 Unit Tests"
        command: |
          Set-Location -Path metricbeat
          mage build unitTest
        key: "extended-win-11-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_11}"
          machineType: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Extended Windows 11 Unit Tests"

      - label: ":windows: Windows 2019 Unit Tests"
        command: |
          Set-Location -Path metricbeat
          mage build unitTest
        key: "extended-win-2019-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2019}"
          machineType: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Extended Windows 2019 Unit Tests"

  - group: "Metricbeat Extended MacOS Tests"
    key: "metricbeat-extended-macos-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/
    steps:
      - label: ":mac: MacOS x64_64 Unit Tests"
        key: "extended-macos-x64-64-unit-tests"
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd metricbeat && mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_X86_64}"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Extended MacOS x86_64 Unit Tests"

      - label: ":mac: MacOS arm64 Unit Tests"
        key: "extended-macos-arm64-unit-tests"
        skip: "due to https://github.com/elastic/beats/issues/33035"
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd metricbeat && mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_ARM}"
        artifact_paths:
          - "metricbeat/build/*.xml"
          - "metricbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "metricbeat: Extended MacOS arm64 Unit Tests"

  - wait: ~
    # with PRs, we want to run packaging only if mandatory tests succeed
    # for other cases, e.g. merge commits, we want to run packaging (and publish) independently of other tests
    # this allows building DRA artifacts even if there is flakiness in mandatory tests
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
    depends_on: "metricbeat-mandatory-tests"

  - group: "Metricbeat Packaging"
    key: "metricbeat-packaging"
    steps:
      - label: ":linux: Packaging Linux"
        key: "packaging-linux"
        command: "cd metricbeat && mage package"
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        env:
          PLATFORMS: "+all linux/amd64 linux/arm64 windows/amd64 darwin/amd64 darwin/arm64"
        notify:
          - github_commit_status:
              context: "metricbeat: Packaging Linux"

      - label: ":linux: Packaging ARM"
        key: "packaging-arm"
        command: "cd metricbeat && mage package"
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: "aws"
          imagePrefix: "${IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        env:
          PLATFORMS: "linux/arm64"
          PACKAGES: "docker"
        notify:
          - github_commit_status:
              context: "metricbeat: Packaging Linux ARM"
