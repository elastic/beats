# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
name: "beats-filebeat"

env:
  AWS_ARM_INSTANCE_TYPE: "m6g.xlarge"
  AWS_IMAGE_UBUNTU_ARM_64: "platform-ingest-beats-ubuntu-2204-aarch64"
  GCP_DEFAULT_MACHINE_TYPE: "c2d-highcpu-8"
  GCP_HI_PERF_MACHINE_TYPE: "c2d-highcpu-16"
  GCP_WIN_MACHINE_TYPE: "n2-standard-8"
  IMAGE_MACOS_ARM: "generic-13-ventura-arm"
  IMAGE_MACOS_X86_64: "generic-13-ventura-x64"
  IMAGE_UBUNTU_X86_64: "family/platform-ingest-beats-ubuntu-2204"
  IMAGE_WIN_10: "family/platform-ingest-beats-windows-10"
  IMAGE_WIN_11: "family/platform-ingest-beats-windows-11"
  IMAGE_WIN_2016: "family/platform-ingest-beats-windows-2016"
  IMAGE_WIN_2019: "family/platform-ingest-beats-windows-2019"
  IMAGE_WIN_2022: "family/platform-ingest-beats-windows-2022"

  #Deps
  ASDF_MAGE_VERSION: 1.15.0
  # Integration Tests
  K8S_VERSION: "v1.29.0"
  ASDF_KIND_VERSION: "0.20.0"

  # Unit tests
  RACE_DETECTOR: "true"
  TEST_COVERAGE: "true"

steps:
  - group: "Filebeat Mandatory Tests"
    key: "filebeat-mandatory-tests"
    steps:
      - label: ":ubuntu: Filebeat Unit Tests"
        command: |
          cd filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Linux x86_64 Unit Tests"

      - label: ":ubuntu: Filebeat Go Integration Tests"
        command: |
          cd filebeat
          mage goIntegTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Filebeat Go Integration Tests"

      - label: ":ubuntu: Filebeat Python Integration Tests"
        command: |
          cd filebeat
          mage pythonIntegTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: gcp
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Python Integration Tests"

      - label: ":windows: Filebeat Windows 2016 Unit Tests"
        key: "windows-2016-unit-tests"
        command: |
          Set-Location -Path filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2016}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Windows 2016 Unit Tests"

      - label: ":windows: Filebeat Windows 2022 Unit Tests"
        key: "windows-2022-unit-tests"
        command: |
          Set-Location -Path filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2022}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Windows 2022 Unit Tests"

  - group: "Filebeat Extended Tests"
    key: "filebeat-extended-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*(macOS|arm).*/

    steps:
      - label: ":mac: Filebeat macOS x86_64 Unit Tests"
        key: "macos-unit-tests-extended"
        if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_X86_64}"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: macOS x86_64 Unit Tests"

      - label: ":mac: Filebeat macOS arm64 Unit Tests"
        key: "macos-arm64-unit-tests-extended"
        if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_ARM}"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: macOS arm64 Unit Tests"

      - label: ":linux: Filebeat arm64 Unit Tests"
        key: "extended-arm64-unit-test"
        if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*arm.*/
        command: |
          cd filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Linux arm64 Unit Tests"

  - group: "Filebeat Extended Windows Tests"
    key: "filebeat-extended-win-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*[Ww]indows.*/

    steps:
      - label: ":windows: Filebeat Windows 2019 Unit Tests"
        key: "windows-extended-2019"
        command: |
          Set-Location -Path filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2019}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Windows 2019 Unit Tests"

      - label: ":windows: Filebeat Windows 11 Unit Tests"
        key: "windows-extended-11"
        command: |
          Set-Location -Path filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_11}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Windows 11 Unit Tests"

      - label: ":windows: Filebeat Windows 10 Unit Tests"
        key: "windows-extended-10"
        command: |
          Set-Location -Path filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_10}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "filebeat: Windows 10 Unit Tests"

  - wait: ~
    # with PRs, we want to run packaging only if mandatory tests succeed
    # for other cases, e.g. merge commits, we want to run packaging (and publish) independently of other tests
    # this allows building DRA artifacts even if there is flakiness in mandatory tests
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
    depends_on: "filebeat-mandatory-tests"

  - group: "Filebeat Packaging"
    key: "packaging"
    steps:
      - label: ":linux: Filebeat Packaging Linux"
        key: "packaging-linux"
        command: |
          cd filebeat
          mage package
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        env:
          PLATFORMS: "+all linux/amd64 linux/arm64 windows/amd64 darwin/amd64 darwin/arm64"
        notify:
          - github_commit_status:
              context: "filebeat: Packaging Linux"

      - label: ":linux: Filebeat Packaging arm64"
        key: "packaging-arm"
        command: |
          cd filebeat
          mage package
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        env:
          PLATFORMS: "linux/arm64"
          PACKAGES: "docker"
        notify:
          - github_commit_status:
              context: "filebeat: Packaging arm64"
