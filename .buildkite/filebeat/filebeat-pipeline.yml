# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json

env:
  SETUP_GVM_VERSION: "v0.5.1"
  IMAGE_UBUNTU_X86_64: "family/core-ubuntu-2204"
  IMAGE_UBUNTU_ARM_64: "core-ubuntu-2004-aarch64"
  IMAGE_WIN_2016: "family/core-windows-2016"
  IMAGE_WIN_2019: "family/core-windows-2019"
  IMAGE_WIN_2022: "family/core-windows-2022"
  DEBIAN_FRONTEND: "noninteractive"

steps:
#  - group: "Filebeat Mandatory Testing"
#    key: "mandatory-tests"
#    if: build.env("GITHUB_PR_TRIGGER_COMMENT") == "filebeat" || build.env("BUILDKITE_PULL_REQUEST") != "false"
#
#    steps:
#      - label: ":ubuntu: Unit Tests"
#        command:
#          - "sudo apt-get update"
#          - "sudo apt-get install -y libsystemd-dev"
#          - "sudo apt install -y python3-pip"
#          - "sudo apt-get install -y python3-venv"
#          - ".buildkite/filebeat/scripts/unit-tests.sh"
#        agents:
#          provider: "gcp"
#          image: "${IMAGE_UBUNTU_X86_64}"
#
#      - label: ":ubuntu: Integration Tests"
#        command:
#          - "sudo apt-get update"
#          - "sudo apt-get install -y libsystemd-dev"
#          - ".buildkite/filebeat/scripts/integration-tests.sh"
#        agents:
#          provider: "gcp"
#          image: "${IMAGE_UBUNTU_X86_64}"
#
#      - label: ":ubuntu: Python Integration Tests"
#        command:
#          - "sudo apt-get update"
#          - "sudo apt-get install -y libsystemd-dev"
#          - ".buildkite/filebeat/scripts/integration-pytests.sh"
#        agents:
#          provider: "gcp"
#          image: "${IMAGE_UBUNTU_X86_64}"
#
#      - label: ":windows:-{{matrix.image}} Unit Tests"
#        command: ".buildkite/filebeat/scripts/unit-tests-win.ps1"
#        agents:
#          provider: "gcp"
#          image: "{{matrix.image}}"
#          machine_type: "n2-standard-8"
#          disk_size: 200
#          disk_type: "pd-ssd"
#        matrix:
#          setup:
#            image:
#              - "${IMAGE_WIN_2016}"
#              - "${IMAGE_WIN_2022}"
#
#  - group: "Extended Testing"
#    key: "extended-tests"
#    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
#
#    steps:
#      - label: ":linux:-ARM Unit Tests"
#        key: "arm-extended"
#        if: build.env("GITHUB_PR_TRIGGER_COMMENT") == "filebeat for arm" || build.env("GITHUB_PR_LABELS") =~ /.*arm.*/
#        command:
#          - "sudo apt-get update"
#          - "sudo apt-get install -y libsystemd-dev"
#          - "sudo apt install -y python3-pip"
#          - "sudo apt-get install -y python3-venv"
#          - ".buildkite/filebeat/scripts/unit-tests.sh"
#        notify:
#          - github_commit_status:
#              context: "Test Filebeat/ARM"
#        agents:
#          provider: "aws"
#          imagePrefix: "${IMAGE_UBUNTU_ARM_64}"
#          instanceType: "t4g.large"
#
#      - label: ":mac: MacOS Unit Tests"
#        key: "macos-extended"
#        if: build.env("GITHUB_PR_TRIGGER_COMMENT") == "filebeat for macos" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/
#        command:
#          - "ulimit -Sn 50000"
#          - ".buildkite/filebeat/scripts/unit-tests.sh"
#        agents:
#          provider: "orka"
#          imagePrefix: "generic-13-ventura-x64"
#
#      - label: ":windows:- {{IMAGE_WIN_2019}} Unit Tests"
#        key: "win-extended-2019"
#        command: ".buildkite/filebeat/scripts/unit-tests-win.ps1"
#        agents:
#          provider: "gcp"
#          image: "${IMAGE_WIN_2019}"
#          machine_type: "n2-standard-8"
#          disk_size: 200
#          disk_type: "pd-ssd"

  - group: "Packaging"
    key: "packaging"
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"

    steps:
      - label: ":ubuntu: Packaging Linux X86"
        key: "package-linux-x86"
        command:
          - "sudo apt-get update"
            #          - "sudo apt-get install -y libsystemd-dev"
            #          - "sudo apt install -y python3-pip"
          - "sudo apt-get install -y python3-venv"
          - ".buildkite/filebeat/scripts/package.sh"
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"

