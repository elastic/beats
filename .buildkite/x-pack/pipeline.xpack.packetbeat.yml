# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
name: "beats-xpack-packetbeat"

env:
  AWS_ARM_INSTANCE_TYPE: "t4g.xlarge"
  AWS_IMAGE_UBUNTU_ARM_64: "platform-ingest-beats-ubuntu-2204-aarch64"

  GCP_DEFAULT_MACHINE_TYPE: "c2d-highcpu-8"
  GCP_HI_PERF_MACHINE_TYPE: "c2d-highcpu-16"
  GCP_WIN_MACHINE_TYPE: "n2-standard-8"
  IMAGE_MACOS_X86_64: "generic-13-ventura-x64"

  IMAGE_UBUNTU_X86_64: "family/platform-ingest-beats-ubuntu-2204"
  IMAGE_WIN_10: "family/platform-ingest-beats-windows-10"
  IMAGE_WIN_2016: "family/platform-ingest-beats-windows-2016"
  IMAGE_WIN_2019: "family/platform-ingest-beats-windows-2019"

  #Deps
  ASDF_MAGE_VERSION: 1.15.0

  # Unit tests
  RACE_DETECTOR: "true"
  TEST_COVERAGE: "true"

steps:
  - group: "x-pack/packetbeat Check/Update"
    key: "x-pack-packetbeat-check-update"
    steps:
      - label: "Run check/update"
        command: |
          set -eo pipefail
          make -C x-pack/packetbeat check update
          make check-no-changes
        retry:
          automatic:
            - limit: 3
        agents:
          image: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-beats-ci-with-hooks:latest"
          cpu: "4000m"
          memory: "8Gi"
          useCustomGlobalHooks: true
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: check/update"
      
  - wait: ~
    # with PRs, we want to run mandatory tests only if check/update step succeed
    # for other cases, e.g. merge commits, we want to run mundatory test (and publish) independently of other tests
    # this allows building DRA artifacts even if there is flakiness in check/update step
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
    depends_on: "x-pack-packetbeat-check-update"
    
  - group: "x-pack/packetbeat Mandatory Tests"
    key: "x-pack-packetbeat-mandatory-tests"

    steps:
      - label: ":ubuntu: x-pack/packetbeat Linux x86_64 Unit Tests"
        key: "mandatory-linux-unit-test"
        command: |
          cd x-pack/packetbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "x-pack/packetbeat/build/*.xml"
          - "x-pack/packetbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: Linux x86_64 Unit Tests"

      - label: ":ubuntu: x-pack/packetbeat Linux arm64 Unit Tests"
        key: "extended-arm64-unit-test"
        command: |
          cd x-pack/packetbeat
          mage build unitTest
        if: build.env("GITHUB_PR_LABELS") =~ /.*arm.*/
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        artifact_paths:
          - "x-pack/packetbeat/build/*.xml"
          - "x-pack/packetbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: Linux arm64 Unit Tests"

      - label: ":windows: x-pack/packetbeat Win-2019 Unit Tests"
        command: |
          Set-Location -Path x-pack/packetbeat
          mage build unitTest
        key: "extended-win-2019-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2019}"
          machineType: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "x-pack/packetbeat/build/*.xml"
          - "x-pack/packetbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: Win-2019 Unit Tests"

  - group: "x-pack/packetbeat Extended Windows Tests"
    key: "x-pack-packetbeat-extended-win-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*[Ww]indows.*/

    steps:
      - label: ":windows: x-pack/packetbeat Win 10 Unit Tests"
        command: |
          Set-Location -Path x-pack/packetbeat
          mage build unitTest
        key: "extended-win-10-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_10}"
          machineType: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "x-pack/packetbeat/build/*.xml"
          - "x-pack/packetbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: Win-10 Unit Tests"

      - label: ":windows: x-pack/packetbeat Win-2016 Unit Tests"
        command: |
          Set-Location -Path x-pack/packetbeat
          mage build unitTest
        key: "mandatory-win-2016-unit-tests"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2016}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "x-pack/packetbeat/build/*.xml"
          - "x-pack/packetbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: Win-2016 Unit Tests"

  - group: "x-pack/packetbeat Extended Tests"
    key: "x-pack-packetbeat-extended-macos-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/

    steps:
      - label: ":mac: x-pack/packetbeat macOS Unit Tests"
        key: "extended-macos-unit-tests"
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd x-pack/packetbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_X86_64}"
        artifact_paths:
          - "x-pack/packetbeat/build/*.xml"
          - "x-pack/packetbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: MacOS Unit Tests"

  - group: "x-pack/packetbeat Packaging"
    key: "x-pack-packetbeat-packaging"
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
    depends_on:
      - step: "x-pack-packetbeat-mandatory-tests"
        allow_failure: false

    steps:
      - label: ":ubuntu: x-pack/packetbeat Packaging Linux"
        key: "packaging-linux"
        command: |
          cd x-pack/packetbeat
          mage package
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        env:
          PLATFORMS: "+all linux/amd64 linux/arm64 windows/amd64 darwin/amd64"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: Packaging Linux"

      - label: ":ubuntu: x-pack/packetbeat Packaging Linux arm64"
        key: "packaging-arm"
        command: |
          cd x-pack/packetbeat
          mage package
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        env:
          PLATFORMS: "linux/arm64"
          PACKAGES: "docker"
        notify:
          - github_commit_status:
              context: "x-pack/packetbeat: Packaging Linux arm64"
