# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
name: "beats-xpack-filebeat"

env:
  AWS_ARM_INSTANCE_TYPE: "m6g.xlarge"
  AWS_IMAGE_UBUNTU_ARM_64: "platform-ingest-beats-ubuntu-2204-aarch64"

  GCP_DEFAULT_MACHINE_TYPE: "c2d-highcpu-8"
  GCP_HI_PERF_MACHINE_TYPE: "c2d-highcpu-16"
  GCP_WIN_MACHINE_TYPE: "n2-standard-8"

  IMAGE_MACOS_ARM: "generic-13-ventura-arm"
  IMAGE_MACOS_X86_64: "generic-13-ventura-x64"
  IMAGE_UBUNTU_X86_64: "family/platform-ingest-beats-ubuntu-2204"
  IMAGE_WIN_10: "family/platform-ingest-beats-windows-10"
  IMAGE_WIN_2016: "family/platform-ingest-beats-windows-2016"
  IMAGE_WIN_2019: "family/platform-ingest-beats-windows-2019"

  IMAGE_BEATS_WITH_HOOKS_LATEST: "docker.elastic.co/ci-agent-images/platform-ingest/buildkite-agent-beats-ci-with-hooks:latest"

  # Other deps
  ASDF_MAGE_VERSION: 1.15.0

  # Unit tests
  RACE_DETECTOR: "true"
  TEST_COVERAGE: "true"

  # Module Tests
  BEAT_PATH: "x-pack/filebeat"

  # Concurrency definition
  CONCURRENCY_GROUP: "orka-concurrency-group"
  CONCURRENCY_COUNT: 10
  CONCURRENCY_METHOD: eager

steps:
  - group: "Check/Update"
    key: "x-pack-filebeat-check-update"

    steps:
      - label: "x-pack/filebeat: Run check/update"
        command: |
          set -eo pipefail
          make -C x-pack/filebeat check update
          make check-no-changes
        retry:
          automatic:
            - limit: 1
        agents:
          image: "${IMAGE_BEATS_WITH_HOOKS_LATEST}"
          cpu: "4000m"
          memory: "8Gi"
          useCustomGlobalHooks: true
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: check/update"

      - label: "x-pack/filebeat: Run pre-commit"
        command: "pre-commit run --all-files"
        agents:
          image: "${IMAGE_BEATS_WITH_HOOKS_LATEST}"
          memory: "2Gi"
          useCustomGlobalHooks: true
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: pre-commit"

  - wait: ~
    # with PRs, we want to run mandatory tests only if check/update step succeed
    # for other cases, e.g. merge commits, we want to run mundatory test (and publish) independently of other tests
    # this allows building DRA artifacts even if there is flakiness in check/update step
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
    depends_on: "x-pack-filebeat-check-update"


  - group: "Mandatory Tests"
    key: "x-pack-filebeat-mandatory-tests"

    steps:
      - label: ":ubuntu: x-pack/filebeat: Ubuntu arm64 Unit Tests"
        key: "x-pack-filebeat-mandatory-linux-arm-unit-test"
        command: |
          cd x-pack/filebeat
          mage build unitTest
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Ubuntu arm64 Unit Tests"

      - label: ":ubuntu: x-pack/filebeat: Ubuntu x86_64 Unit Tests"
        key: "x-pack-filebeat-mandatory-linux-unit-test"
        command: |
          cd x-pack/filebeat
          mage build unitTest
        retry:
          automatic:
            - limit: 1
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Ubuntu x86_64 Unit Tests"

      - label: ":ubuntu: x-pack/filebeat: Go Integration Tests"
        key: "x-pack-filebeat-mandatory-int-test"
        command: |
          cd x-pack/filebeat
          mage -v goIntegTest
        retry:
          automatic:
            - limit: 1
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Go Integration Tests"

      - label: ":ubuntu: x-pack/filebeat: Python Integration Tests"
        key: "x-pack-filebeat-mandatory-python-int-test"
        command: |
          cd x-pack/filebeat
          mage pythonIntegTest
        retry:
          automatic:
            - limit: 1
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Python Integration Tests"

      - label: ":ubuntu: x-pack/filebeat: Module compat tests: previous minor"
        # Run module integration tests under previous minor of Elastic stack.
        env:
          STACK_ENVIRONMENT: "prev-minor"
          TESTING_FILEBEAT_SKIP_DIFF: 1
          PYTEST_ADDOPTS: "-k test_xpack_modules"
        command: |
          cd x-pack/filebeat
          mage pythonIntegTest
        retry:
          automatic:
            - limit: 1
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
        artifact_paths:
          - "filebeat/build/*.xml"
          - "filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Module compat tests: previous minor"

      - label: ":windows: x-pack/filebeat: Win 2019 Unit Tests"
        command: |
          Set-Location -Path x-pack/filebeat
          mage build unitTest
        key: "x-pack-filebeat-extended-win-2019-unit-tests"
        retry:
          automatic:
            - limit: 1
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2019}"
          machineType: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Win 2019 Unit Tests"

  - group: "Extended Windows Tests"
    key: "x-pack-filebeat-extended-win-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*[Ww]indows.*/

    steps:
      - label: ":windows: x-pack/filebeat: Win 2016 Unit Tests"
        command: |
          Set-Location -Path x-pack/filebeat
          mage build unitTest
        key: "x-pack-filebeat-mandatory-win-2016-unit-tests"
        retry:
          automatic:
            - limit: 1
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2016}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Win 2016 Unit Tests"

      - label: ":windows: x-pack/filebeat: Win 10 Unit Tests"
        command: |
          Set-Location -Path x-pack/filebeat
          mage build unitTest
        key: "x-pack-filebeat-extended-win-10-unit-tests"
        retry:
          automatic:
            - limit: 1
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_10}"
          machineType: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Win 10 Unit Tests"

  - group: "Extended Tests"
    key: "x-pack-filebeat-extended-tests"

    steps:
      - label: ":mac: x-pack/filebeat: macOS x86_64 Unit Tests"
        if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd x-pack/filebeat
          mage build unitTest
        concurrency_group: "${CONCURRENCY_GROUP}"
        concurrency: "${CONCURRENCY_COUNT}"
        concurrency_method: "${CONCURRENCY_METHOD}"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_X86_64}"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: macOS x86_64 Unit Tests"

      - label: ":ubuntu: x-pack/filebeat: AWS Tests"
        key: "x-pack-filebeat-extended-cloud-test"
        skip: "skipping due to elastic/ingest-dev#3467"
        # https://github.com/elastic/ingest-dev/issues/3467
        if: build.env("GITHUB_PR_LABELS") =~ /.*aws.*/
        command: |
          set -euo pipefail
          source .buildkite/scripts/initCloudEnv.sh
          echo "~~~ Running tests"
          cd x-pack/filebeat
          mage build test
        env:
          ASDF_TERRAFORM_VERSION: 1.0.2
          MODULE_DIR: "x-pack/filebeat/input/awss3/_meta/terraform"
          MODULE: "aws"
          TEST_TAGS: "aws"
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        artifact_paths:
          - "x-pack/filebeat/build/*.xml"
          - "x-pack/filebeat/build/*.json"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: AWS Tests"

  - wait: ~
    # with PRs, we want to run packaging only if mandatory tests succeed
    # for other cases, e.g. merge commits, we want to run packaging (and publish) independently of other tests
    # this allows building DRA artifacts even if there is flakiness in mandatory tests
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
    depends_on:
      - step: "x-pack-filebeat-mandatory-tests"

  - group: "Packaging"
    key: "x-pack-filebeat-packaging"

    steps:
      - label: ":ubuntu: x-pack/filebeat: Packaging Linux"
        key: "packaging-linux"
        command: |
          cd x-pack/filebeat
          mage package
        retry:
          automatic:
            - limit: 1
        timeout_in_minutes: 20
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        env:
          PLATFORMS: "+all linux/amd64 linux/arm64 windows/amd64 darwin/amd64"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Packaging Linux"

      - label: ":ubuntu: x-pack/filebeat: Packaging arm64"
        key: "packaging-arm"
        command: |
          cd x-pack/filebeat
          mage package
        retry:
          automatic:
            - limit: 1
        timeout_in_minutes: 20
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        env:
          PLATFORMS: "linux/arm64"
          PACKAGES: "docker"
        notify:
          - github_commit_status:
              context: "x-pack/filebeat: Packaging Linux arm64"
