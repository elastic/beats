# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
name: "beats-auditbeat"

env:
  AWS_ARM_INSTANCE_TYPE: "m6g.xlarge"
  AWS_IMAGE_UBUNTU_ARM_64: "platform-ingest-beats-ubuntu-2204-aarch64"

  GCP_DEFAULT_MACHINE_TYPE: "c2d-highcpu-8"
  GCP_HI_PERF_MACHINE_TYPE: "c2d-highcpu-16"
  GCP_WIN_MACHINE_TYPE: "n2-standard-8"

  IMAGE_MACOS_ARM: "generic-13-ventura-arm"
  IMAGE_MACOS_X86_64: "generic-13-ventura-x64"
  IMAGE_RHEL9: "family/platform-ingest-beats-rhel-9"
  IMAGE_UBUNTU_X86_64: "family/platform-ingest-beats-ubuntu-2204"
  IMAGE_WIN_10: "family/platform-ingest-beats-windows-10"
  IMAGE_WIN_11: "family/platform-ingest-beats-windows-11"
  IMAGE_WIN_2016: "family/platform-ingest-beats-windows-2016"
  IMAGE_WIN_2019: "family/platform-ingest-beats-windows-2019"
  IMAGE_WIN_2022: "family/platform-ingest-beats-windows-2022"

  # Other deps
  ASDF_MAGE_VERSION: 1.15.0

  # Unit tests
  RACE_DETECTOR: "true"
  TEST_COVERAGE: "true"

steps:
  - group: "Auditbeat Mandatory Testing"
    key: "auditbeat-mandatory-tests"

    steps:
      - label: ":ubuntu: Auditbeat Unit Tests"
        command: |
          set -euo pipefail
          cd auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Ubuntu Unit Tests"

      - label: ":rhel: Auditbeat Unit Tests"
        command: |
          set -euo pipefail
          cd auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_RHEL9}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: RHEL Unit Tests"

      - label: ":windows: Auditbeat Win-2016 Unit Tests"
        command: |
          Set-Location -Path auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2016}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Windows 2016 Unit Tests"

      - label: ":windows: Auditbeat Win-2022 Unit Tests"
        command: |
          Set-Location -Path auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2022}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 200
          disk_type: "pd-ssd"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Windows 2022 Unit Tests"

      - label: ":linux: Auditbeat Crosscompile"
        command: |
          make -C auditbeat crosscompile
        env:
          GOX_FLAGS: "-arch amd64"
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
        notify:
          - github_commit_status:
              context: "auditbeat: Crosscompile"

  - group: "Auditbeat Extended Tests"
    key: "auditbeat-extended-tests"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" ||  build.env("GITHUB_PR_LABELS") =~ /.*(macOS|arm|integrations).*/

    steps:
      - label: ":linux: Auditbeat Ubuntu Integration Tests"
        key: "auditbeat-extended-integ-tests"
        if: build.env("GITHUB_PR_LABELS") =~ /.*integrations.*/
        command: |
          set -euo pipefail
          cd auditbeat
          mage build integTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_DEFAULT_MACHINE_TYPE}"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Linux Integration Tests"

      - label: ":linux: Auditbeat Ubuntu arm64 Integration Tests"
        key: "auditbeat-extended-arm64-integ-tests"
        if: build.env("GITHUB_PR_LABELS") =~ /.*integrations.*/
        command: |
          set -euo pipefail
          cd auditbeat
          mage build integTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Linux arm64 Integration Tests"

      - label: ":linux: Auditbeat Ubuntu arm64 Unit Tests"
        key: "auditbeat-extended-arm64-unit-tests"
        if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*arm.*/
        command: |
          set -euo pipefail
          cd auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Linux arm64 Unit Tests"

      - label: ":mac: Auditbeat macOS x86_64 Unit Tests"
        if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_X86_64}"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: macOS x86_64 Unit Tests"

      - label: ":mac: Auditbeat macOS arm64 ARM Unit Tests"
        if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*macOS.*/
        command: |
          set -euo pipefail
          source .buildkite/scripts/install_macos_tools.sh
          cd auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "orka"
          imagePrefix: "${IMAGE_MACOS_ARM}"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: macOS arm64 Unit Tests"

  - group: "Auditbeat Windows Extended Testing"
    key: "auditbeat-extended-tests-win"
    if: build.env("BUILDKITE_PULL_REQUEST") == "false" || build.env("GITHUB_PR_LABELS") =~ /.*[Ww]indows.*/

    steps:
      - label: ":windows: Auditbeat Win-2019 Unit Tests"
        key: "auditbeat-extended-win-2019-unit-tests"
        command: |
          Set-Location -Path auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_2019}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Extended Windows 2019 Unit Tests"

      - label: ":windows: Auditbeat Win-10 Unit Tests"
        key: "auditbeat-extended-win-10-unit-tests"
        command: |
          Set-Location -Path auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_10}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Extended Windows 10 Unit Tests"

      - label: ":windows: Auditbeat Win-11 Unit Tests"
        key: "auditbeat-extended-win-11-unit-tests"
        command: |
          Set-Location -Path auditbeat
          mage build unitTest
        retry:
          automatic:
            - limit: 3
        agents:
          provider: "gcp"
          image: "${IMAGE_WIN_11}"
          machine_type: "${GCP_WIN_MACHINE_TYPE}"
          disk_size: 100
          disk_type: "pd-ssd"
        artifact_paths:
          - "auditbeat/build/*.xml"
          - "auditbeat/build/*.json"
        notify:
          - github_commit_status:
              context: "auditbeat: Extended Windows 11 Unit Tests"

  - wait: ~
    # with PRs, we want to run packaging only if mandatory tests succeed
    # for other cases, e.g. merge commits, we want to run packaging (and publish) independently of other tests
    # this allows building DRA artifacts even if there is flakiness in mandatory tests
    if: build.env("BUILDKITE_PULL_REQUEST") != "false"
    depends_on: "auditbeat-mandatory-tests"

  - group: "Auditbeat Packaging"
    key: "auditbeat-packaging"
    steps:
      - label: ":ubuntu: Auditbeat/Packaging Linux"
        key: "auditbeat-package-linux-x86"
        env:
          PLATFORMS: "+all linux/amd64 linux/arm64 windows/amd64 darwin/amd64 darwin/arm64"
          SNAPSHOT: true
        command: |
          set -euo pipefail
          cd auditbeat
          mage package
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: gcp
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "${GCP_HI_PERF_MACHINE_TYPE}"
        notify:
          - github_commit_status:
              context: "auditbeat: Packaging Linux"

      - label: ":linux: Auditbeat/Packaging Linux arm64"
        key: "auditbeat-package-linux-arm64"
        env:
          PLATFORMS: "linux/arm64"
          PACKAGES: "docker"
          SNAPSHOT: true
        command: |
          set -euo pipefail
          cd auditbeat
          mage package
        retry:
          automatic:
            - limit: 3
        timeout_in_minutes: 20
        agents:
          provider: "aws"
          imagePrefix: "${AWS_IMAGE_UBUNTU_ARM_64}"
          instanceType: "${AWS_ARM_INSTANCE_TYPE}"
        notify:
          - github_commit_status:
              context: "auditbeat: Packaging Linux arm64"
