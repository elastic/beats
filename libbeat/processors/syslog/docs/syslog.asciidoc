[[syslog]]
=== Syslog

++++
<titleabbrev>syslog</titleabbrev>
++++

experimental[]

[float]
==== Configuration

The `syslog` processor parses RFC 3146 and/or RFC 5424 formatted syslog messages
that are stored under the `field` key.

The supported configuration options are:

`field`:: (Required) Source field containing the syslog message. Defaults to `message`.

`format`:: (Optional) The syslog format to use, `rfc3164`, or `rfc5424`. To automatically
detect the format from the log entries, set this option to `auto`. The default is `auto`.

`timezone`:: (Optional) IANA time zone name(e.g. `America/New York`) or a
fixed time offset (e.g. +0200) to use when parsing syslog timestamps that do not contain
a time zone. `Local` may be specified to use the machine's local time zone. Defaults to `Local`.

`overwrite_keys`:: (Optional) A boolean that specifies whether keys that already
exist in the event are overwritten by keys from the syslog message. The
default value is `true`.

`ignore_missing`:: (Optional) If `true` the processor will not return an error
when a specified field does not exist. Defaults to `false`.

`ignore_failure`:: (Optional) Ignore all errors produced by the processor.
Defaults to `false`.

Example:

[source,yaml]
-------------------------------------------------------------------------------
processors:
  - syslog:
      field: message
-------------------------------------------------------------------------------

[source,json]
-------------------------------------------------------------------------------
{
  "message": "<165>1 2022-01-11T22:14:15.003Z mymachine.example.com eventslog 1024 ID47 [exampleSDID@32473 iut="3" eventSource="Application" eventID="1011"][examplePriority@32473 class="high"] this is the message"
}
-------------------------------------------------------------------------------

Will produce the following output:

[source,json]
-------------------------------------------------------------------------------
{
  "@timestamp": "2022-01-11T22:14:15.003Z",
  "event": {
    "original": "<165>1 2022-01-11T22:14:15.003Z mymachine.example.com eventslog 1024 ID47 [exampleSDID@32473 iut="3" eventSource="Application" eventID="1011"][examplePriority@32473 class="high"] this is the message",
    "severity": 5,
  },
  "process": {
    "name": "eventslog",
    "pid": "1024",
  },
  "host": {
    "name": "mymachine.example.com"
  },
  "syslog": {
    "priority": 165,
    "facility": 20,
    "severity": 5,
    "facility_label": "local4",
    "severity_label": "Notice",
    "msgid": "ID47",
    "version": 1,
    "data": {
      "exampleSDID@32473": {
        "iut":         "3",
        "eventSource": "Application",
        "eventID":     "1011",
      },
      "examplePriority@32473": {
        "class": "high",
      },
    }
  },
  "message": "this is the message"
}
-------------------------------------------------------------------------------

[float]
==== Timestamps

The RFC 3164 format accepts the following forms of timestamps:

* Local timestamp (`Mmm dd hh:mm:ss`):
  ** `Jan 23 14:09:01`
* RFC-3339:
  ** `2003-10-11T22:14:15Z`
  ** `2003-10-11T22:14:15.123456Z`
  ** `2003-10-11T22:14:15-06:00`
  ** `2003-10-11T22:14:15.123456-06:00`

The RFC 5424 format accepts the following forms of timestamps:

* RFC-3339:
  ** `2003-10-11T22:14:15Z`
  ** `2003-10-11T22:14:15.123456Z`
  ** `2003-10-11T22:14:15-06:00`
  ** `2003-10-11T22:14:15.123456-06:00`
