[[lowercase]]
=== Lowercase fields in events

++++
<titleabbrev>lowercase</titleabbrev>
++++

The `lowercase` processor specifies a list of fields that must be lowercased. This applies only to keys that match the given fields. The default behaviour of the processor is to modify the most nested key in the chain. It does not support keys with dot notation



==== Examples: 

1. Default scenario

[source,yaml]
----
processors:
  - rename:
      fields:
        - "abcd"
      ignore_missing: false
      fail_on_error: true
----
[source,json]
----
// Input
{
  "AB": {"CD":"data"},
  "aB": {"cD":"data"} 
}


// output
{
  "AB": {"Cd":"data"},
  "aB": {"cd":"data"} 
}
----

[start=2]
2. In case of key collison, the value of last element in the input is preserved

[source,yaml]
----
processors:
  - rename:
      fields:
        - "ab"
      ignore_missing: false
      fail_on_error: true
----

[source,json]
----
// Input
{
  "ab": "first",
  "aB": "second"
}

// Input
{
  "ab": "second",
}
----


==== Configuration:

The `lowercase` processor has the following configuration settings:

`fields`:: The fields to lowercase. The match is case-insensitive, e.g. `a.b.c.d` would match `A.b.C.d` or `A.B.C.D`.
`ignore_missing`:: (Optional) Indicates whether to ignore events that lack the source field.
                    The default is `false`, which will fail processing of an event if a field is missing.
`fail_on_error`:: (Optional) If set to `true` and an error occurs, the changes are reverted and the original event is returned.
                    If set to `false`, processing continues if an error occurs. Default is `true`.

                                  

See <<conditions>> for a list of supported conditions.
