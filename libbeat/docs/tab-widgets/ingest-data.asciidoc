// tag::modules[]
[float]
[[enable-modules]]
===== Enable and configure data collection modules

. Identify the modules you need to enable. To see a list of available
<<filebeat-modules,modules>>, run:
+
--
include::{libbeat-dir}/tab-widgets/list-modules-widget.asciidoc[]
--
+
Can't find a module for your file type? Skip this section and
<<configuration-filebeat-options,configure the input>> manually.

. From the installation directory, enable one or more modules. For example, the
following command enables the `system`, `nginx`, and `mysql` module
configs:
+
--
include::{libbeat-dir}/tab-widgets/enable-modules-widget.asciidoc[]
--

. In the module configs under `modules.d`, change the module settings to match
your environment.
+
For example, log locations are set based on the OS. If your logs aren't in
default locations, set the `paths` variable:
+
--
[source,yaml]
----
- module: nginx
  access:
    var.paths: ["/var/log/nginx/access.log*"] <1>
----
--

To see the full list of variables for a module, see the documentation under
<<filebeat-modules>>.

include::{libbeat-dir}/shared/config-check.asciidoc[]

// end::modules[]

// tag::application-logs[]
[float]
[[setup-application-logs]]
===== Ingest application logs

This section is about best practices for ingesting logs from your own applications,
as well as for off-the-shelf applications for which we don't have suitable built-in modules.

Although you can ingest raw plain-text logs, we recommend you structure
your logs at ingest time.
This lets you extract fields such as log level and exception stack traces.

If you can change your application's log output,
we recommend configuring your application to use the log formatters
provided by {ecs-logging-ref}/intro.html[ECS logging].
These plugins format your logs into ECS-compatible JSON.
This simplifies configuration by removing the need to manually parse logs.

If you can't change your application's log output or if
there is no appropriate ECS logging plugin for your language or preferred
logging framework, you will need to manually your logs using an
<<configuring-ingest-node,ingest node processors>>.
// end::application-logs[]
