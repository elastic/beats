[id="securing-{beatname_lc}"]
= Secure {beatname_uc}

[partintro]

--
++++
<titleabbrev>Secure</titleabbrev>
++++

The following topics provide information about securing the {beatname_uc}
process and connecting to a cluster that has {security-features} enabled.

You can use role-based access control and optionally, API keys to grant {beatname_uc} users access to
secured resources.

* <<feature-roles>>
* <<beats-api-keys>>.

After privileged users have been created, use authentication to connect to a secured Elastic cluster.

* <<securing-communication-elasticsearch>>
ifndef::no-output-logstash[]
* <<configuring-ssl-logstash>>
endif::[]

ifdef::apm-server[]
For secure communication between APM Server and APM Agents, see <<secure-communication-agents>>.
endif::[]

ifndef::serverless[]
On Linux, {beatname_uc} can take advantage of secure computing mode to restrict the
system calls that a process can issue.

* <<linux-seccomp>>
endif::[]

// APM uses this for extra information on HTTPS
ifdef::beat-specific-security[]
include::{beat-specific-security}[]
endif::[]

--

// APM uses this to include Agent security
ifdef::apm-server[]
include::{docdir}/secure-communication-agents.asciidoc[]
endif::[]

include::./security/users.asciidoc[]

include::./security/api-keys.asciidoc[]

[role="xpack"]
[[securing-communication-elasticsearch]]
== Secure communication with Elasticsearch

include::./https.asciidoc[]

ifndef::no-output-logstash[]
[role="xpack"]
[[configuring-ssl-logstash]]
== Secure communication with Logstash

include::./shared-ssl-logstash-config.asciidoc[]
endif::[]

ifndef::serverless[]
include::./security/linux-seccomp.asciidoc[]
endif::[]
