[[new-dashboards]]
== Developer Guide: Creating New Kibana Dashboards for a Beat

When contributing to Beats development, you may want to add new dashboards or modify existing ones. To make this easier,
we've created an `import_dashboards` script that you can use to <<import-dashboards,import the dashboards>> from an
existing Beat into Kibana, where you can modify the dashboards or use them as a starting point to create new dashboards. 

Kibana saves the dashboards, along with all the dependencies such as visualizations, searches, and index patterns, in
a special index in Elasticsearch. By default the index is `.kibana`, but you can specify a different index.

When you're done making changes to the dashboards in Kibana, you can use the `export_dashboards` script to <<export-dashboards,export the dashboards>>, along with all dependencies, to a local directory.

To make sure the dashboards are compatible with the latest version of Kibana and Elasticsearch, we
recommend that you use the virtual environment under
https://github.com/elastic/beats/tree/master/testing/environments[beats/testing/environments] to import, create, and
export the Kibana dashboards.

[[import-dashboards]]
=== Importing Existing Beat Dashboards

To import all the dashboards for a Beat, including dependencies such as visualizations, searches, and index
patterns, you can use the bash script `import_dashboards.sh` (on Unix) or the Powershell script `import_dashboards.ps1`
(on Windows) from https://github.com/elastic/beats/tree/master/dev-tools[dev-tools]. 

For example, to import the dashboards for Packetbeat, you can run the following command from the `packetbeat` directory in the `beats` repository:

*Unix*:

[source,shell]
----------------------------------------------------------------------
../dev-tools/import_dashboards.sh -dir etc/kibana
----------------------------------------------------------------------

*Windows*:

[source,shell]
----------------------------------------------------------------------
..\dev-tools\import_dashboards.ps1 -dir .\etc\kibana
----------------------------------------------------------------------

The command has the following options:

[source,shell]
----------------------------------------------------------------------
$ ./import_dashboards.sh -h


Import the dashboards, visualizations and index patterns into Kibana.

The Kibana dashboards together with its dependencies are saved into a
special index pattern in Elasticsearch (by default .kibana), so you need to
specify the Elasticsearch URL and optionally a username and password.

Usage:
  import_dashboards.sh -url http://localhost:9200 -user admin:secret -index .kibana

Options:
  -h | -help
    Print the help menu.
  -d | -dir
    Local directory where the dashboards, visualizations, searches and index 
    pattern are saved.
  -l | -url
    Elasticseacrh URL. By default is http://localhost:9200.
  -u | -user
    Username and password for authenticating to Elasticsearch using Basic
    Authentication. The username and password should be separated by a
    colon (i.e. admin:secret). By default no username and password are
    used.
  -i | -index
    Kibana index pattern where to save the dashboards, visualizations,
    index patterns. By default is .kibana.

----------------------------------------------------------------------

==== dir
The input directory that contains the dashboards and all the dependencies. The default value is the current directory.

==== url
The Elasticsearch URL. The default value is http://localhost:9200.

==== user
The username and password for authenticating the connection to Elasticsearch by using Basic Authentication. The username
and password should be separated by a colon. By default no username and password are used.

==== kibana
The Elasticsearch index pattern where Kibana saves its configuration. The default value is `.kibana`.

[[export-dashboards]]
=== Exporting New and Modified Beat Dashboards

To export all the dashboards for a Beat, including any new or modified dashboards and all dependencies such as
visualizations, searches, and index patterns, you can use the Python script `export_dashboards.py` from  
https://github.com/elastic/beats/tree/master/dev-tools[dev-tools]. Before running the script for the first time, you
need to create an environment that contains all the required Python packages. See the dev-tools
https://github.com/elastic/beats/tree/master/dev-tools/README.md[readme] for more info.

NOTE: Dashboard names must be **prefixed** with the name of the beat in order to work correctly. For example:
Packetbeat-Dashboard.

For example, to export all Packetbeat dashboards, you can run the following command from the `packetbeat` directory in
the `beats` repository:

[source,shell]
----------------------------------------------------------------------
../dev-tools/export_dashboards.py --beat packetbeat
----------------------------------------------------------------------

The command has the following options:

[source,shell]
----------------------------------------------------------------------
$ python export_dashboards.py -h
usage: export_dashboards.py [-h] [--url URL] --beat BEAT [--index INDEX]
                            [--kibana KIBANA] [--dir DIR]

Export the Kibana dashboards together with all used visualizations, searches
and index pattern

optional arguments:
  -h, --help       Show this help message and exit
  --url URL        Elasticsearch URL. E.g. http://localhost:9200
  --beat BEAT      Beat name e.g. packetbeat
  --index INDEX    Elasticsearch index for the Beat data. E.g. packetbeat-*
  --kibana KIBANA  Elasticsearch index for the Kibana dashboards. E.g. .kibana
  --dir DIR        Output directory. E.g. output

----------------------------------------------------------------------

==== url
The Elasticsearch URL. The default value is http://localhost:9200.

==== beat
The name of the Beat. This argument is required.

==== index
The Elasticsearch index pattern where the Beat is storing the data. The default value is constructed from the Beat name + `-*` string.

==== kibana
The Elasticsearch index pattern where Kibana saves its configuration. The default value is `.kibana`.

==== dir
The output directory where the dashboards and all dependencies will be saved. The default value is `output`.

NOTE: To make it even easier for you to import and export the dashboards, we've also added support for running the
following commands in the Beats repository: `make import-dashboards` and `make export-dashboards`.

