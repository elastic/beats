[[upgrading]]
== Upgrading

This section gives general recommendations for upgrading {beats} shippers:

* <<upgrading-minor-versions>>
* <<upgrading-6-to-7>>
* <<upgrade-mapping-template>>
* <<troubleshooting-upgrade>>

If you're upgrading other products in the stack, also read the
{stack-ref}/index.html[Elastic Stack Installation and Upgrade Guide]. 

[[upgrading-minor-versions]]
=== Upgrade between minor versions

As a general rule, you can upgrade between minor versions (for example, 7.x to
7.y, where x < y) by simply installing the new release and restarting the Beat
process. {beats} typically maintain backwards compatibility for configuration
settings and exported fields. Please review the
<<release-notes,release notes>> for potential exceptions.

Upgrading between non-consecutive major versions (e.g. 5.x to 7.x) is not
supported.

[[upgrading-6-to-7]]
=== Upgrade from 6.x to 7.x

Before upgrading your {beats}, review the <<breaking-changes,breaking changes>>.

If you're upgrading other products in the stack, also read the
{stack-ref}/index.html[Elastic Stack Installation and Upgrade Guide]. 

We recommend that you fully upgrade {es} and {kib} to version 7.0
before upgrading {beats}. If you're on {beats} 6.0 through 6.6,
upgrade to {beats} 6.7 *before* doing the {es} upgrade.

Upgrading between non-consecutive major versions (e.g. 5.x to 7.x) is not
supported.

IMPORTANT: Please read through all upgrade steps before proceeding. Some of the
steps are required before running the upgraded software for the first time.

// REVIEWERS: Historically our docs have not described how to actually upgrade.
// We just cover the things users need to be aware of. However, to have parity
// with the install docs for other stack components, I think we should add more
// detail, similar to what Kibana does: https://www.elastic.co/guide/en/kibana/master/upgrade-standard.html
// WDYT?
//
// Besides copying over the config file (for all beats), and pointing to the 
// registry file for Filebeat, what else needs to be preserved.

[[upgrading-to-6.7]]
==== Upgrade to {beats} 6.7 before upgrading to 7.0

The upgrade procedure assumes that you have {beats} 6.7 installed. If you're on
a previous 6.x version of {beats}, upgrade to version 6.7 first. This is
required because the {es} mapping template in 6.7 was modified to be compatible
with {es} 7.0 (the `_type` setting changed from `doc` to `_doc`).

After upgrading to 6.7, make sure the 6.7 template gets loaded. You can do this
by temporarily enabling the `output.elasticsearch.template.overwrite` setting,
for example with Metricbeat:

[source,shell]
----
metricbeat -e -E output.elasticsearch.template.overwrite=true
----

Or you can manually force loading the template:

[source,shell]
----
curl -XPUT -H'Content-Type: application/json'  http://localhost:9200/_template/metricbeat -d @metricbeat.template.json
----

To check the template version, open the {kib} Console and run:

[source,js]
----
GET /_template/metricbeat
----
// CONSOLE

Look for the version string in the response. Repeat this step for every Beat
running in your environment.

*Metricbeat and Filebeat users:* If you use {beats} central management,
make sure you migrate the {beats} central management index to 6.7 before you
upgrade to 7.0. 

// REVIEWERS: Not sure I should mention this here ^^. I didn't link directly
// to the 6.7 breaking changes docs here because I'm concerned about users
// getting into the wrong upgrade docs and being confused.

[[migrate-config-files]]
==== Migrate configuration files

// REVIEWERS: What changes do users need to make to their config files? Will we
// offer any kind of migration tooling to make this easier?

{beats} 7.0 comes with several backwards incompatible configuration changes.
Before upgrading, review the <<breaking-changes-7.0>> document. Where possible,
we kept the old configuration options working, but deprecated them. However,
deprecation was not always possible, so if you use any of the settings mentioned
in the Breaking Changes section of the release notes, make sure you understand
the alternatives that we provide.

[[enable-ecs-compatibility]]
==== Enable the compatibility layer for Elastic Common Schema (ECS) fields

Starting with 7.0, the fields exported by {beats} conform to the
{ecs-ref}/index.html[Elastic Common Schema (ECS)]. Many of the exported fields
have been renamed. See {beats-ref}/breaking-changes-7.0.html[Breaking
changes in 7.0] for the full list of changed names.

To help you transition to the new fields, we provide a compatibility layer in
the form of ECS-compatible field aliases. To use the aliases, set
`migration.6_to_7.enabled: true` in the Beat's configuration file *before* you
run {beats} 7.0 to ingest data for the first time.

// REVIEWERS: I'm not sure the following statement is correct. I was not able
// to use the dashboards I saved from 6.x with 7.0. I did a very quick and dirty
// upgrade of the stack tho so might have missed something critical. 

The compatibility layer enables you to use 6.x dashboards and visualizations
with indices created by {beats} 7.0 or later.

Did you run the Beat before reading this section? That's OK. See the clean-up
steps described under <<missing-fields>>.

==== Upgrade dashboards

We recommend that you re-import the {kib} dashboards after upgrading {kib} and
{beats}. This way, you can take advantage of the new {beats} dashboards created
for the 7.0 release. 

Re-importing the dashboards will overwrite any manual changes that you've
made. To avoid overwriting existing dashboards, save any modified dashboards
under a new ID before proceeding.

To re-import the dashboards, run the `setup` command with the `--dashboards`
option specified. For example:

[source,shell]
----
metricbeat setup --dashboards
----

Also, if you plan to run {beats} 6.7 and 7.0 in parallel,
<<enable-ecs-compatibility,enable the compatibility layer>> *before* you start
ingesting data. 

[[upgrade-logstash-config]]
==== Configure {ls} to use versioned templates and indices

If you're using {ls} to ingest data, make sure {ls} uses versioned templates and
indices. Otherwise, after you upgrade, {ls} will stop ingesting data because of
field conflicts. To use versioned index templates and indices, configure the
{ls} `index` setting as recommended in the
{logstash-ref}/plugins-inputs-beats.html[{beats} input plugin] documentation and
allow {beats} to manage the index template:

[source,json]
----
    manage_template => false
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}" 
----

When you use this configuration, the index name is set to match the index
pattern in the {beats} index template.

IMPORTANT: The index name must match the index pattern in the {beats} index
template, or {beats} dashboards and visualizations will not work as expected.
For example, if {ls} sends events to an index called +metricbeat-7-{localdate}+,
but the index template expects indices to match +metricbeat-{stack-version}-*+,
your {beats} dashboards and visualizations will not display the data sent by
{ls}.

// REVIEWERS: The review comment said "things will break in a very opaque
// manner." I'm assuming we mean that the Beats dashboards will stop working,
// but I haven't had time to test this. ^^

[[load-index-template-manually]]
==== Load the 7.0 index template manually for outputs other than {es}

If your {beats} configuration use an output other than `elasticsearch`, load
the index template manually into {es} *before* ingesting any data into 7.0
indices.

To load the template manually, run the `setup` command with the `--template`
flag specified. Temporarily enable the `elasticsearch` output when you run this
command. For example:

[source,shell]
--
metricbeat setup --template -E output.logstash.enabled=false -E 'output.elasticsearch.hosts=["localhost:9200"]'
--

[[migrate-filebeat-registry]]
==== Migrate {filebeat} registry to use new format

Starting with version 7.0, {filebeat} stores the registry in a directory
structure. If Filebeat finds an old registry file at the path set by
`filebeat.registry.path`, it will automatically migrate the registry file to the
new format. If the registry file is at a different location, set
`filebeat.registry.migrate_file` to point to the file.

[role="xpack"]
[[ilm-on]]
==== Check privileges for index lifecycle management (on by default in 7.0)

// REVIEWERS: not sure if this is worth pointing out in the upgrade docs but
// I think the default changing is going to confuse some users.

Staring with {beats} 7.0, index lifecycle management is on by default when
sending data to {beats} clusters that support it. Make sure {beats} users have
the privileges needed to use index lifecycle management, or disable index
lifecycle management. The following privileges are required:

* To set up index lifecycle policies: `manage_ilm` and `monitor` on cluster
* To send data to a secured cluster when index lifecycle management is enabled:
`manage_index_templates` and `monitor` on cluster, and `index` and `manage` on
{beats} indices.

// REVIEWERS: The privileges shown here are based on testing I did for
// https://github.com/elastic/beats/pull/11329, but I am still waiting for
// more review comments on that PR. 

To disable index lifecycle management, set `setup.ilm.enabled: false` in the
{beats} configuration file.

[[upgrade-mapping-template]]
=== Upgrade the {es} mapping template

// REVIEWERS: Does this topic really belong on its own rather than as a
// sub-topic? Do we want to tell users to set 

Mapping templates and the default index names are versioned. For example,
Metricbeat {stack-version} typically creates indices like this:

["source","sh",subs="attributes"]
------------------------------------------------------------------------------
metricbeat-{stack-version}-{localdate}
------------------------------------------------------------------------------

And the corresponding {es} template is named +metricbeat-{stack-version}+.

This means that each version of the Beat creates a new index, and it is
guaranteed that the correct template for that version is applied. With these
changes in place, you generally don't have to do anything to upgrade the mapping
template when you move to a new version.

// REVIEWERS: I'm not sure what the following paragraph means. Why would this
// result in downtime?

If downtime is not acceptable, another possible approach is to configure a
different index pattern in the new Beat version, but this will likely require
adjustments to your {kib} dashboards.

[[troubleshooting-upgrade]]
=== Troubleshooting {beats} upgrade issues

This section describes common problems you might encounter when upgrading to
{beats} 7.x.

You can avoid some of these problems by reading <<upgrading-6-to-7>> before
upgrading {beats}.

// REVIEWERS: I really need help fleshing out this section. This is all based
// on speculation. Not sure I'm describing the symptoms correctly because this
// content is based on input from reviewers, not my own testing.

[[missing-fields]]
==== Missing fields or too many fields in the index

You may have run the Beat before loading the required index template. To clean
up and start again:

. Delete the index that was created when you ran the Beat. For example:
+
["source","sh",subs="attributes"]
----
DELETE metricbeat-{stack-version}-{localdate}*
----

. If you want the index to work with 6.x dashboards, turn on the compatibility
layer. See <<enable-ecs-compatibility>>.

. Load the correct index template:

.. If you're sending events directly to {es}, configure the following settings
in the {beats} configuration file to overwrite the index template:
+
[source,yaml]
----
setup.template.enabled: true
setup.template.overwrite: true
----
// CONSOLE

.. If you're sending events to a different output, such as {ls}, load the
template manually. See <<load-index-template-manually>>.

. Restart {beats}.

// REVIEWERS: If users mess up and run Filebeat before setting up the index
// template correctly (for example, if they don't turn on compatibility), is there
// some way to recover the previous cursor location to avoid dropped or
// duplicate events?

[[old-dashboards-failing]]
==== 6.x dashboards not showing data from 7.0 shippers

You might have run the Beat without turning on the compatibility layer. See
<<missing-fields>>.

[[logstash-data-missing]]
==== Data parsed by {ls} not appearing in 7.0 dashboards

You might be writing to an index that doesn't match the index pattern used
by {beats}. See <<upgrade-logstash-config>>.


