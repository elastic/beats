[[upgrading]]
== Upgrading

This section gives general recommendations for upgrading {beats} shippers:

* <<upgrading-minor-versions>>
* <<upgrading-6-to-7>>
* <<troubleshooting-upgrade>>

If you're upgrading other products in the stack, also read the
{stack-ref}/index.html[Elastic Stack Installation and Upgrade Guide]. 

[[upgrading-minor-versions]]
=== Upgrade between minor versions

As a general rule, you can upgrade between minor versions (for example, 7.x to
7.y, where x < y) by simply installing the new release and restarting the Beat
process. {beats} typically maintain backwards compatibility for configuration
settings and exported fields. Please review the
<<release-notes,release notes>> for potential exceptions.

Upgrading between non-consecutive major versions (e.g. 5.x to 7.x) is not
supported.

[[upgrading-6-to-7]]
=== Upgrade from 6.x to 7.x

Before upgrading your {beats}, review the <<breaking-changes,breaking changes>>.

If you're upgrading other products in the stack, also read the
{stack-ref}/index.html[Elastic Stack Installation and Upgrade Guide]. 

We recommend that you fully upgrade {es} and {kib} to version 7.0
before upgrading {beats}. If you're on {beats} 6.0 through 6.6,
upgrade to {beats} 6.7 *before* doing the {es} upgrade.

Upgrading between non-consecutive major versions (e.g. 5.x to 7.x) is not
supported.

IMPORTANT: Please read through all upgrade steps before proceeding. Some of the
steps are required before running the upgraded software for the first time.

// TODO: Add step-by-step instructions to tell users to back up the registry,
// copy over the config file, etc. Similar to what Kibana does:
// https://www.elastic.co/guide/en/kibana/master/upgrade-standard.html

[[upgrading-to-6.7]]
==== Upgrade to {beats} 6.7 before upgrading to 7.0

The upgrade procedure assumes that you have {beats} 6.7 installed. If you're on
a previous 6.x version of {beats}, upgrade to version 6.7 first. This is
required because the {es} mapping template in 6.7 was modified to be compatible
with {es} 7.0 (the `_type` setting changed from `doc` to `_doc`).

After upgrading to 6.7, make sure the 6.7 template gets loaded. To load the
template, run the `setup` command with the `--template` option specified. For
example:

[source,shell]
----
metricbeat setup --template
----

Or you can manually force loading the template:

[source,shell]
----
curl -XPUT -H'Content-Type: application/json'  http://localhost:9200/_template/metricbeat -d @metricbeat.template.json
----

To check the template version, open the {kib} Console and run:

[source,js]
----
GET /_template/metricbeat
----
// CONSOLE

Look for the version string in the response. Repeat this step for every Beat
running in your environment.

*Metricbeat and Filebeat users:* If you use {beats} central management,
make sure you migrate the {beats} central management index to 6.7 before you
upgrade to 7.0. Although central management is not a GA-level feature in 7.0.0,
we've provided a migration tool to help you migrate your configurations. For
more information, see the
https://www.elastic.co/blog/beats-6-7-0-released[Beats 6.7.0 release blog].

[[migrate-config-files]]
==== Migrate configuration files

{beats} 7.0 comes with several backwards incompatible configuration changes.
Before upgrading, review the <<breaking-changes-7.0>> document. Also review
the full list of breaking changes in the <<release-notes>> for 7.0.

Where possible, we kept the old configuration options working, but deprecated
them. However, deprecation was not always possible, so if you use any of the
settings described under breaking changes, make sure you understand the
alternatives that we provide.

[[enable-ecs-compatibility]]
==== Enable the compatibility layer for Elastic Common Schema (ECS) fields

Starting with 7.0, the fields exported by {beats} conform to the
{ecs-ref}/index.html[Elastic Common Schema (ECS)]. Many of the exported fields
have been renamed. See {beats-ref}/breaking-changes-7.0.html[Breaking
changes in 7.0] for the full list of changed names.

To help you transition to the new fields, we provide a compatibility layer in
the form of ECS-compatible field aliases. To use the aliases, set
`migration.6_to_7.enabled: true` in the Beat's configuration file *before* you
run {beats} 7.0 to ingest data for the first time.

The compatibility layer enables you to use 6.x dashboards and visualizations
with indices created by {beats} 7.0 or later.

Did you run the Beat before reading this section? That's OK. See the clean-up
steps described under <<missing-fields>>.

==== Upgrade dashboards

We recommend that you re-import the {kib} dashboards after upgrading {kib} and
{beats}. This way, you can take advantage of the new {beats} dashboards created
for the 7.0 release. 

Re-importing the dashboards will overwrite any manual changes that you've
made. To avoid overwriting your changes, save any modified objects, such as
dashboards, visualizations, and searches, under a new ID before proceeding. For
more information about importing and exporting your modified objects, see
{kibana-ref}/managing-saved-objects.html[Managing Saved Objects].

To re-import the dashboards, run the `setup` command with the `--dashboards`
option specified. For example:

[source,shell]
----
metricbeat setup --dashboards
----

Also, if you plan to run {beats} 6.7 and 7.0 in parallel,
<<enable-ecs-compatibility,enable the compatibility layer>> *before* you start
ingesting data. 


[[load-index-template-manually]]
==== Load the 7.0 index template manually for outputs other than {es}

If your {beats} configuration use an output other than `elasticsearch`, load
the index template manually into {es} *before* ingesting any data into 7.0
indices.

To load the template manually, run the `setup` command with the `--template`
flag specified. Temporarily enable the `elasticsearch` output when you run this
command. For example:

[source,shell]
--
metricbeat setup --template -E output.logstash.enabled=false -E 'output.elasticsearch.hosts=["localhost:9200"]'
--

[[migrate-filebeat-registry]]
==== Migrate {filebeat} registry to use new format

Starting with version 7.0, {filebeat} stores the registry in a directory
structure. If Filebeat finds an old registry file at the path set by
`filebeat.registry.path`, it will automatically migrate the registry file to the
new format. If the registry file is at a different location, set
`filebeat.registry.migrate_file` to point to the file.

The registry changes also require you to rename the following configuration
settings:

[options="header"]
|====
|Old config name | New config name
|`filebeat.registry_file`    | `filebeat.registry.path`.
|`registry_file_permissions` | `registry.file_permissions`
|`registry_flush` | `registry.flush`
|====

Before proceeding with the upgrade, make sure you back up the registry file.

[role="xpack"]
[[ilm-on]]
==== Check privileges for index lifecycle management (on by default in 7.0)

Staring with {beats} 7.0, index lifecycle management is on by default when
sending data to {beats} clusters that support it. Make sure {beats} users have
the privileges needed to use index lifecycle management, or disable index
lifecycle management. 

For help troubleshooting authorization issues related to index lifecycle
management, see <<user-unauthorized>>.

If you want to disable index lifecycle management, set
`setup.ilm.enabled: false` in the {beats} configuration file.

[[upgrade-mapping-template]]
==== Upgrade the {es} mapping template

//TODO: possibly move this topic.

Mapping templates and the default index names are versioned. For example,
Metricbeat {stack-version} typically creates indices like this:

["source","sh",subs="attributes"]
------------------------------------------------------------------------------
metricbeat-{stack-version}-{localdate}
------------------------------------------------------------------------------

And the corresponding {es} template is named +metricbeat-{stack-version}+.

This means that each version of the Beat creates a new index, and it is
guaranteed that the correct template for that version is applied. With these
changes in place, you generally don't have to do anything to upgrade the mapping
template when you move to a new version.

[[non-es-outputs]]
==== How to use versioned templates for outputs other than {es}

If you've configured {beats} to send events to a different output, such as {ls},
make sure you use versioned templates and indices. Otherwise, after you
upgrade, there will be field conflicts. To use versioned index templates and
indices, use the metadata from {beats} to set the index and allow {beats} to
manage the template.

For example, for {ls}, set the {ls} `index` setting as recommended in the
{logstash-ref}/plugins-inputs-beats.html[{beats} input plugin] documentation and
allow {beats} to manage the index template:

[source,json]
----
    manage_template => false
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}" 
----

When you use this configuration, the index name is set to match the index
pattern in the {beats} index template.

IMPORTANT: The index name must match the index pattern in the {beats} index
template. For example, if {ls} sends events to an index called
+metricbeat-7-{localdate}+, but the index template expects indices to match
+metricbeat-{stack-version}-*+, you may encounter mapping errors and be unable
to index {beats} events.

[[troubleshooting-upgrade]]
=== Troubleshooting {beats} upgrade issues

This section describes common problems you might encounter when upgrading to
{beats} 7.x.

You can avoid some of these problems by reading <<upgrading-6-to-7>> before
upgrading {beats}.

[[missing-fields]]
==== Missing fields or too many fields in the index

You may have run the Beat before loading the required index template. To clean
up and start again:

. Delete the index that was created when you ran the Beat. For example:
+
["source","sh",subs="attributes"]
----
DELETE metricbeat-{stack-version}-{localdate}*
----

. If you want the index to work with 6.x dashboards, turn on the compatibility
layer. See <<enable-ecs-compatibility>>.

. Load the correct index template:

.. If you're sending events directly to {es}, configure the following settings
in the {beats} configuration file to overwrite the index template:
+
[source,yaml]
----
setup.template.enabled: true
setup.template.overwrite: true
----
// CONSOLE

.. If you're sending events to a different output, such as {ls}, load the
template manually. See <<load-index-template-manually>>.

. Restart {beats}.

// REVIEWERS: If users mess up and run Filebeat before setting up the index
// template correctly (for example, if they don't turn on compatibility), is there
// some way to recover the previous cursor location to avoid dropped or
// duplicate events?

[[user-unauthorized]]
==== User is not authorized

//TODO: Test this again. 

Because index lifecycle management is on by default in 7.0, you might encounter
new errors related to user authorization when you run version 7.0 against an
{es} cluster that supports index lifecycle management.

*Error:* [cluster:monitor/main] is unauthorized for user
*Problem*: The user is unable to send monitoring information.
*Solution:* Grant the `monitor` cluster privilege.

*Error:* [cluster:admin/ilm/put] is unauthorized for user 
*Problem:*: The user is not authorized to load ILM policies. 
*Solution:* Grant the `manage_ilm` cluster privilege.

*Error:* [indices:admin/template/put] is unauthorized for user 
*Problem:* Automatic template loading is required when ILM is enabled, but the
user is not authorized to manage index templates.
*Solution:* Grant the `manage_index_templates` cluster privilege.

*Error:* [indices:admin/aliases] is unauthorized for user 
*Problem:* The user is unable to set up aliases needed by the compatibility
layer.
*Solution:* Grant the `manage` privilege on the {beats} index`.

[indices:data/write/bulk] is unauthorized for user 
*Problem:*  The user is unable to write events to {es}.
*Solution:* Grant `index` privileges on the Beats index.

[[old-dashboards-failing]]
==== 6.x dashboards not showing data from 7.0 shippers

You might have run the Beat without turning on the compatibility layer. See
<<missing-fields>>.

[[logstash-data-missing]]
==== Data parsed by {ls} not appearing in 7.0 dashboards

You might be writing to an index that doesn't match the index pattern used
by {beats}. See <<non-es-outputs>>.


