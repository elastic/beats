[[upgrading]]
== Upgrading

This section gives general recommendations for upgrading {beats} shippers:

* <<upgrading-minor-versions>>
* <<upgrading-6-to-7>>
* <<troubleshooting-upgrade>>

If you're upgrading other products in the stack, also read the
{stack-ref}/index.html[Elastic Stack Installation and Upgrade Guide]. 

[[upgrading-minor-versions]]
=== Upgrade between minor versions

As a general rule, you can upgrade between minor versions (for example, 7.x to
7.y, where x < y) by simply installing the new release and restarting the Beat
process. {beats} typically maintain backwards compatibility for configuration
settings and exported fields. Please review the
<<release-notes,release notes>> for potential exceptions.

Upgrading between non-consecutive major versions (e.g. 5.x to 7.x) is not
supported.

[[upgrading-6-to-7]]
=== Upgrade from 6.x to 7.x

Before upgrading your {beats}, review the <<breaking-changes,breaking changes>>
and the <<release-notes>>.

If you're upgrading other products in the stack, also read the
{stack-ref}/index.html[Elastic Stack Installation and Upgrade Guide]. 

We recommend that you fully upgrade {es} and {kib} to version 7.0
before upgrading {beats}. If you're on {beats} 6.0 through 6.6,
upgrade the {stack} and {beats} to version 6.7 *before* proceeding with the
7.0 upgrade.

// TODO: Determine whether it's necessary to remind users that the default_field
// setting must be applied to older indices. The migration 
// assistant in Kibana should make this clear.

Upgrading between non-consecutive major versions (e.g. 5.x to 7.x) is not
supported.

IMPORTANT: Please read through all upgrade steps before proceeding. These steps
are required before running the software for the first time.

// TODO: We should add step-by-step instructions to tell users to back up the
// registry, copy over the config file, etc. Similar to what Kibana does:
// https://www.elastic.co/guide/en/kibana/master/upgrade-standard.html

[[upgrading-to-6.7]]
==== Upgrade to {beats} 6.7 before upgrading to 7.0

The upgrade procedure assumes that you have {beats} 6.7 installed. If you're on
a previous 6.x version of {beats}, upgrade to version 6.7 first. If you're using
other products in the {stack}, upgrade {beats} as part of the
{stack-ref}/upgrading-elastic-stack.html[{stack} upgrade process].

Upgrading to 6.7 is required because the {es} index template was modified to
be compatible with {es} 7.0 (the `_type` setting changed from `doc` to `_doc`).

After upgrading to 6.7, make sure the 6.7 template gets loaded. To load the
template, run the `setup` command with the `--template` option specified. 
For example, if the {beats} output is {es}, run:

[source,shell]
----
metricbeat setup --template
----

If the {beats} output is not `elasticsearch`, temporarily enable the
`elasticsearch` output when you run the `setup` command. For example:

[source,shell]
--
metricbeat setup --template -E output.logstash.enabled=false -E 'output.elasticsearch.hosts=["localhost:9200"]'
--

// TODO: Determine whether to mention -E setup.template.settings.index.number_of_shards=5
// here.

//TODO (asiidoc migration): Replace this with a tagged region. ^^

NOTE: In previous versions, we advised users to manually force loading of the
index template. This is no longer recommended. You must use the `setup` command.

*Metricbeat and Filebeat users:* If you use {beats} central management,
make sure you migrate the {beats} central management index to 6.7 before you
upgrade to 7.0. Although central management is not a GA-level feature in 7.0,
we've provided a migration tool to help you migrate your configurations. For
more information, see the
https://www.elastic.co/blog/beats-6-7-0-released[Beats 6.7.0 release blog].

[[migrate-config-files]]
==== Migrate configuration files

{beats} 7.0 comes with several backwards incompatible configuration changes.
Before upgrading, review the <<breaking-changes-7.0>> document. Also review
the full list of breaking changes in the <<release-notes>> for 7.0.

Where possible, we kept the old configuration options working, but deprecated
them. However, deprecation was not always possible, so if you use any of the
settings described under breaking changes, make sure you understand the
alternatives that we provide.

[[enable-ecs-compatibility]]
==== Enable the compatibility layer for Elastic Common Schema (ECS) fields

Starting with 7.0, the fields exported by {beats} conform to the
{ecs-ref}/index.html[Elastic Common Schema (ECS)]. Many of the exported fields
have been renamed. See {beats-ref}/breaking-changes-7.0.html[Breaking
changes in 7.0] for the full list of changed names.

To help you transition to the new fields, we provide a compatibility layer in
the form of ECS-compatible field aliases. To use the aliases, set
`migration.6_to_7.enabled: true` in the Beat's configuration file *before* you
upgrade the {es} index template to 7.0.

The compatibility layer enables you to use 6.x dashboards and visualizations
with indices created by {beats} 7.0 or later.

Did you run the Beat or load the index template before reading this section?
That's OK. See the clean-up steps described under <<missing-fields>>.

[[upgrade-index-template]]
==== Upgrade the {es} index template

Index templates and the default index names are versioned. For example,
Metricbeat {stack-version} typically creates indices like this:

["source","sh",subs="attributes"]
------------------------------------------------------------------------------
metricbeat-{stack-version}-2019.04.02
------------------------------------------------------------------------------

And the corresponding {es} template is named +metricbeat-{stack-version}+.

This means that each version of the Beat creates a new index, and it's
guaranteed that the correct template for that version is applied. With these
changes in place, you generally don't have to do anything to upgrade the index
template when you move to a new version. Just load the new version of the
template *before* ingesting any data into {es}. 

If you plan to run {beats} 6.7 and 7.0 in parallel, make sure you
<<enable-ecs-compatibility,enable the compatibility layer>> *before* you load
the index template. 

To load the index template, run the `setup` command with the `--template` option
specified. For example, if the {beats} output is {es}, run:

[source,shell]
----
metricbeat setup --template
----

If the {beats} output is not `elasticsearch`, temporarily enable the
`elasticsearch` output when you run the `setup` command. For example:

[source,shell]
--
metricbeat setup --template -E output.logstash.enabled=false -E 'output.elasticsearch.hosts=["localhost:9200"]'
--

[[non-es-outputs]]
==== How to use versioned templates when the output is not {es}

If you've configured {beats} to send events to a different output, such as {ls},
make sure you use versioned templates and indices. Otherwise, after you
upgrade, there will be field conflicts.

To use versioned index templates and indices with {ls}, configure your
{ls} pipeline to use the metadata from {beats} to set the index, and allow
Beats to manage the template:

[source,json]
----
    manage_template => false
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}" 
----

When you use this configuration, the index name is set to match the index
pattern in the {beats} index template. See the 
{logstash-ref}/plugins-inputs-beats.html[{beats} input plugin] documentation
for more information.

For other non-{es} outputs, use the metadata from {beats} to set the index, and
allow {beats} to load and manage the template, as described under
<<upgrade-index-template>>.

IMPORTANT: The index name must match the index pattern in the {beats} index
template. For example, if {ls} sends events to an index called
+metricbeat-7-2019.04.02+, but the index template expects indices to match
+metricbeat-{stack-version}-*+, you may encounter mapping errors and be unable
to index {beats} events.

==== Upgrade dashboards

We recommend that you import the 7.0 {kib} dashboards after upgrading
{kib} and {beats}. This way, you can take advantage of the new dashboards
created for the 7.0 release.

If you've <<enable-ecs-compatibility,enabled the compatibility layer>> before
loading the index template and dashboards, 6.x dashboards can co-exist with
7.0 dashboards and will continue working after the upgrade.

To import the 7.0 dashboards, run the `setup` command with the `--dashboards`
option specified. For example:

[source,shell]
----
metricbeat setup --dashboards
----

[[migrate-filebeat-registry]]
==== Migrate {filebeat} registry to use new format

Starting with version 7.0, {filebeat} stores the registry in a directory
structure. If Filebeat finds an old registry file at the path set by
`filebeat.registry.path`, it will automatically migrate the registry file to the
new format. If the registry file is at a different location, set
`filebeat.registry.migrate_file` to point to the file.

The registry changes also require you to rename the following configuration
settings:

[options="header"]
|====
|Old config name | New config name
|`filebeat.registry_file`    | `filebeat.registry.path`.
|`filebeat.registry_file_permissions` | `filebeat.registry.file_permissions`
|`filebeat.registry_flush` | `filebeat.registry.flush`
|====

Before proceeding with the upgrade, make sure you back up the registry file.

[role="xpack"]
[[ilm-on]]
==== Check privileges for index lifecycle management (on by default in 7.0)

Staring with {beats} 7.0, index lifecycle management is on by default when
sending data to {beats} clusters that support it. Make sure {beats} users have
the privileges needed to use index lifecycle management, or disable index
lifecycle management. 

For help troubleshooting authorization issues, see <<user-unauthorized>>.

If you want to disable index lifecycle management, set
`setup.ilm.enabled: false` in the {beats} configuration file.

[[troubleshooting-upgrade]]
=== Troubleshooting {beats} upgrade issues

This section describes common problems you might encounter when upgrading to
{beats} 7.x.

You can avoid some of these problems by reading <<upgrading-6-to-7>> before
upgrading {beats}.

[[missing-fields]]
==== Missing fields or too many fields in the index

You may have run the Beat before loading the required index template. To clean
up and start again:

. Delete the index that was created when you ran the Beat. For example:
+
["source","sh",subs="attributes"]
----
DELETE metricbeat-{stack-version}-2019.04.02*
----
+
WARNING: Be careful when deleting indices. The example shown here deletes
all data indexed into the metricbeat-{stack-version} indices on 2019.04.02.

. If you want the index to work with 6.x dashboards, turn on the compatibility
layer. See <<enable-ecs-compatibility>>.

. Delete the index template that was loaded earlier. For example:
+
["source","sh",subs="attributes"]
----
DELETE /_template/metricbeat-{stack-version}
----
+
Because the index template was loaded without the compatibility layer enabled,
the required aliases were not created. 

. Load the correct index template. See <<upgrade-index-template>>.

. Restart {beats}.

[[user-unauthorized]]
==== User is not authorized

//TODO: Info taken from notes. I need to re-test to verify.

Because index lifecycle management is on by default in 7.0, you might encounter
new errors related to user authorization when you run version 7.0 against an
{es} cluster that supports index lifecycle management.

===== `[cluster:monitor/main] is unauthorized for user`

*Problem*: The {beats} user is unable to send monitoring information.

*Solution:* Grant the `monitor` cluster privilege.

===== `[cluster:admin/ilm/put] is unauthorized for user` 

*Problem:* The {beats} user is not authorized to load ILM policies. 

*Solution:* Grant the `manage_ilm` cluster privilege.

===== `[indices:admin/template/put] is unauthorized for user` 

*Problem:* Automatic template loading is required when ILM is enabled, but the
user is not authorized to manage index templates.

*Solution:* Grant the `manage_index_templates` cluster privilege.

===== `[indices:admin/aliases] is unauthorized for user` 

*Problem:* The {beats} user is unable to set up aliases needed by the compatibility
layer.

*Solution:* Grant the `manage` privilege on the {beats} indices.

//TODO: Verify ^^. Not sure about this one.

===== `[indices:data/write/bulk] is unauthorized for user` 

*Problem:*  The {beats} user is unable to write events to {es}.

*Solution:* Grant the `index` privilege on the {beats} indices.

[[old-dashboards-failing]]
==== 6.x dashboards not showing data from 7.0 shippers

You might have run the Beat without turning on the compatibility layer. See
<<enable-ecs-compatibility>> then clean up your environment as described
under <<missing-fields>>.

[[logstash-data-missing]]
==== Data parsed by {ls} not appearing in 7.0 dashboards

You might be writing to an index that doesn't match the index pattern used
by {beats}. See <<non-es-outputs>>.


