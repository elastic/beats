//////////////////////////////////////////////////////////////////////////
//// This content is shared by all Elastic Beats. Make sure you keep the
//// descriptions here generic enough to work for all Beats that include
//// this file. When using cross references, make sure that the cross
//// references resolve correctly for any files that include this one.
//// Use the appropriate variables defined in the index.asciidoc file to
//// resolve Beat names: beatname_uc and beatname_lc.
//// Use the following include to pull this content into a doc file:
//// include::../../libbeat/docs/monitoring/monitoring-internal-collection.asciidoc[]
//////////////////////////////////////////////////////////////////////////

[role="xpack"]
[[monitoring-internal-collection]]
== Use internal collection to send monitoring data
++++
<titleabbrev>Internal collection</titleabbrev>
++++

Use internal collectors to send {beats} monitoring data directly to your
monitoring cluster.

//Commenting out this link temporarily until the general monitoring docs can be
//updated. 
//To learn about monitoring in general, see 
//{ref}/monitor-elasticsearch-cluster.html[Monitor a cluster]. 

. Create a user that has appropriate authority to send system-level monitoring
data to {es}. For example, you can use the built-in +{beat_monitoring_user}+ user or
assign the built-in +{beat_monitoring_user}+ role to another user. For more
information on the required privileges, see <<privileges-to-publish-monitoring>>.

. Add the `monitoring` settings in the {beatname_uc} configuration file. If you
configured the {es} output and want to send {beatname_uc} monitoring events to
the same {es} cluster, specify the following minimal configuration:
+
["source","yml",subs="attributes"]
--------------------
monitoring:
  enabled: true
  elasticsearch:
    username: {beat_monitoring_user}
    password: somepassword
--------------------
+
If you want to send monitoring events to an https://cloud.elastic.co/[{ecloud}]
monitoring cluster, you can use two simpler settings. When defined, these settings
overwrite settings from other parts in the configuration. For example:
+
[source,yaml]
--------------------
monitoring:
  enabled: true
  cloud.id: 'staging:dXMtZWFzdC0xLmF3cy5mb3VuZC5pbyRjZWM2ZjI2MWE3NGJmMjRjZTMzYmI4ODExYjg0Mjk0ZiRjNmMyY2E2ZDA0MjI0OWFmMGNjN2Q3YTllOTYyNTc0Mw=='
  cloud.auth: 'elastic:{pwd}'
--------------------
+
If you
ifndef::no-output-logstash[]
configured a different output, such as {ls} or you
endif::[]
want to send {beatname_uc} monitoring events to a separate {es} cluster
(referred to as the _monitoring cluster_), you must specify additional
configuration options. For example:
+
["source","yml",subs="attributes"]
--------------------
monitoring:
  enabled: true
  elasticsearch:
    hosts: ["https://example.com:9200", "https://example2.com:9200"] <1>
    username: {beat_monitoring_user}
    password: somepassword
--------------------
<1> This setting identifies the hosts and port numbers of {es} nodes
that are part of the monitoring cluster.

. {kibana-ref}/monitoring-xpack-kibana.html[Configure monitoring in {kib}].

ifndef::serverless[]
. Start {beatname_uc}.
endif::[]

ifdef::serverless[]
. Deploy {beatname_uc}.
endif::[]

. To verify your monitoring configuration, point your web browser at your {kib}
host, and select Monitoring from the side navigation. Metrics reported from
{beatname_uc} should be visible in the Beats section. When {security} is enabled,
to view the monitoring dashboards you must log in to {kib} as a user who has the
`kibana_user` and `monitoring_user` roles.


include::shared-monitor-config.asciidoc[]
