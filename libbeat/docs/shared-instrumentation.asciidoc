[float]
[[configuration-instrumentation]]
=== Instrumentation configuration

++++
<titleabbrev>Instrumentation configuration</titleabbrev>
++++

The Beats publishing output and Elasticsearch output are instrumented with Elastic APM.
To gain insight into the performance of {beatname_uc}, you can enable this instrumentation.

Example configuration with instrumentation enabled:

["source","yaml"]
----
instrumentation:
  enabled: true
  environment: production
  hosts:
    - "http://localhost:8200"
  api_key: L5ER6FEvjkmlfalBealQ3f3fLqf03fazfOV
----

[float]
==== Configuration options

You can specify the following options in the `instrumentation` section of the +{beatname_lc}.yml+ config file:

[float]
===== `enabled`

Set to true to enable instrumentation of {beatname_uc}.
Defaults to `false`.

[float]
===== `environment`

Set the environment in which {beatname_uc} is running. For example, `staging`, `production`, `dev`, etc.
Environments can be filtered in the APM app.

[float]
===== `hosts`

APM Server hosts to report instrumentation results to. Defaults to `http://localhost:8200`.

[float]
===== `api_key`

API key used to secure communication with the APM Server(s). If `api_key` is set then `secret_token` will be ignored.

[float]
===== `secret_token`

Secret token used to secure communication with the APM Server(s).

[float]
===== `profiling.cpu.enabled`

This feature is experimental.
Enable profiling of the server, recording profile samples as events.

[float]
===== `profiling.cpu.interval`

This feature is experimental.

[float]
===== `profiling.cpu.duration`

This feature is experimental.

[float]
===== `profiling.heap.enabled`

This feature is experimental.
Set to true to enable heap profiling.

[float]
===== `profiling.heap.interval`

This feature is experimental.






These options are supported by all Elastic Beats. Because they are common
options, they are not namespaced.

Here is an example configuration:

[source,yaml]
------------------------------------------------------------------------------
name: "my-shipper"
tags: ["service-X", "web-tier"]
------------------------------------------------------------------------------

[float]
==== `name`

The name of the Beat. If this option is empty, the `hostname` of the server is
used. The name is included as the `agent.name` field in each published transaction. You can
use the name to group all transactions sent by a single Beat.

Example:

[source,yaml]
------------------------------------------------------------------------------
name: "my-shipper"
------------------------------------------------------------------------------

[float]
==== `tags`

A list of tags that the Beat includes in the `tags` field of each published
transaction. Tags make it easy to group servers by different logical properties.
For example, if you have a cluster of web servers, you can add the "webservers"
tag to the Beat on each server, and then use filters and queries in the Kibana
web interface to get visualisations for the whole group of servers.
