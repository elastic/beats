name: golangci-lint
on:
  #push:
  #  branches:
  #    - main
  #    - 8.*
  #    - 7.17
  pull_request:
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
jobs:
  golangci:
    strategy:
      matrix:
        include:
          - GOOS: windows
          - GOOS: linux
          - GOOS: darwin
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Echo details
        env:
          GOOS: ${{ matrix.GOOS }}
        run: echo Go GOOS=$GOOS

      - uses: actions/checkout@v3

      # Uses Go version from the repository.
      - name: Read .go-version file
        id: goversion
        run: echo "::set-output name=version::$(cat .go-version)"

      - uses: actions/setup-go@v3
        with:
          go-version: "${{ steps.goversion.outputs.version }}"
      - name: Install golangci-lint
        env:
          GOOS: ${{ matrix.GOOS }}
          CGO_ENABLED: 1
        # Install golangci-lint from source instead of using
        # golangci-lint-action to ensure the golangci-lint binary is built with
        # the same Go version we're targeting.
        # Avoids incompatibility issues such as:
        # - https://github.com/golangci/golangci-lint/issues/2922
        # - https://github.com/golangci/golangci-lint/issues/2673
        # - https://github.com/golangci/golangci-lint-action/issues/442
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.47.2
      - name: Run golangci-lint
        run: golangci-lint run --version --verbose --out-format=github-actions --timeout=30m --whole-files


      # - name: golangci-lint
      #   env:
      #     GOOS: ${{ matrix.GOOS }}
      #     CGO_ENABLED: 1
      #   uses: golangci/golangci-lint-action@v3.2.0
      #   with:
      #     # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
      #     version: v1.47.2

      #     # Give the job more time to execute.
      #     # Regarding `--whole-files`, the linter is supposed to support linting of changed a patch only but,
      #     # for some reason, it's very unreliable this way - sometimes it does not report any or some
      #     # issues without linting the whole files, so we have to use `--whole-files`
      #     # which can lead to some frustration from developers who would like to
      #     # fix a single line in an existing codebase and the linter would force them
      #     # into fixing all linting issues in the whole file instead
      #     args: --timeout=30m --whole-files

      #     # Optional: if set to true then the action will use pre-installed Go.
      #     skip-go-installation: true

      #     # Optional: show only new issues if it's a pull request. The default value is `false`.
      #     only-new-issues: true
