#!/usr/bin/env groovy

pipeline {
  agent none
  environment {
    REPO = 'beats'
    BASE_DIR = "src/github.com/elastic/${env.REPO}"
    PIPELINE = 'beats/poc-metricbeat-functional-tests'
  }
  options {
    timeout(time: 1, unit: 'HOURS')
    buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '20'))
    timestamps()
    ansiColor('xterm')
    disableResume()
    durabilityHint('PERFORMANCE_OPTIMIZED')
  }
  triggers {
    issueCommentTrigger('(?i).*(?:jenkins\\W+)?run\\W+(?:the\\W+)?tests(?:\\W+please)?.*')
  }
  stages {
    stage('Initializing'){
      agent { label 'linux && immutable' }
      options { skipDefaultCheckout() }
      stages {
        stage('Checkout') {
          steps {
            gitCheckout(basedir: env.BASE_DIR, githubNotifyFirstTimeContributor: false)
            script {
              env.GO_VERSION = readFile("${BASE_DIR}/.go-version").trim()
            }
          }
        }
      }
    }
    stage(GITHUB_CHECK_NAME) {
      agent none
      when {
        beforeAgent true
        changeRequest()
      }
      steps {
        build(job: env.PIPELINE, propagate: false, wait: false,
              parameters: [string(name: 'GO_VERSION', value: "${env.GO_VERSION}"),
                           string(name: 'FEATURE', value: 'all'),
                           string(name: 'STACK_VERSION', value: '7.4.0'),
                           string(name: 'STACK_COMMIT_ID', value: ''),
                           string(name: 'BEAT_VERSION', value: '7.4.0'),
                           string(name: 'BEAT_COMMIT_ID', value: '')])
      }
    }
  }
}
