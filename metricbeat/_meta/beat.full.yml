########################## Metricbeat Configuration ###########################

# This file is a full configuration example documenting all non-deprecated
# options in comments. For a shorter configuration example, that contains only
# the most common options, please see metricbeat.yml in the same directory.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/metricbeat/index.html

#============================  Config Reloading ===============================

# Config reloading allows to dynamically load modules. Each file which is
# monitored must contain one or multiple modules as a list.
metricbeat.config.modules:

  # Glob pattern for configuration reloading
  path: ${path.config}/conf.d/*.yml

  # Period on which files under path should be checked for changes
  reload.period: 10s

  # Set to true to enable config reloading
  reload.enabled: false

#==========================  Modules configuration ============================
metricbeat.modules:

#------------------------------- System Module -------------------------------
- module: system
  metricsets:
    # CPU stats
    - cpu

    # System Load stats
    - load

    # Per CPU core stats
    #- core

    # IO stats
    #- diskio

    # Per filesystem stats
    - filesystem

    # File system summary stats
    - fsstat

    # Memory stats
    - memory

    # Network stats
    - network

    # Processes summary
    - process_summary

    # Per process stats
    - process

    # Sockets and connection info (linux only)
    #- socket
  enabled: true
  period: 10s
  processes: ['.*']

  # if true, exports the CPU usage in ticks, together with the percentage values
  #cpu_ticks: false

  # These options allow you to filter out all processes that are not
  # in the top N by CPU or memory, in order to reduce the number of documents created.
  # If both the `by_cpu` and `by_memory` options are used, the union of the two sets
  # is included.
  #process.include_top_n:
    #
    # Set to false to disable this feature and include all processes
    #enabled: true

    # How many processes to include from the top by CPU. The processes are sorted
    # by the `system.process.cpu.total.pct` field.
    #by_cpu: 0

    # How many processes to include from the top by memory. The processes are sorted
    # by the `system.process.memory.rss.bytes` field.
    #by_memory: 0

  # If false, cmdline of a process is not cached.
  #process.cmdline.cache.enabled: true

  # Enable collection of cgroup metrics from processes on Linux.
  #process.cgroups.enabled: true

  # A list of regular expressions used to whitelist environment variables
  # reported with the process metricset's events. Defaults to empty.
  #process.env.whitelist: []

  # Configure reverse DNS lookup on remote IP addresses in the socket metricset.
  #socket.reverse_lookup.enabled: false
  #socket.reverse_lookup.success_ttl: 60s
  #socket.reverse_lookup.failure_ttl: 60s

#------------------------------- Apache Module -------------------------------
- module: apache
  metricsets: ["status"]
  enabled: false
  period: 10s

  # Apache hosts
  hosts: ["http://127.0.0.1"]

  # Path to server status. Default server-status
  #server_status_path: "server-status"

  # Username of hosts.  Empty by default
  #username: username

  # Password of hosts. Empty by default
  #password: password

#-------------------------------- Audit Module -------------------------------
- module: audit
  enabled: false
  metricsets: ["kernel"]
  kernel.resolve_ids: true
  kernel.backlog_limit: 8196
  kernel.rate_limit: 0
  kernel.include_raw_message: false
  kernel.include_warnings: false

#-------------------------------- ceph Module --------------------------------
- module: ceph
  metricsets: ["cluster_disk", "cluster_health", "monitor_health", "pool_disk"]
  enabled: false
  period: 10s
  hosts: ["localhost:5000"]

#------------------------------ Couchbase Module -----------------------------
- module: couchbase
  metricsets: ["bucket", "cluster", "node"]
  enabled: false
  period: 10s
  hosts: ["localhost:8091"]

#------------------------------- Docker Module -------------------------------
- module: docker
  metricsets: ["container", "cpu", "diskio", "healthcheck", "info", "memory", "network"]
  hosts: ["unix:///var/run/docker.sock"]
  enabled: false
  period: 10s

  # To connect to Docker over TLS you must specify a client and CA certificate.
  #ssl:
    #certificate_authority: "/etc/pki/root/ca.pem"
    #certificate:           "/etc/pki/client/cert.pem"
    #key:                   "/etc/pki/client/cert.key"

#----------------------------- Dropwizard Module -----------------------------
- module: dropwizard
  metricsets: ["collector"]
  enabled: false
  period: 10s
  hosts: ["localhost:8080"]
  metrics_path: /metrics/metrics
  namespace: example

#---------------------------- elasticsearch Module ---------------------------
- module: elasticsearch
  metricsets: ["node", "node_stats"]
  enabled: false
  period: 10s
  hosts: ["localhost:9200"]



#------------------------------- golang Module -------------------------------
- module: golang
  metricsets: ["expvar","heap"]
  enabled: false
  period: 10s
  hosts: ["localhost:6060"]
  heap.path: "/debug/vars"
  expvar:
    namespace: "example"
    path: "/debug/vars"

#------------------------------- HAProxy Module ------------------------------
- module: haproxy
  metricsets: ["info", "stat"]
  enabled: false
  period: 10s
  hosts: ["tcp://127.0.0.1:14567"]

#-------------------------------- HTTP Module --------------------------------
- module: http
  metricsets: ["json"]
  enabled: false
  period: 10s
  hosts: ["localhost:80"]
  namespace: "json_namespace"
  path: "/"
  #body: ""
  #method: "GET"
  #request.enabled: false
  #response.enabled: false

#------------------------------- Jolokia Module ------------------------------
- module: jolokia
  metricsets: ["jmx"]
  enabled: false
  period: 10s
  hosts: ["localhost"]
  namespace: "metrics"
  path: "/jolokia/?ignoreErrors=true&canonicalNaming=false"
  jmx.mapping:
  jmx.application:
  jmx.instance:

#-------------------------------- kafka Module -------------------------------
- module: kafka
  metricsets: ["partition"]
  enabled: false
  period: 10s
  hosts: ["localhost:9092"]

  #client_id: metricbeat
  #retries: 3
  #backoff: 250ms

  # List of Topics to query metadata for. If empty, all topics will be queried.
  #topics: []

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

  # SASL authentication
  #username: ""
  #password: ""

#------------------------------- kibana Module -------------------------------
- module: kibana
  metricsets: ["status"]
  enabled: false
  period: 10s
  hosts: ["localhost:5601"]

#----------------------------- kubernetes Module -----------------------------
# Node metrics, from kubelet:
- module: kubernetes
  enabled: false
  metricsets:
    - node
    - system
    - pod
    - container
    - volume
  period: 10s
  hosts: ["localhost:10255"]

# State metrics from kube-state-metrics service:
- module: kubernetes
  enabled: false
  metricsets:
    - state_node
    - state_deployment
    - state_replicaset
    - state_pod
    - state_container
  period: 10s
  hosts: ["kube-state-metrics:8080"]

# Kubernetes events
- module: kubernetes
  metricsets:
    - event
  kube_config: ${HOME}/.kube/config
  in_cluster: false

#------------------------------ memcached Module -----------------------------
- module: memcached
  metricsets: ["stats"]
  enabled: false
  period: 10s
  hosts: ["localhost:11211"]


#------------------------------- MongoDB Module ------------------------------
- module: mongodb
  metricsets: ["dbstats", "status"]
  enabled: false
  period: 10s

  # The hosts must be passed as MongoDB URLs in the format:
  # [mongodb://][user:pass@]host[:port].
  # The username and password can also be set using the respective configuration
  # options. The credentials in the URL take precedence over the username and
  # password configuration options.
  hosts: ["localhost:27017"]

  # Username to use when connecting to MongoDB. Empty by default.
  #username: user

  # Password to use when connecting to MongoDB. Empty by default.
  #password: pass

#-------------------------------- MySQL Module -------------------------------
- module: mysql
  metricsets: ["status"]
  enabled: false
  period: 10s

  # Host DSN should be defined as "user:pass@tcp(127.0.0.1:3306)/"
  # The username and password can either be set in the DSN or using the username
  # and password config options. Those specified in the DSN take precedence.
  hosts: ["root:secret@tcp(127.0.0.1:3306)/"]

  # Username of hosts. Empty by default.
  #username: root

  # Password of hosts. Empty by default.
  #password: secret

  # By setting raw to true, all raw fields from the status metricset will be added to the event.
  #raw: false

#-------------------------------- Nginx Module -------------------------------
#- module: nginx
  #metricsets: ["stubstatus"]
  #enabled: true
  #period: 10s

  # Nginx hosts
  #hosts: ["http://127.0.0.1"]

  # Path to server status. Default server-status
  #server_status_path: "server-status"

#------------------------------- php_fpm Module ------------------------------
- module: php_fpm
  metricsets: ["pool"]
  enabled: false
  period: 10s
  status_path: "/status"
  hosts: ["localhost:8080"]

#----------------------------- PostgreSQL Module -----------------------------
- module: postgresql
  metricsets:
    # Stats about every PostgreSQL database
    - database

    # Stats about the background writer process's activity
    - bgwriter

    # Stats about every PostgreSQL process
    - activity

  enabled: false
  period: 10s

  # The host must be passed as PostgreSQL URL. Example:
  # postgres://localhost:5432?sslmode=disable
  # The available parameters are documented here:
  # https://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters
  hosts: ["postgres://localhost:5432"]

  # Username to use when connecting to PostgreSQL. Empty by default.
  #username: user

  # Password to use when connecting to PostgreSQL. Empty by default.
  #password: pass


#----------------------------- Prometheus Module -----------------------------
- module: prometheus
  metricsets: ["stats"]
  enabled: false
  period: 10s
  hosts: ["localhost:9090"]
  metrics_path: /metrics
  #namespace: example

#-------------------------------- Redis Module -------------------------------
- module: redis
  metricsets: ["info", "keyspace"]
  enabled: false
  period: 10s

  # Redis hosts
  hosts: ["127.0.0.1:6379"]

  # Timeout after which time a metricset should return an error
  # Timeout is by default defined as period, as a fetch of a metricset
  # should never take longer then period, as otherwise calls can pile up.
  #timeout: 1s

  # Optional fields to be added to each event
  #fields:
  #  datacenter: west

  # Network type to be used for redis connection. Default: tcp
  #network: tcp

  # Max number of concurrent connections. Default: 10
  #maxconn: 10

  # Filters can be used to reduce the number of fields sent.
  #filters:
  #  - include_fields:
  #      fields: ["stats"]

  # Redis AUTH password. Empty by default.
  #password: foobared

#------------------------------- vsphere Module ------------------------------
- module: vsphere
  metricsets: ["datastore, host, virtualmachine"]
  enabled: false
  period: 10s
  hosts: ["https://localhost/sdk"]

  username: "user"
  password: "password"
  # If insecure is true, don't verify the server's certificate chain
  insecure: false

#------------------------------- Windows Module ------------------------------
- module: windows
  metricsets: ["perfmon"]
  enabled: false
  period: 10s
  perfmon.counters:

#------------------------------ ZooKeeper Module -----------------------------
- module: zookeeper
  metricsets: ["mntr"]
  enabled: false
  period: 10s
  hosts: ["localhost:2181"]


