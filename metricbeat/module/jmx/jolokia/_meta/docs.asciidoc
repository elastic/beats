=== jmx jolokia MetricSet

This is the jolokia metricset of the module jmx.

[float]
=== Features and limitations
Tested with Jolokia 1.3.4.

Metrics to be collected from each Jolokia instance are defined in the mapping section as a
map[string]string where the keys is the MBean object name with the an attribute separated by three semicolons (:::)
and value is the actual metric alias in Elastic.

For example: to get the "Uptime" attribute from the "java.lang:type=Runtime" MBean and map it to something like
"uptime" (actually "jmx.jolokia.uptime", the prexif is added by beats framework) you have to configure following
mapping: "java.lang:type=Runtime:::Uptime":"uptime".

In case the underlying attribute is an object (e.g. see HeapMemoryUsage attribute in java.lang:type=Memory) it`s
structure will be pushed to Elastic "as is".

It is possible to configure nested metrics aliases by using dots in the mapping name, although
nesting depth is limited to 1 at the moment (e.g. gc.cms_collection_time). For examples please refer to the /jmx/jolokia/test/config.yml.

All metrics from a single mapping will be POSTed to the defined host/port and sent to Elastic as a single event.
To make it possible to distinguish between metrics from multiple applications running on the same host, please use
fields "application" and "instance" in the config file. If set these two will be added into the event under jmx.jolokia.application
and jmx.jolokia.instance.

Limitations:
No authentication against Jolokia is supported.
No wildcards in Jolokia requests supported.
You can get max 30 attributes from the same MBean (see Add function in config.go).


[float]
=== Exposed fields, Dashboards, Indexes, etc.
Since this is a very general module that can be tailored for any application that exposes it`s metrics over Jolokia, it
comes with no exposed fields description, dashboards or index patterns.
