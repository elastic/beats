// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kibana

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kibana", asset.ModuleFieldsPri, AssetKibana); err != nil {
		panic(err)
	}
}

// AssetKibana returns asset data.
// This is the base64 encoded zlib format compressed contents of module/kibana.
func AssetKibana() string {
	return "eJzMWk+P27YTve+nGPiSS1b47WEP8eGHFm2BFkWCIm3QQ1EYtDi22FCkyqGcdT99QUqyZYmUZFludg9BIGnee5wZzvCPH+EzHtfwWWyZYg8AVliJa1j97B+sHgA4UmpEYYVWa/j/AwBA9RJyzUuJDwCUaWM3qVY7sV/DjklyTw1KZIRr2DtgQmuF2tMa/lgRydVbWGXWFqs/HwB2AiWntcd+BMVybBRtyDJL/gWAPRYOzeiyqJ+0DdvGVuRIluXF6U1jzaRg1HpaMJutYfXNyWLVA6uUJAap0Ipw4z5NcvYyEbs29wPpgyQ5xQidRUlzWMIADbymJMdcm2OyM4gboTbbo8VZRGNQDWVhdIpESVm4cbvvciGlmMV5iRXyX/NFLS1DViQk/sGNFLmwt3CGEZPwoFOt0tIYVH5qKEzdFJo15BGkyLgNkuDOhtBuvNpbQj0GHnGCpkRqxpOnfGZ+da27wM83AT/HgZ9uQ34KQDc+xIPznNS62HCU7HhLPLpYoQlh8O8SyVJitWVyXt3yCB2AHj4XVCforBxrWEIwZ65WBaW71uEOFTugYXu8nY4d9gNlvywFn8hBaA4ixaQ2uAS6ummiZGRFSshMmiWpLMmiSQJiPuPxiza8769SBmpLm9r9BdYTzV+9rnA4kKM1IqWk9cFpQbFFy1rPuwOK+mJYWAyqDdfrycOeaZvqAxpe4mJSUl0qG1UitdpHTXlpmPN/1DqkZ0hTG7x4/l/wfYO9k5qFdLcQ3r27EqGx3DEhS4PdAEVcckr8F0zLbnOO2J0SoV7OLpDuvkQAUxxMqR5dhRhM/v3U1O8UEhjM0o7QWppQZJlKET59+un7IIn7dymSHlZDIhTHl7ksH1iOoHc12xsCoSwaxWQAtiHMNHVTdPaoHFZ0ZNYwRYXbPTHODVI4A6ezuo6A5g2dWH1eOYIg/QEN9evAtaQhlNM8UaygTIe9udVaIuvSX1D8nqHN0IDNsKHblkJyEATshF49CwsIVey5wXSORSZtFoJtGKVOmZw+KU5Vrxukxsjl6x5NvwS1tsbwCuvP62m9JV2u2+YIGapFkzTEqnF3aQex5d35Lxf7qoG7AtJbUgxEHM5Rv29pH6e9T7Hv884t/8l9h79AVxhPnLD1EtmzYJ8JDWOaiDDqpQvC3wy5YKnO1Zf9lXvZaFJO6m46zD+nonNB1uirKnrf/GPVl2ajFJLZnTb5zQC3CqkO1u6yJYud8/ZZgtvGNpQ/AFoIqyTkN0Cd11us79Ul3PYUSoozdMbkbjO+m31eBOVpHszks2gY8vVYiy3zLRrXZFMpUFloUUDOOILVvuhVXSOBD9oi2IxZ2Br9hdAQpEwBoeKQl9KKQiKQcP9lCnVJF4hWNweOrY89MjAidGtZC1ql+NY3JZvh0cMbfCwJAcmyrRSUIW/DJuFFeXXKOrnkjXjqlwquWV9ftfCcePA+GszT7Ovdn0w2HTpzvgQhtxXikfwecRbAD44HHA94HhAKqosjTLXiXdKOpzJk/Zk/VBVG9TThc8iRGI53PV9BI0EbKZ2uzTC7hpjx6AAAfnPs1QCYdDtVi9zNqDrRnYfD6O2i/dXU/+h0OwWwPU6XHL2p+++Ev2cvCWjJgQqWold06f8PmmPyFzWDejshENH5OzKcCXI/eWxX0VtOjs68zjXQUsUS4GNd5v1R91VF82KVGLiSWspR59bX3IFVfe0LGmxRY3zZ172SW0pZNdFVT18kcq37qXnx+1hDVL+9mBmszs3YHG98W93SnYbk9Yw0jlbruLwJnCPgPXsReZlPFBDd2l19mverR6hd3Hpz/cHd/Q9+woutV3tE5oSFJdfHC0k1z+5zvlFP4uRe5xw+bxLt5o2U/sJ6+ejX6J4sEv1wxZjdPd5XcP35AJPuVidsl2CBKv1dxdIijO9JIPCLi6v3vRM0NV3XxUr4XwT0dUzbQA/3Xhg/KZikFwLdrt16hz0KE3rxPZVeiPs3AAD//3Ddx3Y="
}
