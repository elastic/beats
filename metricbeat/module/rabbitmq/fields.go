// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package rabbitmq

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
<<<<<<< HEAD
	if err := asset.SetFields("metricbeat", "rabbitmq", asset.ModuleFieldsPri, AssetRabbitmq); err != nil {
=======
	if err := asset.SetFields("metricbeat", "Rabbitmq", asset.ModuleFieldsPri, AssetRabbitmq); err != nil {
>>>>>>> Introduce local fields generation
		panic(err)
	}
}

// AssetRabbitmq returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/rabbitmq.
func AssetRabbitmq() string {
<<<<<<< HEAD
	return "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"
=======
	return "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"
>>>>>>> Introduce local fields generation
}
