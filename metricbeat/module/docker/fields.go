// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package docker

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "docker", asset.ModuleFieldsPri, AssetDocker); err != nil {
		panic(err)
	}
}

// AssetDocker returns asset data.
// This is the base64 encoded gzipped contents of module/docker.
func AssetDocker() string {
	return "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"
}
