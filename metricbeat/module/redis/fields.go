// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package redis

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "redis", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "eJzkXE9z27YSv+dT7Pgd6s7YTN+hPfjwZuIm6cs0bTJ2cuiJBsmlhAoEWACUo376NwBIiqIAkvpD252nQzKWSOxvF/sXWOAaVri5AYkZVa8ANNUMb+Dizvx98QogQ5VKWmoq+A385xUAgP0NCtSSpgpSwRimGjPIpSjcj9ErAIkMicIbWJBXADlFlqkb+/41cFLglqb56E1pHpWiKutvPITN58G+9QCp4JpQrkAvESjPhSyIeRYIz0BpoqnSBt4uKPPpQunCMYO0X/oQDaCyyMwA04FJ1JXkmEGysY8+fPj9/SfzelEQnkWdoXcl2Xz6bHRZSRlFrtXObyGORrjaTrgb1LKgot4zPjA7gATnVkn2nmhgMcEXnh9HkJnP71WRoASRNwhrYlRwBZf4LWVVRvli52urFYqRNarv+7xsURtMqHQsKl1WOmZU6cPxlxJTojG7gYufoh+jHy6O4/KjwwIOCxgsQAph+KqktGx7uJdYMpI6JSvIt4aTpMpzlAOc7z07w7wdw1EYcUIXdq4or0E/20zdOiRgkYAT3xFT1TIyPlPdR2eYqCMZEtx5ePgx+mGAgYSJdPUkjkFBidy6AuONHWHrGAhjcHn78fOnz1dwe7f97+Pnr/f/7UAP+NpK6T25n+xr7aDd+HGoy0VOEjYg10QIhoQfJ9oPPKPGVkyUI9rGrx5w1QAYE19ZnVd0P3/+6mLUgfKqFGaR2vRf2yJSKWGYxTkTxBcGJkjtfqM0FhZhKriqim30d9gVyjXKsK00GON0SVkm0Td75wL7VaE8FWqlBhzSrPJMSLoyKsQzKKVIUSkcCB4t2GcV7DBmr/UUWAi5Oa8BuTGPy/OsINeEVXh2f+4c4Q0kG40+IwX4IjRhwFuvb58EwpiwYd2IeacQCMCXKuwDAuDHsB0UrBxs61fdhGw5IMbukDcKI0qURJsQppwlXJJoFRGQqGhmc3XUoOjfOBB+LcslktUz8PwZyapRt64xTJklVpFnQPxVYdYgrifhY0UA+YJyjJqnhpFnRBOFB1cSZ0D/ZYlWHYDyWstEbnmoIYHf2cBuunmcfZ8B/m9O7owWVA8mxFEpGE37bnELcYWbRyF9qdEEFO/W1Ga44IiAFmZa4XGJvNEMi9CkQBJJugymQF3UuSSLArl2qZ6xahGEf0LsuTMDQ4L60bgRo46xwxxLpewKRee7iWBDMzq3OtxaDT6UlyBTJNV0jXGGhruIqlhWnFMv+DMk0O8ZWQB1WbRx4DSvAYAD0IrXqJH7ZQILLlCIcM51kubX9tdSmaDW7bOxLyWHwWQFBvINDw1vqQNjegiTMotJ4jGfN22oDpgQ7GncS0DtNK/AAscwN6nFC0B912Q5E0Q9zb3CqIs9AN77HSsOkzzMqcITC7nhwiZmodFa5VDqaWTbTv24WA2mlyLMFvbuWN7KrkSpqNLI076HONf6yKG1HRMke8p4aBJTQ9MkqQSyqighpwxNQBT8eiH8WP4FX8RbAYVYIzzUkB9Mktb8EdXrUg82RSBZBkIvUTbsOdlAYqfKVWGXShOpQdMCr0DbItNO4JV9p7GMK4ii6PvxkCiz5OAwOKWWkmJNM1S7W06JqDTcvb0dUCeYGGYZUTpWZI1RuiR8gSpW1D8aTDGriSbTWcN1VMFSdcpBlLZ6MRG3mcCZ4b4rRbq8TogpEw05pUlRGvQWq6rSFJXKK2bnxIAK60uXh2RhGaA8LqVYSPSuUMAESzyAlb5FkhbziAXuwXYzoImuhmGHk9MDYN9bOk1ha8Xe4q7XS4RfMj7UZg4jhempwSOrBghP5u1tPcoId6a8V5gKng2H65rReg/nhfPaKJyX3xwI9yeAgwJIRbmJBY8fJdWNmtK/X0JG7l2pMXCvBb+2cJuyx+61ZZU0otnqxO3bvoxCcgmXbiK8hTpPnHrz6b2LU6eEqfC2F8zrHw16JhYLm73UNftOVTpSVzklfGYXb5iooXTta6K/b5hQ6RKz6llmgfAAD4+UMUgQWmwgmjxi37VQBakoSoYa9xcafRz/U4JFYH6nxYuG2X9YwAjwHI4ZfX5dx0P0QkLDvQkLNY9d1nrtHyORf0dxnzE3803ONB5eBv6+WmnRTMw0Lv6PUpCJqvmijS3YYzXClWGn8ZsvgC3DStO6ZddU7EQfxo0pcl8IK1sWBAdGNCrbpip1VYKQjX+Zpn+52vA0qhvFnmxxw1Jt29P+FImyZrdtCPnw+hP8VaF337UPPkNGNsdvh0yNt45KDT0VFdeh8LMNqCWjqS/Wn7CmGRpybDlTChbexD5pn+xOsNZpUK40MYnmZUq4yT8vCqI0yosro5kXtgX5ItRiCL4O6ti1LQehn6VfsiEGPWJBeI6rWOT5Ea0N3dbbn6Ifj0Nv45VtSvtOtc6to3EQwBZkyVgfE4souE13qrz7tUsXbE3cs/sbghmImLP3lNj1cG9XiY+fQADtM5NTqXRsRjtapSYpjFPbWjXGcW9fHuVgSZVmA32Ex+O+D3XwmC8nyn3EjqNZhX6MlfbwuXJ1Xt2olaIqTVL/uKTpcgfoh7cKiEQgaYqlr/ugB5lRvgpXKmcIO73qhPIVXFbl60w88u9HwZnCg4q4XgaIySLcfjTiSwaq+YNiUA2lv99DTZpB0npNRy9rDkYVxiRGw4trZ9jFbPviLd7auVAFhrqtjlx1aIPqJMQMc+cGX0JLqgEDCeZCYstRZ6VsGkMvXdGskmlJuDL+3qTddWVL4P6P338e2EMK8m+ne16Xuu9BGz9gibdp6AjGUlIhqQ53Tp6Gshl+LzkmCgikhGc0M8aTCwk5oUysBwzbIaYqlkgywVkY9ByNCbVYbYtndr1D3lv6uJh3rqrn3o7WP7EKE6qeNUrlt5lDItB4HrGgOlZL8u8nIZRROaCz56KUVJRlMQ2fqDoXoUJkp1am40TEqVnIOAki02Wc0IG2z7NJrGKalgy/Ub6ISUnn17o0jZ/KlOqzQEOaN8Etj9ORFX8K7dZpGZdCnhQJx6lUZaDb54w0ln/POz6TVZwykR58NOcwMqngOV3EOT15PWwkBHo6wE/sZTzlLgJ7nFxiinR92uljf7rTO4vWPRndEA2fYdmF+OfJNyccAdERnbQwaS+sUHFzZvEpkDqS7THJKTg56sieYD/uwMpUkKgfhVzVZ+WbVZrwTBtU7gKEJ4FV37WwjysI0OXomnAUlYpEqeISZezf9T/nAnR/hqFEWZdqE7G6WxFWSTnnkW5T1tTC/c4VAyBNCbNFa4T96+1rn8QCMnb3bjwpcLefO448XI2Z4j6vGJupdNwavyECEg1B5VaAAhsiO9BKIjUlLBInBdNJAJsFQahp1mBB4l8VKk827AWKco6rPHaRZsjpBJxBwCvcqAi/lVTOcn9H3+2vcAOWmlvnwLXnjqM+uDWd/dahmoYlCFmFoAUU5Fv3LOjeCIOoS5JitByqm84Bu9OMzoRYVWUtYtVsIxSEcsjcYVcycBq0hVxQpWbemMwJZZgdCDhcWVWJqhJ7noEjmwP5L0wkOzpcVslrVSXQ0HQerLlaq0raEcOKXaMuidYoPc/NiLqmOQF0uKix7RlxLuQqruZJI/Y7H21HSG4ToG7TY0FTKfqdj+FFBrowATJO7ZnuWIl0hbPY6K6TrukY5NyujP724Ze7N1/eQVnJUqgpm/M2QMbOUatYS5KuMIuN6cyO3tpnTdGityg2LXi4JKVduk4YguDMnqc32Yj9or6hbZzD3cPbs/tOewOCyfY6DXAlylzI+gaL+iy33ZntneeuM9qJrDyBTyWJkCZ++ZiyXVTbG2oCR9QPY2mFm3j2GXJ6tyQaHlE2wNmmA31gx3Yf7xNMQw+xWtGyPEryW6sXj0wsItua5V138cAegfyzGct6JSYet87U44M62cGrPt1DLtVc4aZzp+b+oRGb5nVeOfyyTPOvVzz+Ra8RCf2KGzviyMVNhsJ5iZrX7QVBS/Fobwh6+PLH53eeC0W9eBjyhV6eSUs+2sGa8GvS9stOusywsJfxmWjAqNLqqqZuv1FaUr5QV5ASmVFOGNUb9wNqNXYXnwtxkdb9MvRYTu7rvWEtmrF9Cm7T31O13A4ydH2sVfdaoPbhee+Q3dsKOE0/LWKwx99pTjF0eUjrgteL+HzT+GaNkiwQtGYjdD1J0bFEe669LlLaammKJh8L5X8BAAD//9IfWds="
}
