// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package redis

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "redis", asset.ModuleFieldsPri, AssetRedis); err != nil {
		panic(err)
	}
}

// AssetRedis returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/redis.
func AssetRedis() string {
	return "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"
}
