// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package redis

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "redis", asset.ModuleFieldsPri, AssetRedis); err != nil {
		panic(err)
	}
}

// AssetRedis returns asset data.
// This is the base64 encoded gzipped contents of module/redis.
func AssetRedis() string {
	return "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"
}
