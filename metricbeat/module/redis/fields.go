// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package redis

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "redis", asset.ModuleFieldsPri, AssetRedis); err != nil {
		panic(err)
	}
}

// AssetRedis returns asset data.
// This is the base64 encoded zlib format compressed contents of module/redis.
func AssetRedis() string {
	return "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"
}
