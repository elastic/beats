// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
