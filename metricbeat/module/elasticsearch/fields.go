// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
