// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
