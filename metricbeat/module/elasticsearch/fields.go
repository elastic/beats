// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
