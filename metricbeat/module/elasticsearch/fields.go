// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "eJzsXUuP3DiSvtevIHzqAWwBc63DzgLz2PUC3dPY9uxlsdAwpchM2pIok1S6qn/9QtQjKYlPicpKe7JO3eXSF18Eg69gMPgBfYHXZwQF5oJkHDDLzk8ICSIKeEbv/qr+/t0TQjnwjJFaEFo9o397Qgihyd+gkuZNAU8IMSgAc3hGJ/yEEAchSHXiz+h/33FevHuP3p2FqN/9X/tvZ8pEmtHqSE7P6IgL3n5/JFDk/FmK+IAqXMIz4mfMcvkbhMRr3YIz2tT9b9Qv1K9qRkrMXsffD9/igmCu/LbG4jwzRSIlJnOEkY/AAjbgTr8fUEmVw8sqVPll0qIsQCuar2PafniFHOCyouECWKpq4N8iLSZPz5ifV1HqhUvz8c6IiQZykHYBxgmtooma4w1ySixNstrSOlk6zIn3pU1D8mjiNJCqtIZHldTDDRIEKYELXNZPJgEd+Lt/H//yndYpFf4mDD3B/rNRZdqwDFTj+7v46maR/U1j/0mv3t6B5VAhuy8P1m0+QHkORXrS01GawNLFVEo6WpMmE5RBwsnvkJIqPbyKCZ7ZcHY1Rm6JC3/gkdOMJxltKhFVvAF21B5OJVRiD8kW6EE6gyMDfk4EFbhI2z7a2qgkRUHiNoK3oHFkBnYC3v/9fs7hKWbSjUh10nKYOz0yOP4CMJXiF39j081Xv4FwYhM0I2Pzgn1Y2SWOk82ZUSEKuClDl9CR3Myy4ePg1wbYa5rh7AxJCSVlr9H9XpJMggQN7CTzHAu8L7cAMdcx7GsDXNzCcoGibjKWdcwCx7Gdx/3BWoFj/j4rgY6M7yrgOxnhO6XuaXTXM7qXkX3GzkfgdYXWR1iWPNb4Qzf67uMP/a9sImY09rX3lI+PqbsV63di7H553c8DhiFL8XJgJU9dfx2Nlp+4cS9HSSVuyM5T3hgn0OyOIrLRwys7w/SCiwZuaJ8AmdcQ3U39y0/cZG7P067D3o5kmNjrYvcF8vRARMpB3I5smFh1WEkvkAnKbjy6eEudhXXTEte3YxoidLpW+saIAHY7plap07BpxlLcCJoeaVHQbyuDglVTHoCl9JgeMSnabtKhkSonmSaq5xU4zliiMEs65GSKPBtvjXwYlFRAOjm5SPtNWFR6VkFOtrzJMuD82BR7WLBHN5tQdYp1jiCPttK1hxIZSxYA142matjV+AaYQUoBOAeWrj+Fa2V0IMkUZJwRpPE3yxhgDFJ6PU4FPeAizc6QfZHrpK06mQFnkkv8knL4mlZ0q0gN0sKW8fQc7erWdJQeQddRrEXb9qNhKIF8s3WtaINM2ggucJWT6pQywPn2MXMcCxXopIU2DI4qAzmh7URBYhs4dHIPzfHYDtM1MCzadcB8rR/GQgVNRlAfBqbY0wb5LWQyxdO4eV23rbDpSH3q63rAheQhgSSeaCPiQraEhoiiTYCT+H/X2WSgYxHlCJN7jZl2vaw0nDgM3VtOj/AC2S7SFXwdE2X9E3m0uSLbBptxtRhV9rg0NA9yQ/fnUvZ2J7sCeoptRwMBEdzbgjmIlePMNkU1EFNv7ka3yC7czRF2v409RymOa5uies+NLb13XVXyZKdQ0RxWbhWO25I9dKHY9eFdfMGkwIfCeF5kspZMsOlym45tY5UlZq/JCJeEbvTHuAGdmHW7hvbQtQ7Rhoq0o4j2z3zsNmjbxzGU0csUrkXOYIm6dcR5Gp+lHFgjU+36b3yuXQfeQFaJZ2njESFdd6+TUdcRlMNqQzxEc/Kojvl2OxmoGTrfSkaySdccZIQfk4YynCCHmW2RIBLNPzxSOQJ0nWeWrB7jlfSZO1V1meCzWtlJxsudqqvLylmt8D6n/ZH66+I8ff0IZz8ZX8Vn1fi229G/iYi3atajYT8jBx0chxK7gq/1ebThyDOU7QQ/BuHAI7pQvip8DLrxGUYg5ZsxEEpN4sYg6J2VEsqwA45BMTSxIZTpBD8G4cB8gVC+KnwsunvxjEIwLKkhlKaCvobsQPLzpdy0+TtlESfmoujcY5+4RpFbN8gmbBe+RgXdadL8x9Heny9lcsqSq00SWuTJFd+640ceIQoDbeeKNBZ/7QLVl/xA/JU2i7jDFOPeW1Vq8F2360KDVS2rLIeiDShnaEde/LJh2G3VLaFMWqikxC+bJgTJp+GQxyLUYkViVAPLYM2+aEmozny3RZNjh0mWkc9tWjsm3RbUzOommh8WFOcpvgDDp3moxA5sA1cF/HHeZ4YfR9tRnmR1k/T8TokRx9VrMx37DSuBusGZxYu22Krh+ARphSu6MhrfGk0SSHqaiYRMjNF9n464dLc42mZHnn5tqMBpSTIWReUkO/JEYibNGpXRZI+E7acWMabvaz4mFLjuBztC8w2z4NQg7e+SGXbUefyqgayWkA5RedOCdp0GM+yoGsjlxwht7X7rySvcjZ3RRXwaltmnT9JKMFqkNt/2NkC/9fPB9O2UBSmJsC1R1hCUoMa1Sgi9bgCPTK8bwkPpjdEoRjPg97PgWL2Y6xWR3Sp8GSfO8mi+pnTbhfdDU3yJZouvDTS6VZfDEoouScsnkTibgv4MPkMmtIN2KJkBavWpygn0JUXeyMInEHdj4JbLZvvObwO8uYW7e0X3YuOOzWYrxz+T3Wrm68HnXdi5/9fNhpbHXfdk5y4B6l7M3LEJtvIsCWtl4mWKi23Tra5alxnJhIbcGWF2UBvwAtyYoIC8Nibmm5dDyqepJpFlVxSYvrY7U10eyD7pttpx2A5pg0Xe6Sgokg2XVSk82tkzhWdHjqZMnx+oH+qqx2iuuE4ggofQoWZkpStx+AVev1GmzhCawrnDz7SAbo8rpSRGqZqQdgSZJDdL7Mp2xpUrMbVStUVUgxKM59OziayDcPvzC80BffyLVs6s+WNImra8KqyrBqsVd6C0AFyFifvIkTiDNLb8jw5f/v+f9AQKmn2Zrh22UxhAEVT4UECOaDXS+tPSH7Plze+5Y1hk/plRzj8MDs+gLkgm8+HR/K7FtID18GPzOeP9dGT1CuudqOunBZ0Nyr6Xgj0gNHf2r1+RSsBJ0ce8OJATW7QVwvyuolObxceGq4ZBQIsLX9avDX6xuIu1zTLXC2G7zNKa64JOxXU4ustq3kDTW20/vp7KRfQfT1ltt1Bvn8frGstb7F4qLm6yOXbkbvWUsivRtNuxM1iL6jgtoEMMqYPjLWA2BN6hKfRztCxkEs0PdKFi5Fh6IvdirP35BZeA6LFnbJB0XZBqyp5YbBPE5Gf8QsqmRLx1mSqD/ki7JTf20mGt2LNVHwhZsrWViLGQ1jbocNn9e2rSgbOjUbu3STpj79Csv4yt2DacFIa+EXEmXUvauVnLFcRneBXX8YIc/TTsGSD/Q7s0ppL1aNpOnyOjpb9fynAQJ1UGab+WX7Hw9dLsEynhPSIVKvl7JCVO2bfi0RFEdoaFErG7VRDx/5Ay0FUGkreV2u4/Nf39D1XefE2ldjxIX4Osxqo5ASjm+jcBIPZyJFYoXSjKnThhCwL02//tW/75C1BmOiYkNIt6Ld5FmsKaJoJpiGj+CFEYhqudXd9rHyYKh9BmCrrDKNpPN8TkVGdpOPrpxACq9+gV2m78HjHI/6CP1snW9PYNj8gglxyIDKAmXq51TR/TdTZbrN39jpNUr/9vHb7aHqZFtGXccI66n6jAhTLQSj7t3DbQNPDRBlFjGkMrYGoNK4d15rguWjrwD1CQEzkU4G0YTb0FK6Uwq2jQpzYJFR9gkRbaYYbZuXqsbvuxg9ul48bpNr3CHv4h1yvLzmHbbzvZ/CaXy2brrL+av3mpPLNTp73FTO7kiD1o9U9TuumNG1e/0iVbXOxnCYwa3m4iKFNELpZ0UDGSLV+BDFjL/VUiRFjKwQtkTbtaTmtakGyex71hVbc8IkTeCyGB+Tyv1c7GxshyPKrCGrzTQckdqhj3E/LO3yaIDFcZFLK+mgVHfyKp4tSYQSXSVqXl8VcYJc3ZlwpgzrK330lRJkkmbPckHVFZJS7bVBWpTkmFtXthK9okHU+WjNV2Ew0L1/r2OtB2uQFDoBj1caFOoqXnyqPP9tPh6ardmYkzFv0INqTzU8bRGV9g5NRHWeQRu2zCptYr0UfLo58VZg1j+rz+rVPRnztkNdZxPcPq9RmNZZ4t7VUJo0TxzLT82skUow2erOYA4bNUxgAvc087Ivk8FjF8dCZ5voiUmodI64JvS4SbCIIL8rvtiNMaQ2oqzDk5VZCnK9dYGqQ+nrsSqJ3LLrARRGGzojds6EgzLTYalUFBMyxWN2/PYoMemxUIbcWxBZfBruiRqn1Szj62Q5Il5yx+pvcdZP46z66D83TtOSwh750GY8KFZKZKsV5Ob67KiKK0iqfSDr4qok3lAJgzEdbqLJ4wJeF8Lc7U4R5tsBYmRhu4n4z1BDK+/h7yfQ4F6G8ZeR38aStgoii+FKO5nLXNAsB8q7oFQIYW4gtkG1AyLwDZtwJjAKR3zcQAzKBCpgG4gUU8A5DDqvIFAIcWSnVAX6d07xe5AxHhRQCrWtBo0N4Pmnvi3cUFJk9n3brAVBH9C7pbQG17yfUr/rXz4aoTkZxmjZz7kJpRZo4/rZ9s19HrJAXT9FucHCkrsejvkuygzaBPy2NI4ZPEWy2kULMG+yxxgxe4Xmcc9sWtF4R9YesF4VjUPnaej13P9l1P7Pn3u1p87LpPirJUdI/pyHfoXk5GpXJSf3jtErJ7i1gGdLTv3muPPceGvrbauN28OBbffpM90Q5bwh23xpG3Q+gmu+7dNodx97P/utH3x4ZwJeiTlmPCIKMXmBS6fIODcOVNzkVSjGNzaziqC08N6bIXB3tMCllMqL7WEQ/sZkJbJNvJnT6PbVWthk+sAURmOYd62Vws61Zv0Pm/B20lbrL0UDTJT2MnEEnMCiCfJGSXHWJs5U7smXJ9mcTNgltkhPOcAefop4w2RY4OgD7+Ov6SMvlHLR/DnYSeZNwjZJXk9CBZ7xu0YRlEbZ/fJKS9fXqxcdtHFRyjfXqScdtHJWk+6OeC1uvGU5kvtXIojlrz0jYnWMgg06SZ9M3hAJv5uRmu731ruR1JYdmUv/GJHoN2F7kVQw7za2BGX1ympKIoJhq5eVR8di/NZIWyCECd1dcgjVQYrnhB52LetBNuODrvpNMqlYPSOgybGzqseQFGju02LeawJm89p35PEXsYJwhiuvTvK+y97co/fkba43wq5vnUmvI77iintyprjqY8H2iNZ2VXbHBBzOu5vr1NuzVwfLuIjLVoz0TfT3//y9+3zcHmyrn7iXS/52Lb54ex0q9ljaqGhdO1Um8Vq7RqEOcVQJ/ncCy2QgG+o7SUtYEiCh4Eal7fQFGaSakaEu8Ix+np1llsB3nGq4PRffEmXjGXjC+nN5Nra8VIoh85U7vTe6xJH2tSJ//HmvSxJn2sSR9r0seaNIa8x5r0e12TjumHRfKZHp7muAGx2lJdzoYHamOe8P6jIl8bQGWBPtOD+YzXWI5xldD/oocOUi8txwJ32bfjK5iynkBGWa7Nyl2bZ/LrAN5VMoPLcoGm40SqCy5InuZYQFQ+n85qhdNOYS6L+CIg4gwMYZmaTKqTLErReQmi7e/l/8vKKd0JeUUFOgCqMeOQazIHFm7t9TSMRYHZ9+FurS+PucHN5KsvPaq+VT9f5q+sm8dgl0//z8/oY3WkfnXoXFq7NPcgNJDSGgAt0qmTM+A6IZXlZeC9Nx7/CbiW1Uwme41WB/c2Q1WixC9vq0OJX9arUNHq7ZviF1p9iNAcgy5v2SKjKv6tcj0R7Z5g3uF5puMAjlpsyGXx8M5o2pF5e3Hm38ZikAgfaCMQ4Ozcp3ZVCOufLtu2Tgms+XlXoTt4aY3VTrRDcOx+w3Z3FOz63sJcQwQxIKK1Nfq5KrophXqQGy8R7rJFdzSZU3XkbLpbXi7YEtrS3FOI8bbP9rjb9K7H3ldAb+EKt7rOegtd9r8lFMOplQtHm9+T2vMi6PV2n2sy8VDe50Ko9kLdjWWr19duLFreeryxzO7W6o2FTu5i3li2eqPyDUTfWqZyzXNnyUrQp5UkYwXR9iY77XAHeMMdgO1D6K16cbb6OGcQUgPL5gWX501aU1rE22/SYh+b23wFxbG79+X6n/GLTzmCGvCXu+H8K+AvvqTTezK2JF76WXzt/ZNdiP+jC5tZd56vtNlpu3ZPTfjoL4/+Eqe/8IZdyIWanwJ9dJm34/zoMrcmbuoy6hLvlCUZLYpubxRzmTfA2g5i37qy74ZYoJyafzAdtU5yjOcVyyuZbkzk5+5/IwUg/soFlBYxPjbffN85WhceW4DBxnS6yITwBRP5ntWbsxoDeDSdH+ZOaWzphe6KSTHyCz1TNZFf0t010I/zZB9oGS6NgD0aIN5Ak9XNLp5QUJyn+HJK/jjPcXLoOCFnYhBhvqgbnGUiaTg+QbK18Kfeim6mLrYTGUeefG2owIn2CWVPxmiWV+lEslH3oa8KhALXHPK0BkZo7u4GnvqgWYKzcmVhLxGKBKPveMJPjwH3dyNaCUaL1NWurvy/KWpBSku+2BTTYWifuU7dRbT9d2fB84ysrG6SZUzZKMQnhizO7fyT1pTGu2y4212J7tXGKOWFPkMmHN3UY6I4gTm76IdSVFeC5gdVdd9khfvSVS4Qf0xVn+ZAw0vWNci3O9PZw8PBmaX/1AH+U85zmFQcYdT/g3ziWEVSQz1r8ks5MJFSli/e/F97A+OjhERLyOsERCgjQl/9c80NFA3c2P9klTytpA31ChP0N8oQvOCyLlqFGvGhxHU9z7WbrLVIlXZu7FuH0H3VhZQynVHCLjxUVkDd4pISoHeeTT62W7FXcSYcES6TOz0Kv3YZtrGMP7lnJJnYa87GvPz1SWazYgE+sq9Pn6YyC76KW2D13FfvlBm20mW+YT4IhRwdGS2Tp/8PAAD//3USbVQ="
}
