// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
