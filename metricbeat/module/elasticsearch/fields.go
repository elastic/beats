// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded zlib format compressed contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
