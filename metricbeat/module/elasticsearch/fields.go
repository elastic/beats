// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
