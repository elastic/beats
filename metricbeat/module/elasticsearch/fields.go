// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
