// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
