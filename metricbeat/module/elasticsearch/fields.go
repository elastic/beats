// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
