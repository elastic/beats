// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
