// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
