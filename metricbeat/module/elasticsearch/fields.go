// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
