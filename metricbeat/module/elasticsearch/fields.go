// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
