// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "eJzsXV+P27ayf8+nIPapBRIB93Ufbi/QfzcFkganaYGDgwOVlsY2s5SokJSz209/QFKSJZkUKYlaOz3rhyK1V7/5zXA4/DfivEEP8HSPgGIhSSYA8+z4CiFJJIV7dPdj//u7VwjlIDJOKklYeY/+9xVCCA3+BhUsrym8QogDBSzgHh3wK4QESEnKg7hH/7oTgt69RndHKau7f6vfjozLNGPlnhzu0R5ToZ7fE6C5uNci3qASF3CPJClASFxU+luE5FMF9whTgkXzTYXl8R7d/V/3l3cDgIzWQgJP65rkHoyBSZLmwaR5rMUTrOYZpCXLYQB34KxuSfYV6T/b42Dn4eKipCW9Z1tA9d/lgN3TLdwntkuFxFIk6l8z7VVQ9dTYXEqQwZxtrb24UK3/mO3RgecwiengFxeKC6mPhk+YULyjkJIy3T1JEBd/OmFpY9S9SERdFJg/JR1c4sKyt+WZEGEDs67X0GavacQp1D4yq4BjFT9seobZrdU20SyTM2KSsbqUDlyXDccEOeA8jc9Swcam+oUTCRtw1bhryHZ+WeYkg3Vdl5Q5PJLyEM23NWCqRgjVfQtCKVnQfxvVkpZecoZNijl92ELN0fkWMtJN6mrBEFbyyJmUFOLbbIA8z2zdwKBaO8cSR/OPAgrGn1JB/loT31tdO36JwV0c4z/XwJ/SDGdHuFFVewzXKsvhcw1C3rS6A45rFe6m3nE0NU0Rq782v5xBl0e4BmNdhBvyWRTfznY/FFBGnDm5iASrZvisCtg5y9ITpjWItHH59d7eETuDL/V5NAjfj5CnOyJTAXIDtgP8GITNoKpnSHwDvn34GHTjM4xAqmS82MI1NW4MghUjpdyCoQGOQVFIxiFPTTjagOkAPwZhCbxIT5BJxrfg24ePRXcrnlEInoALwsq0wNUGNHvoS8h2m0inYtXi75BFHJgpNe6xzb4GzScXyC5sH75FBdUuUyty5G/vT6ciOWTJ2SYJo3lyxp9c8aOALQoHbe+MNBZ/6wQ1lHxL/InVF/sOQ4xbb1WtwVfdrhcaLGrZ3nQoWkA5goq8+HFF2FXqFlAkCiop8OOqAUHzqQXksQgprEiMKuAZLFkXXRKqstBl0eDYYXDYEnKsMo3J1m1qZlUdzQ8pw3mKT8DxYbxVMg08Bd4X8D/jPtN+PG3HRJJVddLwOyROHF+vzWzsV8wEqhpnE160xla1wAdIS1yyhbvxymiaQNLQTDRk4tzdD+mIl+4WR9tsL9LPNZM4LUjGo6icZHuRaMykXqIyGqyR8PSpRYzhu6yLHfCU7VOguGqCHWH5ilFwaBD1XTLCjjqOnzXQx+ZpuyvvmtAu02CEHVUDPf3ooCe733LyPe7OzugjPtyW2aZPslJyRtMp3w42QLP0C8EM7ZSUFEROTVGWENSgzrnKHHomgEemZ0L4XHrdbhRnGYjbmXAsnsw1iuhuNX8aJ4/6aL5ijK4yxa6mD9Fs8bmG2jbr8liip0ui+CQaZ9WmP4dPkElr0J5LpoVafKpygPFTV7XwAeTNGFhxWW1ffUpwSxbWhG7GxobNaivHP5Nda+bzwedN2Ln5dbWh9XHXLdnZJEDdipkNm9lWbkmMk3vt1rVk9rqzMdt0WGvK6QM8fWG8r7MV23yG2cMNrpaSOKVaNmkiyCS5W6JqE+vm0Aq5GtMqtZdObG8rW9P0AcjY4VxkPYTV5z3LAb39wSpn1PwxJA1bvi+swKoprOJ2jFHA5TxxbwWSR9DG1v8w+Pr/v7MToCx7wNSeRryUQguKoMQ7CjliZUfru0t/zLjXMSZkfs+ZEG9ah+dQUZLpDE80zh4eZu+3nymfo4BzR/MsTtJ0Bjm7f3m0bz/vcQGI7RvGDklnr3tMBXxOS+YkQ5n1kCiAyTv8SIq6QAI+11Bm0OzEKHJd8m3rEA1bccQjvbtMGkYp+/J1NUHL2dMIWunEGGeDZnjfWV0ZWgtDX4g8EmP5aW7nLGmdtSNhHAPiMjyLM7wgR9+0HRnybxEpJdOsO9MaffacFdN+hMb7aYKUGaRqzEp18vpEzt9yzT6SAl4jUqJCvEZa4pC9Eo/2ILMjXCjhpH+gbIdpmh0he9AZNxsQ/1nLQGcZSCfFqe46NP3kpMK/qTMVzptAvj54K4SL3fYVQ3mfWS3QNwcOUL5GT6AM8xpxyL+1D/Jq2AvPxQyYUAjNgeh5VxIUAKcTOSfcxus0H5nEtBfjtbLK91uPcDCxznzWUTkHFAP+Big5kB2FYFKWlPtYlBS0h4f7BRO0xmPeGrgb9plG4YAG0sHnMmRPHTB42fymxxK3dZanR68eR0Z2MtpPmKm/vU4KzMlElkM8WkbWk5/exest01l4a1zsnQZGtVAjLOM9kRdDF5ScDHbEZo9ZP2qECEOW2ZwR5C/7CtRiCt9ocfYds0Bv3u/QraQmHUailQyHgklI2yeiTcGzmnP7Sctax/zeIPdXHLUUEpc5KQ+NPp0F3H1n+j3RKBNeNy0Ej5DVEvJm4qiX8kJiLuvK3k7tA6lpYmheeNzcg+QRy6bztKd5jAt0xCcIU8K1Jpvd/8YA8zte3E2ft4rPxK5P3Be3c5b53qyJF+tzltU6mRr1F5LuvqTJ5UDBvmEcnZ6RNJumfjFAB15PbqCD6p7xAst75Ho4WBVFoV20a85KAY06QT7s9ap4VjbEOrF+YkHJ9lub9sy/6E0Odk9mg6ShajG3PV4lHDJ2gkG+yxUCl2NXfH6cN7PgVqnBFn5fnoKPFyhHQhWSXWwzxbRKXrRL/ZHXgMho7mqXLeRlDuoKnf/RaqtxLW7Wly0xP4BMYp59fNSQZkh2trIRe2TCnvKwWrBCRjjPOQiBvslYTXO0A/T2Q/cl4/qPFB/HtkpDMu7Q3Sc5HMDtvqHvyonaPr9pyOn2acTGbZ++4Bjt05CM2z59kvYDVROdm2torhucXYvwl7leFHovc72XuZ6X/7y5HnpZpb303Jee+xX23HNCS/KJ7daM+wXdYkW2aLbze0k+14AKij6xnXs2KLEj03CR0F/YzkA6UpZYDjR17lEviY0cRE1lallb+lQJUEd9Pv76w69O6VqhZV6/VvSuzh5ApphSZnKW0j0mtOawYZSYNEVzl5Tt5Hxz4ZQdvPcwbSS6u1n1GrL1VU+6izhFr3l1avcUcNOhQ7dA/Zw69nmwE/DbYFJhLon34oDN6PSTDQyDeOtD/Xv7SpI3rXojjyZlVbvfW3sG0cYK14mgRAhSHtIrUmC1TNk+ZTwHnpwj25Vc4YQpydNcTSeuwkCn+qmupseW6wzwm8R1KCp5I6FdVJgLd/s+K5erkThPZjP7PHV9k/vjekwtP7TSTO4anOzLyD5BwJwSENJ9n82z+QHF8jaImCHp+jMNbyheenL48djP8TfuL3SuOQIij8ARbodFxQSMqyOmvtf/rxNJzBlDySTaAdLxJLecvVws94NeK5pQYPT8/OV+c6dcvOW3fmOoQbWvwIf3z7nVDhD2yx/v0Ntyz8IyQn1a+zQPINSSshoAXSxVzRVKpJy4J2Hrbav/B1whxWCwU6V08O8J9pXw35S1sQ4FflyuQsnK6zfFe1a+idAcrS7XbJFOlfBWGc0Skg1e7du34EhhQ67fcTFGs0bm9a+DXFRXQcs2ZeOm1OsYTXp59WPkmzoNgkcipB592/OW2z0JuqHzk6/t5KQ9lPIcb6KIB2qLDsy00AByriIYKMpaytNkXtWRt+kGCSmXtV7iqOEr0BKgxwhqsvLADLiAMigetN5bEY4iIegrc4WpCiBfmy7Wi2TiKOGryRGgxQhqjVOPo/0mKocXoAhQ3j+o9KPsjFoSkWXPqQsRWXRQVYXIMsPqJEQWOqvkQWTZc8oXbCD6uWXOKC+wUnJvJ6i7SDp4beMtKLXNsreFV4vZTULoc/Vi6x2Ps4TY7pocN2nFGI22Xv3lj3dtOpXCXbRktdeCmG62gPXBrzS/pGY7ZQia/Uy4LorjBkOlHH+ib8FxrW/6hCvADzfC+APgh1DK6e0YWtMuwqw9eff/89L+3WzpTS6AXZU6Vve5fyrgl153C4xfet2t9TpR8xM5MfedXCs63m8N9kvfuwXGL33vFvpef+I7qJIUa/L78/fnMmn2zhYw9e0Va9pqFnyWgA7Z0niwdZ5JF3e2yqsZTH42trqZB/13293aF/fxMpIvX8T1Y07Q7X9+IhSQeBISigkxIa1n9oefNU562nnPIaS2xvMRwidMKN7R67Pqdo/ZRWLAkMaazSTXHVB+dJ+EvpTzxaeBlYMmLNs/ZcJ5sg20ubV9PXZngIjXim1UDiy00tvk2ZG12FscfrMqqnnPy+xW9DP1sR3I8BdDC2CMRm9AepGmqIfQ7wucW7ksUB80fidtRmmxhSJCC4AFwA/PoLd3o4D6XSggI3WI6i+6hUINHTLW9ZdqvnJaEQSPcwTtRaucQkIOMOwVrdCq2G6pbjUNOAWKhukBE9VQJm0xBPIWMvFgtTiXRab+popOX8T/t1J120yZ29LVVvXob6LqxD+6Iam597gCfbdrKrHox63Z2c9/2gD/1CMfJqVAGDU/IPVDH6m/j7EkXVoAl+YV0tCxwXsnqoJEl5DnIYkwTqT9jr/58j7Y4LoeqW8Rs0pacStZgn5iHMEjLiqqFKrlmwJX1Tj1czD7ImVqHPtiY2fx61ik0Nm1w4phneajEhmzXbKpvKGdZ5WPbXalozwSgYgphBRwvaO1Akucd+E0k+mbJWNe3PJRJ1djCSGyOZg7R8pDqt/UKONeo9gvQtUUn8GiFdpUPUle/ScAAP//VVOUQA=="
}
