// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
