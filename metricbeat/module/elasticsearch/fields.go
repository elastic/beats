// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
