// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
