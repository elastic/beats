// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
