// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
