// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
