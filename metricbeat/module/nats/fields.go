// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package nats

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "nats", asset.ModuleFieldsPri, AssetNats); err != nil {
		panic(err)
	}
}

// AssetNats returns asset data.
// This is the base64 encoded zlib format compressed contents of module/nats.
func AssetNats() string {
	return "eJzsXc2OI7cRPmeforCnXWB27NyCOQQY2Eg8QWwYXgc5BIFMdZfU9LDJXpItjXzKa+T18iQByWb/kt2tn5Zmk53DHmYk1lfFIuurKpL7AZ7x8ACcaPUGQFPN8AHe/vD488e3bwBSVImkhaaCP8Af3wCA/SR8L9KS4RsAiQyJwgfYkjcACrWmfKse4B9vlWJv7+BtpnXx9p9vADYUWaoe7BgfgJMca6nmRx8KM4oUZVH9JiDb/PxivvQLJIJrQrkCpYmmStNEgc6Ihj1KBIkkhY0UOfzQiGgjaKNQKHco72la/8XDecbDXsj27yOgzM/PGVZDwdO3MSGa5jgQkxKNHRmFxIRoTB/gD/df3389T/5HJ9tIALGBHLWkCSQSifn0AFAiOMek86fQLEwI/cZPg3WLZkzjGEaDCoZqfanrMv6nPzldN+kYbWx+JuD6eTIjGiPpDMOGaE1cua6HU0EUlGvcojwBRZmvURocHSFAOeiMqilkBfKU8u1qfdAYRsYE3/b+sBEyJ/oBQl86CnIl3Q3kbDkNuSx6C2AW1rSUZDDkLLgFSirS3jQDVVAW8E5h8j6IkqYMV68EqMEyBrUvK7yCZ6IguSi5NpNJeSJyM70p0aSvbWCptjHlqBTZDrxr1IIzAI6AjEr0kELePolnbKmch3c4ogcqSr3MhIpSb8Vrn9Aa5GcyoTXe7ojDEKtefYzVQhO2VHhLSimRa3YAkmi6Q0gYRa6HFvsVtdISST5pr1rDNXb8eQTXE3cOYExXoDQ2NXOnBRAwhBf+gvqjlV6xtZmmM1RtK+ThshTFj9pwOQXSMEOF3Ey6Jwm4Q67hnaHB6g6c9e5ASOMoqsxRhgOH/fyltpo/I0dJmBsUyFqU2oayKavGLNsFar4bX+th95wB2hvaen6bizmBILjVYQJ+Z7Vbe18Rai3yaLALb+l9oF7c0ThP2ufPA+kZ7dEWzYd7wGWhNoHHCYN3Fup7KBWmsD4cB9jsJHKH6WpR5EOwXu7RgJUWkmz7pHwpE1fSLmTj22I/2eQkScyYV9zSvMRTtt8NDdkwHtVmwvzGjlyldr5qMIkrHtnaqHPyEl9/MOUeMxWAytY5eaF5mcf3kZBikBBunH9SjbiLL69H3+FPVsQMhKuUhuYTJkjdCZoURGfG01OqnmGfocQ+9EoxRnfBONhCfuDJyixHuRsQ+S76y0zCxgj8yvwDXqpJsKAwcBOSZOgoKsKGMrR2DRLRasFfioq2Sb4jogNyH5Y4xUNpaLqn3GHmJvj07XBbCaMcLYpeEFG7QDof0/LhIhAoSmWyuAZkFTgmwkVGt9mK7AhlZE0Z1YcVUQqXgv7EU2oSOmWhNUo0qA2eD2088O67x/fgQAFhTNiOgF1ihHvt729DRwcBhPKKNTeZvudLjYoGuk1Zp9xoWbI0jBonoY+b/jrE2gfBagY+lUKThuj10cI7r+T7GcCXnQCP3AY9PweXwE8KugT/e/zxqapsdKtG494wj/+Fym5d4JeJ1n2a3fi10S4hjCnISYouQxjXq0GPUopgveO68B0MQG4ho/SJTkyNbmnpiswjKHCKeNwi0AeBtnItiSYYRVH1GtpHQjLf/sq2sW0cd4j2REXF1rBYqXQwRJ+fA7qhgbYm2e1RGDPWvA2AIUmDkOHy2UZDM51UT9BjdmvXiuMueIZV7ZEJM7jHdZYpR2qacOH9KF7ZjGowXdNcDmTdoz8Bra8xr8KcrQ07TpFPRj6ocM9AzMt8pcr1r5gE6fyieL3cI+GmyDC8ocLynlsJd+elZoLeUKn0SuGna1QajCxQ+KlEnjQazDawwzrhC5GQdSTUJnQlQkpUhXCHZLSYsFgdDsjVzGpEnWFVi/TWRo2aa7y6BJcIXkO+Zyzn85U6gTkrpAWLTrAkM4gbbJKRLoCrzU6nqgbLNQDaMy1xS6R1v0zs2wTVHX6zjYLgRj5nultYRu2r8SUWiY9ZV81HJ/lXu0igkU8ivJgH1OKgEIwmh2nW3Y2sEgtGE3IFIvCd2ENO+AG8SLNBPSMWFjKSJKs7zJQD8awb0ybvGs+25zRYLmZ3X5cxw1oFKjdPiSbjMHPysho7CwGX51++ohTijYQxsW9XlGY4ju3Kqe3SJP37Aeyak9l+SeoTNAf5Hh7TDCVax/qWqoTIFH60q+IOJOZiZ7YlwVJUGoQEiRtXG+e4b0ambqVXiT6+JIipcpYZ4pie6WskM0M7uYTmJkZS9DecNsvyjVBvFLNIxQbMxtPaXhqD3AG+FBKVcpbihAuFieCpuv/drEWwKlD6fGr55fxXmlOtAiu6mZu2dmaWJWpC7ZE+n37N1czM5VWYttwad/Pz03SpiYY9ZQzWlt5goZszGt6d7WZMf3OT3EyxAgKqzO1JfHJggqRAeAqZLexMrNtZyfHFIgmjSndS47UoeeoK6LWawfqs38SvWKGNiHw9NdoIwNvUZj2YWdXZaNxdKBNTvb5d1HLzuPltkp6pQvxtKt5nmvJzqHmT5Hm1YUIsYtuhw/p9nSTPXOwZplvMkQ9ajo/J858MqDvYZzTJgHbOFWR0m5k4kwiu6bYUpRrUd2zIyYiCNSKHTcnsmfxaZnpqH7OuEl+pdiX2PUXrrWhc4yld+9vVzfRR/ujaXG08b/CGGNfOFs7cZYwrVPBMwFCa5EW9FonSXfTVAog391NkdIfh2soCC7IWN9ZWeoUrI1zfr1TxhxY8pjtQmkhtNhdb/P897DPk0dD+mhaMLV6H10iHKPeUb60P+KauJiv/xy0Ta8KaEaN5x+tfXdMGiLPZMl+Z+Fdd8Y0uuPOOAQU8tdrddui2tyh0WJcauNBwQD2xpXdrgdObyFI6WR3WCO7+FqwxIaWyLPrgniwoJO6oKBU7tPT2ena2yj3VWeWMj8kz/J1QbX1gXPk9ofoak1mUjIE0C0jp9om6Sr7lkI1xrE1qfcc1uLo7Sswr6tWrOZgp7fijicjeHzteS/ihuuz4/6lbaycM3aiHC6SlP/lLkapNLTTdUX2oX8OYt/Hdvlt4Zmb1pV/42vqFzVwnnWtEn3dZYgR0i7GXkqwZrq4HsZIYhHoPTxtQqO/85XN7H8iSje7rK2vKh4SD8NSE7jJHKLmmrPtXqgBfCkYTql34xkm2XO2kK9fVvI55CkG57u33lve7YoItpSdIdziz/7OhTM/sDVxEh0dfQ3ZRSuxQMlIoS4icTiMlZncGxwD2tj+YX1Vzv54smkssGDlcdb6a8wSV9H4PfF6ub6n8bWCT5Pl0zIYxXiGV9I/22CsGrfbY+4YLVRcIbavGoGpu4XhaniP3vz3YqtyOpiVhdRYmTDZJW6WbLpPq7lLDkamjYNXydC1PmuOdRedl+E5SK82ZblRWHx2184J9epu7ttL1gA5AN4McaFqveLpzFb26WVAzv03QCeVDM/rKo2n5VVRrZbYY0IvyDxtGt5mGd908tuTtGXwPRNvFEs5c4WbHeLr5Un2Wp799/edf/1bV2XV7mqfVQnSdhUanOoKIUg8f/zv5ISA73EXfAHq9T91JzIXG1SC9OfONHTcs0BQE9yTI/NpatkFlN+kgLv8EX+AgQTREnfTKnoUUfjKsEDJ8e/rkyTIjevrcd9pWrtnPjiqpJzxTRosZ4r68dPf5PIz25aW7CQP9j710N9ieXl1sW/R9O4lbWp3l7Vki9tzamfbZEXlR69zwXdYqt5p6kzXH/P6aD91WjQt/vb5U1TlLe16skCJBFd7XEiEjIC/gaExsaUKYE9I8sVfhAVlyBREKlRRlEJVKCMN0tWGCDJ5EqUxYoExwUEk9wohJUXYsqEYtaJfqKvx4JlyMWVkp7OB724MnKWFAPxeb1fb2EZD0hQF9YUBfGNCReK7FgNpAFRP76NWXy+xaRkTrckvTXhfchoIgrkzrcK52oqeZ8eo3aX1MPOlxV4mfVqGXaMchzoAJdYZfleCa/yYi5CwzGm2lDD0uMw10JtgeYEip0pKuS3c7j0MuONVCGgf8209PHyNjjCkCfb7+W/RjMwrsR6gFAy/OqLsh72C0dYtbudO45bfHblEcC31H5O2RGxDHAlflWt0euUVxLHQpRKyNdD3kBkQM+FT59cxcsVtw/Wxy6uql+HhNuqHFCmXkLfNzw60bG0SBLtO1BeuuQRlVOpo0DB/tvAwuN/ZpuHKik2whXHU7z8gwOf3GNuJtY7SDL5yikiTD+2gt/SKZliqZBvumor8IYoSOwMmoXsnh4bTlk2cj1E8WEImwRtsJMAsXd/69lin4G8JFqe9z8nJZm/q+oBsfmvelZwIiu76jVecARblmfWPPyX52aO+rR/D8NwAA//8RbtIU"
}
