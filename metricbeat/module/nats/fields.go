// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package nats

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "nats", asset.ModuleFieldsPri, AssetNats); err != nil {
		panic(err)
	}
}

// AssetNats returns asset data.
// This is the base64 encoded zlib format compressed contents of module/nats.
func AssetNats() string {
	return "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"
}
