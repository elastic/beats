// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package nats

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "nats", asset.ModuleFieldsPri, AssetNats); err != nil {
		panic(err)
	}
}

// AssetNats returns asset data.
// This is the base64 encoded zlib format compressed contents of module/nats.
func AssetNats() string {
	return "eJzsXUmPI7cVvs+veJhLpoGetn1L+hCgYSNxB7FheBzkEAQyVfWk4jSLrCFZUsu/PiBZrJW1SaVlgtahD2qJ73sL38qiPsILHh6BE63eAWiqGT7C+5+ffvv0/h1AjCqSNNNU8Ef46zsAsJ+En0ScM3wHIJEhUfgIW/IOQKHWlG/VI/znvVLs/T28T7TO3v/3HcCGIovVo13jI3CSYknVvPQhM6tIkWfFOwHa5vW7+dLvEAmuCeUKlCaaKk0jBTohGvYoESSSGDZSpPBzRaKOoI5CodyhfKBx+R8P5wUPeyHr7/eAMq/fEiyWgucf+ohommKHTEw0NmhkEiOiMX6EPz98+/DtNPqfHG1DAcQGUtSSRhBJJObTHUCR4Byjxr9CWhgh+r1XgzWLak1jGIaDAoaqfalpMv7VVk4dakMzQ9oZAeu19PyDEZBOMCyEun02tLUAabPiROIvlC/Mt1nREB8hbKgsS9h8fQJhmgXJdt6eouJfgMSxRKUmSjsTUoepc41blPMhmBUnEmeEb5eVuFkxJ9vK1hhFrsdw7FCq9v9OhlIsOg+J0qRHHy1nORGE9YpNTcCeKEcH4x6tKL0ikaY7qg8LYjHrgl+39NcTzETl63Jxtayx8jxdozQ4GkSActAJVaO7B3lM+Xa1PmgMI2OiY+IbIVOiHyH0pVmQC+puISfLcch51orFk7DGuSSdJae5A5RUxG0bpAryDD4ojO56Qh/D1Y0ANViGoIb9RjuZmIiCpCLn1n9SHonUqDcmmrS5DWQNdUwpKkW2HesalOAEgAMgeyl6SCFrH8UztFVOw9td0QMVedgBn6xQkeutuHWFliC/EoWWeJsrdrN9dfPpvhaasHOFtyiXErlmBxeBfT7Sldhn1EpLJOmovEoO19iw5yLxaTJpPvMIf3n4bmpZ98ydrRgpZyiN+I2atQACpkyHf6D+ZIEWNeZEKZsCcytkOLE5Otnzq1YVqAJp6lmF3NiHzydwZ5LAD6Z4V/dAosjY8T04id+DkMa4VJ6ivHvoSxB1ONM4wj/9HTlKwtyiQNYi1zb+BeX7MNNlOZ7O5bHsZqmnb44aCG45GAPf8BBW3pcCWtKbD/XMQaCN1JObD/SaoaGHC58kz5d52nUWl+WlCnYODHywy95BrjCG9WEmR8YnyR3Gq6uy1uXG45rPkdJCkm27VLgUJ20lFWiW0tJtM3e80orYdyln5skdFSA2NISkP+xOxPm9XbkoWH0vZBxYf+itw07Ja/8OhzEpwwQTmsglFBpJyStN87TfnYW4h4hws4NCUmjy2r9PboPZ9s45nluzEq5i2q4HmryGU9kjWMmITsyuial6gX2CEtvYC84Y3aEagX7g0cpUM3LXKXWa8AdUNQP7xhD8xvwBT9VoGjKDNyJRgi4zR9hQhlaw4bS7cB9LJd714sal3Z2ipqA4N+vuzIxggkVM9KnV/GgU5uAsaUFI9bnSDFCjwSdccc8B1o08uTIFbIWyiERj8Seh22RFdoQysqaM6sOKKIXnwv7MY2qKWWWxVVxUsA2ej3U88OHHpztwoIAwJuwM1+4zwsd1cdU0tBOMKC8qhaph4hO4SgSGNVvOjzJ33eytG30WZu82agkfbAsVfsmFJlVm2uYGPngh3N18+u05s7HX63AJ/khGz5HRPv3yXDSTmi27YWualtCG2qNN4MvkDO3KodoXhruIMKYgJTG6kmeYrwo9SimCPabLwncwALmFjNJXbn1sNJt5F0x/HMG52c81ko0w0lr9KJG0R+11WIFh+gxM5tvflFN+h8VO+AuyA7hYrnQwTTi9sHVLA63p2bkp7BXXNCfAkMRBzLB84VOlu46qLxUKwQ0F/bBKT5arPWpnFvfAThPmQD8ZFvZK/V3lfhbG+8mTUC5c2VeclMcujmHJjwFWobpyMm9H4e5MIKbg5Xm6Uvn6M0bByuN8aD3RuWBjZBh2u+fDWhpCQdwdxZ2KekOl0iuFXy7RGDG0QOGXHHlUsTBdxA7siC30hLaZWKsQFwkpUWXCHXvSohLZMFh7ou0ygrWH3E6Qq4V6bbF6eY02UM4R5LrJoZGdL27Kaue00Bdsk8E5c4hJVUJP/noGYPVcdrTMP98IpK5siVsirQkmYl9PZ92hRjsqCSW00zReAzMoYY2vfeF4zuaqPjqeq9XbDhr5KMTFjKAkB5lgNDpMSNKbQVZixmhEht1Vfz9yBtwfxR5Swg/gSRo/9YKYWcxIoqSc9FMOxCfpGFeV2vhUZWx+tJjgfSvHPiBgGCgsPSaajI+6ho6swMLxzHegQukjYUzs6x2oKWZj55Jqe27sP3Vwl8mZHfPEvporMMNTnKBEa1Y/UBURGcMvdlPcg8RU7IxfEixGpUFIkLhx7XyO+2pl6nZ60RjA1wgxVk40XRzjYrqVsqcrS1f6XEWQiv4xYRp8wiR4plCKh02Ma6o5oEog94CvmUSlnKQ44UJhJHg8wQDMPlllKH3ldWaW/klTqlVgy1d6qXNmNCxRE2oPaPpCbRJXK6PFG7Bsl7HLrTFGr71qQE807CljsLYpEma6Oufijd06c/qHM4HKABQQUHlqH9IgByZIDITHkNg+0tiMfEqVvVgkYlTpRpm9FjmPXc8+nAe0OxgXbAp7krfbFu5DeJ12sEczrSEc7PHD+Uo61Zo29stuWoZ/neJptP1/nTb7qcL8KhrtJHpZbZgQZ5Fu12i9eyfRCxd7hvEWU+SdYedT9PI3A+oe9gmNEqCNIxUJ3SYm3ESCa7rNRa467SIbeRKiYI3IYZMz+9RGSfPoErjsOV+oFSb2LUZLfzTM8RivbZd1NX6UP7w3lRufPgztztCDuMN+bZl+oIkaSpM0Kzeje163hr7YAP0bMkZGd6bqvsyGLMkNFlU3uDXCI4OCF39ewmO6d09rG+9i5wnfwT5BPiPAw9V2jG2GhzdJI2FuMV/bIPB92ZxW/p9bJtaEVSv2Vii3v73GBdCf1ObpygTA4inw3h132jn6gKUW7m2Hzr/1Qod1roELDQfUIz692VMc9yLn4snysEZwz+3BGiOSK5tLH9wFO5nEHRW5Yoca357Phq/cU50UxvgUvcC/CdXWBoaZ3xOqL6HMLGcMpNlAStcPAxb0bRpZCcfKpOR3mIOLm6PEtMi9Wt0Jo9KGPZqQ7O2xYbWEH4rnYft5q3mL0MUEsEAB96t/YFTV42/4vowR53D9+dypBcjbhO72JnSVuqPGo0tfeQk/LRuPc0nWDFeXw1hQDGOF5w0o1Pf+QX777JCNys2bbNaUdyMz4bGJcXmKkHNNWfO/VAG+ZoxGVLs4h6NpZeFOV26OeBnxZIJy3XL6NkF2ZbftTkdIdzhx5LKhTE/stS/Cw5NvurpQJXYoGcmUzRwcTwM9WXf6xQD2sj+Ytwrdr0e7zBIzRg4X1Vc1wy+ot6fO0/ahzXmvA5tEL8djNqnVBWoufwGSfQygNm26qxKi4mFDO9swqKpHdXz+miL37x5s/2pH45ywslwRpuyitSZHM51qeqnuytTlYcX2dBNEmuK9Redp+NFLrR4Yny0VH72AnLtTMlvh1YraAANAN51KYZyp/qLg/Ew1C4VKs1W4CZUMEwa0g5Xr+fmqVX4YYIryjxtGt4mGD806L+d13d0B0XaPhCs7OOa4zNIdpvLATNtl/UkVh8ntgZnalK3ddi9jhsh19xbXo69RsssteoPS7V4UKDEVGldL3+jqlrU1DPdpj3nbSrZC1XPRo7+9MDCM7zXFoy4otHjCt62d9/7RtsWe5c5Vmk0g93ZJ4Ndzp9zbJYEjAvo/uySw455uLrCd9WpAiVtanJVtSaLv0rkT5bMjctmwb+uZUGPmxPBab7zYo0idmwah775D89oGbjy87KXTi4O+4u3BRdU6dnNwiunDJa9jLmYn/vKBXBUHQq3oMykiVOEQEgnZA3KBPc3ElkaEOSKVKRR4QOZcQU+qGmV5EJWKCMN4tWGCtGOfF2GGMsLO1GGGEKMsb0hQDUrQesVV+IpXWCyJtVTYwY/XOxenQifNP5tW6546QOkt2XxLNt+SzZl4LpVs1oEqJva9T/Es47UMidqjOtWEX3AbCoK4Eq3DZfGRlmbWK69D9jExmI6MWZvEL6vQ1cfDECfAhLKTUrQ4q99VChnLhBlmLkNX64wDnQi2BRhiqrSk69w9asghFZxqIY0B/uvX5089awwxAu3S6I/ej03oWc5gCzpWnFD34L+DUeetX8qNoTi/PnaLYi70HZHXR25AzAWu8rW6PnKLYi50KUTfgO5yyA2IucA/34DEP0+X90DxWX+FC9H6q3XY6fpC8ECuKQkTv25CEhbI1SSxJRr35HB9SXggV5NEgoTp5PqCKHBcTQ4Myeb6UrAozi6DsYHoiQ3c5gj0q2l0F7980z8lrhooCmXPz6ycWpi5tUFk6HqidoTcFCijSve2l3bTO5sze0tm7eNwpURHyZlwladqDA2gCjb2MJw9nNTAF0Rm7/h+6B1wL9KTUznTYC8/9s8tGqIDcBKqV7J7Svz8bVZD1CsLiERYox3Pm42LO39f2Rj8DeEi1w8peV1Wpv6Qjlsfqh+WmAiI7MI/JhqLfM2O+L1KskN7SUsPnv8FAAD//1dmy60="
}
