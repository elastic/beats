// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package nats

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "nats", asset.ModuleFieldsPri, AssetNats); err != nil {
		panic(err)
	}
}

// AssetNats returns asset data.
// This is the base64 encoded zlib format compressed contents of module/nats.
func AssetNats() string {
	return "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"
}
