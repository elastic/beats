// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
