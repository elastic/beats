// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
