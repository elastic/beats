// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
