// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
