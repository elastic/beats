// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
