// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded zlib format compressed contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
