// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
