// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
