// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
