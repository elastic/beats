// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
