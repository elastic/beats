// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
