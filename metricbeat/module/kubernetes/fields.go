// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
