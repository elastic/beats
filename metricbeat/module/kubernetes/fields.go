// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
