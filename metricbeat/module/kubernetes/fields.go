// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
