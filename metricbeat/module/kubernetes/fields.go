// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
