// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
