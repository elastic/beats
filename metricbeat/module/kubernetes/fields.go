// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
