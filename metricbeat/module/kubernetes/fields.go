// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
