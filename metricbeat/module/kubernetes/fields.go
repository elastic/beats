// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
