// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
