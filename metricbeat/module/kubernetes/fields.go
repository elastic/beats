// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
