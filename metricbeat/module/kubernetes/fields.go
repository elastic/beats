// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
<<<<<<< HEAD
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
=======
	if err := asset.SetFields("metricbeat", "Kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
>>>>>>> Introduce local fields generation
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
<<<<<<< HEAD
	return "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"
=======
	return "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"
>>>>>>> Introduce local fields generation
}
