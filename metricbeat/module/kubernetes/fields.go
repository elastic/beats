// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
