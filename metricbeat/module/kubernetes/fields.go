// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
