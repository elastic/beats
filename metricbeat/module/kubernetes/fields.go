// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
