// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
