// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
