// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
