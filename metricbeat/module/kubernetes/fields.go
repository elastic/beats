// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
