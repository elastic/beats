// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded zlib format compressed contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
