// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
