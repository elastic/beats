// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
