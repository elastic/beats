// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
