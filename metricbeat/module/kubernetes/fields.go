// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "eJzsXc9v67aTv7+/gnindJGvD8ViDzks0KYt9uG1r0GS1x4WC4OWxjYbiVRJyqn3r/+CpH6LpCSLdvIS6ZTI9syHM8PhkEMO/4We4HiDnvINcAoSxAeEJJEJ3KCPn6uXHz8gFIOIOMkkYfQG/fcHhBCqv4BSkJxE6tccEsACbtAOf0BIgJSE7sQN+t+PQiQfr9HHvZTZx/9Tn+0Zl+uI0S3Z3aAtTgR8QGhLIInFjWbwL0RxCh146pHHTHHgLM+KNxZ46vlEt4ynWL1GmMZISCyJkCQSiG1RxmKBUkzxDmK0OTb4rAoKTTRNRDgjAvgBePWJDZQHWEd+P9x9QoZgQ5Tl0xZp+XShNeFx+DsHIVdRQoDK1ldKnE9wfGY87nzmQaueW00PxYzQHZJ7KBkJLwoOguU8gnA47g1liJGVdheAyDfnxOAi34MRsSw8AKTJoqsoyYUEfq2ZigxHcF1J5zsvrgPwTXhY//P4eId6pHsWynKHgSaM7qZxfmQSJ4jm6Qa46t6jjDPBEmh0XIk8DQSjEIBABelrJPJU4TH/ExCIUJSSiDMBEaPxOIAhJVXqqEJ4otA2efQEcvUfVlhs8xdEXcTm5ToQcLQnQrIdxykyUETPU0eMSkzoPE9dDww1vSCOWkjM5VqS1O4XYiy7HwwI6EERRD2ClTSy3MqoK4sRnG7vvqJc4B1YBOFqdhOK/m3vUx8gH9VWIxm3ER4mPsSgyYR229tnYzHv5jMg3+ZzWxmdkvot41CInmJqdSI9tJgyJRYX6EHAI8Eao4B4gGEFi8WwynpOoo1KRDiBeL1NGHZ90QR5NygDHgGVdsOa3AwlYCwQbpBVHlLFPdIMNSwGhJOERVjiTQLqd972JiQl8ptscAxbQiE2LVDs9dvaGV6pN06hILJFOdW/hdgejCRs17WVk13Tr2ynxtgtm+iS8AGTRGE+i1vaHOXp/a9UuI/ISF1r6VRNRRHOcETkUQUlduqVXy2++falYyx5vGSUy3v7UtGOfbxQiPIENr4hRvh+LNymPn8oM7OJup84m1PD2nLwBx6hUClGYwA57DI8IG0aFkAlkBRSxruOw20Hi6NGFgu0CvESAfXrEogRg7O5rz+6/K3RgIkBpsME0LcQY45p9owwszALd6TZFBIX5xmYXktPuX948PeTEvAz40+E7gTYrODtyONP00wkQI6TS4Z3sMV5It124kA+AtGXarVNsUEOPtXYif9i/EJ4NC8nqqr3MCa342drQ6P5u5hX3DMm0ZYkII5CQjp5ivE+Qh67lJpB+HufidklVMTfLzcju8BM46tljlGyh0M7zzl5hf9xD818rKZXpbVBooglCUSy+kTusUSYA9oBBY6lSSCb7IZAPKeUdNpLqCCxDnQ+d9PZaELuwD0FdsjZK91bRcVwQRwixmOhI646HyRJCuZdhrkkUZ5gboSA9lggFkU55y3dlwj1LyVOMwvKvqn5siRbwoVcF6yoI4k7PVfyWAJU7dQ8UM1DvetaVSPIxmcHpFgM4Kln16IXzLgzuF4QvxlShTFAXMXgO3IAapFIxLLjWjIbiDpriAWjIdDda0pjwVWGeMyCyObxmFUTFT/HFCSOscSjLH9AH4YSwkKwiGhH80zk3qsTX1+y98rp4VvlhzgoUD1bdvaBEf6+1Q80A8KoX/LNVJcjmXrSboYvOK107uept1yEZaxJqmH9eU+ifeF1n7GoBx17eF7s+lgfgAvS6XmzQP1hCLYE4t+Ck5Muixnsv1Lydw6IxEAl2RLgSLIGEMuGgyrPDsl2nRD6FBDM/a+IQ8ZBKDTFfiiXQyD0wJIDxGsLxnP5hZKnTS4+D4EzEt5yfrj7hA5t6/Go64nQgGajeCuKIxiHdR604Tw8TM/XX0vKE0QftsN+/fTTAO/mYu2cAL6xRUcvDS67c5bdOY4n9O6cL8revu2NOUuezvYsebrOEy5PtyRiOoCXRIwd+JKI8SRiKEhlN8H8Nf/nTRvfPURADnqp1kWrWlDmnPFzD8r3/7j4VKs1b1shjxxTkRIpX49OHq06qVail6yneUZK85cl4TlRQEuus356wnkPac46BnBtquyCusRu2BrV69gHW+Nx7YWtYpqcOldwTvHbJFUR4Jn2NbvHhGEGQ0zQyB6Oxi6RjOnpaNpSyqdUR7zTRw00cuRA71mMI8YWNMXZvUMR2kegarLKmgKbs4adsfibXMJeZqTmWWak9fMtKeSbm5G+i5zRK8mS9GC90gMmU44vv7cjy2pgrc6TiO6BknFnlQNnyZaEUAf2a+1Xy8GtoJ3t5NNb72NpsNVp3E3uJBDXbz2DaMTy3MsjuqcQbzzFbATCQeh9kVoigvz/4DaEDO9gfbZMpgE1Oqu6vgQad061kgln/xznzOAbR0g0rRFF/TYgx5342GMaJ606VjP20ZsyWn2S9ZpyHGTPvK4C1yHW2CW/Z3EwLj1yleCYsO24PV1qbXoN44mg42umnHZpzelWAqKeKRdrNiy3jQMt6CqOtW8/a8ewq9JtrOyOyNPx/B6sheZH9RVEaO2krL6pA+1AuMxxchlkBTM/sG0sViwDaq3F54XUYlrnLhQxvcZYfaG/nNBayYN4pmE8GKNAgtAITIxmzLakb+s/Up5+hqu5zdkUD4xzrg90rHKxKgJJkkCviGDJxlpGsFNIcEzLy95bsm9VYEQ1EJf8bfD7RSOn6MKPKMrTPMGSHAD12fhAzTPOElRkTgYyXsEbgKBiDtNXQ2l1PFgd74xXYQOqW4NzXUsL2yRlNuCF1qUi7eQuMkYFvJAiDfPxmuyDPacqm+hG6rIPcK4yCxA2Ml0TCmg3tuBQl4FeuZmdchT5S68ELcIC9SpYV8PhkUajBiUv06d8AyZQL8L1I42sq98DQ1uegBg5MgyL/+FIozsF516RrfxvVUe4fOGvI+xDN888nPhoM7ApMI7G5KglHNbPOKG7Cwm3cRf5zYzrL6eE7oKp/YshjRq0O7ofp+4BiDNjVy/ICQYwgPIi1uBvjNskeusGItpDnCfBrgOo6C0LB+9g4aB36PRENvqsern0bjmV3YhN8iRIwx4KO0VYyjSTfcoly8odBOSqequN7rIes6zHDEFa1mOW9ZiJiJb1mGU9ZlmPWdZjlvUYK4YEcAx8RcQ6xUJaZxsbxhLAdDyEP/cg92DiWb1jhAjUoW5bGbJMxk4dI+F7uPy09OfvoWxEc0Y6Zu7fxTtnPWIMDE+P60KZ1wU6YHx9LmPxKuMAqf7p6kAiSdK5/O9YjGqiqCDqQYClVF8Owbck5W11JepCM5cM5R4sVjI8ZvQQz4vebCBGDQ09HDNXR11W+qHL+HVfTXZyHaieeOrbq4i9YJ2QWObhTlZneyzcWwPtDeg2wrfxuGqOZoSuimqv1+gZE6n/kMBTQrG/BD3g2H342zZWjkZZI9RM7PJtxUZqruneeEWohF1nPD0JjOHjOLDaEEy3XGgTzCz9/Wk0hK4qVLe6vKRS2i3HYv8rY9mPOHpi2+01+plzfQzsLk+Sa1T9WXzeV616GK+0rzzQ1S1LswQkxNe1JG4xpUze51SzYPwa/f77b59JkkD8XdH8lbWjTDnsMdRLzHZj1yEHQ9e1y3iS2m/vvuqiX8Kw9Oi9DF8vAolX97faGbbl5DsQMrA7MeMQKVdwg/5r9Z8hkFdYRgrUh30Y3ty9ly6pX7QQmVGia7Ott4lDO3UniaDYzW12yQ8WMigV+PK4a7WVG/VdR2BjyBJ2TGeWY29ENTXBIGFNhi3Hmn1j7oCcPluRGi62gbfWbZaQCI+Pek7CUXI55TbEGAThngojs6KCn2qMddK44FijvhIZRHPOgYTCWJ+cd+itcZqLXg5Wg9cIYFlsrdQdHJTh0wfUPN4VyDmELPUacgriD+5nhbC62mgzrkdXkudwjbY4EaDiz5w+UfZM3f0mp8VSitdIZ01BNMoWH58zDBnXNk6VnS+UrEq+Ns+w+ePIsobJAKgZxQNLTFW1lMvVeW3I/KWClS+uI4Vjr7V9WeQFWn+lG3udERRMd/pw5rlMs6mbjFnqIvcUclY4+mxqt97S6y3kQuwXdvRejw8TFbJPd1Zmeybk+jwcFWkX24mD8DTGxWB5WmmLMy4pdmAWa4r35ZriHdCY0N1qtTp1KTEkunlxR5mZc8egIbFW3Gx4r/touzMzCDWDLQgWZ5Xnu4IzTh2bUN1z2BCF32cc5m3dT1bNFTPg6N7882A5Aj92VvtSuPx9OBwq1X+nYmMbfYz5XEIrbjPSd4QUnNDmqLP+NTid3eIs6eb1mzgTvAGfdwklxW2eJMeS26A0m6MbbPMknGMpKQbzLPbLvJzCGxCcElp1e1d17xi6goxF++/0/qeHogVd67uAq2sJr9LhSd7uzP2jcaqi7B4tm3MJEb2A2+st4fkAluBqB3BuPTdcDaFm6tbn+sLqrpTcAPs61FwqdwSw+piekJCG8nemEmejolAQp2fZhoEm7HewVdKrEie9sx2t7ePL3VLjAPmothr55u6WWq6VspBbCuY1Q6Q3Xt5quUGp/Sw3KI3DM1zt68CSPA2ViTTEggQkvZhhVizyhwHmDESWK22KZ2T/W660mSqg5Uqb+nmXV9p8HXmRzQXujfnFcVtMF8ol7tQxQV4B5t8BAAD//9azCdQ="
}
