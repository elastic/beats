// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded zlib format compressed contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
