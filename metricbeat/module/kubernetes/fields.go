// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
