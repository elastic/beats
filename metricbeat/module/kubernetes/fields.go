// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
