// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", asset.ModuleFieldsPri, AssetKubernetes); err != nil {
		panic(err)
	}
}

// AssetKubernetes returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kubernetes.
func AssetKubernetes() string {
	return "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"
}
