// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kubernetes

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kubernetes", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "eJzsXU1v4zjSvvevKOSUBjw5vXgPOSwwm9nBBv0xgTs9c1gsAloq25xIpIaknPG/X1AflCyRlGzTjtMRT92yXc/DYrFYZJWYn+AZt7fwnC9QMFQoPwAoqhK8hatP5uHVB4AYZSRopihnt/CPDwAAzRcgRSVopH8tMEEi8RZW5AOARKUoW8lb+M+VlMnVDK7WSmVX/9WfrblQTxFnS7q6hSVJJH4AWFJMYnlbAPwEjKTYoaeb2mYaQfA8q55Y6Ol2z5ZcpEQ/BsJikIooKhWNJPAlZDyWkBJGVhjDYtvCuakktNm0GZGMShQbFOYTGykPsY7+fn64h1JgS5V121Vp3brU2vQE/pWjVDdRQpGpna/UPJ9x+8JF3PnMw1a3u0IexJyyFag11kDSy0Kg5LmIMByPeSkZY7DK7hKQ+eKUHFziezQinoUnAIVYuI6SXCoUswJUZiTCmdHORy+vDYpFeFr/fnx8gJ7onoXy3GGgCWer/ZAfuSIJsDxdoNDTe5RxJkQhi7Y3Mk8D0agUIKESPQOZp5pP+X+KEiiDlEaCS4w4i8cRDKmpeowMwwOVtsijZ7ST4os/Mep+VD58CkQb1lQqvhIkhZKI7PnpiDNFKDvOTzfLQiMviJuWigj1pGhq9woxUd0PBhT0TQuEnkCjjSy3AnV1MQLp7uE75JKs0KIIV7fbVIrf9j71EfJJ3ekkFzbBw8KHANogrNvfPozFvNttQL/tdmeMTmv9jgusVM8Is7qQHlvCuFaLi/Qg4ZFkS6PAeADQ0OIx3mQ9J7HLSkYkwfhpmXDi+mIZ4t1ChiJCpuyGtXc3tIKJBNISq/2jjnpUudDwGIEkCY+IIosE9e+8/U1oStWb7HCMS8owLnug4YunjTO81k+cSgG6hJwVv8XYHookfNW1lYNd02e+0ivsku/pksiG0ERzPolbWmzV4fOvHnCfkJFjXWjHdBUikpGIqq0OSezSjV+tvvnja6e05PGa0S7vx9dK4djHK4VqT2DDDbHC9yPhXenHL2XlXqKZJ87uNLSWAv2BRyhWGmgMIYddhidUmIaFUE0kxZSLruNw28HkqMFigVYlniOgviyFlGpwdvfyo8svrQ7sGWA6TADeQow5pttHhJmVWbgjzbaShDzNwnQpM2X+7Zt/ntSEX7h4pmwle2c48EPp44+ymyBRjdNLRla4JHmi3HbiYD6C0Vdz1qZhwIFj1k7yJxdn4lNgOVmZ2cO5Wo7frQ2t5u9iXzHnXMGSJii3UmG69xbjfYQ8di21g/D3vhOza6iKv19vR3aGncZ3yx6jhsfNbpZz7xP+xzW2s7GFPJPURgURTxKMlPlErYkCIhBWyFAQVaaPy+yGBJEzRjv9pUzSuAh0PnWT2bBH7sC9BXbo2avdOy2lRAGBERexLCKuJhukaIrls4wIRaM8IaJUAqyJBB5FuRA7Y18zLH6pSJpZWPZNzZclWVIh1VMFxRwp3P1zJY81Qd3PAgMaDP2sa1WtIJucnJCGGODT7K5lL5hx52+9JL6UoipjwNjE4Cu6QeZkIJBIzkIQmBeS9sXXYCHQH7eZ2Yv4EVNUJCaKjDLuAZWXkoBIySNa+JIXqtYeEv7pYp94+0doxtUI1KR65uo08xEufcfUCwDKmV/z7WyWI196ULnCV5KaMfdjFjUVYYELkXrlflnTaF051hcim3XFHoFXZR1PGxSSdmbeUaR+LwXuKMRfY5PTLsQR8N8Z/StHoDEyRZcU9Xa/RcRSU2BS6ZgsnxLKngOSmX8GgZlAqdlUBU8uh0DZhicbjJ8sHE/lF2pMm158HoJkNLzl/PxwD5td6/EM1zNlAc1GY2uJI4DDOg/Wch4e0NPN11ryHqoPO2G/3/8ygN0+jz0mRm9V4RSnf1MBzlSA42ihC3C+ant727U3UyrO1qZUXKeFS8VNuZYO4SnXYic+5Vo8uRaGSttNMH8t/v6hjW+OEdJNcRrrkmXOjIXg4tSL8vxvF445rfmxB+RRECZTqtTljMmjdUzMYfOU2CzbSG3+OuU091TQlM5sWk857yGT2cQArrrJLqlzFLw2rC6j1LXh4yp3NTFNzpwnOIf4bZrqCPBEpcvuNWEYYAgERs5wGHtEMmamw35HKfdpEfHuv2rAyJUD3rMaR6wtsI+ze4cqtK9AZrPK2wo75gw74/GbPMKedqRlm3akTXtLA/LmdqTvImd0IVmSHq0LfYdknzeU39tbyXphNa+MyO47I+NeRw6cJZsSQh3alzqvpnezgk620S9ovY3rWg4unOkvxIYXtVf4SUVUHu4oOlsT6XZA9g50O+Hz1KY7BRBcVxXwM3ghVBX/UChSyoj/tTwksfu0fMF5gqRbOzWSZcOwALHrd6dgS++C3GdAlClc7ZjpgWRKHMcJn6e+uk3mqPH7oxwhuDas7op6XD1od4LI9WfOs3+S6JkvlzP4lxDFvvkhT5IZmH9Wn/eHVjftE6rRp5xpoDRLUGE8azRxRxjjap6zAoKLGfz225dPNEkw/lh1/+bo6HholpT+2RUVHpv63b3Fp0ApET3DXt+Rdg5GwtxnZ8fb1ZIvfh7glQmMtCO4hf+/+b8QzA2Xkfr0cR+mdyqtn7VuqxxEV+Dn7eJQ1LiXCqqooAwqBvM+9QC+Pu9m2Oq4xnViGGOW8G165AtqrZimERgkqAlbEP3JyrOH0dT+WI6gfcv9QfAlim3NbwwrS2hEgl1BZedRoxxyOVWMkgpPNviogOSX1lCZtFuF2LC+lhlG7uhtOJ0fimOT5XCMW2vnzc5Hq4U1glgWW9+qCk6qxOkTuvCy/JC7H/++4qjouagMb28p4FqJHGflddY69M3ZM+MvzD1vciajNca530iP2v0ULHdwfM4wZEjdOgEYCGNd5x1ju6eDqfZ5gz+IrfPNJ4utDSeT2T5fTX5L568VKX11Hf+MvWXwdZlXbP1VCfacMAQbu+Ig7VSm2R6bjFveYekNyEnpFOeI3dqYy026U/vL1b3H48NEzez+wQq25lI9nQZRi3bB7rkI7wdcLZaHpSFPeJrZoVkdZ87r48wHZDFlq5ubm0NPMUOyOy7uqKIBTwwakqtBs/Gd9dl2d2YYavtcCazeT7ng/XObqHMDfcKNaxvfvYMO8Yrg4WvH485lNWanmqGAefmfb5bXrcbuqV+Ll9+DhGOlvce+3Pii+DM1p1Jade9F8TZ5hQSLbZFqbMgVaT3Bk8SyPzYHnGSBPt8WSovLPEm2NdqgNttrKy7zJJxbqyVevl/bYep0bPZbZ5xjN3S10hqba2bMBTlwjRmP1h+LbPa3ilbX+M/gaXc0YkzoIGd74unZ2L2ZnTsm71IivILX7Z1f+gjW5Br/c+pxbnk62vyRsssabjPILbKXMcz14I4gZnxuUeUdyt2WJeOt0pcQPtdW/gLHOd4mZeV0tdMlKL02XYLSb9P9JxZxU2XndNVHn/B01Yed+HTVRwetZrPhSZ6GSsOWwi5wE/h7ScwZiEx3L1RtunthunvB/oXp7oXjOm27Rd5G5QwXHPw68q94ne+vnVVk/hcAAP//h3gCxA=="
}
