apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: elasticsearch
  name: elasticsearch
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          envFrom:
            - configMapRef:
                name: elasticsearch-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
data:
  discovery.type: "single-node"
  ES_JAVA_OPTS: "-Xms1g -Xmx1g"
  xpack.license.self_generated.type: "trial"
  xpack.security.enabled: 'true'
  xpack.security.authc.api_key.enabled: 'true'
  ELASTIC_USERNAME: "elastic"
  ELASTIC_PASSWORD: "changeme"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch
  namespace: default
spec:
  ports:
    - port: 9200
      protocol: TCP
      targetPort: 9200
  selector:
    app: elasticsearch
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: kibana
  name: kibana
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - image: docker.elastic.co/kibana/kibana:8.0.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          name: kibana
          env:
          - name: ELASTICSEARCH_USERNAME
            value: elastic
          - name: ELASTICSEARCH_PASSWORD
            value: changeme
