# HELP kube_persistentvolume_status_phase The phase indicates if a volume is available, bound to a claim, or released by a claim.
# TYPE kube_persistentvolume_status_phase gauge
kube_persistentvolume_status_phase{persistentvolume="test-pv-pending",phase="Available"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-pending",phase="Bound"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-pending",phase="Failed"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-pending",phase="Pending"} 1
kube_persistentvolume_status_phase{persistentvolume="test-pv-pending",phase="Released"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-bound",phase="Available"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-bound",phase="Bound"} 1
kube_persistentvolume_status_phase{persistentvolume="test-pv-bound",phase="Failed"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-bound",phase="Pending"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-bound",phase="Released"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-released",phase="Available"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-released",phase="Bound"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-released",phase="Failed"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-released",phase="Pending"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-released",phase="Released"} 1
kube_persistentvolume_status_phase{persistentvolume="test-pv-failed",phase="Available"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-failed",phase="Bound"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-failed",phase="Failed"} 1
kube_persistentvolume_status_phase{persistentvolume="test-pv-failed",phase="Pending"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-failed",phase="Released"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-available",phase="Available"} 1
kube_persistentvolume_status_phase{persistentvolume="test-pv-available",phase="Bound"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-available",phase="Failed"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-available",phase="Pending"} 0
kube_persistentvolume_status_phase{persistentvolume="test-pv-available",phase="Released"} 0
# HELP kube_persistentvolume_info Information about persistentvolume.
# TYPE kube_persistentvolume_info gauge
kube_persistentvolume_info{persistentvolume="test-pv-available",storageclass=""} 1
kube_persistentvolume_info{persistentvolume="test-labeled-pv",storageclass=""} 1
kube_persistentvolume_info{persistentvolume="test-unlabeled-pv",storageclass="sc1"} 1
# HELP kube_persistentvolume_labels Kubernetes labels converted to Prometheus labels.
# TYPE kube_persistentvolume_labels gauge
kube_persistentvolume_labels{label_app="mysql-server",persistentvolume="test-labeled-pv"} 1
kube_persistentvolume_labels{persistentvolume="test-unlabeled-pv"} 1
# HELP kube_persistentvolume_capacity_bytes Persistentvolume capacity in bytes.
# TYPE kube_persistentvolume_capacity_bytes gauge
kube_persistentvolume_capacity_bytes{persistentvolume="test-pv"} 5.36870912e+09
kube_persistentvolume_capacity_bytes{persistentvolume="test-labeled-pv"} 5.36870912e+09
kube_persistentvolume_capacity_bytes{persistentvolume="test-unlabeled-pv"} 5.36870912e+09
