// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kafka

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kafka", asset.ModuleFieldsPri, AssetKafka); err != nil {
		panic(err)
	}
}

// AssetKafka returns asset data.
// This is the base64 encoded gzipped contents of module/kafka.
func AssetKafka() string {
	return "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"
}
