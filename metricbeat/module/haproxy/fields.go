// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package haproxy

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "haproxy", asset.ModuleFieldsPri, AssetHaproxy); err != nil {
		panic(err)
	}
}

// AssetHaproxy returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/haproxy.
func AssetHaproxy() string {
	return "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"
}
