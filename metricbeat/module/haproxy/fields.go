// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package haproxy

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "haproxy", asset.ModuleFieldsPri, AssetHaproxy); err != nil {
		panic(err)
	}
}

// AssetHaproxy returns asset data.
// This is the base64 encoded gzipped contents of module/haproxy.
func AssetHaproxy() string {
	return "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"
}
