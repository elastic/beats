// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package vsphere

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "vsphere", asset.ModuleFieldsPri, AssetVsphere); err != nil {
		panic(err)
	}
}

// AssetVsphere returns asset data.
// This is the base64 encoded zlib format compressed contents of module/vsphere.
func AssetVsphere() string {
	return "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"
}
