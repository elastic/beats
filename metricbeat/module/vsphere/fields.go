// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package vsphere

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "vsphere", asset.ModuleFieldsPri, AssetVsphere); err != nil {
		panic(err)
	}
}

// AssetVsphere returns asset data.
// This is the base64 encoded zlib format compressed contents of module/vsphere.
func AssetVsphere() string {
	return "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"
}
