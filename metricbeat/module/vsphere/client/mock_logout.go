// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: logout.go
//
// Generated by this command:
//
//	mockgen -source=logout.go -destination=mock_logout.go -package client -mock_names=Logouter=MockLogouter
//

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockLogouter is a mock of Logouter interface.
type MockLogouter struct {
	ctrl     *gomock.Controller
	recorder *MockLogouterMockRecorder
	isgomock struct{}
}

// MockLogouterMockRecorder is the mock recorder for MockLogouter.
type MockLogouterMockRecorder struct {
	mock *MockLogouter
}

// NewMockLogouter creates a new mock instance.
func NewMockLogouter(ctrl *gomock.Controller) *MockLogouter {
	mock := &MockLogouter{ctrl: ctrl}
	mock.recorder = &MockLogouterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogouter) EXPECT() *MockLogouterMockRecorder {
	return m.recorder
}

// Logout mocks base method.
func (m *MockLogouter) Logout(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Logout", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Logout indicates an expected call of Logout.
func (mr *MockLogouterMockRecorder) Logout(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Logout", reflect.TypeOf((*MockLogouter)(nil).Logout), ctx)
}
