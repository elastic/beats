// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package mongodb

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "mongodb", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
