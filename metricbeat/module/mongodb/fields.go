// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package mongodb

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "mongodb", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
