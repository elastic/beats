// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package memcached

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
<<<<<<< HEAD
	if err := asset.SetFields("metricbeat", "memcached", asset.ModuleFieldsPri, AssetMemcached); err != nil {
=======
	if err := asset.SetFields("metricbeat", "Memcached", asset.ModuleFieldsPri, AssetMemcached); err != nil {
>>>>>>> Introduce local fields generation
		panic(err)
	}
}

// AssetMemcached returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/memcached.
func AssetMemcached() string {
<<<<<<< HEAD
	return "eJzEVj2TGzcM7fUrMGpsz9j6ASrSJE2KpHJ/Q5FYiTmS2BCgZP37DMhdfcerS9a+be7EXT68B+CB/AKveFxDxGiN3aFbAIiXgGtY/jGuLRcADtlm34untIZfFgAAp/cQyZWACwDeUZYXS6nz2zV0JrCuZgxoGNewNQuAzmNwvK4QXyCZiNfh9ZFjr59nKv2w8iD+NdQlHIsRPq0+gvtXyPbcAlwrGJ/b8JcUeu+u1kcSgdL25sV3eOjza8kZk0CfySIz/P4bUAeyw4sCiOHX1WnnQ0KlFx9xxWhn4nWOzpj3mMcI36chu4zG8Uwc/ixxg7nlo+JCYXSwOdb82CFzd0yHVE5QtZQSWg3NqwFqdtrUY7oMBEIgO893nD+rt0pwsMGqjU3EO9y9CQWBEpgQhn0MrmSftpAoRxM0YDYa6g3ihcSE+aQ35Vys1qArYYwFRgRjL+ckDOVinyyCF9gZhg1iUn9mQTehYYuy2nmZv9kuuC+3KEuwFKNJjuFjLRpo1E8D78q19J/B+b13tXrxDnvo2KWN7qUitlIKqYjWzCNwNjJlMhUePTPOL70zPqAbZGf8uyCLFsWawgiJZKfNdjAMQ/t2lFsxX/F4h1vf4fhp06x7hQgoTNXXRrfa4vymvKlpRot+r05s9RyaspVVJYOlkkR1+zqY73UeMONl11DWfU/I4x8hj6/kqR5vz/KargluOmxXm6M832Gdzh/BNTzaNcH9qw4gSCcFFeJcly5TrH2UUA6UX5ubTvNjQsohexFM762GMbk2+P6jDi8Yf9xBVdHHEzUcwadLah8Guz9F8U3Hyf9J9C17FsroAJt96/90JWMFX/WHZ0gEy2i++Vhi3XyHXS0/julNETBtCR34ZLPeFus9RIMdIeGhwoxha/bwqZzh3rdj+OdmjDZ/oRU1WaQrj7VzSAi6jAil17s75WOd86PM26hwOiDO15qM7a+XDwxjqgcsRqnj9GPw0ctLNN+qlk8TqaofvdUB86Srefhsj3oN1ZSo2noy1NZ/hn/V/B7sL69cnvUOSQesM0krp2K0e80WV4t/AgAA//8M190C"
=======
	return "eJzEVr2S2zYQ7vUUO2psz9h6ABVpkiZFUrm/gYClhByAZbALyXr7zAKk/mPqEtrH5k4g8e337f8XeMXjGiJGa+wO3QJAvARcw/KP8Wy5AHDINvtePKU1/LIAADi9h0iuBFwA8I6yvFhKnd+uoTOB9TRjQMO4hg2KWQB0HoPjdQX5AslEvCagjxx7XMM2U+mHkwcMrqEu4ViM8On0Edy/QrbnFuBWw/jcErgk0Xt3dT7SCJS2Ny++w0SfX0vOmAT6TBaZ4fffgDqQHV4EQQy/rk43HxIqvfiIK0Y7E6+zdca8xzxa+D4N2WU0jmfi8GeJG8zNHxUXCqODzbH6xw6eu2M6uHKCqqWU0KppXg1Qs9OmHtOlIRAC2Xm+4/xZ66sEBxus2thEvMPdm1AQKIEJYbjH4Er2aQuJcjRBDWajpt4gXkhMmE96U87Fagy6EkZbYEQw9nJ2whAu9skieIGdYdggJq3QLOgmNGxRVjsv8yfbBfflFmUJlmI0yTF8rEEDtfpp4F25lv4zOL/3rkYv3mEPGbu00b1UxBZKIRXRknkEzkamikyFR8+M80vvjA/oBtkZ/y7IokGxpjBCItlpsh0Mw5C+HeUWzFc83uHWdzh+2jTrXSECClPxtdGttjh/Ud7ENKNFv9dKbPEckrKFVSWDpZJEdfvamO91HjDjZdZQ1ntPyOMfIY+v5Kkeb8/ymq4JbtpsV5ujPJ9hnfYf0SH64NYE96/agCCdFFSIc1y6TLHmUUI5UH5t1XTqHxNSDtmLYHpvNYzJtcb3H3V4wfjjBlVFHydqOIJPl9Q+DOX+FMU3jZP/4+hb9iyU0QG28q3/05WMFXzVH54hESyj+eZjifXyHXYt+bFNb4qAaUfowCebdV+se4gaO0LCQ4UZzVbv4VM+w71vY/jneow2f6EVLbJIVzXW5pAQdBkRSq/bO+Vj7fOjzFurcBoQ57UmY/vr5QPD6OoBi1FqO/0YfPTyEs23quXThKvqR2+tgHnc1Wr4XB51DVWXqNo6GWrqP8O/an4P9pcrl2fdIemAtSdp5FSMZq/Z4mrxTwAAAP//OVbeqg=="
>>>>>>> Introduce local fields generation
}
