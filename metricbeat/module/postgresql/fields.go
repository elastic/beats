// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package postgresql

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "postgresql", asset.ModuleFieldsPri, AssetPostgresql); err != nil {
		panic(err)
	}
}

// AssetPostgresql returns asset data.
// This is the base64 encoded zlib format compressed contents of module/postgresql.
func AssetPostgresql() string {
	return "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"
}
