// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package postgresql

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "postgresql", asset.ModuleFieldsPri, AssetPostgresql); err != nil {
		panic(err)
	}
}

// AssetPostgresql returns asset data.
// This is the base64 encoded zlib format compressed contents of module/postgresql.
func AssetPostgresql() string {
	return "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"
}
