// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package postgresql

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "postgresql", asset.ModuleFieldsPri, AssetPostgresql); err != nil {
		panic(err)
	}
}

// AssetPostgresql returns asset data.
// This is the base64 encoded zlib format compressed contents of module/postgresql.
func AssetPostgresql() string {
	return "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"
}
