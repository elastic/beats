=== jolokia dynamic MetricSet

This is the dynamic metricset of the module jolokia.

[float]
=== Features and configuration
Tested with Jolokia 1.3.4.

Metrics to be collected from each Jolokia instance are defined in the mapping section with an MBean ObjectName and
an array of Attributes to be requested with Elastic field names under which the return values should be saved.

For example: to get the "Uptime" attribute from the "java.lang:type=Runtime" MBean and map it to something like
"uptime" (actually "jolokia.dynamic.uptime", the prexif is added by beats framework) you have to configure following
mapping:
....
 - mbean: 'java.lang:type=Runtime'
   attributes:
      - attr: Uptime
        field: uptime
....

In case the underlying attribute is an object (e.g. see HeapMemoryUsage attribute in java.lang:type=Memory) it`s
structure will be published to Elastic "as is".

It is possible to configure nested metric aliases by using dots in the mapping name, although
nesting depth is limited to 1 at the moment (e.g. gc.cms_collection_time). For examples please refer to the
/jolokia/dynamic/test/config.yml.

All metrics from a single mapping will be POSTed to the defined host/port and sent to Elastic as a single event.
To make it possible to differentiate between metrics from multiple similar applications running on the same host, please
 use fields "application" and "instance" in the config file. These two will be added into the event under jolokia
 .dynamic.application and jolokia.dynamic.instance if set.

It is required to set a namespace in the general module config section.

[float]
=== Limitations
No authentication against Jolokia is supported yet.
No wildcards in Jolokia requests supported yet.
You can get max 30 attributes from the same MBean (see Add function in config.go).
All Jolokia requests have canonicalNaming set to false (details see here: https://jolokia.org/reference/html/protocol
.html).


[float]
=== Exposed fields, Dashboards, Indexes, etc.
Since this is a very general module that can be tailored for any application that exposes it`s metrics over Jolokia, it
comes with no exposed fields description, dashboards or index patterns.
