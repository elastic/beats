// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package beat

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "beat", asset.ModuleFieldsPri, AssetBeat); err != nil {
		panic(err)
	}
}

// AssetBeat returns asset data.
// This is the base64 encoded zlib format compressed contents of module/beat.
func AssetBeat() string {
	return "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"
}
