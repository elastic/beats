// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package beat

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "beat", asset.ModuleFieldsPri, AssetBeat); err != nil {
		panic(err)
	}
}

// AssetBeat returns asset data.
// This is the base64 encoded zlib format compressed contents of module/beat.
func AssetBeat() string {
	return "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"
}
