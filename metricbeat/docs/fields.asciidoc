
////
This file is generated! See etc/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
= Exported Fields

[partintro]

--
This document describes the fields that are exported by Metricbeat. They are
grouped in the following categories:

* <<exported-fields-apache>>
* <<exported-fields-beat>>
* <<exported-fields-common>>
* <<exported-fields-mongodb>>
* <<exported-fields-mysql>>
* <<exported-fields-nginx>>
* <<exported-fields-redis>>
* <<exported-fields-system>>
* <<exported-fields-zookeeper>>

--
[[exported-fields-apache]]
== Apache Fields

Apache HTTPD server metricsets collected from the Apache web server.



[float]
== apache Fields

`apache` contains the metrics that were scraped from Apache.



[float]
== status Fields

`status` contains the metrics that were scraped from the Apache status page.



[float]
=== apache.status.hostname

type: keyword

Apache hostname.


[float]
=== apache.status.total_accesses

type: integer

Total number of access requests.


[float]
=== apache.status.total_kbytes

type: integer

Total number of kilobytes served.


[float]
=== apache.status.requests_per_sec

type: half_float

Requests per second.


[float]
=== apache.status.bytes_per_sec

type: float

Bytes per second.


[float]
=== apache.status.bytes_per_request

type: half_float

Bytes per request.


[float]
=== apache.status.workers.busy

type: integer

Number of busy workers.


[float]
=== apache.status.workers.idle

type: integer

Number of idle workers.


[float]
== uptime Fields

Uptime stats.



[float]
=== apache.status.uptime.server_uptime

type: integer

Server uptime in seconds.


[float]
=== apache.status.uptime.uptime

type: integer

Server uptime.


[float]
== cpu Fields

CPU stats.



[float]
=== apache.status.cpu.load

type: scaled_float

CPU Load.


[float]
=== apache.status.cpu.user

type: scaled_float

CPU user load.


[float]
=== apache.status.cpu.system

type: scaled_float

System cpu.


[float]
=== apache.status.cpu.children_user

type: scaled_float

CPU of children user.


[float]
=== apache.status.cpu.children_system

type: scaled_float

CPU of children system.


[float]
== connections Fields

Connection stats.



[float]
=== apache.status.connections.total

type: integer

Total connections.


[float]
=== apache.status.connections.async.writing

type: integer

Async connection writing.


[float]
=== apache.status.connections.async.keep_alive

type: integer

Async keeped alive connections.


[float]
=== apache.status.connections.async.closing

type: integer

Async closed connections.


[float]
== load Fields

Load averages.



[float]
=== apache.status.load.1

type: half_float

Load average for the last minute.


[float]
=== apache.status.load.5

type: half_float

Load average for the last 5 minutes.


[float]
=== apache.status.load.15

type: half_float

Load average for the last 15 minutes.


[float]
== scoreboard Fields

Scoreboard metrics.



[float]
=== apache.status.scoreboard.starting_up

type: integer

Starting up.


[float]
=== apache.status.scoreboard.reading_request

type: integer

Reading requests.


[float]
=== apache.status.scoreboard.sending_reply

type: integer

Sending Reply.


[float]
=== apache.status.scoreboard.keepalive

type: integer

Keep alive.


[float]
=== apache.status.scoreboard.dns_lookup

type: integer

Dns Lookups.


[float]
=== apache.status.scoreboard.closing_connection

type: integer

Closing connections.


[float]
=== apache.status.scoreboard.logging

type: integer

Logging


[float]
=== apache.status.scoreboard.gracefully_finishing

type: integer

Gracefully finishing.


[float]
=== apache.status.scoreboard.idle_cleanup

type: integer

Idle cleanups.


[float]
=== apache.status.scoreboard.open_slot

type: integer

Open slots.


[float]
=== apache.status.scoreboard.waiting_for_connection

type: integer

Waiting for connections.


[float]
=== apache.status.scoreboard.total

type: integer

Total.


[[exported-fields-beat]]
== Beat Fields

Contains common beat fields available in all event types.



[float]
=== beat.name

The name of the Beat sending the log messages. If the shipper name is set in the configuration file, then that value is used. If it is not set, the hostname is used.


[float]
=== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


[float]
=== @timestamp

type: date

example: 2015-01-24 14:06:05.071000

format: YYYY-MM-DDTHH:MM:SS.milliZ

required: True

The timestamp when the event log record was generated.


[float]
=== tags

Arbitrary tags that can be set per Beat and per transaction type.


[float]
=== fields

type: dict

Contains user configurable fields.


[[exported-fields-common]]
== Common Fields

Contains common fields available in all event types.



[float]
=== metricset.module

The name of the module that generated the event.


[float]
=== metricset.name

The name of the metricset that generated the event.


[float]
=== metricset.host

Hostname of the machine from which the metricset was collected. This field may not be present when the data was collected locally.


[float]
=== metricset.rtt

type: long

required: True

Event round trip time in microseconds.


[float]
=== type

example: metricsets

required: True

The document type. Always set to "metricsets".


[[exported-fields-mongodb]]
== MongoDB Fields

Metrics collected from MongoDB servers.



[float]
== mongodb Fields

MongoDB metrics.



[float]
== status Fields

MongoDB server status metrics.



[float]
=== mongodb.status.version

type: keyword

Instance version.


[float]
=== mongodb.status.uptime.ms

type: long

Instance uptime in milliseconds.


[float]
=== mongodb.status.local_time

type: date

Local time as reported by the MongoDB instance.


[float]
=== mongodb.status.asserts.regular

type: long

Number of regular assertions produced by the server.


[float]
=== mongodb.status.asserts.warning

type: long

Number of warning assertions produced by the server.


[float]
=== mongodb.status.asserts.msg

type: long

Number of msg assertions produced by the server.


[float]
=== mongodb.status.asserts.user

type: long

Number of user assertions produced by the server.


[float]
=== mongodb.status.asserts.rollovers

type: long

Number of rollovers assertions produced by the server.


[float]
== background_flushing Fields

Data about the process MongoDB uses to write data to disk. This data is only available for instances that use the MMAPv1 storage engine.



[float]
=== mongodb.status.background_flushing.flushes

type: long

A counter that collects the number of times the database has flushed all writes to disk.


[float]
=== mongodb.status.background_flushing.total.ms

type: long

The total number of milliseconds (ms) that the mongod processes have spent writing (i.e. flushing) data to disk. Because this is an absolute value, consider the value of `flushes` and `average_ms` to provide better context for this datum.


[float]
=== mongodb.status.background_flushing.average.ms

type: long

The average time spent flushing to disk per flush event.


[float]
=== mongodb.status.background_flushing.last.ms

type: long

The amount of time, in milliseconds, that the last flush operation took to complete.


[float]
=== mongodb.status.background_flushing.last_finished

type: date

A timestamp of the last completed flush operation.


[float]
== connections Fields

Data regarding the current status of incoming connections and availability of the database server.



[float]
=== mongodb.status.connections.current

type: long

The number of connections to the database server from clients. This number includes the current shell session. Consider the value of `available` to add more context to this datum.


[float]
=== mongodb.status.connections.available

type: long

The number of unused available incoming connections the database can provide.


[float]
=== mongodb.status.connections.total_created

type: long

A count of all incoming connections created to the server. This number includes connections that have since closed.


[float]
== journaling Fields

Data about the journaling-related operations and performance. Journaling information only appears for mongod instances that use the MMAPv1 storage engine and have journaling enabled.



[float]
=== mongodb.status.journaling.commits

type: long

The number of transactions written to the journal during the last journal group commit interval.


[float]
=== mongodb.status.journaling.journaled.mb

type: long

The amount of data in megabytes (MB) written to journal during the last journal group commit interval.


[float]
=== mongodb.status.journaling.write_to_data_files.mb

type: long

The amount of data in megabytes (MB) written from journal to the data files during the last journal group commit interval.


[float]
=== mongodb.status.journaling.compression

type: long

The compression ratio of the data written to the journal.


[float]
=== mongodb.status.journaling.commits_in_write_lock

type: long

Count of the commits that occurred while a write lock was held. Commits in a write lock indicate a MongoDB node under a heavy write load and call for further diagnosis.


[float]
=== mongodb.status.journaling.early_commits

type: long

The number of times MongoDB requested a commit before the scheduled journal group commit interval.


[float]
== times Fields

Information about the performance of the mongod instance during the various phases of journaling in the last journal group commit interval.



[float]
=== mongodb.status.journaling.times.dt.ms

type: long

The amount of time over which MongoDB collected the times data. Use this field to provide context to the other times field values.


[float]
=== mongodb.status.journaling.times.prep_log_buffer.ms

type: long

The amount of time spent preparing to write to the journal. Smaller values indicate better journal performance.


[float]
=== mongodb.status.journaling.times.write_to_journal.ms

type: long

The amount of time spent actually writing to the journal. File system speeds and device interfaces can affect performance.


[float]
=== mongodb.status.journaling.times.write_to_data_files.ms

type: long

The amount of time spent writing to data files after journaling. File system speeds and device interfaces can affect performance.


[float]
=== mongodb.status.journaling.times.remap_private_view.ms

type: long

The amount of time spent remapping copy-on-write memory mapped views. Smaller values indicate better journal performance.


[float]
=== mongodb.status.journaling.times.commits.ms

type: long

The amount of time spent for commits.


[float]
=== mongodb.status.journaling.times.commits_in_write_lock.ms

type: long

The amount of time spent for commits that occurred while a write lock was held.


[float]
== extra_info Fields

Platform specific data.



[float]
=== mongodb.status.extra_info.heap_usage.bytes

type: long

format: bytes

The total size in bytes of heap space used by the database process. Only available on Unix/Linux.


[float]
=== mongodb.status.extra_info.page_faults

type: long

The total number of page faults that require disk operations. Page faults refer to operations that require the database server to access data that isn't available in active memory.


[float]
== network Fields

Platform specific data.



[float]
=== mongodb.status.network.in.bytes

type: long

format: bytes

The amount of network traffic, in bytes, received by this database.


[float]
=== mongodb.status.network.out.bytes

type: long

format: bytes

The amount of network traffic, in bytes, sent from this database.


[float]
=== mongodb.status.network.requests

type: long

The total number of requests received by the server.


[float]
== opcounters Fields

An overview of database operations by type.



[float]
=== mongodb.status.opcounters.insert

type: long

The total number of insert operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.query

type: long

The total number of queries received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.update

type: long

The total number of update operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.delete

type: long

The total number of delete operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.getmore

type: long

The total number of getmore operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.command

type: long

The total number of commands issued to the database since the mongod instance last started.


[float]
== opcounters_replicated Fields

An overview of database replication operations by type.



[float]
=== mongodb.status.opcounters_replicated.insert

type: long

The total number of replicated insert operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.query

type: long

The total number of replicated queries received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.update

type: long

The total number of replicated update operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.delete

type: long

The total number of replicated delete operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.getmore

type: long

The total number of replicated getmore operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.command

type: long

The total number of replicated commands issued to the database since the mongod instance last started.


[float]
== memory Fields

Data about the current memory usage of the mongod server.



[float]
=== mongodb.status.memory.bits

type: long

Either 64 or 32, depending on which target architecture was specified during the mongod compilation process.


[float]
=== mongodb.status.memory.resident.mb

type: long

The amount of RAM, in megabytes (MB), currently used by the database process.


[float]
=== mongodb.status.memory.virtual.mb

type: long

The amount, in megabytes (MB), of virtual memory used by the mongod process.


[float]
=== mongodb.status.memory.mapped.mb

type: long

The amount of mapped memory, in megabytes (MB), used by the database. Because MongoDB uses memory-mapped files, this value is likely to be to be roughly equivalent to the total size of your database or databases.


[float]
=== mongodb.status.memory.mapped_with_journal.mb

type: long

The amount of mapped memory, in megabytes (MB), including the memory used for journaling.


[float]
=== mongodb.status.write_backs_queued

type: boolean

True when there are operations from a mongos instance queued for retrying.


[float]
=== mongodb.status.storage_engine.name

type: keyword

A string that represents the name of the current storage engine.


[[exported-fields-mysql]]
== MySQL Fields

MySQL server status metrics collected from MySQL.



[float]
== mysql Fields

`mysql` contains the metrics that were obtained from MySQL query.



[float]
== status Fields

`status` contains the metrics that were obtained by the status SQL query.



[float]
== aborted Fields

Aborted status fields.



[float]
=== mysql.status.aborted.clients

type: integer

The number of connections that were aborted because the client died without closing the connection properly.


[float]
=== mysql.status.aborted.connects

type: integer

The number of failed attempts to connect to the MySQL server.


[float]
== binlog Fields




[float]
=== mysql.status.binlog.cache.disk_use

type: integer



[float]
=== mysql.status.binlog.cache.use

type: integer



[float]
== bytes Fields

Bytes stats.



[float]
=== mysql.status.bytes.received

type: integer

format: bytes

The number of bytes received from all clients.


[float]
=== mysql.status.bytes.sent

type: integer

format: bytes

The number of bytes sent to all clients.


[float]
=== mysql.status.connections

type: integer



[float]
== created Fields




[float]
=== mysql.status.created.tmp.disk_tables

type: integer



[float]
=== mysql.status.created.tmp.files

type: integer



[float]
=== mysql.status.created.tmp.tables

type: integer



[float]
== delayed Fields




[float]
=== mysql.status.delayed.errors

type: integer



[float]
=== mysql.status.delayed.insert_threads

type: integer



[float]
=== mysql.status.delayed.writes

type: integer



[float]
=== mysql.status.flush_commands

type: integer



[float]
=== mysql.status.max_used_connections

type: integer



[float]
== open Fields




[float]
=== mysql.status.open.files

type: integer



[float]
=== mysql.status.open.streams

type: integer



[float]
=== mysql.status.open.tables

type: integer



[float]
=== mysql.status.opened_tables

type: integer



[[exported-fields-nginx]]
== Nginx Fields

Nginx server status metrics collected from various modules.



[float]
== nginx Fields

`nginx` contains the metrics that were scraped from nginx.



[float]
== stubstatus Fields

`stubstatus` contains the metrics that were scraped from the ngx_http_stub_status_module status page.



[float]
=== nginx.stubstatus.hostname

type: keyword

Nginx hostname.


[float]
=== nginx.stubstatus.active

type: integer

The current number of active client connections including Waiting connections.


[float]
=== nginx.stubstatus.accepts

type: integer

The total number of accepted client connections.


[float]
=== nginx.stubstatus.handled

type: integer

The total number of handled client connections.


[float]
=== nginx.stubstatus.dropped

type: integer

The total number of dropped client connections.


[float]
=== nginx.stubstatus.requests

type: integer

The total number of client requests.


[float]
=== nginx.stubstatus.current

type: integer

The current number of client requests.


[float]
=== nginx.stubstatus.reading

type: integer

The current number of connections where Nginx is reading the request header.


[float]
=== nginx.stubstatus.writing

type: integer

The current number of connections where Nginx is writing the response back to the client.


[float]
=== nginx.stubstatus.waiting

type: integer

The current number of idle client connections waiting for a request.


[[exported-fields-redis]]
== Redis Fields

Redis metrics collected from Redis.



[float]
== redis Fields

`redis` contains the information and statistics from Redis.



[float]
== info Fields

`info` contains the information and statistics returned by the `INFO` command.



[float]
== clients Fields

Redis client stats.



[float]
=== redis.info.clients.connected

type: integer

Number of client connections (excluding connections from slaves).


[float]
=== redis.info.clients.longest_output_list

type: integer

Longest output list among current client connections.


[float]
=== redis.info.clients.biggest_input_buf

type: integer

Biggest input buffer among current client connections.


[float]
=== redis.info.clients.blocked

type: integer

Number of clients pending on a blocking call (BLPOP, BRPOP, BRPOPLPUSH).


[float]
== cluster Fields

Redis cluster information.



[float]
=== redis.info.cluster.enabled

type: boolean

Indicates that the Redis cluster is enabled.


[float]
== cpu Fields

Redis CPU stats



[float]
=== redis.info.cpu.used.sys

type: half_float

System CPU consumed by the Redis server.


[float]
=== redis.info.cpu.used.sys_children

type: half_float

User CPU consumed by the Redis server.


[float]
=== redis.info.cpu.used.user

type: half_float

System CPU consumed by the background processes.


[float]
=== redis.info.cpu.used.user_children

type: half_float

User CPU consumed by the background processes.


[float]
== memory Fields

Redis CPU stats.



[float]
=== redis.info.memory.used.value

type: integer

Used memory.


[float]
=== redis.info.memory.used.rss

type: integer

Used memory rss.


[float]
=== redis.info.memory.used.peak

type: integer

Used memory peak.


[float]
=== redis.info.memory.used.lua

type: integer

Used memory lua.


[float]
=== redis.info.memory.allocator

type: keyword

Memory allocator.


[float]
== persistence Fields

Redis CPU stats.



[float]
=== redis.info.persistence.loading

type: boolean

None

[float]
=== redis.info.persistence.rdb.changes_since_last_save

type: integer

None

[float]
=== redis.info.persistence.rdb.bgsave_in_progress

type: boolean

None

[float]
=== redis.info.persistence.rdb.last_save_time

type: integer

None

[float]
=== redis.info.persistence.rdb.last_bgsave_status

type: keyword

None

[float]
=== redis.info.persistence.rdb.last_bgsave_time_sec

type: integer

None

[float]
=== redis.info.persistence.rdb.current_bgsave_time_sec

type: integer

None

[float]
=== redis.info.persistence.aof.enabled

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite_in_progress

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite_scheduled

type: boolean

None

[float]
=== redis.info.persistence.aof.last_rewrite_time_sec

type: integer

None

[float]
=== redis.info.persistence.aof.current_rewrite_time_sec

type: integer

None

[float]
=== redis.info.persistence.aof.last_bgrewrite_status

type: keyword

None

[float]
=== redis.info.persistence.aof.last_write_status

type: keyword

None

[float]
== replication Fields

Replication



[float]
=== redis.info.replication.role

type: keyword

None

[float]
=== redis.info.replication.connected_slaves

type: integer

None

[float]
=== redis.info.replication.master_offset

type: integer

None

[float]
=== redis.info.replication.backlog.active

type: integer

None

[float]
=== redis.info.replication.backlog.size

type: integer

None

[float]
=== redis.info.replication.backlog.first_byte_offset

type: integer

None

[float]
=== redis.info.replication.backlog.histlen

type: integer

None

[float]
== server Fields

Server info



[float]
=== redis.info.server.version

type: keyword

None

[float]
=== redis.info.server.git_sha1

type: keyword

None

[float]
=== redis.info.server.git_dirty

type: keyword

None

[float]
=== redis.info.server.build_id

type: keyword

None

[float]
=== redis.info.server.mode

type: keyword

None

[float]
=== redis.info.server.os

type: keyword

None

[float]
=== redis.info.server.arch_bits

type: keyword

None

[float]
=== redis.info.server.multiplexing_api

type: keyword

None

[float]
=== redis.info.server.gcc_version

type: keyword

None

[float]
=== redis.info.server.process_id

type: integer

None

[float]
=== redis.info.server.run_id

type: keyword

None

[float]
=== redis.info.server.tcp_port

type: integer

None

[float]
=== redis.info.server.uptime

type: integer

None

[float]
=== redis.info.server.hz

type: integer

None

[float]
=== redis.info.server.lru_clock

type: integer

None

[float]
=== redis.info.server.config_file

type: keyword

None

[float]
== stats Fields

Redis stats.



[float]
=== redis.info.stats.connections.received

type: integer

None

[float]
=== redis.info.stats.connections.rejected

type: integer

None

[float]
=== redis.info.stats.total_commands_processed

type: integer

None

[float]
=== redis.info.stats.total_net_input_bytes

type: integer

None

[float]
=== redis.info.stats.total_net_output_bytes

type: integer

None

[float]
=== redis.info.stats.instantaneous_ops_per_sec

type: integer

None

[float]
=== redis.info.stats.instantaneous_input_kbps

type: float

None

[float]
=== redis.info.stats.instantaneous_output_kbps

type: float

None

[float]
=== redis.info.stats.sync.full

type: integer

None

[float]
=== redis.info.stats.sync.partial_ok

type: integer

None

[float]
=== redis.info.stats.sync.partial_err

type: integer

None

[float]
=== redis.info.stats.keys.expired

type: integer

None

[float]
=== redis.info.stats.keys.evicted

type: integer

None

[float]
=== redis.info.stats.keyspace.hits

type: integer

None

[float]
=== redis.info.stats.keyspace.misses

type: integer

None

[float]
=== redis.info.stats.pubsub_channels

type: integer

None

[float]
=== redis.info.stats.pubsub_patterns

type: integer

None

[float]
=== redis.info.stats.latest_fork_usec

type: integer

None

[float]
=== redis.info.stats.migrate_cached_sockets

type: integer

None

[float]
== keyspace Fields

`keyspace` contains the information about the keyspaces returned by the `INFO` command.



[float]
=== redis.keyspace.id

type: keyword

Keyspace identifier.


[float]
=== redis.keyspace.avg_ttl

type: long

Average ttl.


[float]
=== redis.keyspace.keys

type: long

Number of keys in the keyspace.


[float]
=== redis.keyspace.expires

type: long



[[exported-fields-system]]
== System Fields

System status metrics, like CPU and memory usage, that are collected from the operating system.



[float]
== system Fields

`system` contains local system metrics.



[float]
== core Fields

`system-core` contains local CPU core stats.



[float]
=== system.core.id

type: integer

CPU Core number.


[float]
=== system.core.user.pct

type: scaled_float

format: percent

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


[float]
=== system.core.user.ticks

type: long

The amount of CPU time spent in user space.


[float]
=== system.core.system.pct

type: scaled_float

format: percent

The percentage of CPU time spent in kernel space.


[float]
=== system.core.system.ticks

type: long

The amount of CPU time spent in kernel space.


[float]
=== system.core.nice.pct

type: scaled_float

format: percent

The percentage of CPU time spent on low-priority processes.


[float]
=== system.core.nice.ticks

type: long

The amount of CPU time spent on low-priority processes.


[float]
=== system.core.idle.pct

type: scaled_float

format: percent

The percentage of CPU time spent idle.


[float]
=== system.core.idle.ticks

type: long

The amount of CPU time spent idle.


[float]
=== system.core.iowait.pct

type: scaled_float

format: percent

The percentage of CPU time spent in wait (on disk).


[float]
=== system.core.iowait.ticks

type: long

The amount of CPU time spent in wait (on disk).


[float]
=== system.core.irq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.core.irq.ticks

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.core.softirq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling software interrupts.


[float]
=== system.core.softirq.ticks

type: long

The amount of CPU time spent servicing and handling software interrupts.


[float]
=== system.core.steal.pct

type: scaled_float

format: percent

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== system.core.steal.ticks

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
== cpu Fields

`cpu` contains local CPU stats.



[float]
=== system.cpu.user.pct

type: scaled_float

format: percent

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


[float]
=== system.cpu.system.pct

type: scaled_float

format: percent

The percentage of CPU time spent in kernel space.


[float]
=== system.cpu.nice.pct

type: scaled_float

format: percent

The percentage of CPU time spent on low-priority processes.


[float]
=== system.cpu.idle.pct

type: scaled_float

format: percent

The percentage of CPU time spent idle.


[float]
=== system.cpu.iowait.pct

type: scaled_float

format: percent

The percentage of CPU time spent in wait (on disk).


[float]
=== system.cpu.irq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.cpu.softirq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling software interrupts.


[float]
=== system.cpu.steal.pct

type: scaled_float

format: percent

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== system.cpu.user.ticks

type: long

The amount of CPU time spent in user space.


[float]
=== system.cpu.system.ticks

type: long

The amount of CPU time spent in kernel space.


[float]
=== system.cpu.nice.ticks

type: long

The amount of CPU time spent on low-priority processes.


[float]
=== system.cpu.idle.ticks

type: long

The amount of CPU time spent idle.


[float]
=== system.cpu.iowait.ticks

type: long

The amount of CPU time spent in wait (on disk).


[float]
=== system.cpu.irq.ticks

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.cpu.softirq.ticks

type: long

The amount of CPU time spent servicing and handling software interrupts.


[float]
=== system.cpu.steal.ticks

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
== diskio Fields

`disk` contains disk IO metrics collected from the operating system.



[float]
=== system.diskio.name

type: keyword

example: sda1

The disk name.


[float]
=== system.diskio.serial_number

type: keyword

The disk's serial number. This may not be provided by all operating systems.


[float]
=== system.diskio.read.count

type: long

The total number of reads completed successfully.


[float]
=== system.diskio.write.count

type: long

The total number of writes completed successfully.


[float]
=== system.diskio.read.bytes

type: long

format: bytes

The total number of bytes read successfully. On Linux this is the number of sectors read multiplied by an assumed sector size of 512.


[float]
=== system.diskio.write.bytes

type: long

format: bytes

The total number of bytes written successfully. On Linux this is the number of sectors written multiplied by an assumed sector size of 512.


[float]
=== system.diskio.read.time

type: long

The total number of milliseconds spent by all reads.


[float]
=== system.diskio.write.time

type: long

The total number of milliseconds spent by all writes.


[float]
=== system.diskio.io.time

type: long

The total number of of milliseconds spent doing I/Os.


[float]
== filesystem Fields

`filesystem` contains local filesystem stats.



[float]
=== system.filesystem.available

type: long

format: bytes

The disk space available to an unprivileged user in bytes.


[float]
=== system.filesystem.device_name

type: keyword

The disk name. For example: `/dev/disk1`


[float]
=== system.filesystem.mount_point

type: keyword

The mounting point. For example: `/`


[float]
=== system.filesystem.files

type: long

The total number of file nodes in the file system.


[float]
=== system.filesystem.free

type: long

format: bytes

The disk space available in bytes.


[float]
=== system.filesystem.free_files

type: long

The number of free file nodes in the file system.


[float]
=== system.filesystem.total

type: long

format: bytes

The total disk space in bytes.


[float]
=== system.filesystem.used.bytes

type: long

format: bytes

The used disk space in bytes.


[float]
=== system.filesystem.used.pct

type: scaled_float

format: percent

The percentage of used disk space.


[float]
== fsstat Fields

`system.fsstat` contains filesystem metrics aggregated from all mounted filesystems.



[float]
=== system.fsstat.count

type: long

Number of file systems found.

[float]
=== system.fsstat.total_files

type: long

Total number of files.

[float]
== total_size Fields

Nested file system docs.


[float]
=== system.fsstat.total_size.free

type: long

format: bytes

Total free space.


[float]
=== system.fsstat.total_size.used

type: long

format: bytes

Total used space.


[float]
=== system.fsstat.total_size.total

type: long

format: bytes

Total space (used plus free).


[float]
== load Fields

Load averages.



[float]
=== system.load.1

type: scaled_float

Load average for the last minute.


[float]
=== system.load.5

type: scaled_float

Load average for the last 5 minutes.


[float]
=== system.load.15

type: scaled_float

Load average for the last 15 minutes.


[float]
=== system.load.norm.1

type: scaled_float

Load divided by the number of cores for the last minute.


[float]
=== system.load.norm.5

type: scaled_float

Load divided by the number of cores for the last 5 minutes.


[float]
=== system.load.norm.15

type: scaled_float

Load divided by the number of cores for the last 15 minutes.


[float]
== memory Fields

`memory` contains local memory stats.



[float]
=== system.memory.total

type: long

format: bytes

Total memory.


[float]
=== system.memory.used.bytes

type: long

format: bytes

Used memory.


[float]
=== system.memory.free

type: long

format: bytes

The total amount of free memory in bytes. This value does not include memory consumed by system caches and buffers (see system.memory.actual.free).


[float]
=== system.memory.used.pct

type: scaled_float

format: percent

The percentage of used memory.


[float]
== actual Fields

Actual memory used and free.



[float]
=== system.memory.actual.used.bytes

type: long

Actual used memory in bytes. It represents the difference between the total and the available memory. The available memory depends on the OS. For more details, please check `system.actual.free`.


[float]
=== system.memory.actual.free

type: long

Actual free memory in bytes. It is calculated based on the OS. On Linux it consists of the free memory plus caches and buffers. On OSX it is a sum of free memory and the inactive memory. On Windows, it is the  amount of unreserved and uncommitted memory currently in the user-mode portion of the virtual address space of the calling process.


[float]
=== system.memory.actual.used.pct

type: scaled_float

The percentage of actual used memory.


[float]
== swap Fields

This group contains statistics related to the swap memory usage on the system.


[float]
=== system.memory.swap.total

type: long

format: bytes

Total swap memory.


[float]
=== system.memory.swap.used.bytes

type: long

format: bytes

Used swap memory.


[float]
=== system.memory.swap.free

type: long

format: bytes

Available swap memory.


[float]
=== system.memory.swap.used.pct

type: scaled_float

format: percent

The percentage of used swap memory.


[float]
== network Fields

`network` contains network IO metrics for a single network interface.



[float]
=== system.network.name

type: keyword

example: eth0

The network interface name.


[float]
=== system.network.out.bytes

type: long

format: bytes

The number of bytes sent.


[float]
=== system.network.in.bytes

type: long

format: bytes

The number of bytes received.


[float]
=== system.network.out.packets

type: long

The number of packets sent.


[float]
=== system.network.in.packets

type: long

The number or packets received.


[float]
=== system.network.in.errors

type: long

The number of errors while receiving.


[float]
=== system.network.out.errors

type: long

The number of errors while sending.


[float]
=== system.network.in.dropped

type: long

The number of incoming packets that were dropped.


[float]
=== system.network.out.dropped

type: long

The number of outgoing packets that were dropped. This value is always 0 on Darwin and BSD because it is not reported by the operating system.


[float]
== process Fields

`process` contains process metadata, CPU metrics, and memory metrics.



[float]
=== system.process.name

type: keyword

The process name.


[float]
=== system.process.state

type: keyword

The process state. For example: "running".


[float]
=== system.process.pid

type: integer

The process pid.


[float]
=== system.process.ppid

type: integer

The process parent pid.


[float]
=== system.process.pgid

type: integer

The process group id.


[float]
=== system.process.cmdline

type: keyword

The full command-line used to start the process, including the arguments separated by space.


[float]
=== system.process.username

type: keyword

The username of the user that created the process. If the username cannot be determined, the field will contain the user's numeric identifier (UID). On Windows, this field includes the user's domain and is formatted as `domain\username`.


[float]
== cpu Fields

CPU-specific statistics per process.


[float]
=== system.process.cpu.user

type: long

The amount of CPU time the process spent in user space.


[float]
=== system.process.cpu.total.pct

type: scaled_float

format: percent

The percentage of CPU time spent by the process since the last update. Its value is similar to the %CPU value of the process displayed by the top command on Unix systems.


[float]
=== system.process.cpu.system

type: long

The amount of CPU time the process spent in kernel space.


[float]
=== system.process.cpu.total.ticks

type: long

The total CPU time spent by the process.


[float]
=== system.process.cpu.start_time

type: date

The time when the process was started.


[float]
== memory Fields

Memory-specific statistics per process.


[float]
=== system.process.memory.size

type: long

format: bytes

The total virtual memory the process has.


[float]
=== system.process.memory.rss.bytes

type: long

format: bytes

The Resident Set Size. The amount of memory the process occupied in main memory (RAM).


[float]
=== system.process.memory.rss.pct

type: scaled_float

format: percent

The percentage of memory the process occupied in main memory (RAM).


[float]
=== system.process.memory.share

type: long

format: bytes

The shared memory the process uses.


[float]
== cgroup Fields

Metrics and limits from the cgroup of which the task is a member. cgroup metrics are reported when the process has membership in a non-root cgroup. These metrics are only available on Linux.



[float]
=== system.process.cgroup.id

type: keyword

The ID common to all cgroups associated with this task. If there isn't a common ID used by all cgroups this field will be absent.


[float]
=== system.process.cgroup.path

type: keyword

The path to the cgroup relative to the cgroup subsystem's mountpoint. If there isn't a common path used by all cgroups this field will be absent.


[float]
== cpu Fields

The cpu subsystem schedules CPU access for tasks in the cgroup. Access can be controlled by two separate schedulers, CFS and RT. CFS stands for completely fair scheduler which proportionally divides the CPU time between cgroups based on weight. RT stands for real time scheduler which sets a maximum amount of CPU time that processes in the cgroup can consume during a given period.



[float]
=== system.process.cgroup.cpu.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.cpu.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.cpu.cfs.period.us

type: long

Period of time in microseconds for how regularly a cgroup's access to CPU resources should be reallocated.


[float]
=== system.process.cgroup.cpu.cfs.quota.us

type: long

Total amount of time in microseconds for which all tasks in a cgroup can run during one period (as defined by cfs.period.us).


[float]
=== system.process.cgroup.cpu.cfs.shares

type: long

An integer value that specifies a relative share of CPU time available to the tasks in a cgroup. The value specified in the cpu.shares file must be 2 or higher.


[float]
=== system.process.cgroup.cpu.rt.period.us

type: long

Period of time in microseconds for how regularly a cgroup's access to CPU resources is reallocated.


[float]
=== system.process.cgroup.cpu.rt.runtime.us

type: long

Period of time in microseconds for the longest continuous period in which the tasks in a cgroup have access to CPU resources.


[float]
=== system.process.cgroup.cpu.stats.periods

type: long

Number of period intervals (as specified in cpu.cfs.period.us) that have elapsed.


[float]
=== system.process.cgroup.cpu.stats.throttled.periods

type: long

Number of times tasks in a cgroup have been throttled (that is, not allowed to run because they have exhausted all of the available time as specified by their quota).


[float]
=== system.process.cgroup.cpu.stats.throttled.nanos

type: long

The total time duration (in nanoseconds) for which tasks in a cgroup have been throttled.


[float]
== cpuacct Fields

CPU accounting metrics.


[float]
=== system.process.cgroup.cpuacct.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.cpuacct.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.cpuacct.total.nanos

type: long

Total CPU time in nanoseconds consumed by all tasks in the cgroup.


[float]
=== system.process.cgroup.cpuacct.stats.user.nanos

type: long

CPU time consumed by tasks in user mode.

[float]
=== system.process.cgroup.cpuacct.stats.system.nanos

type: long

CPU time consumed by tasks in user (kernel) mode.

[float]
=== system.process.cgroup.cpuacct.percpu

type: dict

CPU time (in nanoseconds) consumed on each CPU by all tasks in this cgroup.


[float]
== memory Fields

Memory limits and metrics.


[float]
=== system.process.cgroup.memory.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.memory.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.memory.mem.usage.bytes

type: long

Total memory usage by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.mem.usage.max.bytes

type: long

The maximum memory used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.mem.limit.bytes

type: long

The maximum amount of user memory in bytes (including file cache) that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.mem.failures

type: long

The number of times that the memory limit (mem.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.memsw.usage.bytes

type: long

The sum of current memory usage plus swap space used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.memsw.usage.max.bytes

type: long

The maximum amount of memory and swap space used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.memsw.limit.bytes

type: long

The maximum amount for the sum of memory and swap usage that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.memsw.failures

type: long

The number of times that the memory plus swap space limit (memsw.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.kmem.usage.bytes

type: long

Total kernel memory usage by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem.usage.max.bytes

type: long

The maximum kernel memory used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem.limit.bytes

type: long

The maximum amount of kernel memory that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.kmem.failures

type: long

The number of times that the memory limit (kmem.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.kmem_tcp.usage.bytes

type: long

Total memory usage for TCP buffers in bytes.


[float]
=== system.process.cgroup.memory.kmem_tcp.usage.max.bytes

type: long

The maximum memory used for TCP buffers by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem_tcp.limit.bytes

type: long

The maximum amount of memory for TCP buffers that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.kmem_tcp.failures

type: long

The number of times that the memory limit (kmem_tcp.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.stats.active_anon.bytes

type: long

Anonymous and swap cache on active least-recently-used (LRU) list, including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.active_file.bytes

type: long

File-backed memory on active LRU list, in bytes.

[float]
=== system.process.cgroup.memory.stats.cache.bytes

type: long

Page cache, including tmpfs (shmem), in bytes.

[float]
=== system.process.cgroup.memory.stats.hierarchical_memory_limit.bytes

type: long

Memory limit for the hierarchy that contains the memory cgroup, in bytes.


[float]
=== system.process.cgroup.memory.stats.hierarchical_memsw_limit.bytes

type: long

Memory plus swap limit for the hierarchy that contains the memory cgroup, in bytes.


[float]
=== system.process.cgroup.memory.stats.inactive_anon.bytes

type: long

Anonymous and swap cache on inactive LRU list, including tmpfs (shmem), in bytes


[float]
=== system.process.cgroup.memory.stats.inactive_file.bytes

type: long

File-backed memory on inactive LRU list, in bytes.


[float]
=== system.process.cgroup.memory.stats.mapped_file.bytes

type: long

Size of memory-mapped mapped files, including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.page_faults

type: long

Number of times that a process in the cgroup triggered a page fault.


[float]
=== system.process.cgroup.memory.stats.major_page_faults

type: long

Number of times that a process in the cgroup triggered a major fault. "Major" faults happen when the kernel actually has to read the data from disk.


[float]
=== system.process.cgroup.memory.stats.pages_in

type: long

Number of pages paged into memory. This is a counter.


[float]
=== system.process.cgroup.memory.stats.pages_out

type: long

Number of pages paged out of memory. This is a counter.


[float]
=== system.process.cgroup.memory.stats.rss.bytes

type: long

Anonymous and swap cache (includes transparent hugepages), not including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.rss_huge.bytes

type: long

Number of bytes of anonymous transparent hugepages.


[float]
=== system.process.cgroup.memory.stats.swap.bytes

type: long

Swap usage, in bytes.


[float]
=== system.process.cgroup.memory.stats.unevictable.bytes

type: long

Memory that cannot be reclaimed, in bytes.


[float]
== blkio Fields

Block IO metrics.


[float]
=== system.process.cgroup.blkio.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.blkio.path

type: keyword

Path to the cgroup relative to the cgroup subsystems mountpoint.


[float]
=== system.process.cgroup.blkio.total.bytes

type: keyword

Total number of bytes transferred to and from all block devices by processes in the cgroup.


[float]
=== system.process.cgroup.blkio.total.ios

type: keyword

Total number of I/O operations performed on all devices by processes in the cgroup as seen by the throttling policy.


[[exported-fields-zookeeper]]
== ZooKeeper Fields

ZooKeeper metrics collected by the four-letter monitoring commands.



[float]
== zookeeper Fields

`zookeeper` contains the metrics reported by ZooKeeper commands.



[float]
== mntr Fields

`mntr` contains the metrics reported by the four-letter `mntr` command.



[float]
=== zookeeper.mntr.hostname

type: keyword

ZooKeeper hostname.


[float]
=== zookeeper.mntr.approximate_data_size

type: long

Approximate size of ZooKeeper data.


[float]
=== zookeeper.mntr.latency.avg

type: integer

Average latency between ensemble hosts in milliseconds.


[float]
=== zookeeper.mntr.ephemerals_count

type: integer

Number of ephemeral znodes.


[float]
=== zookeeper.mntr.followers

type: integer

Number of followers seen by the current host.


[float]
=== zookeeper.mntr.max_file_descriptor_count

type: integer

Maximum number of file descriptors allowed for the ZooKeeper process.


[float]
=== zookeeper.mntr.latency.max

type: integer

Maximum latency in milliseconds.


[float]
=== zookeeper.mntr.latency.min

type: integer

Minimum latency in milliseconds.


[float]
=== zookeeper.mntr.num_alive_connections

type: integer

Number of connections to ZooKeeper that are currently alive.


[float]
=== zookeeper.mntr.open_file_descriptor_count

type: integer

Number of file descriptors open by the ZooKeeper process.


[float]
=== zookeeper.mntr.outstanding_requests

type: integer

Number of outstanding requests that need to be processed by the cluster.


[float]
=== zookeeper.mntr.packets.received

type: integer

Number of ZooKeeper network packets received.


[float]
=== zookeeper.mntr.packets.sent

type: long

Number of ZooKeeper network packets sent.


[float]
=== zookeeper.mntr.pending_syncs

type: integer

Number of pending syncs to carry out to ZooKeeper ensemble followers.


[float]
=== zookeeper.mntr.server_state

type: keyword

Role in the ZooKeeper ensemble.


[float]
=== zookeeper.mntr.synced_followers

type: integer

Number of synced followers reported when a node server_state is leader.


[float]
=== zookeeper.mntr.version

type: keyword

ZooKeeper version and build string reported.


[float]
=== zookeeper.mntr.watch_count

type: integer

Number of watches currently set on the local ZooKeeper process.


[float]
=== zookeeper.mntr.znode_count

type: integer

Number of znodes reported by the local ZooKeeper process.


