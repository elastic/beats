
////
This file is generated! See _meta/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
= Exported Fields

[partintro]

--
This document describes the fields that are exported by Metricbeat. They are
grouped in the following categories:

* <<exported-fields-apache>>
* <<exported-fields-audit>>
* <<exported-fields-beat>>
* <<exported-fields-ceph>>
* <<exported-fields-cloud>>
* <<exported-fields-common>>
* <<exported-fields-couchbase>>
* <<exported-fields-docker>>
* <<exported-fields-dropwizard>>
* <<exported-fields-elasticsearch>>
* <<exported-fields-golang>>
* <<exported-fields-haproxy>>
* <<exported-fields-http>>
* <<exported-fields-jolokia>>
* <<exported-fields-kafka>>
* <<exported-fields-kibana>>
* <<exported-fields-kubernetes-processor>>
* <<exported-fields-kubernetes>>
* <<exported-fields-memcached>>
* <<exported-fields-mongodb>>
* <<exported-fields-mysql>>
* <<exported-fields-nginx>>
* <<exported-fields-php_fpm>>
* <<exported-fields-postgresql>>
* <<exported-fields-prometheus>>
* <<exported-fields-redis>>
* <<exported-fields-system>>
* <<exported-fields-vsphere>>
* <<exported-fields-windows>>
* <<exported-fields-zookeeper>>

--
[[exported-fields-apache]]
== Apache Fields

Apache HTTPD server metricsets collected from the Apache web server.



[float]
== apache Fields

`apache` contains the metrics that were scraped from Apache.



[float]
== status Fields

`status` contains the metrics that were scraped from the Apache status page.



[float]
=== apache.status.hostname

type: keyword

Apache hostname.


[float]
=== apache.status.total_accesses

type: long

Total number of access requests.


[float]
=== apache.status.total_kbytes

type: long

Total number of kilobytes served.


[float]
=== apache.status.requests_per_sec

type: scaled_float

Requests per second.


[float]
=== apache.status.bytes_per_sec

type: scaled_float

Bytes per second.


[float]
=== apache.status.bytes_per_request

type: scaled_float

Bytes per request.


[float]
=== apache.status.workers.busy

type: long

Number of busy workers.


[float]
=== apache.status.workers.idle

type: long

Number of idle workers.


[float]
== uptime Fields

Uptime stats.



[float]
=== apache.status.uptime.server_uptime

type: long

Server uptime in seconds.


[float]
=== apache.status.uptime.uptime

type: long

Server uptime.


[float]
== cpu Fields

CPU stats.



[float]
=== apache.status.cpu.load

type: scaled_float

CPU Load.


[float]
=== apache.status.cpu.user

type: scaled_float

CPU user load.


[float]
=== apache.status.cpu.system

type: scaled_float

System cpu.


[float]
=== apache.status.cpu.children_user

type: scaled_float

CPU of children user.


[float]
=== apache.status.cpu.children_system

type: scaled_float

CPU of children system.


[float]
== connections Fields

Connection stats.



[float]
=== apache.status.connections.total

type: long

Total connections.


[float]
=== apache.status.connections.async.writing

type: long

Async connection writing.


[float]
=== apache.status.connections.async.keep_alive

type: long

Async keeped alive connections.


[float]
=== apache.status.connections.async.closing

type: long

Async closed connections.


[float]
== load Fields

Load averages.



[float]
=== apache.status.load.1

type: scaled_float

Load average for the last minute.


[float]
=== apache.status.load.5

type: scaled_float

Load average for the last 5 minutes.


[float]
=== apache.status.load.15

type: scaled_float

Load average for the last 15 minutes.


[float]
== scoreboard Fields

Scoreboard metrics.



[float]
=== apache.status.scoreboard.starting_up

type: long

Starting up.


[float]
=== apache.status.scoreboard.reading_request

type: long

Reading requests.


[float]
=== apache.status.scoreboard.sending_reply

type: long

Sending Reply.


[float]
=== apache.status.scoreboard.keepalive

type: long

Keep alive.


[float]
=== apache.status.scoreboard.dns_lookup

type: long

Dns Lookups.


[float]
=== apache.status.scoreboard.closing_connection

type: long

Closing connections.


[float]
=== apache.status.scoreboard.logging

type: long

Logging


[float]
=== apache.status.scoreboard.gracefully_finishing

type: long

Gracefully finishing.


[float]
=== apache.status.scoreboard.idle_cleanup

type: long

Idle cleanups.


[float]
=== apache.status.scoreboard.open_slot

type: long

Open slots.


[float]
=== apache.status.scoreboard.waiting_for_connection

type: long

Waiting for connections.


[float]
=== apache.status.scoreboard.total

type: long

Total.


[[exported-fields-audit]]
== Audit Fields

The `audit` module reports security-relevant information based on data captured from the operating system (OS) or services running on the OS.



[float]
== audit Fields




[float]
== kernel Fields

The kernel metricset distributes audit events received from the Linux Audit Framework that is a part of the Linux kernel.



[float]
== actor Fields

The actor is the user that triggered the audit event.


[float]
== attrs Fields

Attributes of the actor.


[float]
=== audit.kernel.actor.attrs.auid

type: keyword

login user ID

[float]
=== audit.kernel.actor.attrs.uid

type: keyword

user ID

[float]
=== audit.kernel.actor.attrs.euid

type: keyword

effective user ID

[float]
=== audit.kernel.actor.attrs.fsuid

type: keyword

file system user ID

[float]
=== audit.kernel.actor.attrs.suid

type: keyword

sent user ID

[float]
=== audit.kernel.actor.attrs.gid

type: keyword

group ID

[float]
=== audit.kernel.actor.attrs.egid

type: keyword

effective group ID

[float]
=== audit.kernel.actor.attrs.sgid

type: keyword

set group ID

[float]
=== audit.kernel.actor.attrs.fsgid

type: keyword

file system group ID

[float]
=== audit.kernel.actor.primary

type: keyword

The primary identity of the actor. This is the actor's original login ID. It will not change even if the user changes to another account.


[float]
=== audit.kernel.actor.secondary

type: keyword

The secondary identity of the actor. This is typically the same as the primary, except for when the user has used `su`.

[float]
== selinux Fields

The SELinux identity of the actor.


[float]
=== audit.kernel.actor.selinux.user

type: keyword

account submitted for authentication

[float]
=== audit.kernel.actor.selinux.role

type: keyword

user's SELinux role

[float]
=== audit.kernel.actor.selinux.domain

type: keyword

The actor's SELinux domain or type.

[float]
=== audit.kernel.actor.selinux.level

type: keyword

example: s0

The actor's SELinux level.

[float]
=== audit.kernel.actor.selinux.category

type: keyword

The actor's SELinux category or compartments.

[float]
=== audit.kernel.category

type: keyword

example: audit-rule

The event's category is a value derived from the `record_type`.


[float]
=== audit.kernel.sequence

type: long

The sequence number of the event as assigned by the kernel. Sequence numbers are stored as a uint32 in the kernel and can rollover.


[float]
=== audit.kernel.session

type: keyword

The session ID assigned to a login. All events related to a login session will have the same value.


[float]
== paths Fields

List of paths associated with the event.


[float]
=== audit.kernel.paths.inode

type: keyword

inode number

[float]
=== audit.kernel.paths.dev

type: keyword

device name as found in /dev

[float]
=== audit.kernel.paths.obj_user

type: keyword



[float]
=== audit.kernel.paths.obj_role

type: keyword



[float]
=== audit.kernel.paths.obj_domain

type: keyword



[float]
=== audit.kernel.paths.obj_level

type: keyword



[float]
=== audit.kernel.paths.objtype

type: keyword



[float]
=== audit.kernel.paths.ouid

type: keyword

file owner user ID

[float]
=== audit.kernel.paths.rdev

type: keyword

the device identifier (special files only)

[float]
=== audit.kernel.paths.nametype

type: keyword

kind of file operation being referenced

[float]
=== audit.kernel.paths.ogid

type: keyword

file owner group ID

[float]
=== audit.kernel.paths.item

type: keyword

which item is being recorded

[float]
=== audit.kernel.paths.mode

type: keyword

mode flags on a file

[float]
=== audit.kernel.paths.name

type: keyword

file name in avcs

[float]
=== audit.kernel.record_type

type: keyword

The audit record's type.

[float]
== socket Fields

Socket data from sockaddr messages.


[float]
=== audit.kernel.socket.port

type: keyword

The port number.

[float]
=== audit.kernel.socket.saddr

type: keyword

The raw socket address structure.

[float]
=== audit.kernel.socket.addr

type: keyword

The remote address.

[float]
=== audit.kernel.socket.family

type: keyword

example: unix

The socket family (unix, ipv4, ipv6, netlink).

[float]
=== audit.kernel.socket.path

type: keyword

This is the path associated with a unix socket.

[float]
== thing Fields

This is the thing or object being acted upon in the event.



[float]
=== audit.kernel.thing.what

type: keyword

A description of the what the "thing" is (e.g. file, socket, user-session).


[float]
=== audit.kernel.thing.primary

type: keyword



[float]
=== audit.kernel.thing.secondary

type: keyword



[float]
== selinux Fields

The SELinux identity of the object.


[float]
=== audit.kernel.thing.selinux.user

type: keyword

The owner of the object.

[float]
=== audit.kernel.thing.selinux.role

type: keyword

The object's SELinux role.

[float]
=== audit.kernel.thing.selinux.domain

type: keyword

The object's SELinux domain or type.

[float]
=== audit.kernel.thing.selinux.level

type: keyword

example: s0

The object's SELinux level.

[float]
=== audit.kernel.how

type: keyword

This describes how the action was performed. Usually this is the exe or command that was being executed that triggered the event.


[float]
=== audit.kernel.key

type: keyword

The key assigned to the audit rule that triggered the event.

[float]
=== audit.kernel.result

type: keyword

example: success or fail

The result of the audited operation (success/fail).

[float]
== data Fields

The data from the audit messages.


[float]
=== audit.kernel.data.action

type: keyword

netfilter packet disposition

[float]
=== audit.kernel.data.minor

type: keyword

device minor number

[float]
=== audit.kernel.data.acct

type: keyword

a user's account name

[float]
=== audit.kernel.data.addr

type: keyword

the remote address that the user is connecting from

[float]
=== audit.kernel.data.cipher

type: keyword

name of crypto cipher selected

[float]
=== audit.kernel.data.id

type: keyword

during account changes

[float]
=== audit.kernel.data.entries

type: keyword

number of entries in the netfilter table

[float]
=== audit.kernel.data.kind

type: keyword

server or client in crypto operation

[float]
=== audit.kernel.data.ksize

type: keyword

key size for crypto operation

[float]
=== audit.kernel.data.spid

type: keyword

sent process ID

[float]
=== audit.kernel.data.arch

type: keyword

the elf architecture flags

[float]
=== audit.kernel.data.argc

type: keyword

the number of arguments to an execve syscall

[float]
=== audit.kernel.data.major

type: keyword

device major number

[float]
=== audit.kernel.data.unit

type: keyword

systemd unit

[float]
=== audit.kernel.data.table

type: keyword

netfilter table name

[float]
=== audit.kernel.data.terminal

type: keyword

terminal name the user is running programs on

[float]
=== audit.kernel.data.comm

type: keyword

command line program name

[float]
=== audit.kernel.data.exe

type: keyword

executable name

[float]
=== audit.kernel.data.grantors

type: keyword

pam modules approving the action

[float]
=== audit.kernel.data.pid

type: keyword

process ID

[float]
=== audit.kernel.data.direction

type: keyword

direction of crypto operation

[float]
=== audit.kernel.data.op

type: keyword

the operation being performed that is audited

[float]
=== audit.kernel.data.tty

type: keyword

tty udevice the user is running programs on

[float]
=== audit.kernel.data.proctitle

type: keyword

process title and command line parameters

[float]
=== audit.kernel.data.syscall

type: keyword

syscall number in effect when the event occurred

[float]
=== audit.kernel.data.data

type: keyword

TTY text

[float]
=== audit.kernel.data.family

type: keyword

netfilter protocol

[float]
=== audit.kernel.data.mac

type: keyword

crypto MAC algorithm selected

[float]
=== audit.kernel.data.pfs

type: keyword

perfect forward secrecy method

[float]
=== audit.kernel.data.items

type: keyword

the number of path records in the event

[float]
=== audit.kernel.data.a0

type: keyword



[float]
=== audit.kernel.data.a1

type: keyword



[float]
=== audit.kernel.data.a2

type: keyword



[float]
=== audit.kernel.data.a3

type: keyword



[float]
=== audit.kernel.data.cwd

type: keyword

the current working directory

[float]
=== audit.kernel.data.hostname

type: keyword

the hostname that the user is connecting from

[float]
=== audit.kernel.data.lport

type: keyword

local network port

[float]
=== audit.kernel.data.ppid

type: keyword

parent process ID

[float]
=== audit.kernel.data.rport

type: keyword

remote port number

[float]
=== audit.kernel.data.cmdline

type: keyword

The full command line from the execve message.

[float]
=== audit.kernel.data.exit

type: keyword

syscall exit code

[float]
=== audit.kernel.data.fp

type: keyword

crypto key finger print

[float]
=== audit.kernel.data.laddr

type: keyword

local network address

[float]
=== audit.kernel.data.sport

type: keyword

local port number

[float]
=== audit.kernel.data.capability

type: keyword

posix capabilities

[float]
=== audit.kernel.data.nargs

type: keyword

the number of arguments to a socket call

[float]
=== audit.kernel.data.new-enabled

type: keyword

new TTY audit enabled setting

[float]
=== audit.kernel.data.audit_backlog_limit

type: keyword

audit system's backlog queue size

[float]
=== audit.kernel.data.dir

type: keyword

directory name

[float]
=== audit.kernel.data.cap_pe

type: keyword

process effective capability map

[float]
=== audit.kernel.data.model

type: keyword

security model being used for virt

[float]
=== audit.kernel.data.new_pp

type: keyword

new process permitted capability map

[float]
=== audit.kernel.data.old-enabled

type: keyword

present TTY audit enabled setting

[float]
=== audit.kernel.data.oauid

type: keyword

object's login user ID

[float]
=== audit.kernel.data.old

type: keyword

old value

[float]
=== audit.kernel.data.banners

type: keyword

banners used on printed page

[float]
=== audit.kernel.data.feature

type: keyword

kernel feature being changed

[float]
=== audit.kernel.data.vm-ctx

type: keyword

the vm's context string

[float]
=== audit.kernel.data.opid

type: keyword

object's process ID

[float]
=== audit.kernel.data.seperms

type: keyword

SELinux permissions being used

[float]
=== audit.kernel.data.seresult

type: keyword

SELinux AVC decision granted/denied

[float]
=== audit.kernel.data.new-rng

type: keyword

device name of rng being added from a vm

[float]
=== audit.kernel.data.old-net

type: keyword

present MAC address assigned to vm

[float]
=== audit.kernel.data.sigev_signo

type: keyword

signal number

[float]
=== audit.kernel.data.ino

type: keyword

inode number

[float]
=== audit.kernel.data.old_enforcing

type: keyword

old MAC enforcement status

[float]
=== audit.kernel.data.old-vcpu

type: keyword

present number of CPU cores

[float]
=== audit.kernel.data.range

type: keyword

user's SE Linux range

[float]
=== audit.kernel.data.res

type: keyword

result of the audited operation(success/fail)

[float]
=== audit.kernel.data.added

type: keyword

number of new files detected

[float]
=== audit.kernel.data.fam

type: keyword

socket address family

[float]
=== audit.kernel.data.nlnk-pid

type: keyword

pid of netlink packet sender

[float]
=== audit.kernel.data.subj

type: keyword

lspp subject's context string

[float]
=== audit.kernel.data.a[0-3]

type: keyword

the arguments to a syscall

[float]
=== audit.kernel.data.cgroup

type: keyword

path to cgroup in sysfs

[float]
=== audit.kernel.data.kernel

type: keyword

kernel's version number

[float]
=== audit.kernel.data.ocomm

type: keyword

object's command line name

[float]
=== audit.kernel.data.new-net

type: keyword

MAC address being assigned to vm

[float]
=== audit.kernel.data.permissive

type: keyword

SELinux is in permissive mode

[float]
=== audit.kernel.data.class

type: keyword

resource class assigned to vm

[float]
=== audit.kernel.data.compat

type: keyword

is_compat_task result

[float]
=== audit.kernel.data.fi

type: keyword

file assigned inherited capability map

[float]
=== audit.kernel.data.changed

type: keyword

number of changed files

[float]
=== audit.kernel.data.msg

type: keyword

the payload of the audit record

[float]
=== audit.kernel.data.dport

type: keyword

remote port number

[float]
=== audit.kernel.data.new-seuser

type: keyword

new SELinux user

[float]
=== audit.kernel.data.invalid_context

type: keyword

SELinux context

[float]
=== audit.kernel.data.dmac

type: keyword

remote MAC address

[float]
=== audit.kernel.data.ipx-net

type: keyword

IPX network number

[float]
=== audit.kernel.data.iuid

type: keyword

ipc object's user ID

[float]
=== audit.kernel.data.macproto

type: keyword

ethernet packet type ID field

[float]
=== audit.kernel.data.obj

type: keyword

lspp object context string

[float]
=== audit.kernel.data.a[[:digit:]+]\[.*\]

type: keyword

the arguments to the execve syscall

[float]
=== audit.kernel.data.ipid

type: keyword

IP datagram fragment identifier

[float]
=== audit.kernel.data.new-fs

type: keyword

file system being added to vm

[float]
=== audit.kernel.data.vm-pid

type: keyword

vm's process ID

[float]
=== audit.kernel.data.cap_pi

type: keyword

process inherited capability map

[float]
=== audit.kernel.data.old-auid

type: keyword

previous auid value

[float]
=== audit.kernel.data.oses

type: keyword

object's session ID

[float]
=== audit.kernel.data.fd

type: keyword

file descriptor number

[float]
=== audit.kernel.data.igid

type: keyword

ipc object's group ID

[float]
=== audit.kernel.data.new-disk

type: keyword

disk being added to vm

[float]
=== audit.kernel.data.parent

type: keyword

the inode number of the parent file

[float]
=== audit.kernel.data.len

type: keyword

length

[float]
=== audit.kernel.data.oflag

type: keyword

open syscall flags

[float]
=== audit.kernel.data.uuid

type: keyword

a UUID

[float]
=== audit.kernel.data.code

type: keyword

seccomp action code

[float]
=== audit.kernel.data.nlnk-grp

type: keyword

netlink group number

[float]
=== audit.kernel.data.cap_fp

type: keyword

file permitted capability map

[float]
=== audit.kernel.data.new-mem

type: keyword

new amount of memory in KB

[float]
=== audit.kernel.data.seperm

type: keyword

SELinux permission being decided on

[float]
=== audit.kernel.data.enforcing

type: keyword

new MAC enforcement status

[float]
=== audit.kernel.data.new-chardev

type: keyword

new character device being assigned to vm

[float]
=== audit.kernel.data.old-rng

type: keyword

device name of rng being removed from a vm

[float]
=== audit.kernel.data.outif

type: keyword

out interface number

[float]
=== audit.kernel.data.cmd

type: keyword

command being executed

[float]
=== audit.kernel.data.hook

type: keyword

netfilter hook that packet came from

[float]
=== audit.kernel.data.new-level

type: keyword

new run level

[float]
=== audit.kernel.data.sauid

type: keyword

sent login user ID

[float]
=== audit.kernel.data.sig

type: keyword

signal number

[float]
=== audit.kernel.data.audit_backlog_wait_time

type: keyword

audit system's backlog wait time

[float]
=== audit.kernel.data.printer

type: keyword

printer name

[float]
=== audit.kernel.data.old-mem

type: keyword

present amount of memory in KB

[float]
=== audit.kernel.data.perm

type: keyword

the file permission being used

[float]
=== audit.kernel.data.old_pi

type: keyword

old process inherited capability map

[float]
=== audit.kernel.data.state

type: keyword

audit daemon configuration resulting state

[float]
=== audit.kernel.data.format

type: keyword

audit log's format

[float]
=== audit.kernel.data.new_gid

type: keyword

new group ID being assigned

[float]
=== audit.kernel.data.tcontext

type: keyword

the target's or object's context string

[float]
=== audit.kernel.data.maj

type: keyword

device major number

[float]
=== audit.kernel.data.watch

type: keyword

file name in a watch record

[float]
=== audit.kernel.data.device

type: keyword

device name

[float]
=== audit.kernel.data.grp

type: keyword

group name

[float]
=== audit.kernel.data.bool

type: keyword

name of SELinux boolean

[float]
=== audit.kernel.data.icmp_type

type: keyword

type of icmp message

[float]
=== audit.kernel.data.new_lock

type: keyword

new value of feature lock

[float]
=== audit.kernel.data.old_prom

type: keyword

network promiscuity flag

[float]
=== audit.kernel.data.acl

type: keyword

access mode of resource assigned to vm

[float]
=== audit.kernel.data.ip

type: keyword

network address of a printer

[float]
=== audit.kernel.data.new_pi

type: keyword

new process inherited capability map

[float]
=== audit.kernel.data.default-context

type: keyword

default MAC context

[float]
=== audit.kernel.data.inode_gid

type: keyword

group ID of the inode's owner

[float]
=== audit.kernel.data.new-log_passwd

type: keyword

new value for TTY password logging

[float]
=== audit.kernel.data.new_pe

type: keyword

new process effective capability map

[float]
=== audit.kernel.data.selected-context

type: keyword

new MAC context assigned to session

[float]
=== audit.kernel.data.cap_fver

type: keyword

file system capabilities version number

[float]
=== audit.kernel.data.file

type: keyword

file name

[float]
=== audit.kernel.data.net

type: keyword

network MAC address

[float]
=== audit.kernel.data.virt

type: keyword

kind of virtualization being referenced

[float]
=== audit.kernel.data.cap_pp

type: keyword

process permitted capability map

[float]
=== audit.kernel.data.old-range

type: keyword

present SELinux range

[float]
=== audit.kernel.data.resrc

type: keyword

resource being assigned

[float]
=== audit.kernel.data.new-range

type: keyword

new SELinux range

[float]
=== audit.kernel.data.obj_gid

type: keyword

group ID of object

[float]
=== audit.kernel.data.proto

type: keyword

network protocol

[float]
=== audit.kernel.data.old-disk

type: keyword

disk being removed from vm

[float]
=== audit.kernel.data.audit_failure

type: keyword

audit system's failure mode

[float]
=== audit.kernel.data.inif

type: keyword

in interface number

[float]
=== audit.kernel.data.vm

type: keyword

virtual machine name

[float]
=== audit.kernel.data.flags

type: keyword

mmap syscall flags

[float]
=== audit.kernel.data.nlnk-fam

type: keyword

netlink protocol number

[float]
=== audit.kernel.data.old-fs

type: keyword

file system being removed from vm

[float]
=== audit.kernel.data.old-ses

type: keyword

previous ses value

[float]
=== audit.kernel.data.seqno

type: keyword

sequence number

[float]
=== audit.kernel.data.fver

type: keyword

file system capabilities version number

[float]
=== audit.kernel.data.qbytes

type: keyword

ipc objects quantity of bytes

[float]
=== audit.kernel.data.seuser

type: keyword

user's SE Linux user acct

[float]
=== audit.kernel.data.cap_fe

type: keyword

file assigned effective capability map

[float]
=== audit.kernel.data.new-vcpu

type: keyword

new number of CPU cores

[float]
=== audit.kernel.data.old-level

type: keyword

old run level

[float]
=== audit.kernel.data.old_pp

type: keyword

old process permitted capability map

[float]
=== audit.kernel.data.daddr

type: keyword

remote IP address

[float]
=== audit.kernel.data.old-role

type: keyword

present SELinux role

[float]
=== audit.kernel.data.ioctlcmd

type: keyword

The request argument to the ioctl syscall

[float]
=== audit.kernel.data.smac

type: keyword

local MAC address

[float]
=== audit.kernel.data.apparmor

type: keyword

apparmor event information

[float]
=== audit.kernel.data.fe

type: keyword

file assigned effective capability map

[float]
=== audit.kernel.data.perm_mask

type: keyword

file permission mask that triggered a watch event

[float]
=== audit.kernel.data.ses

type: keyword

login session ID

[float]
=== audit.kernel.data.cap_fi

type: keyword

file inherited capability map

[float]
=== audit.kernel.data.obj_uid

type: keyword

user ID of object

[float]
=== audit.kernel.data.reason

type: keyword

text string denoting a reason for the action

[float]
=== audit.kernel.data.list

type: keyword

the audit system's filter list number

[float]
=== audit.kernel.data.old_lock

type: keyword

present value of feature lock

[float]
=== audit.kernel.data.bus

type: keyword

name of subsystem bus a vm resource belongs to

[float]
=== audit.kernel.data.old_pe

type: keyword

old process effective capability map

[float]
=== audit.kernel.data.new-role

type: keyword

new SELinux role

[float]
=== audit.kernel.data.prom

type: keyword

network promiscuity flag

[float]
=== audit.kernel.data.uri

type: keyword

URI pointing to a printer

[float]
=== audit.kernel.data.audit_enabled

type: keyword

audit systems's enable/disable status

[float]
=== audit.kernel.data.old-log_passwd

type: keyword

present value for TTY password logging

[float]
=== audit.kernel.data.old-seuser

type: keyword

present SELinux user

[float]
=== audit.kernel.data.per

type: keyword

linux personality

[float]
=== audit.kernel.data.scontext

type: keyword

the subject's context string

[float]
=== audit.kernel.data.tclass

type: keyword

target's object classification

[float]
=== audit.kernel.data.ver

type: keyword

audit daemon's version number

[float]
=== audit.kernel.data.new

type: keyword

value being set in feature

[float]
=== audit.kernel.data.val

type: keyword

generic value associated with the operation

[float]
=== audit.kernel.data.img-ctx

type: keyword

the vm's disk image context string

[float]
=== audit.kernel.data.old-chardev

type: keyword

present character device assigned to vm

[float]
=== audit.kernel.data.old_val

type: keyword

current value of SELinux boolean

[float]
=== audit.kernel.data.success

type: keyword

whether the syscall was successful or not

[float]
=== audit.kernel.data.inode_uid

type: keyword

user ID of the inode's owner

[float]
=== audit.kernel.data.removed

type: keyword

number of deleted files

[float]
=== audit.kernel.messages

type: text

An ordered list of the raw messages received from the kernel that were used to construct this document. This field is present if an error occurred processing the data or if `kernel.include_raw_message` is set in the config.


[float]
=== audit.kernel.warnings

type: keyword

The warnings generated by the Beat during the construction of the event. These are disabled by default and are used for development and debug purposes only.


[float]
== geoip Fields

Contains GeoIP information gathered based on the `os_events.audit.addr` field. Only present if the GeoIP Elasticsearch plugin is available and used.



[float]
=== audit.kernel.geoip.continent_name

type: keyword

The name of the continent.


[float]
=== audit.kernel.geoip.city_name

type: keyword

The name of the city.


[float]
=== audit.kernel.geoip.region_name

type: keyword

The name of the region.


[float]
=== audit.kernel.geoip.country_iso_code

type: keyword

Country ISO code.


[float]
=== audit.kernel.geoip.location

type: geo_point

The longitude and latitude.


[[exported-fields-beat]]
== Beat Fields

Contains common beat fields available in all event types.



[float]
=== beat.name

The name of the Beat sending the log messages. If the Beat name is set in the configuration file, then that value is used. If it is not set, the hostname is used. To set the Beat name, use the `name` option in the configuration file.


[float]
=== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


[float]
=== beat.timezone

The timezone as returned by the operating system on which the Beat is running.


[float]
=== beat.version

The version of the beat that generated this event.


[float]
=== @timestamp

type: date

example: August 26th 2016, 12:35:53.332

format: date

required: True

The timestamp when the event log record was generated.


[float]
=== tags

Arbitrary tags that can be set per Beat and per transaction type.


[float]
=== fields

type: object

Contains user configurable fields.


[float]
== error Fields

Error fields containing additional info in case of errors.



[float]
=== error.message

type: text

Error message.


[float]
=== error.code

type: long

Error code.


[float]
=== error.type

type: keyword

Error type.


[[exported-fields-ceph]]
== ceph Fields

beta[]
ceph Module



[float]
== ceph Fields

`ceph` contains the metrics that were scraped from CEPH.



[float]
== cluster_disk Fields

cluster_disk



[float]
=== ceph.cluster_disk.available.bytes

type: long

format: bytes

Available bytes of the cluster


[float]
=== ceph.cluster_disk.total.bytes

type: long

format: bytes

Total bytes of the cluster


[float]
=== ceph.cluster_disk.used.bytes

type: long

format: bytes

Used bytes of the cluster


[float]
== cluster_health Fields

cluster_health



[float]
=== ceph.cluster_health.overall_status

type: keyword

Overall status of the cluster


[float]
=== ceph.cluster_health.timechecks.epoch

type: long

Map version


[float]
=== ceph.cluster_health.timechecks.round.value

type: long

timecheck round


[float]
=== ceph.cluster_health.timechecks.round.status

type: keyword

Status of the round


[float]
== monitor_health Fields

monitor_health stats data



[float]
=== ceph.monitor_health.available.pct

type: long

Available percent of the MON


[float]
=== ceph.monitor_health.health

type: keyword

Health of the MON


[float]
=== ceph.monitor_health.available.kb

type: long

Available KB of the MON


[float]
=== ceph.monitor_health.total.kb

type: long

Total KB of the MON


[float]
=== ceph.monitor_health.used.kb

type: long

Used KB of the MON


[float]
=== ceph.monitor_health.last_updated

type: date

Time when was updated


[float]
=== ceph.monitor_health.name

type: keyword

Name of the MON


[float]
=== ceph.monitor_health.store_stats.log.bytes

type: long

format: bytes

Log bytes of MON


[float]
=== ceph.monitor_health.store_stats.misc.bytes

type: long

format: bytes

Misc bytes of MON


[float]
=== ceph.monitor_health.store_stats.sst.bytes

type: long

format: bytes

SST bytes of MON


[float]
=== ceph.monitor_health.store_stats.total.bytes

type: long

format: bytes

Total bytes of MON


[float]
=== ceph.monitor_health.store_stats.last_updated

type: long

Last updated


[float]
== pool_disk Fields

pool_disk



[float]
=== ceph.pool_disk.id

type: long

Id of the pool


[float]
=== ceph.pool_disk.name

type: keyword

Name of the pool


[float]
=== ceph.pool_disk.stats.available.bytes

type: long

format: bytes

Available bytes of the pool


[float]
=== ceph.pool_disk.stats.objects

type: long

Number of objects of the pool


[float]
=== ceph.pool_disk.stats.used.bytes

type: long

format: bytes

Used bytes of the pool


[float]
=== ceph.pool_disk.stats.used.kb

type: long

Used kb of the pool


[[exported-fields-cloud]]
== Cloud Provider Metadata Fields

Metadata from cloud providers added by the add_cloud_metadata processor.



[float]
=== meta.cloud.provider

example: ec2

Name of the cloud provider. Possible values are ec2, gce, or digitalocean.


[float]
=== meta.cloud.instance_id

Instance ID of the host machine.


[float]
=== meta.cloud.machine_type

example: t2.medium

Machine type of the host machine.


[float]
=== meta.cloud.availability_zone

example: us-east-1c

Availability zone in which this host is running.


[float]
=== meta.cloud.project_id

example: project-x

Name of the project in Google Cloud.


[float]
=== meta.cloud.region

Region in which this host is running.


[[exported-fields-common]]
== Common Fields

Contains common fields available in all event types.



[float]
=== metricset.module

The name of the module that generated the event.


[float]
=== metricset.name

The name of the metricset that generated the event.


[float]
=== metricset.host

Hostname of the machine from which the metricset was collected. This field may not be present when the data was collected locally.


[float]
=== metricset.rtt

type: long

required: True

Event round trip time in microseconds.


[float]
=== metricset.namespace

type: keyword

Namespace of dynamic metricsets.


[float]
=== type

example: metricsets

required: True

The document type. Always set to "metricsets".


[[exported-fields-couchbase]]
== Couchbase Fields

beta[]
Metrics collected from Couchbase servers.



[float]
== couchbase Fields

`couchbase` contains the metrics that were scraped from Couchbase.



[float]
== bucket Fields

Couchbase bucket metrics.



[float]
=== couchbase.bucket.name

type: keyword

Name of the bucket.


[float]
=== couchbase.bucket.type

type: keyword

Type of the bucket.


[float]
=== couchbase.bucket.data.used.bytes

type: long

format: bytes

Size of user data within buckets of the specified state that are resident in RAM.


[float]
=== couchbase.bucket.disk.fetches

type: long

Number of disk fetches.


[float]
=== couchbase.bucket.disk.used.bytes

type: long

format: bytes

Amount of disk used (bytes).


[float]
=== couchbase.bucket.memory.used.bytes

type: long

format: bytes

Amount of memory used by the bucket (bytes).


[float]
=== couchbase.bucket.quota.ram.bytes

type: long

format: bytes

Amount of RAM used by the bucket (bytes).


[float]
=== couchbase.bucket.quota.use.pct

type: scaled_float

format: percent

Percentage of RAM used (for active objects) against the configured bucket size (%).


[float]
=== couchbase.bucket.ops_per_sec

type: long

Number of operations per second.


[float]
=== couchbase.bucket.item_count

type: long

Number of items associated with the bucket.


[float]
== cluster Fields

Couchbase cluster metrics.



[float]
=== couchbase.cluster.hdd.free.bytes

type: long

format: bytes

Free hard drive space in the cluster (bytes).


[float]
=== couchbase.cluster.hdd.quota.total.bytes

type: long

format: bytes

Hard drive quota total for the cluster (bytes).


[float]
=== couchbase.cluster.hdd.total.bytes

type: long

format: bytes

Total hard drive space available to the cluster (bytes).


[float]
=== couchbase.cluster.hdd.used.value.bytes

type: long

format: bytes

Hard drive space used by the cluster (bytes).


[float]
=== couchbase.cluster.hdd.used.by_data.bytes

type: long

format: bytes

Hard drive space used by the data in the cluster (bytes).


[float]
=== couchbase.cluster.max_bucket_count

type: long

Max bucket count setting.


[float]
=== couchbase.cluster.quota.index_memory.mb

type: long

Memory quota setting for the Index service (Mbyte).


[float]
=== couchbase.cluster.quota.memory.mb

type: long

Memory quota setting for the cluster (Mbyte).


[float]
=== couchbase.cluster.ram.quota.total.value.bytes

type: long

format: bytes

RAM quota total for the cluster (bytes).


[float]
=== couchbase.cluster.ram.quota.total.per_node.bytes

type: long

format: bytes

RAM quota used by the current node in the cluster (bytes).


[float]
=== couchbase.cluster.ram.quota.used.value.bytes

type: long

format: bytes

RAM quota used by the cluster (bytes).


[float]
=== couchbase.cluster.ram.quota.used.per_node.bytes

type: long

format: bytes

Ram quota used by the current node in the cluster (bytes)


[float]
=== couchbase.cluster.ram.total.bytes

type: long

format: bytes

Total RAM available to cluster (bytes).


[float]
=== couchbase.cluster.ram.used.value.bytes

type: long

format: bytes

RAM used by the cluster (bytes).


[float]
=== couchbase.cluster.ram.used.by_data.bytes

type: long

format: bytes

RAM used by the data in the cluster (bytes).


[float]
== node Fields

Couchbase node metrics.



[float]
=== couchbase.node.cmd_get

type: long

Number of get commands


[float]
=== couchbase.node.couch.docs.disk_size.bytes

type: long

format: bytes

Amount of disk space used by Couch docs (bytes).


[float]
=== couchbase.node.couch.docs.data_size.bytes

type: long

format: bytes

Data size of Couch docs associated with a node (bytes).


[float]
=== couchbase.node.couch.spatial.data_size.bytes

type: long

Size of object data for spatial views (bytes).


[float]
=== couchbase.node.couch.spatial.disk_size.bytes

type: long

Amount of disk space used by spatial views (bytes).


[float]
=== couchbase.node.couch.views.disk_size.bytes

type: long

Amount of disk space used by Couch views (bytes).


[float]
=== couchbase.node.couch.views.data_size.bytes

type: long

Size of object data for Couch views (bytes).


[float]
=== couchbase.node.cpu_utilization_rate.pct

type: scaled_float

The CPU utilization rate (%).


[float]
=== couchbase.node.current_items.value

type: long

Number of current items.


[float]
=== couchbase.node.current_items.total

type: long

Total number of items associated with the node.


[float]
=== couchbase.node.ep_bg_fetched

type: long

Number of disk fetches performed since the server was started.


[float]
=== couchbase.node.get_hits

type: long

Number of get hits.


[float]
=== couchbase.node.hostname

type: keyword

The hostname of the node.


[float]
=== couchbase.node.mcd_memory.allocated.bytes

type: long

format: bytes

Amount of memcached memory allocated (bytes).


[float]
=== couchbase.node.mcd_memory.reserved.bytes

type: long

Amount of memcached memory reserved (bytes).


[float]
=== couchbase.node.memory.free.bytes

type: long

Amount of memory free for the node (bytes).


[float]
=== couchbase.node.memory.total.bytes

type: long

Total memory available to the node (bytes).


[float]
=== couchbase.node.memory.used.bytes

type: long

Memory used by the node (bytes).


[float]
=== couchbase.node.ops

type: long

Number of operations performed on Couchbase.


[float]
=== couchbase.node.swap.total.bytes

type: long

Total swap size allocated (bytes).


[float]
=== couchbase.node.swap.used.bytes

type: long

Amount of swap space used (bytes).


[float]
=== couchbase.node.uptime.sec

type: long

Time during which the node was in operation (sec).


[float]
=== couchbase.node.vb_replica_curr_items

type: long

Number of items/documents that are replicas.


[[exported-fields-docker]]
== Docker Fields

beta[]
Docker stats collected from Docker.



[float]
== docker Fields

Information and statistics about docker's running containers.



[float]
== container Fields

Docker container metrics.



[float]
=== docker.container.command

type: keyword

Command that was executed in the Docker container.


[float]
=== docker.container.created

type: date

Date when the container was created.


[float]
=== docker.container.id

type: keyword

Unique container id.


[float]
=== docker.container.image

type: keyword

Name of the image the container was built on.


[float]
=== docker.container.name

type: keyword

Container name.


[float]
=== docker.container.status

type: keyword

Container status.


[float]
== size Fields

Container size metrics.



[float]
=== docker.container.size.root_fs

type: long

Total size of all the files in the container.


[float]
=== docker.container.size.rw

type: long

Size of the files that have been created or changed since creation.


[float]
=== docker.container.labels

type: object

Image labels.


[float]
=== docker.container.tags

type: array

Image tags.


[float]
== cpu Fields

Runtime CPU metrics.



[float]
=== docker.cpu.kernel.pct

type: scaled_float

format: percentage

The system kernel consumed by the Docker server.


[float]
=== docker.cpu.kernel.ticks

type: long

CPU kernel ticks.


[float]
=== docker.cpu.system.pct

type: scaled_float

format: percentage



[float]
=== docker.cpu.system.ticks

type: long

CPU system ticks.


[float]
=== docker.cpu.user.pct

type: scaled_float

format: percentage



[float]
=== docker.cpu.user.ticks

type: long

CPU user ticks


[float]
=== docker.cpu.total.pct

type: scaled_float

format: percentage

Total CPU usage.


[float]
== diskio Fields

Disk I/O metrics.



[float]
=== docker.diskio.reads

type: scaled_float

Number of reads.


[float]
=== docker.diskio.writes

type: scaled_float

Number of writes.


[float]
=== docker.diskio.total

type: scaled_float

Number of reads and writes combined.


[float]
== healthcheck Fields

Docker container metrics.



[float]
=== docker.healthcheck.failingstreak

type: integer

concurent failed check


[float]
=== docker.healthcheck.status

type: keyword

Healthcheck status code


[float]
== event Fields

event fields.



[float]
=== docker.healthcheck.event.end_date

type: date

Healthcheck end date


[float]
=== docker.healthcheck.event.start_date

type: date

Healthcheck start date


[float]
=== docker.healthcheck.event.output

type: keyword

Healthcheck output


[float]
=== docker.healthcheck.event.exit_code

type: integer

Healthcheck status code


[float]
== image Fields

Docker image metrics.



[float]
== id Fields

The image layers identifier.



[float]
=== docker.image.id.current

type: keyword

Unique image identifier given upon its creation.


[float]
=== docker.image.id.parent

type: keyword

Identifier of the image, if it exists, from which the current image directly descends.


[float]
=== docker.image.created

type: date

Date and time when the image was created.


[float]
== size Fields

Image size layers.



[float]
=== docker.image.size.virtual

type: long

Size of the image.


[float]
=== docker.image.size.regular

type: long

Total size of the all cached images associated to the current image.


[float]
=== docker.image.labels

type: object

Image labels.


[float]
=== docker.image.tags

type: array

Image tags.


[float]
== info Fields

beta[]
Info metrics based on https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/display-system-wide-information.



[float]
== containers Fields

Overall container stats.



[float]
=== docker.info.containers.paused

type: long

Total number of paused containers.


[float]
=== docker.info.containers.running

type: long

Total number of running containers.


[float]
=== docker.info.containers.stopped

type: long

Total number of stopped containers.


[float]
=== docker.info.containers.total

type: long

Total number of existing containers.


[float]
=== docker.info.id

type: keyword

Unique Docker host identifier.


[float]
=== docker.info.images

type: long

Total number of existing images.


[float]
== memory Fields

Memory metrics.



[float]
=== docker.memory.fail.count

type: scaled_float

Fail counter.


[float]
=== docker.memory.limit

type: long

format: bytes

Memory limit.


[float]
== rss Fields

RSS memory stats.



[float]
=== docker.memory.rss.total

type: long

format: bytes

Total memory resident set size.


[float]
=== docker.memory.rss.pct

type: scaled_float

Memory resident set size percentage.


[float]
== usage Fields

Usage memory stats.



[float]
=== docker.memory.usage.max

type: long

format: bytes

Max memory usage.


[float]
=== docker.memory.usage.pct

type: scaled_float

Memory usage percentage.


[float]
=== docker.memory.usage.total

type: long

format: bytes

Total memory usage.


[float]
== network Fields

Network metrics.



[float]
=== docker.network.interface

type: keyword

Network interface name.


[float]
== in Fields

Incoming network stats.



[float]
=== docker.network.in.bytes

type: long

format: bytes

Total number of incoming bytes.


[float]
=== docker.network.in.dropped

type: scaled_float

Total number of dropped incoming packets.


[float]
=== docker.network.in.errors

type: long

Total errors on incoming packets.


[float]
=== docker.network.in.packets

type: long

Total number of incoming packets.


[float]
== out Fields

Outgoing network stats.



[float]
=== docker.network.out.bytes

type: long

format: bytes

Total number of outgoing bytes.


[float]
=== docker.network.out.dropped

type: scaled_float

Total number of dropped outgoing packets.


[float]
=== docker.network.out.errors

type: long

Total errors on outgoing packets.


[float]
=== docker.network.out.packets

type: long

Total number of outgoing packets.


[[exported-fields-dropwizard]]
== Dropwizard Fields

beta[]
Stats collected from Dropwizard.



[float]
== dropwizard Fields



[[exported-fields-elasticsearch]]
== elasticsearch Fields

[]experimental
elasticsearch Module



[float]
== elasticsearch Fields




[float]
=== elasticsearch.cluster.name

type: keyword

Elasticsearch cluster name.


[float]
== node Fields

node



[float]
=== elasticsearch.node.jvm.memory.heap_init.bytes

type: long

format: bytes

Heap init used by the JVM in bytes.


[float]
=== elasticsearch.node.jvm.version

type: keyword

JVM version.


[float]
=== elasticsearch.node.name

type: keyword

Node name.


[float]
=== elasticsearch.node.version

type: keyword

Node version.


[float]
== node.stats Fields

node_stats



[float]
== indices Fields

Node indices stats



[float]
=== elasticsearch.node.stats.indices.docs.count

type: long

Total number of existing documents.


[float]
=== elasticsearch.node.stats.indices.docs.deleted

type: long

Total number of deleted documents.


[float]
=== elasticsearch.node.stats.indices.segments.count

type: long

Total number of segments.


[float]
=== elasticsearch.node.stats.indices.segments.memory.bytes

type: long

format: bytes

Total size of segments in bytes.


[float]
=== elasticsearch.node.stats.indices.store.size.bytes

type: long

Total size of the store in bytes.


[float]
== jvm.mem.pools Fields

JVM memory pool stats



[float]
== old Fields

Old memory pool stats.



[float]
=== elasticsearch.node.stats.jvm.mem.pools.old.max.bytes

type: long

format: bytes

Max bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.old.peak.bytes

type: long

format: bytes

Peak bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.old.peak_max.bytes

type: long

format: bytes

Peak max bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.old.used.bytes

type: long

format: bytes

Used bytes.

[float]
== young Fields

Young memory pool stats.



[float]
=== elasticsearch.node.stats.jvm.mem.pools.young.max.bytes

type: long

format: bytes

Max bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.young.peak.bytes

type: long

format: bytes

Peak bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.young.peak_max.bytes

type: long

format: bytes

Peak max bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.young.used.bytes

type: long

format: bytes

Used bytes.

[float]
== survivor Fields

Survivor memory pool stats.



[float]
=== elasticsearch.node.stats.jvm.mem.pools.survivor.max.bytes

type: long

format: bytes

Max bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.survivor.peak.bytes

type: long

format: bytes

Peak bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.survivor.peak_max.bytes

type: long

format: bytes

Peak max bytes.

[float]
=== elasticsearch.node.stats.jvm.mem.pools.survivor.used.bytes

type: long

format: bytes

Used bytes.

[float]
== jvm.gc.collectors Fields

GC collector stats.



[float]
== old.collection Fields

Old collection gc.



[float]
=== elasticsearch.node.stats.jvm.gc.collectors.old.collection.count

type: long



[float]
=== elasticsearch.node.stats.jvm.gc.collectors.old.collection.ms

type: long



[float]
== young.collection Fields

Young collection gc.



[float]
=== elasticsearch.node.stats.jvm.gc.collectors.young.collection.count

type: long



[float]
=== elasticsearch.node.stats.jvm.gc.collectors.young.collection.ms

type: long



[[exported-fields-golang]]
== golang Fields

golang Module



[float]
== golang Fields




[float]
== expvar Fields

expvar



[float]
=== golang.expvar.cmdline

type: keyword

The cmdline of this golang program start with.


[float]
== heap Fields

The golang program heap information exposed by expvar.



[float]
=== golang.heap.cmdline

type: keyword

The cmdline of this golang program start with.


[float]
== gc Fields

Garbage collector summary.



[float]
== total_pause Fields

Total GC pause duration over lifetime of process.



[float]
=== golang.heap.gc.total_pause.ns

type: long

Duration in Ns.


[float]
=== golang.heap.gc.total_count

type: long

Total number of GC was happened.


[float]
=== golang.heap.gc.next_gc_limit

type: long

format: bytes

Next collection will happen when HeapAlloc > this amount.


[float]
=== golang.heap.gc.cpu_fraction

type: long

Fraction of CPU time used by GC.


[float]
== pause Fields

Last GC pause durations during the monitoring period.



[float]
=== golang.heap.gc.pause.count

type: long

Count of GC pause duration during this collect period.


[float]
== sum Fields

Total GC pause duration during this collect period.



[float]
=== golang.heap.gc.pause.sum.ns

type: long

Duration in Ns.


[float]
== max Fields

Max GC pause duration during this collect period.



[float]
=== golang.heap.gc.pause.max.ns

type: long

Duration in Ns.


[float]
== avg Fields

Average GC pause duration during this collect period.



[float]
=== golang.heap.gc.pause.avg.ns

type: long

Duration in Ns.


[float]
== system Fields

Heap summary,which bytes was obtained from system.



[float]
=== golang.heap.system.total

type: long

format: bytes

Total bytes obtained from system (sum of XxxSys below).


[float]
=== golang.heap.system.optained

type: long

format: bytes

Via HeapSys, bytes obtained from system. heap_sys = heap_idle + heap_inuse.


[float]
=== golang.heap.system.stack

type: long

format: bytes

Bytes used by stack allocator, and these bytes was obtained from system.


[float]
=== golang.heap.system.released

type: long

format: bytes

Bytes released to the OS.


[float]
== allocations Fields

Heap allocations summary.



[float]
=== golang.heap.allocations.mallocs

type: long

Number of mallocs.


[float]
=== golang.heap.allocations.frees

type: long

Number of frees.


[float]
=== golang.heap.allocations.objects

type: long

Total number of allocated objects.


[float]
=== golang.heap.allocations.total

type: long

format: bytes

Bytes allocated (even if freed) throughout the lifetime.


[float]
=== golang.heap.allocations.allocated

type: long

format: bytes

Bytes allocated and not yet freed (same as Alloc above).


[float]
=== golang.heap.allocations.idle

type: long

format: bytes

Bytes in idle spans.


[float]
=== golang.heap.allocations.active

type: long

format: bytes

Bytes in non-idle span.


[[exported-fields-haproxy]]
== HAProxy Fields

HAProxy Module



[float]
== haproxy Fields

HAProxy metrics.



[float]
== info Fields

General information about HAProxy processes.



[float]
=== haproxy.info.processes

type: long

Number of processes.


[float]
=== haproxy.info.process_num

type: long

Process number.


[float]
=== haproxy.info.pid

type: long

Process ID.


[float]
=== haproxy.info.run_queue

type: long



[float]
=== haproxy.info.tasks

type: long



[float]
=== haproxy.info.uptime.sec

type: long

Current uptime in seconds.


[float]
=== haproxy.info.memory.max.bytes

type: long

format: bytes

Maximum amount of memory usage in bytes (the 'Memmax_MB' value converted to bytes).


[float]
=== haproxy.info.ulimit_n

type: long

Maximum number of open files for the process.


[float]
== compress Fields




[float]
== bps Fields




[float]
=== haproxy.info.compress.bps.in

type: long



[float]
=== haproxy.info.compress.bps.out

type: long



[float]
=== haproxy.info.compress.bps.rate_limit

type: long



[float]
== connection Fields




[float]
== rate Fields




[float]
=== haproxy.info.connection.rate.value

type: long



[float]
=== haproxy.info.connection.rate.limit

type: long



[float]
=== haproxy.info.connection.rate.max

type: long



[float]
=== haproxy.info.connection.current

type: long

Current connections.


[float]
=== haproxy.info.connection.total

type: long

Total connections.


[float]
=== haproxy.info.connection.ssl.current

type: long

Current SSL connections.


[float]
=== haproxy.info.connection.ssl.total

type: long

Total SSL connections.


[float]
=== haproxy.info.connection.ssl.max

type: long

Maximum SSL connections.


[float]
=== haproxy.info.connection.max

type: long

Maximum connections.


[float]
=== haproxy.info.connection.hard_max

type: long



[float]
=== haproxy.info.requests.total

type: long



[float]
=== haproxy.info.sockets.max

type: long



[float]
=== haproxy.info.requests.max

type: long



[float]
== pipes Fields




[float]
=== haproxy.info.pipes.used

type: integer



[float]
=== haproxy.info.pipes.free

type: integer



[float]
=== haproxy.info.pipes.max

type: integer



[float]
== session Fields

None


[float]
=== haproxy.info.session.rate.value

type: integer



[float]
=== haproxy.info.session.rate.limit

type: integer



[float]
=== haproxy.info.session.rate.max

type: integer



[float]
== ssl Fields

None


[float]
=== haproxy.info.ssl.rate.value

type: integer

None

[float]
=== haproxy.info.ssl.rate.limit

type: integer

None

[float]
=== haproxy.info.ssl.rate.max

type: integer

None

[float]
== frontend Fields

None


[float]
=== haproxy.info.ssl.frontend.key_rate.value

type: integer

None

[float]
=== haproxy.info.ssl.frontend.key_rate.max

type: integer

None

[float]
=== haproxy.info.ssl.frontend.session_reuse.pct

type: scaled_float

format: percent

None

[float]
== backend Fields

None


[float]
=== haproxy.info.ssl.backend.key_rate.value

type: integer

None

[float]
=== haproxy.info.ssl.backend.key_rate.max

type: integer

MaxConnRate

[float]
=== haproxy.info.ssl.cached_lookups

type: long

None

[float]
=== haproxy.info.ssl.cache_misses

type: long

None

[float]
== zlib_mem_usage Fields




[float]
=== haproxy.info.zlib_mem_usage.value

type: integer



[float]
=== haproxy.info.zlib_mem_usage.max

type: integer



[float]
=== haproxy.info.idle.pct

type: scaled_float

format: percent



[float]
== stat Fields

Stats collected from HAProxy processes.



[float]
=== haproxy.stat.status

type: keyword

Status (UP, DOWN, NOLB, MAINT, or MAINT(via)...).


[float]
=== haproxy.stat.weight

type: long

Total weight (for backends), or server weight (for servers).


[float]
=== haproxy.stat.downtime

type: long

Total downtime (in seconds). For backends, this value is the downtime for the whole backend, not the sum of the downtime for the servers.


[float]
=== haproxy.stat.component_type

type: integer

Component type (0=frontend, 1=backend, 2=server, or 3=socket/listener).


[float]
=== haproxy.stat.process_id

type: integer

Process ID (0 for first instance, 1 for second, and so on).


[float]
=== haproxy.stat.service_name

type: keyword

Service name (FRONTEND for frontend, BACKEND for backend, or any name for server/listener).


[float]
=== haproxy.stat.in.bytes

type: long

format: bytes

Bytes in.


[float]
=== haproxy.stat.out.bytes

type: long

format: bytes

Bytes out.


[float]
=== haproxy.stat.last_change

type: integer

Number of seconds since the last UP->DOWN or DOWN->UP transition.


[float]
=== haproxy.stat.throttle.pct

type: scaled_float

format: percentage

Current throttle percentage for the server when slowstart is active, or no value if slowstart is inactive.


[float]
=== haproxy.stat.selected.total

type: long

Total number of times a server was selected, either for new sessions, or when re-dispatching. For servers, this field reports the the number of times the server was selected.


[float]
=== haproxy.stat.tracked.id

type: long

ID of the proxy/server if tracking is enabled.



[float]
=== haproxy.stat.connection.total

type: long

Cumulative number of connections.


[float]
=== haproxy.stat.connection.retried

type: long

Number of times a connection to a server was retried.


[float]
=== haproxy.stat.connection.time.avg

type: long

Average connect time in ms over the last 1024 requests.



[float]
=== haproxy.stat.request.denied

type: long

Requests denied because of security concerns.

  * For TCP this is because of a matched tcp-request content rule.
  * For HTTP this is because of a matched http-request or tarpit rule.


[float]
=== haproxy.stat.request.queued.current

type: long

Current queued requests. For backends, this field reports the number of requests queued without a server assigned.


[float]
=== haproxy.stat.request.queued.max

type: long

Maximum value of queued.current.


[float]
=== haproxy.stat.request.errors

type: long

Request errors. Some of the possible causes are:

  * early termination from the client, before the request has been sent
  * read error from the client
  * client timeout
  * client closed connection
  * various bad requests from the client.
  * request was tarpitted.


[float]
=== haproxy.stat.request.redispatched

type: long

Number of times a request was redispatched to another server. For servers, this field reports the number of times the server was switched away from.


[float]
=== haproxy.stat.request.connection.errors

type: long

Number of requests that encountered an error trying to connect to a server. For backends, this field reports the sum of the stat for all backend servers, plus any connection errors not associated with a particular server (such as the backend having no active servers).


[float]
== rate Fields




[float]
=== haproxy.stat.request.rate.value

type: long

Number of HTTP requests per second over the last elapsed second.


[float]
=== haproxy.stat.request.rate.max

type: long

Maximum number of HTTP requests per second.


[float]
=== haproxy.stat.request.total

type: long

Total number of HTTP requests received.



[float]
=== haproxy.stat.response.errors

type: long

Number of response errors. This value includes the number of data transfers aborted by the server (haproxy.stat.server.aborted).  Some other errors are:
* write errors on the client socket (won't be counted for the server stat) * failure applying filters to the response


[float]
=== haproxy.stat.response.time.avg

type: long

Average response time in ms over the last 1024 requests (0 for TCP).


[float]
=== haproxy.stat.response.denied

type: integer

Responses denied because of security concerns. For HTTP this is because of a matched http-request rule, or "option checkcache".


[float]
== http Fields




[float]
=== haproxy.stat.response.http.1xx

type: long

HTTP responses with 1xx code.


[float]
=== haproxy.stat.response.http.2xx

type: long

HTTP responses with 2xx code.


[float]
=== haproxy.stat.response.http.3xx

type: long

HTTP responses with 3xx code.


[float]
=== haproxy.stat.response.http.4xx

type: long

HTTP responses with 4xx code.


[float]
=== haproxy.stat.response.http.5xx

type: long

HTTP responses with 5xx code.


[float]
=== haproxy.stat.response.http.other

type: long

HTTP responses with other codes (protocol error).



[float]
=== haproxy.stat.session.current

type: long

Number of current sessions.


[float]
=== haproxy.stat.session.max

type: long

Maximum number of sessions.


[float]
=== haproxy.stat.session.limit

type: long

Configured session limit.



[float]
=== haproxy.stat.session.rate.value

type: integer

Number of sessions per second over the last elapsed second.


[float]
=== haproxy.stat.session.rate.limit

type: integer

Configured limit on new sessions per second.


[float]
=== haproxy.stat.session.rate.max

type: integer

Maximum number of new sessions per second.


[float]
== check Fields




[float]
=== haproxy.stat.check.status

type: keyword

Status of the last health check. One of:

  UNK     -> unknown
  INI     -> initializing
  SOCKERR -> socket error
  L4OK    -> check passed on layer 4, no upper layers testing enabled
  L4TOUT  -> layer 1-4 timeout
  L4CON   -> layer 1-4 connection problem, for example
            "Connection refused" (tcp rst) or "No route to host" (icmp)
  L6OK    -> check passed on layer 6
  L6TOUT  -> layer 6 (SSL) timeout
  L6RSP   -> layer 6 invalid response - protocol error
  L7OK    -> check passed on layer 7
  L7OKC   -> check conditionally passed on layer 7, for example 404 with
            disable-on-404
  L7TOUT  -> layer 7 (HTTP/SMTP) timeout
  L7RSP   -> layer 7 invalid response - protocol error
  L7STS   -> layer 7 response error, for example HTTP 5xx


[float]
=== haproxy.stat.check.code

type: long

Layer 5-7 code, if available.


[float]
=== haproxy.stat.check.duration

type: long

Time in ms that it took to finish the last health check.


[float]
=== haproxy.stat.check.health.last

type: long



[float]
=== haproxy.stat.check.health.fail

type: long



[float]
=== haproxy.stat.check.agent.last

type: integer



[float]
=== haproxy.stat.check.failed

type: long

Number of checks that failed while the server was up.


[float]
=== haproxy.stat.check.down

type: long

Number of UP->DOWN transitions. For backends, this value is the number of transitions to the whole backend being down, rather than the sum of the transitions for each server.


[float]
=== haproxy.stat.client.aborted

type: integer

Number of data transfers aborted by the client.


[float]
== server Fields




[float]
=== haproxy.stat.server.id

type: integer

Server ID (unique inside a proxy).


[float]
=== haproxy.stat.server.aborted

type: integer

Number of data transfers aborted by the server. This value is included in haproxy.stat.response.errors.


[float]
=== haproxy.stat.server.active

type: integer

Number of backend servers that are active, meaning that they are healthy and can receive requests from the load balancer. 


[float]
=== haproxy.stat.server.backup

type: integer

Number of backend servers that are backup servers.


[float]
== compressor Fields




[float]
=== haproxy.stat.compressor.in.bytes

type: long

format: bytes

Number of HTTP response bytes fed to the compressor.


[float]
=== haproxy.stat.compressor.out.bytes

type: integer

format: bytes

Number of HTTP response bytes emitted by the compressor.


[float]
=== haproxy.stat.compressor.bypassed.bytes

type: long

format: bytes

Number of bytes that bypassed the HTTP compressor (CPU/BW limit).


[float]
=== haproxy.stat.compressor.response.bytes

type: long

format: bytes

Number of HTTP responses that were compressed.


[float]
== proxy Fields




[float]
=== haproxy.stat.proxy.id

type: integer

Unique proxy ID.


[float]
=== haproxy.stat.proxy.name

type: keyword

Proxy name.


[float]
== queue Fields




[float]
=== haproxy.stat.queue.limit

type: integer

Configured queue limit (maxqueue) for the server, or nothing if the value of maxqueue is 0 (meaning no limit).


[float]
=== haproxy.stat.queue.time.avg

type: integer

The average queue time in ms over the last 1024 requests.


[[exported-fields-http]]
== HTTP Fields

http Module



[float]
== http Fields




[float]
== request Fields

HTTP request information



[float]
=== http.request.header

type: nested

The HTTP headers sent


[float]
=== http.request.method

type: keyword

The HTTP method used


[float]
=== http.request.body

type: keyword

The HTTP payload sent


[float]
== response Fields

HTTP response information



[float]
=== http.response.header

type: nested

The HTTP headers received


[float]
=== http.response.status_code

type: keyword

The HTTP status code


[float]
=== http.response.body

type: keyword

The HTTP payload received


[float]
== json Fields

json metricset


[[exported-fields-jolokia]]
== Jolokia Fields

[]beta
Jolokia Module



[float]
== jolokia Fields

jolokia contains metrics exposed via jolokia agent


[[exported-fields-kafka]]
== kafka Fields

kafka Module
beta[]



[float]
== kafka Fields




[float]
== consumergroup Fields

consumergroup



[float]
== broker Fields

Broker Consumer Group Information have been read from (Broker handling the consumer group).



[float]
=== kafka.consumergroup.broker.id

type: long

Broker id


[float]
=== kafka.consumergroup.broker.address

type: keyword

Broker address


[float]
=== kafka.consumergroup.id

type: keyword

Consumer Group ID

[float]
=== kafka.consumergroup.topic

type: keyword

Topic name

[float]
=== kafka.consumergroup.partition

type: long

Partition ID

[float]
=== kafka.consumergroup.offset

type: long

consumer offset into partition being read

[float]
=== kafka.consumergroup.meta

type: text

custom consumer meta data string

[float]
=== kafka.consumergroup.error.code

type: long

kafka consumer/partition error code.


[float]
== client Fields

Assigned client reading events from partition



[float]
=== kafka.consumergroup.client.id

type: keyword

Client ID (kafka setting client.id)

[float]
=== kafka.consumergroup.client.host

type: keyword

Client host

[float]
=== kafka.consumergroup.client.member_id

type: keyword

internal consumer group member ID

[float]
== partition Fields

partition



[float]
== offset Fields

Available offsets of the given partition.



[float]
=== kafka.partition.offset.newest

type: long

Newest offset of the partition.


[float]
=== kafka.partition.offset.oldest

type: long

Oldest offset of the partition.


[float]
== partition Fields

Partition data.



[float]
=== kafka.partition.partition.id

type: long

Partition id.


[float]
=== kafka.partition.partition.leader

type: long

Leader id (broker).


[float]
=== kafka.partition.partition.isr

type: array

List of isr ids.


[float]
=== kafka.partition.partition.replica

type: long

Replica id (broker).


[float]
=== kafka.partition.partition.insync_replica

type: boolean

Indicates if replica is included in the in-sync replicate set (ISR).


[float]
=== kafka.partition.partition.error.code

type: long

Error code from fetching partition.


[float]
=== kafka.partition.topic.error.code

type: long

topic error code.


[float]
=== kafka.partition.topic.name

type: keyword

Topic name


[float]
=== kafka.partition.broker.id

type: long

Broker id


[float]
=== kafka.partition.broker.address

type: keyword

Broker address


[[exported-fields-kibana]]
== kibana Fields

[]experimental
kibana Module



[float]
== kibana Fields




[float]
== status Fields

Status fields



[float]
=== kibana.status.name

type: keyword

Kibana instance name.


[float]
=== kibana.status.uuid

type: keyword

Kibana instance uuid.


[float]
=== kibana.status.version.number

type: keyword

Kibana version number.


[float]
=== kibana.status.status.overall.state

type: keyword

Kibana overall state.


[float]
== metrics Fields

Metrics fields



[float]
=== kibana.status.metrics.concurrent_connections

type: long

Current concurrent connections.


[float]
== requests Fields

Request statistics.



[float]
=== kibana.status.metrics.requests.disconnects

type: long

Total number of disconnected connections.


[float]
=== kibana.status.metrics.requests.total

type: long

Total number of connections.


[[exported-fields-kubernetes-processor]]
== kubernetes Fields

beta[]
Kubernetes metadata added by the kubernetes processor




[float]
=== kubernetes.pod.name

type: keyword

Kubernetes pod name


[float]
=== kubernetes.namespace

type: keyword

Kubernetes namespace


[float]
=== kubernetes.labels

type: object

Kubernetes labels map


[float]
=== kubernetes.annotations

type: object

Kubernetes annotations map


[float]
=== kubernetes.container.name

type: keyword

Kubernetes container name


[float]
=== kubernetes.container.image

type: keyword

Kubernetes container image


[[exported-fields-kubernetes]]
== kubernetes Fields

beta[]
kubernetes metrics



[float]
== kubernetes Fields

Information and statistics of pods managed by kubernetes.



[float]
== container Fields

kubernetes container metrics



[float]
=== kubernetes.container.start_time

type: date

Start time


[float]
== cpu Fields

CPU usage metrics





[float]
=== kubernetes.container.cpu.usage.core.ns

type: long

Container CPU Core usage nanoseconds


[float]
=== kubernetes.container.cpu.usage.nanocores

type: long

CPU used nanocores


[float]
== logs Fields

Logs info




[float]
=== kubernetes.container.logs.available.bytes

type: long

format: bytes

Logs available capacity in bytes



[float]
=== kubernetes.container.logs.capacity.bytes

type: long

format: bytes

Logs total capacity in bytes



[float]
=== kubernetes.container.logs.used.bytes

type: long

format: bytes

Logs used capacity in bytes



[float]
=== kubernetes.container.logs.inodes.count

type: long

Total available inodes


[float]
=== kubernetes.container.logs.inodes.free

type: long

Total free inodes


[float]
=== kubernetes.container.logs.inodes.used

type: long

Total used inodes




[float]
=== kubernetes.container.memory.available.bytes

type: long

format: bytes

Total available memory



[float]
=== kubernetes.container.memory.usage.bytes

type: long

format: bytes

Total memory usage



[float]
=== kubernetes.container.memory.rss.bytes

type: long

format: bytes

RSS memory usage



[float]
=== kubernetes.container.memory.workingset.bytes

type: long

format: bytes

Working set memory usage


[float]
=== kubernetes.container.memory.pagefaults

type: long

Number of page faults


[float]
=== kubernetes.container.memory.majorpagefaults

type: long

Number of major page faults




[float]
=== kubernetes.container.rootfs.capacity.bytes

type: long

format: bytes

Root filesystem total capacity in bytes



[float]
=== kubernetes.container.rootfs.available.bytes

type: long

format: bytes

Root filesystem total available in bytes



[float]
=== kubernetes.container.rootfs.used.bytes

type: long

format: bytes

Root filesystem total used in bytes



[float]
=== kubernetes.container.rootfs.inodes.used

type: long

Used inodes


[float]
== event Fields

The Kubernetes events metricset collects events that are generated by objects running inside of Kubernetes



[float]
=== kubernetes.event.count

type: long

Count field records the number of times the particular event has occured


[float]
=== kubernetes.event.message

type: keyword

Message recorded for the given event


[float]
=== kubernetes.event.reason

type: keyword

Reason recorded for the given event


[float]
=== kubernetes.event.type

type: keyword

Type of the given event


[float]
== metadata Fields

Metadata associated with the given event




[float]
=== kubernetes.event.metadata.timestamp.created

type: date

Timestamp of creation of the given event


[float]
=== kubernetes.event.metadata.timestamp.deleted

type: date

Timestamp of deletion of the given event


[float]
=== kubernetes.event.metadata.name

type: keyword

Name of the event


[float]
=== kubernetes.event.metadata.namespace

type: keyword

Namespace in which event was generated


[float]
=== kubernetes.event.metadata.resource_version

type: keyword

Version of the event resource


[float]
=== kubernetes.event.metadata.uid

type: keyword

Unique identifier to the event object


[float]
=== kubernetes.event.metadata.self_link

type: keyword

URL representing the event


[float]
== involved_object Fields

Metadata associated with the given involved object



[float]
=== kubernetes.event.involved_object.api_version

type: keyword

API version of the object


[float]
=== kubernetes.event.involved_object.kind

type: keyword

API kind of the object


[float]
=== kubernetes.event.involved_object.name

type: keyword

name of the object


[float]
=== kubernetes.event.involved_object.resource_version

type: keyword

resource version of the object


[float]
=== kubernetes.event.involved_object.uid

type: keyword

UUID version of the object


[float]
== node Fields

kubernetes node metrics



[float]
=== kubernetes.node.name

type: keyword

Node name


[float]
=== kubernetes.node.start_time

type: date

Start time


[float]
== cpu Fields

CPU usage metrics





[float]
=== kubernetes.node.cpu.usage.core.ns

type: long

Node CPU Core usage nanoseconds


[float]
=== kubernetes.node.cpu.usage.nanocores

type: long

CPU used nanocores




[float]
=== kubernetes.node.memory.available.bytes

type: long

format: bytes

Total available memory



[float]
=== kubernetes.node.memory.usage.bytes

type: long

format: bytes

Total memory usage



[float]
=== kubernetes.node.memory.rss.bytes

type: long

format: bytes

RSS memory usage



[float]
=== kubernetes.node.memory.workingset.bytes

type: long

format: bytes

Working set memory usage


[float]
=== kubernetes.node.memory.pagefaults

type: long

Number of page faults


[float]
=== kubernetes.node.memory.majorpagefaults

type: long

Number of major page faults




[float]
=== kubernetes.node.network.rx.bytes

type: long

format: bytes

Received bytes


[float]
=== kubernetes.node.network.rx.errors

type: long

Rx errors



[float]
=== kubernetes.node.network.tx.bytes

type: long

format: bytes

Transmitted bytes


[float]
=== kubernetes.node.network.tx.errors

type: long

Tx errors




[float]
=== kubernetes.node.fs.capacity.bytes

type: long

format: bytes

Filesystem total capacity in bytes



[float]
=== kubernetes.node.fs.available.bytes

type: long

format: bytes

Filesystem total available in bytes



[float]
=== kubernetes.node.fs.used.bytes

type: long

format: bytes

Filesystem total used in bytes



[float]
=== kubernetes.node.fs.inodes.used

type: long

Number of used inodes


[float]
=== kubernetes.node.fs.inodes.count

type: long

Number of inodes


[float]
=== kubernetes.node.fs.inodes.free

type: long

Number of free inodes





[float]
=== kubernetes.node.runtime.imagefs.capacity.bytes

type: long

format: bytes

Image filesystem total capacity in bytes



[float]
=== kubernetes.node.runtime.imagefs.available.bytes

type: long

format: bytes

Image filesystem total available in bytes



[float]
=== kubernetes.node.runtime.imagefs.used.bytes

type: long

format: bytes

Image filesystem total used in bytes


[float]
== pod Fields

kubernetes pod metrics



[float]
=== kubernetes.pod.start_time

type: date

Start time




[float]
=== kubernetes.pod.network.rx.bytes

type: long

format: bytes

Received bytes


[float]
=== kubernetes.pod.network.rx.errors

type: long

Rx errors



[float]
=== kubernetes.pod.network.tx.bytes

type: long

format: bytes

Transmitted bytes


[float]
=== kubernetes.pod.network.tx.errors

type: long

Tx errors


[float]
== container Fields

kubernetes container metrics



[float]
=== kubernetes.container.id

type: keyword

Container id


[float]
=== kubernetes.container.status.phase

type: keyword

Container phase (running, waiting, terminated)


[float]
=== kubernetes.container.status.ready

type: boolean

Container ready status


[float]
=== kubernetes.container.status.restarts

type: integer

Container restarts count



[float]
=== kubernetes.container.cpu.limit.nanocores

type: long

Container CPU nanocores limit


[float]
=== kubernetes.container.cpu.request.nanocores

type: long

Container CPU requested nanocores



[float]
=== kubernetes.container.memory.limit.bytes

type: long

format: bytes

Container memory limit in bytes


[float]
=== kubernetes.container.memory.request.bytes

type: long

format: bytes

Container requested memory in bytes


[float]
== deployment Fields

kubernetes deployment metrics



[float]
=== kubernetes.deployment.name

type: keyword

Kubernetes deployment name


[float]
=== kubernetes.deployment.paused

type: boolean

Kubernetes deployment paused status


[float]
== replicas Fields

Kubernetes deployment replicas info



[float]
=== kubernetes.deployment.replicas.desired

type: integer

Deployment number of desired replicas (spec)


[float]
=== kubernetes.deployment.replicas.available

type: integer

Deployment available replicas


[float]
=== kubernetes.deployment.replicas.unavailable

type: integer

Deployment unavailable replicas


[float]
=== kubernetes.deployment.replicas.updated

type: integer

Deployment updated replicas


[float]
== node Fields

kubernetes node metrics




[float]
=== kubernetes.node.status.ready

type: keyword

Node ready status (true, false or unknown)


[float]
=== kubernetes.node.status.unschedulable

type: boolean

Node unschedulable status



[float]
=== kubernetes.node.cpu.allocatable.cores

type: long

Node CPU allocatable cores


[float]
=== kubernetes.node.cpu.capacity.cores

type: long

Node CPU capacity cores



[float]
=== kubernetes.node.memory.allocatable.bytes

type: long

format: bytes

Node allocatable memory in bytes


[float]
=== kubernetes.node.memory.capacity.bytes

type: long

format: bytes

Node memory capacity in bytes



[float]
=== kubernetes.node.pod.allocatable.total

type: long

Node allocatable pods


[float]
=== kubernetes.node.pod.capacity.total

type: long

Node pod capacity


[float]
== pod Fields

kubernetes pod metrics



[float]
=== kubernetes.pod.ip

type: ip

Kubernetes pod IP


[float]
=== kubernetes.pod.host_ip

type: ip

Kubernetes pod host IP


[float]
== status Fields

Kubernetes pod status metrics



[float]
=== kubernetes.pod.status.phase

type: keyword

Kubernetes pod phase (Running, Pending...)


[float]
=== kubernetes.pod.status.ready

type: keyword

Kubernetes pod ready status (true, false or unknown)


[float]
=== kubernetes.pod.status.scheduled

type: keyword

Kubernetes pod scheduled status (true, false, unknown)


[float]
== replicaset Fields

kubernetes replica set metrics



[float]
=== kubernetes.replicaset.name

type: keyword

Kubernetes replica set name


[float]
== replicas Fields

Kubernetes replica set paused status



[float]
=== kubernetes.replicaset.replicas.available

type: long

The number of replicas per ReplicaSet


[float]
=== kubernetes.replicaset.replicas.desired

type: long

The number of replicas per ReplicaSet


[float]
=== kubernetes.replicaset.replicas.ready

type: long

The number of ready replicas per ReplicaSet


[float]
=== kubernetes.replicaset.replicas.observed

type: long

The generation observed by the ReplicaSet controller


[float]
=== kubernetes.replicaset.replicas.labeled

type: long

The number of fully labeled replicas per ReplicaSet


[float]
== system Fields

kubernetes system containers metrics



[float]
=== kubernetes.system.container

type: keyword

Container name


[float]
=== kubernetes.system.start_time

type: date

Start time


[float]
== cpu Fields

CPU usage metrics





[float]
=== kubernetes.system.cpu.usage.core.ns

type: long

CPU Core usage nanoseconds


[float]
=== kubernetes.system.cpu.usage.nanocores

type: long

CPU used nanocores




[float]
=== kubernetes.system.memory.usage.bytes

type: long

format: bytes

Total memory usage



[float]
=== kubernetes.system.memory.rss.bytes

type: long

format: bytes

RSS memory usage



[float]
=== kubernetes.system.memory.workingset.bytes

type: long

format: bytes

Working set memory usage


[float]
=== kubernetes.system.memory.pagefaults

type: long

Number of page faults


[float]
=== kubernetes.system.memory.majorpagefaults

type: long

Number of major page faults


[float]
== volume Fields

kubernetes volume metrics



[float]
=== kubernetes.volume.name

type: keyword

Volume name




[float]
=== kubernetes.volume.fs.capacity.bytes

type: long

format: bytes

Filesystem total capacity in bytes



[float]
=== kubernetes.volume.fs.available.bytes

type: long

format: bytes

Filesystem total available in bytes



[float]
=== kubernetes.volume.fs.used.bytes

type: long

format: bytes

Filesystem total used in bytes



[float]
=== kubernetes.volume.fs.inodes.used

type: long

Used inodes


[float]
=== kubernetes.volume.fs.inodes.free

type: long

Free inodes


[float]
=== kubernetes.volume.fs.inodes.count

type: long

Total inodes


[[exported-fields-memcached]]
== memcached Fields

[]beta
memcached Module



[float]
== memcached Fields




[float]
== stats Fields

stats



[float]
=== memcached.stats.pid

type: long

Current process ID of the Memcached task.


[float]
=== memcached.stats.uptime.sec

type: long

Memcached server uptime.


[float]
=== memcached.stats.threads

type: long

Number of threads used by the current Memcached server process.


[float]
=== memcached.stats.connections.current

type: long

Number of open connections to this Memcached server, should be the same value on all servers during normal operation.


[float]
=== memcached.stats.connections.total

type: long

Numer of successful connect attempts to this server since it has been started.


[float]
=== memcached.stats.get.hits

type: long

Number of successful "get" commands (cache hits) since startup, divide them by the "cmd_get" value to get the cache hitrate.


[float]
=== memcached.stats.get.misses

type: long

Number of failed "get" requests because nothing was cached for this key or the cached value was too old.


[float]
=== memcached.stats.cmd.get

type: long

Number of "get" commands received since server startup not counting if they were successful or not.


[float]
=== memcached.stats.cmd.set

type: long

Number of "set" commands serviced since startup.


[float]
=== memcached.stats.read.bytes

type: long

Total number of bytes received from the network by this server.


[float]
=== memcached.stats.written.bytes

type: long

Total number of bytes send to the network by this server.


[float]
=== memcached.stats.items.current

type: long

Number of items currently in this server's cache.


[float]
=== memcached.stats.items.total

type: long

Number of items stored ever stored on this server. This is no "maximum item count" value but a counted increased by every new item stored in the cache.


[float]
=== memcached.stats.evictions

type: long

Number of objects removed from the cache to free up memory for new items because Memcached reached it's maximum memory setting (limit_maxbytes).


[[exported-fields-mongodb]]
== MongoDB Fields

Metrics collected from MongoDB servers.



[float]
== mongodb Fields

MongoDB metrics.



[float]
== dbstats Fields

dbstats provides an overview of a particular mongo database. This document is most concerned with data volumes of a database.



[float]
=== mongodb.dbstats.avg_obj_size.bytes

type: long

format: bytes

[float]
=== mongodb.dbstats.collections

type: integer

[float]
=== mongodb.dbstats.data_size.bytes

type: long

format: bytes

[float]
=== mongodb.dbstats.db

type: keyword

[float]
=== mongodb.dbstats.file_size.bytes

type: long

format: bytes

[float]
=== mongodb.dbstats.index_size.bytes

type: long

format: bytes

[float]
=== mongodb.dbstats.indexes

type: long

[float]
=== mongodb.dbstats.num_extents

type: long

[float]
=== mongodb.dbstats.objects

type: long

[float]
=== mongodb.dbstats.storage_size.bytes

type: long

format: bytes

[float]
=== mongodb.dbstats.ns_size_mb.mb

type: long


[float]
=== mongodb.dbstats.data_file_version.major

type: long

[float]
=== mongodb.dbstats.data_file_version.minor

type: long


[float]
=== mongodb.dbstats.extent_free_list.num

type: long

[float]
=== mongodb.dbstats.extent_free_list.size.bytes

type: long

format: bytes

[float]
== status Fields

MongoDB server status metrics.



[float]
=== mongodb.status.version

type: keyword

Instance version.


[float]
=== mongodb.status.uptime.ms

type: long

Instance uptime in milliseconds.


[float]
=== mongodb.status.local_time

type: date

Local time as reported by the MongoDB instance.


[float]
=== mongodb.status.asserts.regular

type: long

Number of regular assertions produced by the server.


[float]
=== mongodb.status.asserts.warning

type: long

Number of warning assertions produced by the server.


[float]
=== mongodb.status.asserts.msg

type: long

Number of msg assertions produced by the server.


[float]
=== mongodb.status.asserts.user

type: long

Number of user assertions produced by the server.


[float]
=== mongodb.status.asserts.rollovers

type: long

Number of rollovers assertions produced by the server.


[float]
== background_flushing Fields

Data about the process MongoDB uses to write data to disk. This data is only available for instances that use the MMAPv1 storage engine.



[float]
=== mongodb.status.background_flushing.flushes

type: long

A counter that collects the number of times the database has flushed all writes to disk.


[float]
=== mongodb.status.background_flushing.total.ms

type: long

The total number of milliseconds (ms) that the mongod processes have spent writing (i.e. flushing) data to disk. Because this is an absolute value, consider the value of `flushes` and `average_ms` to provide better context for this datum.


[float]
=== mongodb.status.background_flushing.average.ms

type: long

The average time spent flushing to disk per flush event.


[float]
=== mongodb.status.background_flushing.last.ms

type: long

The amount of time, in milliseconds, that the last flush operation took to complete.


[float]
=== mongodb.status.background_flushing.last_finished

type: date

A timestamp of the last completed flush operation.


[float]
== connections Fields

Data regarding the current status of incoming connections and availability of the database server.



[float]
=== mongodb.status.connections.current

type: long

The number of connections to the database server from clients. This number includes the current shell session. Consider the value of `available` to add more context to this datum.


[float]
=== mongodb.status.connections.available

type: long

The number of unused available incoming connections the database can provide.


[float]
=== mongodb.status.connections.total_created

type: long

A count of all incoming connections created to the server. This number includes connections that have since closed.


[float]
== journaling Fields

Data about the journaling-related operations and performance. Journaling information only appears for mongod instances that use the MMAPv1 storage engine and have journaling enabled.



[float]
=== mongodb.status.journaling.commits

type: long

The number of transactions written to the journal during the last journal group commit interval.


[float]
=== mongodb.status.journaling.journaled.mb

type: long

The amount of data in megabytes (MB) written to journal during the last journal group commit interval.


[float]
=== mongodb.status.journaling.write_to_data_files.mb

type: long

The amount of data in megabytes (MB) written from journal to the data files during the last journal group commit interval.


[float]
=== mongodb.status.journaling.compression

type: long

The compression ratio of the data written to the journal.


[float]
=== mongodb.status.journaling.commits_in_write_lock

type: long

Count of the commits that occurred while a write lock was held. Commits in a write lock indicate a MongoDB node under a heavy write load and call for further diagnosis.


[float]
=== mongodb.status.journaling.early_commits

type: long

The number of times MongoDB requested a commit before the scheduled journal group commit interval.


[float]
== times Fields

Information about the performance of the mongod instance during the various phases of journaling in the last journal group commit interval.



[float]
=== mongodb.status.journaling.times.dt.ms

type: long

The amount of time over which MongoDB collected the times data. Use this field to provide context to the other times field values.


[float]
=== mongodb.status.journaling.times.prep_log_buffer.ms

type: long

The amount of time spent preparing to write to the journal. Smaller values indicate better journal performance.


[float]
=== mongodb.status.journaling.times.write_to_journal.ms

type: long

The amount of time spent actually writing to the journal. File system speeds and device interfaces can affect performance.


[float]
=== mongodb.status.journaling.times.write_to_data_files.ms

type: long

The amount of time spent writing to data files after journaling. File system speeds and device interfaces can affect performance.


[float]
=== mongodb.status.journaling.times.remap_private_view.ms

type: long

The amount of time spent remapping copy-on-write memory mapped views. Smaller values indicate better journal performance.


[float]
=== mongodb.status.journaling.times.commits.ms

type: long

The amount of time spent for commits.


[float]
=== mongodb.status.journaling.times.commits_in_write_lock.ms

type: long

The amount of time spent for commits that occurred while a write lock was held.


[float]
== extra_info Fields

Platform specific data.



[float]
=== mongodb.status.extra_info.heap_usage.bytes

type: long

format: bytes

The total size in bytes of heap space used by the database process. Only available on Unix/Linux.


[float]
=== mongodb.status.extra_info.page_faults

type: long

The total number of page faults that require disk operations. Page faults refer to operations that require the database server to access data that isn't available in active memory.


[float]
== network Fields

Platform specific data.



[float]
=== mongodb.status.network.in.bytes

type: long

format: bytes

The amount of network traffic, in bytes, received by this database.


[float]
=== mongodb.status.network.out.bytes

type: long

format: bytes

The amount of network traffic, in bytes, sent from this database.


[float]
=== mongodb.status.network.requests

type: long

The total number of requests received by the server.


[float]
== opcounters Fields

An overview of database operations by type.



[float]
=== mongodb.status.opcounters.insert

type: long

The total number of insert operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.query

type: long

The total number of queries received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.update

type: long

The total number of update operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.delete

type: long

The total number of delete operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.getmore

type: long

The total number of getmore operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.command

type: long

The total number of commands issued to the database since the mongod instance last started.


[float]
== opcounters_replicated Fields

An overview of database replication operations by type.



[float]
=== mongodb.status.opcounters_replicated.insert

type: long

The total number of replicated insert operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.query

type: long

The total number of replicated queries received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.update

type: long

The total number of replicated update operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.delete

type: long

The total number of replicated delete operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.getmore

type: long

The total number of replicated getmore operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.command

type: long

The total number of replicated commands issued to the database since the mongod instance last started.


[float]
== memory Fields

Data about the current memory usage of the mongod server.



[float]
=== mongodb.status.memory.bits

type: long

Either 64 or 32, depending on which target architecture was specified during the mongod compilation process.


[float]
=== mongodb.status.memory.resident.mb

type: long

The amount of RAM, in megabytes (MB), currently used by the database process.


[float]
=== mongodb.status.memory.virtual.mb

type: long

The amount, in megabytes (MB), of virtual memory used by the mongod process.


[float]
=== mongodb.status.memory.mapped.mb

type: long

The amount of mapped memory, in megabytes (MB), used by the database. Because MongoDB uses memory-mapped files, this value is likely to be to be roughly equivalent to the total size of your database or databases.


[float]
=== mongodb.status.memory.mapped_with_journal.mb

type: long

The amount of mapped memory, in megabytes (MB), including the memory used for journaling.


[float]
=== mongodb.status.write_backs_queued

type: boolean

True when there are operations from a mongos instance queued for retrying.


[float]
=== mongodb.status.storage_engine.name

type: keyword

A string that represents the name of the current storage engine.


[float]
== wired_tiger Fields

Statistics about the WiredTiger storage engine.



[float]
== concurrent_transactions Fields

Statistics about the transactions currently in progress.



[float]
=== mongodb.status.wired_tiger.concurrent_transactions.write.out

type: long

Number of concurrent write transaction in progress.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.write.available

type: long

Number of concurrent write tickets available.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.write.total_tickets

type: long

Number of total write tickets.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.read.out

type: long

Number of concurrent read transaction in progress.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.read.available

type: long

Number of concurrent read tickets available.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.read.total_tickets

type: long

Number of total read tickets.


[float]
== cache Fields

Statistics about the cache and page evictions from the cache.



[float]
=== mongodb.status.wired_tiger.cache.maximum.bytes

type: long

format: bytes

Maximum cache size.


[float]
=== mongodb.status.wired_tiger.cache.used.bytes

type: long

format: bytes

Size in byte of the data currently in cache.


[float]
=== mongodb.status.wired_tiger.cache.dirty.bytes

type: long

format: bytes

Size in bytes of the dirty data in the cache.


[float]
=== mongodb.status.wired_tiger.cache.pages.read

type: long

Number of pages read into the cache.


[float]
=== mongodb.status.wired_tiger.cache.pages.write

type: long

Number of pages written from the cache.


[float]
=== mongodb.status.wired_tiger.cache.pages.evicted

type: long

Number of pages evicted from the cache.


[float]
== log Fields

Statistics about the write ahead log used by WiredTiger.



[float]
=== mongodb.status.wired_tiger.log.size.bytes

type: long

format: bytes

Total log size in bytes.


[float]
=== mongodb.status.wired_tiger.log.write.bytes

type: long

format: bytes

Number of bytes written into the log.


[float]
=== mongodb.status.wired_tiger.log.max_file_size.bytes

type: long

format: bytes

Maximum file size.


[float]
=== mongodb.status.wired_tiger.log.flushes

type: long

Number of flush operations.


[float]
=== mongodb.status.wired_tiger.log.writes

type: long

Number of write operations.


[float]
=== mongodb.status.wired_tiger.log.scans

type: long

Number of scan operations.


[float]
=== mongodb.status.wired_tiger.log.syncs

type: long

Number of sync operations.


[[exported-fields-mysql]]
== MySQL Fields

MySQL server status metrics collected from MySQL.



[float]
== mysql Fields

`mysql` contains the metrics that were obtained from MySQL query.



[float]
== status Fields

`status` contains the metrics that were obtained by the status SQL query.



[float]
== aborted Fields

Aborted status fields.



[float]
=== mysql.status.aborted.clients

type: long

The number of connections that were aborted because the client died without closing the connection properly.


[float]
=== mysql.status.aborted.connects

type: long

The number of failed attempts to connect to the MySQL server.


[float]
== binlog Fields




[float]
=== mysql.status.binlog.cache.disk_use

type: long



[float]
=== mysql.status.binlog.cache.use

type: long



[float]
== bytes Fields

Bytes stats.



[float]
=== mysql.status.bytes.received

type: long

format: bytes

The number of bytes received from all clients.


[float]
=== mysql.status.bytes.sent

type: long

format: bytes

The number of bytes sent to all clients.


[float]
== threads Fields

Threads stats.



[float]
=== mysql.status.threads.cached

type: long

The number of cached threads.


[float]
=== mysql.status.threads.created

type: long

The number of created threads.


[float]
=== mysql.status.threads.connected

type: long

The number of connected threads.


[float]
=== mysql.status.threads.running

type: long

The number of running threads.


[float]
=== mysql.status.connections

type: long



[float]
== created Fields




[float]
=== mysql.status.created.tmp.disk_tables

type: long



[float]
=== mysql.status.created.tmp.files

type: long



[float]
=== mysql.status.created.tmp.tables

type: long



[float]
== delayed Fields




[float]
=== mysql.status.delayed.errors

type: long



[float]
=== mysql.status.delayed.insert_threads

type: long



[float]
=== mysql.status.delayed.writes

type: long



[float]
=== mysql.status.flush_commands

type: long



[float]
=== mysql.status.max_used_connections

type: long



[float]
== open Fields




[float]
=== mysql.status.open.files

type: long



[float]
=== mysql.status.open.streams

type: long



[float]
=== mysql.status.open.tables

type: long



[float]
=== mysql.status.opened_tables

type: long



[float]
== command Fields




[float]
=== mysql.status.command.delete

type: long

The number of DELETE queries since startup.


[float]
=== mysql.status.command.insert

type: long

The number of INSERT queries since startup.


[float]
=== mysql.status.command.select

type: long

The number of SELECT queries since startup.


[float]
=== mysql.status.command.update

type: long

The number of UPDATE queries since startup.


[[exported-fields-nginx]]
== Nginx Fields

Nginx server status metrics collected from various modules.



[float]
== nginx Fields

`nginx` contains the metrics that were scraped from nginx.



[float]
== stubstatus Fields

`stubstatus` contains the metrics that were scraped from the ngx_http_stub_status_module status page.



[float]
=== nginx.stubstatus.hostname

type: keyword

Nginx hostname.


[float]
=== nginx.stubstatus.active

type: long

The current number of active client connections including Waiting connections.


[float]
=== nginx.stubstatus.accepts

type: long

The total number of accepted client connections.


[float]
=== nginx.stubstatus.handled

type: long

The total number of handled client connections.


[float]
=== nginx.stubstatus.dropped

type: long

The total number of dropped client connections.


[float]
=== nginx.stubstatus.requests

type: long

The total number of client requests.


[float]
=== nginx.stubstatus.current

type: long

The current number of client requests.


[float]
=== nginx.stubstatus.reading

type: long

The current number of connections where Nginx is reading the request header.


[float]
=== nginx.stubstatus.writing

type: long

The current number of connections where Nginx is writing the response back to the client.


[float]
=== nginx.stubstatus.waiting

type: long

The current number of idle client connections waiting for a request.


[[exported-fields-php_fpm]]
== php_fpm Fields

beta[]
PHP-FPM server status metrics collected from PHP-FPM.



[float]
== php_fpm Fields

`php_fpm` contains the metrics that were obtained from PHP-FPM status page call.



[float]
== pool Fields

`pool` contains the metrics that were obtained from the PHP-FPM process pool.



[float]
=== php_fpm.pool.name

type: keyword

The name of the pool.


[float]
== connections Fields

Connection state specific statistics.



[float]
=== php_fpm.pool.connections.accepted

type: long

The number of incoming requests that the PHP-FPM server has accepted; when a connection is accepted it is removed from the listen queue.


[float]
=== php_fpm.pool.connections.queued

type: long

The current number of connections that have been initiated, but not yet accepted. If this value is non-zero it typically means that all the available server processes are currently busy, and there are no processes available to serve the next request. Raising `pm.max_children` (provided the server can handle it) should help keep this number low. This property follows from the fact that PHP-FPM listens via a socket (TCP or file based), and thus inherits some of the characteristics of sockets.


[float]
== processes Fields

Process state specific statistics.



[float]
=== php_fpm.pool.processes.idle

type: long

The number of servers in the `waiting to process` state (i.e. not currently serving a page). This value should fall between the `pm.min_spare_servers` and `pm.max_spare_servers` values when the process manager is `dynamic`.


[float]
=== php_fpm.pool.processes.active

type: long

The number of servers current processing a page - the minimum is `1` (so even on a fully idle server, the result will be not read `0`).


[float]
=== php_fpm.pool.slow_requests

type: long

The number of times a request execution time has exceeded `request_slowlog_timeout`.


[[exported-fields-postgresql]]
== PostgreSQL Fields

Metrics collected from PostgreSQL servers.



[float]
== postgresql Fields

PostgreSQL metrics.



[float]
== activity Fields

One document per server process, showing information related to the current activity of that process, such as state and current query. Collected by querying pg_stat_activity.



[float]
=== postgresql.activity.database.oid

type: long

OID of the database this backend is connected to.


[float]
=== postgresql.activity.database.name

type: keyword

Name of the database this backend is connected to.


[float]
=== postgresql.activity.pid

type: long

Process ID of this backend.


[float]
=== postgresql.activity.user.id

type: long

OID of the user logged into this backend.


[float]
=== postgresql.activity.user.name

Name of the user logged into this backend.


[float]
=== postgresql.activity.application_name

Name of the application that is connected to this backend.


[float]
=== postgresql.activity.client.address

IP address of the client connected to this backend.


[float]
=== postgresql.activity.client.hostname

Host name of the connected client, as reported by a reverse DNS lookup of client_addr.


[float]
=== postgresql.activity.client.port

type: long

TCP port number that the client is using for communication with this backend, or -1 if a Unix socket is used.


[float]
=== postgresql.activity.backend_start

type: date

Time when this process was started, i.e., when the client connected to the server.


[float]
=== postgresql.activity.transaction_start

type: date

Time when this process' current transaction was started.


[float]
=== postgresql.activity.query_start

type: date

Time when the currently active query was started, or if state is not active, when the last query was started.


[float]
=== postgresql.activity.state_change

type: date

Time when the state was last changed.


[float]
=== postgresql.activity.waiting

type: boolean

True if this backend is currently waiting on a lock.


[float]
=== postgresql.activity.state

Current overall state of this backend. Possible values are:

  * active: The backend is executing a query.
  * idle: The backend is waiting for a new client command.
  * idle in transaction: The backend is in a transaction, but is not
    currently executing a query.
  * idle in transaction (aborted): This state is similar to idle in
    transaction, except one of the statements in the transaction caused
    an error.
  * fastpath function call: The backend is executing a fast-path function.
  * disabled: This state is reported if track_activities is disabled in this backend.


[float]
=== postgresql.activity.query

Text of this backend's most recent query. If state is active this field shows the currently executing query. In all other states, it shows the last query that was executed.


[float]
== bgwriter Fields

Statistics about the background writer process's activity. Collected using the pg_stat_bgwriter query.



[float]
=== postgresql.bgwriter.checkpoints.scheduled

type: long

Number of scheduled checkpoints that have been performed.


[float]
=== postgresql.bgwriter.checkpoints.requested

type: long

Number of requested checkpoints that have been performed.


[float]
=== postgresql.bgwriter.checkpoints.times.write.ms

type: float

Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in milliseconds.


[float]
=== postgresql.bgwriter.checkpoints.times.sync.ms

type: float

Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in milliseconds.


[float]
=== postgresql.bgwriter.buffers.checkpoints

type: long

Number of buffers written during checkpoints.


[float]
=== postgresql.bgwriter.buffers.clean

type: long

Number of buffers written by the background writer.


[float]
=== postgresql.bgwriter.buffers.clean_full

type: long

Number of times the background writer stopped a cleaning scan because it had written too many buffers.


[float]
=== postgresql.bgwriter.buffers.backend

type: long

Number of buffers written directly by a backend.


[float]
=== postgresql.bgwriter.buffers.backend_fsync

type: long

Number of times a backend had to execute its own fsync call (normally the background writer handles those even when the backend does its own write)


[float]
=== postgresql.bgwriter.buffers.allocated

type: long

Number of buffers allocated.


[float]
=== postgresql.bgwriter.stats_reset

type: date

Time at which these statistics were last reset.


[float]
== database Fields

One row per database, showing database-wide statistics. Collected by querying pg_stat_database



[float]
=== postgresql.database.oid

type: long

OID of the database this backend is connected to.


[float]
=== postgresql.database.name

type: keyword

Name of the database this backend is connected to.


[float]
=== postgresql.database.number_of_backends

type: long

Number of backends currently connected to this database.


[float]
=== postgresql.database.transactions.commit

type: long

Number of transactions in this database that have been committed.


[float]
=== postgresql.database.transactions.rollback

type: long

Number of transactions in this database that have been rolled back.


[float]
=== postgresql.database.blocks.read

type: long

Number of disk blocks read in this database.


[float]
=== postgresql.database.blocks.hit

type: long

Number of times disk blocks were found already in the buffer cache, so that a read was not necessary (this only includes hits in the PostgreSQL buffer cache, not the operating system's file system cache).


[float]
=== postgresql.database.blocks.time.read.ms

type: long

Time spent reading data file blocks by backends in this database, in milliseconds.


[float]
=== postgresql.database.blocks.time.write.ms

type: long

Time spent writing data file blocks by backends in this database, in milliseconds.


[float]
=== postgresql.database.rows.returned

type: long

Number of rows returned by queries in this database.


[float]
=== postgresql.database.rows.fetched

type: long

Number of rows fetched by queries in this database.


[float]
=== postgresql.database.rows.inserted

type: long

Number of rows inserted by queries in this database.


[float]
=== postgresql.database.rows.updated

type: long

Number of rows updated by queries in this database.


[float]
=== postgresql.database.rows.deleted

type: long

Number of rows deleted by queries in this database.


[float]
=== postgresql.database.conflicts

type: long

Number of queries canceled due to conflicts with recovery in this database.


[float]
=== postgresql.database.temporary.files

type: long

Number of temporary files created by queries in this database. All temporary files are counted, regardless of why the temporary file was created (e.g., sorting or hashing), and regardless of the log_temp_files setting.


[float]
=== postgresql.database.temporary.bytes

type: long

Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.


[float]
=== postgresql.database.deadlocks

type: long

Number of deadlocks detected in this database.


[float]
=== postgresql.database.stats_reset

type: date

Time at which these statistics were last reset.


[[exported-fields-prometheus]]
== Prometheus Fields

beta[]
Stats collected from Prometheus.



[float]
== prometheus Fields




[float]
== stats Fields

Stats about the Prometheus server.



[float]
== notifications Fields

Notification stats.



[float]
=== prometheus.stats.notifications.queue_length

type: long

Current queue length.


[float]
=== prometheus.stats.notifications.dropped

type: long

Number of dropped queue events.


[float]
=== prometheus.stats.processes.open_fds

type: long

Number of open file descriptors.


[float]
=== prometheus.stats.storage.chunks_to_persist

type: long

Number of memory chunks that are not yet persisted to disk.


[[exported-fields-redis]]
== Redis Fields

Redis metrics collected from Redis.



[float]
== redis Fields

`redis` contains the information and statistics from Redis.



[float]
== info Fields

`info` contains the information and statistics returned by the `INFO` command.



[float]
== clients Fields

Redis client stats.



[float]
=== redis.info.clients.connected

type: long

Number of client connections (excluding connections from slaves).


[float]
=== redis.info.clients.longest_output_list

type: long

Longest output list among current client connections.


[float]
=== redis.info.clients.biggest_input_buf

type: long

Biggest input buffer among current client connections.


[float]
=== redis.info.clients.blocked

type: long

Number of clients pending on a blocking call (BLPOP, BRPOP, BRPOPLPUSH).


[float]
== cluster Fields

Redis cluster information.



[float]
=== redis.info.cluster.enabled

type: boolean

Indicates that the Redis cluster is enabled.


[float]
== cpu Fields

Redis CPU stats



[float]
=== redis.info.cpu.used.sys

type: scaled_float

System CPU consumed by the Redis server.


[float]
=== redis.info.cpu.used.sys_children

type: scaled_float

User CPU consumed by the Redis server.


[float]
=== redis.info.cpu.used.user

type: scaled_float

System CPU consumed by the background processes.


[float]
=== redis.info.cpu.used.user_children

type: scaled_float

User CPU consumed by the background processes.


[float]
== memory Fields

Redis memory stats.



[float]
=== redis.info.memory.used.value

type: long

format: bytes Used memory.



[float]
=== redis.info.memory.used.rss

type: long

format: bytes

Used memory rss.


[float]
=== redis.info.memory.used.peak

type: long

format: bytes

Used memory peak.


[float]
=== redis.info.memory.used.lua

type: long

format: bytes

Used memory lua.


[float]
=== redis.info.memory.allocator

type: keyword

Memory allocator.


[float]
== persistence Fields

Redis CPU stats.



[float]
=== redis.info.persistence.loading

type: boolean

None

[float]
== rdb Fields

None


[float]
=== redis.info.persistence.rdb.last_save.changes_since

type: long

None

[float]
=== redis.info.persistence.rdb.bgsave.in_progress

type: boolean

None

[float]
=== redis.info.persistence.rdb.last_save.time

type: long

None

[float]
=== redis.info.persistence.rdb.bgsave.last_status

type: keyword

None

[float]
=== redis.info.persistence.rdb.bgsave.last_time.sec

type: long

None

[float]
=== redis.info.persistence.rdb.bgsave.current_time.sec

type: long

None

[float]
== aof Fields

None


[float]
=== redis.info.persistence.aof.enabled

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite.in_progress

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite.scheduled

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite.last_time.sec

type: long

None

[float]
=== redis.info.persistence.aof.rewrite.current_time.sec

type: long

None

[float]
=== redis.info.persistence.aof.bgrewrite.last_status

type: keyword

None

[float]
=== redis.info.persistence.aof.write.last_status

type: keyword

None

[float]
== replication Fields

Replication



[float]
=== redis.info.replication.role

type: keyword

None

[float]
=== redis.info.replication.connected_slaves

type: long

None

[float]
=== redis.info.replication.master_offset

type: long

None

[float]
=== redis.info.replication.backlog.active

type: long

None

[float]
=== redis.info.replication.backlog.size

type: long

None

[float]
=== redis.info.replication.backlog.first_byte_offset

type: long

None

[float]
=== redis.info.replication.backlog.histlen

type: long

None

[float]
== server Fields

Server info



[float]
=== redis.info.server.version

type: keyword

None

[float]
=== redis.info.server.git_sha1

type: keyword

None

[float]
=== redis.info.server.git_dirty

type: keyword

None

[float]
=== redis.info.server.build_id

type: keyword

None

[float]
=== redis.info.server.mode

type: keyword

None

[float]
=== redis.info.server.os

type: keyword

None

[float]
=== redis.info.server.arch_bits

type: keyword

None

[float]
=== redis.info.server.multiplexing_api

type: keyword

None

[float]
=== redis.info.server.gcc_version

type: keyword

None

[float]
=== redis.info.server.process_id

type: long

None

[float]
=== redis.info.server.run_id

type: keyword

None

[float]
=== redis.info.server.tcp_port

type: long

None

[float]
=== redis.info.server.uptime

type: long

None

[float]
=== redis.info.server.hz

type: long

None

[float]
=== redis.info.server.lru_clock

type: long

None

[float]
=== redis.info.server.config_file

type: keyword

None

[float]
== stats Fields

Redis stats.



[float]
=== redis.info.stats.connections.received

type: long

Total number of connections received.

[float]
=== redis.info.stats.connections.rejected

type: long

Total number of connections rejected.

[float]
=== redis.info.stats.commands_processed

type: long

Total number of commands preocessed.

[float]
=== redis.info.stats.net.input.bytes

type: long

Total network input in bytes.

[float]
=== redis.info.stats.net.output.bytes

type: long

Total network output in bytes.

[float]
=== redis.info.stats.instantaneous.ops_per_sec

type: long

None

[float]
=== redis.info.stats.instantaneous.input_kbps

type: scaled_float

None

[float]
=== redis.info.stats.instantaneous.output_kbps

type: scaled_float

None

[float]
=== redis.info.stats.sync.full

type: long

None

[float]
=== redis.info.stats.sync.partial.ok

type: long

None

[float]
=== redis.info.stats.sync.partial.err

type: long

None

[float]
=== redis.info.stats.keys.expired

type: long

None

[float]
=== redis.info.stats.keys.evicted

type: long

None

[float]
=== redis.info.stats.keyspace.hits

type: long

None

[float]
=== redis.info.stats.keyspace.misses

type: long

None

[float]
=== redis.info.stats.pubsub.channels

type: long

None

[float]
=== redis.info.stats.pubsub.patterns

type: long

None

[float]
=== redis.info.stats.latest_fork_usec

type: long

None

[float]
=== redis.info.stats.migrate_cached_sockets

type: long

None

[float]
== keyspace Fields

`keyspace` contains the information about the keyspaces returned by the `INFO` command.



[float]
=== redis.keyspace.id

type: keyword

Keyspace identifier.


[float]
=== redis.keyspace.avg_ttl

type: long

Average ttl.


[float]
=== redis.keyspace.keys

type: long

Number of keys in the keyspace.


[float]
=== redis.keyspace.expires

type: long



[[exported-fields-system]]
== System Fields

System status metrics, like CPU and memory usage, that are collected from the operating system.



[float]
== system Fields

`system` contains local system metrics.



[float]
== core Fields

`system-core` contains local CPU core stats.



[float]
=== system.core.id

type: long

CPU Core number.


[float]
=== system.core.user.pct

type: scaled_float

format: percent

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


[float]
=== system.core.user.ticks

type: long

The amount of CPU time spent in user space.


[float]
=== system.core.system.pct

type: scaled_float

format: percent

The percentage of CPU time spent in kernel space.


[float]
=== system.core.system.ticks

type: long

The amount of CPU time spent in kernel space.


[float]
=== system.core.nice.pct

type: scaled_float

format: percent

The percentage of CPU time spent on low-priority processes.


[float]
=== system.core.nice.ticks

type: long

The amount of CPU time spent on low-priority processes.


[float]
=== system.core.idle.pct

type: scaled_float

format: percent

The percentage of CPU time spent idle.


[float]
=== system.core.idle.ticks

type: long

The amount of CPU time spent idle.


[float]
=== system.core.iowait.pct

type: scaled_float

format: percent

The percentage of CPU time spent in wait (on disk).


[float]
=== system.core.iowait.ticks

type: long

The amount of CPU time spent in wait (on disk).


[float]
=== system.core.irq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.core.irq.ticks

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.core.softirq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling software interrupts.


[float]
=== system.core.softirq.ticks

type: long

The amount of CPU time spent servicing and handling software interrupts.


[float]
=== system.core.steal.pct

type: scaled_float

format: percent

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== system.core.steal.ticks

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
== cpu Fields

`cpu` contains local CPU stats.



[float]
=== system.cpu.cores

type: long

The number of CPU cores.


[float]
=== system.cpu.user.pct

type: scaled_float

format: percent

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


[float]
=== system.cpu.system.pct

type: scaled_float

format: percent

The percentage of CPU time spent in kernel space.


[float]
=== system.cpu.nice.pct

type: scaled_float

format: percent

The percentage of CPU time spent on low-priority processes.


[float]
=== system.cpu.idle.pct

type: scaled_float

format: percent

The percentage of CPU time spent idle.


[float]
=== system.cpu.iowait.pct

type: scaled_float

format: percent

The percentage of CPU time spent in wait (on disk).


[float]
=== system.cpu.irq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.cpu.softirq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling software interrupts.


[float]
=== system.cpu.steal.pct

type: scaled_float

format: percent

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== system.cpu.user.ticks

type: long

The amount of CPU time spent in user space.


[float]
=== system.cpu.system.ticks

type: long

The amount of CPU time spent in kernel space.


[float]
=== system.cpu.nice.ticks

type: long

The amount of CPU time spent on low-priority processes.


[float]
=== system.cpu.idle.ticks

type: long

The amount of CPU time spent idle.


[float]
=== system.cpu.iowait.ticks

type: long

The amount of CPU time spent in wait (on disk).


[float]
=== system.cpu.irq.ticks

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.cpu.softirq.ticks

type: long

The amount of CPU time spent servicing and handling software interrupts.


[float]
=== system.cpu.steal.ticks

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
== diskio Fields

`disk` contains disk IO metrics collected from the operating system.



[float]
=== system.diskio.name

type: keyword

example: sda1

The disk name.


[float]
=== system.diskio.serial_number

type: keyword

The disk's serial number. This may not be provided by all operating systems.


[float]
=== system.diskio.read.count

type: long

The total number of reads completed successfully.


[float]
=== system.diskio.write.count

type: long

The total number of writes completed successfully.


[float]
=== system.diskio.read.bytes

type: long

format: bytes

The total number of bytes read successfully. On Linux this is the number of sectors read multiplied by an assumed sector size of 512.


[float]
=== system.diskio.write.bytes

type: long

format: bytes

The total number of bytes written successfully. On Linux this is the number of sectors written multiplied by an assumed sector size of 512.


[float]
=== system.diskio.read.time

type: long

The total number of milliseconds spent by all reads.


[float]
=== system.diskio.write.time

type: long

The total number of milliseconds spent by all writes.


[float]
=== system.diskio.io.time

type: long

The total number of of milliseconds spent doing I/Os.


[float]
== filesystem Fields

`filesystem` contains local filesystem stats.



[float]
=== system.filesystem.available

type: long

format: bytes

The disk space available to an unprivileged user in bytes.


[float]
=== system.filesystem.device_name

type: keyword

The disk name. For example: `/dev/disk1`


[float]
=== system.filesystem.mount_point

type: keyword

The mounting point. For example: `/`


[float]
=== system.filesystem.files

type: long

The total number of file nodes in the file system.


[float]
=== system.filesystem.free

type: long

format: bytes

The disk space available in bytes.


[float]
=== system.filesystem.free_files

type: long

The number of free file nodes in the file system.


[float]
=== system.filesystem.total

type: long

format: bytes

The total disk space in bytes.


[float]
=== system.filesystem.used.bytes

type: long

format: bytes

The used disk space in bytes.


[float]
=== system.filesystem.used.pct

type: scaled_float

format: percent

The percentage of used disk space.


[float]
== fsstat Fields

`system.fsstat` contains filesystem metrics aggregated from all mounted filesystems, similar with what `df -a` prints out.



[float]
=== system.fsstat.count

type: long

Number of file systems found.

[float]
=== system.fsstat.total_files

type: long

Total number of files.

[float]
== total_size Fields

Nested file system docs.


[float]
=== system.fsstat.total_size.free

type: long

format: bytes

Total free space.


[float]
=== system.fsstat.total_size.used

type: long

format: bytes

Total used space.


[float]
=== system.fsstat.total_size.total

type: long

format: bytes

Total space (used plus free).


[float]
== load Fields

Load averages.



[float]
=== system.load.1

type: scaled_float

Load average for the last minute.


[float]
=== system.load.5

type: scaled_float

Load average for the last 5 minutes.


[float]
=== system.load.15

type: scaled_float

Load average for the last 15 minutes.


[float]
=== system.load.norm.1

type: scaled_float

Load divided by the number of cores for the last minute.


[float]
=== system.load.norm.5

type: scaled_float

Load divided by the number of cores for the last 5 minutes.


[float]
=== system.load.norm.15

type: scaled_float

Load divided by the number of cores for the last 15 minutes.


[float]
== memory Fields

`memory` contains local memory stats.



[float]
=== system.memory.total

type: long

format: bytes

Total memory.


[float]
=== system.memory.used.bytes

type: long

format: bytes

Used memory.


[float]
=== system.memory.free

type: long

format: bytes

The total amount of free memory in bytes. This value does not include memory consumed by system caches and buffers (see system.memory.actual.free).


[float]
=== system.memory.used.pct

type: scaled_float

format: percent

The percentage of used memory.


[float]
== actual Fields

Actual memory used and free.



[float]
=== system.memory.actual.used.bytes

type: long

format: bytes

Actual used memory in bytes. It represents the difference between the total and the available memory. The available memory depends on the OS. For more details, please check `system.actual.free`.


[float]
=== system.memory.actual.free

type: long

format: bytes

Actual free memory in bytes. It is calculated based on the OS. On Linux it consists of the free memory plus caches and buffers. On OSX it is a sum of free memory and the inactive memory. On Windows, it is equal to `system.memory.free`.


[float]
=== system.memory.actual.used.pct

type: scaled_float

format: percent

The percentage of actual used memory.


[float]
== swap Fields

This group contains statistics related to the swap memory usage on the system.


[float]
=== system.memory.swap.total

type: long

format: bytes

Total swap memory.


[float]
=== system.memory.swap.used.bytes

type: long

format: bytes

Used swap memory.


[float]
=== system.memory.swap.free

type: long

format: bytes

Available swap memory.


[float]
=== system.memory.swap.used.pct

type: scaled_float

format: percent

The percentage of used swap memory.


[float]
== network Fields

`network` contains network IO metrics for a single network interface.



[float]
=== system.network.name

type: keyword

example: eth0

The network interface name.


[float]
=== system.network.out.bytes

type: long

format: bytes

The number of bytes sent.


[float]
=== system.network.in.bytes

type: long

format: bytes

The number of bytes received.


[float]
=== system.network.out.packets

type: long

The number of packets sent.


[float]
=== system.network.in.packets

type: long

The number or packets received.


[float]
=== system.network.in.errors

type: long

The number of errors while receiving.


[float]
=== system.network.out.errors

type: long

The number of errors while sending.


[float]
=== system.network.in.dropped

type: long

The number of incoming packets that were dropped.


[float]
=== system.network.out.dropped

type: long

The number of outgoing packets that were dropped. This value is always 0 on Darwin and BSD because it is not reported by the operating system.


[float]
== process Fields

`process` contains process metadata, CPU metrics, and memory metrics.



[float]
=== system.process.name

type: keyword

The process name.


[float]
=== system.process.state

type: keyword

The process state. For example: "running".


[float]
=== system.process.pid

type: long

The process pid.


[float]
=== system.process.ppid

type: long

The process parent pid.


[float]
=== system.process.pgid

type: long

The process group id.


[float]
=== system.process.cmdline

type: keyword

The full command-line used to start the process, including the arguments separated by space.


[float]
=== system.process.username

type: keyword

The username of the user that created the process. If the username cannot be determined, the field will contain the user's numeric identifier (UID). On Windows, this field includes the user's domain and is formatted as `domain\username`.


[float]
=== system.process.cwd

type: keyword

The current working directory of the process. This field is only available on Linux.


[float]
=== system.process.env

type: object

The environment variables used to start the process. The data is available on FreeBSD, Linux, and OS X.


[float]
== cpu Fields

CPU-specific statistics per process.


[float]
=== system.process.cpu.user

type: long

The amount of CPU time the process spent in user space.


[float]
=== system.process.cpu.total.pct

type: scaled_float

format: percent

The percentage of CPU time spent by the process since the last update. Its value is similar to the %CPU value of the process displayed by the top command on Unix systems.


[float]
=== system.process.cpu.system

type: long

The amount of CPU time the process spent in kernel space.


[float]
=== system.process.cpu.total.ticks

type: long

The total CPU time spent by the process.


[float]
=== system.process.cpu.start_time

type: date

The time when the process was started.


[float]
== memory Fields

Memory-specific statistics per process.


[float]
=== system.process.memory.size

type: long

format: bytes

The total virtual memory the process has.


[float]
=== system.process.memory.rss.bytes

type: long

format: bytes

The Resident Set Size. The amount of memory the process occupied in main memory (RAM).


[float]
=== system.process.memory.rss.pct

type: scaled_float

format: percent

The percentage of memory the process occupied in main memory (RAM).


[float]
=== system.process.memory.share

type: long

format: bytes

The shared memory the process uses.


[float]
== fd Fields

File descriptor usage metrics. This set of metrics is available for Linux and FreeBSD.



[float]
=== system.process.fd.open

type: long

The number of file descriptors open by the process.

[float]
=== system.process.fd.limit.soft

type: long

The soft limit on the number of file descriptors opened by the process. The soft limit can be changed by the process at any time.


[float]
=== system.process.fd.limit.hard

type: long

The hard limit on the number of file descriptors opened by the process. The hard limit can only be raised by root.


[float]
== cgroup Fields

Metrics and limits from the cgroup of which the task is a member. cgroup metrics are reported when the process has membership in a non-root cgroup. These metrics are only available on Linux.



[float]
=== system.process.cgroup.id

type: keyword

The ID common to all cgroups associated with this task. If there isn't a common ID used by all cgroups this field will be absent.


[float]
=== system.process.cgroup.path

type: keyword

The path to the cgroup relative to the cgroup subsystem's mountpoint. If there isn't a common path used by all cgroups this field will be absent.


[float]
== cpu Fields

The cpu subsystem schedules CPU access for tasks in the cgroup. Access can be controlled by two separate schedulers, CFS and RT. CFS stands for completely fair scheduler which proportionally divides the CPU time between cgroups based on weight. RT stands for real time scheduler which sets a maximum amount of CPU time that processes in the cgroup can consume during a given period.



[float]
=== system.process.cgroup.cpu.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.cpu.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.cpu.cfs.period.us

type: long

Period of time in microseconds for how regularly a cgroup's access to CPU resources should be reallocated.


[float]
=== system.process.cgroup.cpu.cfs.quota.us

type: long

Total amount of time in microseconds for which all tasks in a cgroup can run during one period (as defined by cfs.period.us).


[float]
=== system.process.cgroup.cpu.cfs.shares

type: long

An integer value that specifies a relative share of CPU time available to the tasks in a cgroup. The value specified in the cpu.shares file must be 2 or higher.


[float]
=== system.process.cgroup.cpu.rt.period.us

type: long

Period of time in microseconds for how regularly a cgroup's access to CPU resources is reallocated.


[float]
=== system.process.cgroup.cpu.rt.runtime.us

type: long

Period of time in microseconds for the longest continuous period in which the tasks in a cgroup have access to CPU resources.


[float]
=== system.process.cgroup.cpu.stats.periods

type: long

Number of period intervals (as specified in cpu.cfs.period.us) that have elapsed.


[float]
=== system.process.cgroup.cpu.stats.throttled.periods

type: long

Number of times tasks in a cgroup have been throttled (that is, not allowed to run because they have exhausted all of the available time as specified by their quota).


[float]
=== system.process.cgroup.cpu.stats.throttled.ns

type: long

The total time duration (in nanoseconds) for which tasks in a cgroup have been throttled.


[float]
== cpuacct Fields

CPU accounting metrics.


[float]
=== system.process.cgroup.cpuacct.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.cpuacct.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.cpuacct.total.ns

type: long

Total CPU time in nanoseconds consumed by all tasks in the cgroup.


[float]
=== system.process.cgroup.cpuacct.stats.user.ns

type: long

CPU time consumed by tasks in user mode.

[float]
=== system.process.cgroup.cpuacct.stats.system.ns

type: long

CPU time consumed by tasks in user (kernel) mode.

[float]
=== system.process.cgroup.cpuacct.percpu

type: object

CPU time (in nanoseconds) consumed on each CPU by all tasks in this cgroup.


[float]
== memory Fields

Memory limits and metrics.


[float]
=== system.process.cgroup.memory.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.memory.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.memory.mem.usage.bytes

type: long

format: bytes

Total memory usage by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.mem.usage.max.bytes

type: long

format: bytes

The maximum memory used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.mem.limit.bytes

type: long

format: bytes

The maximum amount of user memory in bytes (including file cache) that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.mem.failures

type: long

The number of times that the memory limit (mem.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.memsw.usage.bytes

type: long

format: bytes

The sum of current memory usage plus swap space used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.memsw.usage.max.bytes

type: long

format: bytes

The maximum amount of memory and swap space used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.memsw.limit.bytes

type: long

format: bytes

The maximum amount for the sum of memory and swap usage that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.memsw.failures

type: long

The number of times that the memory plus swap space limit (memsw.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.kmem.usage.bytes

type: long

format: bytes

Total kernel memory usage by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem.usage.max.bytes

type: long

format: bytes

The maximum kernel memory used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem.limit.bytes

type: long

format: bytes

The maximum amount of kernel memory that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.kmem.failures

type: long

The number of times that the memory limit (kmem.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.kmem_tcp.usage.bytes

type: long

format: bytes

Total memory usage for TCP buffers in bytes.


[float]
=== system.process.cgroup.memory.kmem_tcp.usage.max.bytes

type: long

format: bytes

The maximum memory used for TCP buffers by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem_tcp.limit.bytes

type: long

format: bytes

The maximum amount of memory for TCP buffers that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.kmem_tcp.failures

type: long

The number of times that the memory limit (kmem_tcp.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.stats.active_anon.bytes

type: long

format: bytes

Anonymous and swap cache on active least-recently-used (LRU) list, including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.active_file.bytes

type: long

format: bytes

File-backed memory on active LRU list, in bytes.

[float]
=== system.process.cgroup.memory.stats.cache.bytes

type: long

format: bytes

Page cache, including tmpfs (shmem), in bytes.

[float]
=== system.process.cgroup.memory.stats.hierarchical_memory_limit.bytes

type: long

format: bytes

Memory limit for the hierarchy that contains the memory cgroup, in bytes.


[float]
=== system.process.cgroup.memory.stats.hierarchical_memsw_limit.bytes

type: long

format: bytes

Memory plus swap limit for the hierarchy that contains the memory cgroup, in bytes.


[float]
=== system.process.cgroup.memory.stats.inactive_anon.bytes

type: long

format: bytes

Anonymous and swap cache on inactive LRU list, including tmpfs (shmem), in bytes


[float]
=== system.process.cgroup.memory.stats.inactive_file.bytes

type: long

format: bytes

File-backed memory on inactive LRU list, in bytes.


[float]
=== system.process.cgroup.memory.stats.mapped_file.bytes

type: long

format: bytes

Size of memory-mapped mapped files, including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.page_faults

type: long

Number of times that a process in the cgroup triggered a page fault.


[float]
=== system.process.cgroup.memory.stats.major_page_faults

type: long

Number of times that a process in the cgroup triggered a major fault. "Major" faults happen when the kernel actually has to read the data from disk.


[float]
=== system.process.cgroup.memory.stats.pages_in

type: long

Number of pages paged into memory. This is a counter.


[float]
=== system.process.cgroup.memory.stats.pages_out

type: long

Number of pages paged out of memory. This is a counter.


[float]
=== system.process.cgroup.memory.stats.rss.bytes

type: long

format: bytes

Anonymous and swap cache (includes transparent hugepages), not including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.rss_huge.bytes

type: long

format: bytes

Number of bytes of anonymous transparent hugepages.


[float]
=== system.process.cgroup.memory.stats.swap.bytes

type: long

format: bytes

Swap usage, in bytes.


[float]
=== system.process.cgroup.memory.stats.unevictable.bytes

type: long

format: bytes

Memory that cannot be reclaimed, in bytes.


[float]
== blkio Fields

Block IO metrics.


[float]
=== system.process.cgroup.blkio.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.blkio.path

type: keyword

Path to the cgroup relative to the cgroup subsystems mountpoint.


[float]
=== system.process.cgroup.blkio.total.bytes

type: long

format: bytes

Total number of bytes transferred to and from all block devices by processes in the cgroup.


[float]
=== system.process.cgroup.blkio.total.ios

type: long

Total number of I/O operations performed on all devices by processes in the cgroup as seen by the throttling policy.


[float]
== process.summary Fields

Summary metrics for the processes running on the host.



[float]
=== system.process.summary.total

type: long

Total number of processes on this host.


[float]
=== system.process.summary.running

type: long

Number of running processes on this host.


[float]
=== system.process.summary.idle

type: long

Number of idle processes on this host.


[float]
=== system.process.summary.sleeping

type: long

Number of sleeping processes on this host.


[float]
=== system.process.summary.stopped

type: long

Number of stopped processes on this host.


[float]
=== system.process.summary.zombie

type: long

Number of zombie processes on this host.


[float]
=== system.process.summary.unknown

type: long

Number of processes for which the state couldn't be retrieved or is unknown.


[float]
== socket Fields

TCP sockets that are active.



[float]
=== system.socket.direction

type: keyword

example: incoming

How the socket was initiated. Possible values are incoming, outgoing, or listening.


[float]
=== system.socket.family

type: keyword

example: ipv4

Address family.


[float]
=== system.socket.local.ip

type: ip

example: 192.0.2.1 or 2001:0DB8:ABED:8536::1

Local IP address. This can be an IPv4 or IPv6 address.


[float]
=== system.socket.local.port

type: long

example: 22

Local port.


[float]
=== system.socket.remote.ip

type: ip

example: 192.0.2.1 or 2001:0DB8:ABED:8536::1

Remote IP address. This can be an IPv4 or IPv6 address.


[float]
=== system.socket.remote.port

type: long

example: 22

Remote port.


[float]
=== system.socket.remote.host

type: keyword

example: 76-211-117-36.nw.example.com.

PTR record associated with the remote IP. It is obtained via reverse IP lookup.


[float]
=== system.socket.remote.etld_plus_one

type: keyword

example: example.com.

The effective top-level domain (eTLD) of the remote host plus one more label. For example, the eTLD+1 for "foo.bar.golang.org." is "golang.org.". The data for determining the eTLD comes from an embedded copy of the data from http://publicsuffix.org.


[float]
=== system.socket.remote.host_error

type: keyword

Error describing the cause of the reverse lookup failure.


[float]
=== system.socket.process.pid

type: long

ID of the process that opened the socket.


[float]
=== system.socket.process.command

type: keyword

Name of the command (limited to 20 chars by the OS).


[float]
=== system.socket.process.cmdline

type: keyword



[float]
=== system.socket.process.exe

type: keyword

Absolute path to the executable.


[float]
=== system.socket.user.id

type: long

UID of the user running the process.


[float]
=== system.socket.user.name

type: keyword

Name of the user running the process.


[[exported-fields-vsphere]]
== vsphere Fields

vsphere Module



[float]
== vsphere Fields




[float]
== datastore Fields

datastore



[float]
=== vsphere.datastore.datacenter

type: keyword

Datacenter name


[float]
=== vsphere.datastore.name

type: keyword

Datastore name


[float]
=== vsphere.datastore.fstype

type: keyword

Filesystem type


[float]
=== vsphere.datastore.capacity.total.bytes

type: long

format: bytes

Total bytes of the datastore


[float]
=== vsphere.datastore.capacity.free.bytes

type: long

format: bytes

Free bytes of the datastore


[float]
=== vsphere.datastore.capacity.used.bytes

type: long

format: bytes

Used bytes of the datastore


[float]
=== vsphere.datastore.capacity.used.pct

type: long

format: percent

Used percent of the datastore


[float]
== host Fields

host



[float]
=== vsphere.host.datacenter

type: keyword

Datacenter name


[float]
=== vsphere.host.name

type: keyword

Host name


[float]
=== vsphere.host.cpu.used.mhz

type: long

Used CPU in Mhz


[float]
=== vsphere.host.cpu.total.mhz

type: long

Total CPU in Mhz


[float]
=== vsphere.host.cpu.free.mhz

type: long

Free CPU in Mhz


[float]
=== vsphere.host.memory.used.bytes

type: long

format: bytes

Used Memory in bytes


[float]
=== vsphere.host.memory.total.bytes

type: long

format: bytes

Total Memory in bytes


[float]
=== vsphere.host.memory.free.bytes

type: long

format: bytes

Free Memory in bytes


[float]
== virtualmachine Fields

virtualmachine



[float]
=== vsphere.virtualmachine.datacenter

type: keyword

Datacenter name


[float]
=== vsphere.virtualmachine.name

type: keyword

Virtual Machine name


[float]
=== vsphere.virtualmachine.cpu.used.mhz

type: long

Used CPU in Mhz


[float]
=== vsphere.virtualmachine.memory.used.guest.bytes

type: long

format: bytes

Used Memory of Guest in bytes


[float]
=== vsphere.virtualmachine.memory.used.host.bytes

type: long

format: bytes

Used Memory of Host in bytes


[float]
=== vsphere.virtualmachine.memory.total.guest.bytes

type: long

format: bytes

Total Memory of Guest in bytes


[float]
=== vsphere.virtualmachine.memory.free.guest.bytes

type: long

format: bytes

Free Memory of Guest in bytes


[[exported-fields-windows]]
== Windows Fields

[]beta Module for Windows



[float]
== windows Fields



[[exported-fields-zookeeper]]
== ZooKeeper Fields

ZooKeeper metrics collected by the four-letter monitoring commands.



[float]
== zookeeper Fields

`zookeeper` contains the metrics reported by ZooKeeper commands.



[float]
== mntr Fields

`mntr` contains the metrics reported by the four-letter `mntr` command.



[float]
=== zookeeper.mntr.hostname

type: keyword

ZooKeeper hostname.


[float]
=== zookeeper.mntr.approximate_data_size

type: long

Approximate size of ZooKeeper data.


[float]
=== zookeeper.mntr.latency.avg

type: long

Average latency between ensemble hosts in milliseconds.


[float]
=== zookeeper.mntr.ephemerals_count

type: long

Number of ephemeral znodes.


[float]
=== zookeeper.mntr.followers

type: long

Number of followers seen by the current host.


[float]
=== zookeeper.mntr.max_file_descriptor_count

type: long

Maximum number of file descriptors allowed for the ZooKeeper process.


[float]
=== zookeeper.mntr.latency.max

type: long

Maximum latency in milliseconds.


[float]
=== zookeeper.mntr.latency.min

type: long

Minimum latency in milliseconds.


[float]
=== zookeeper.mntr.num_alive_connections

type: long

Number of connections to ZooKeeper that are currently alive.


[float]
=== zookeeper.mntr.open_file_descriptor_count

type: long

Number of file descriptors open by the ZooKeeper process.


[float]
=== zookeeper.mntr.outstanding_requests

type: long

Number of outstanding requests that need to be processed by the cluster.


[float]
=== zookeeper.mntr.packets.received

type: long

Number of ZooKeeper network packets received.


[float]
=== zookeeper.mntr.packets.sent

type: long

Number of ZooKeeper network packets sent.


[float]
=== zookeeper.mntr.pending_syncs

type: long

Number of pending syncs to carry out to ZooKeeper ensemble followers.


[float]
=== zookeeper.mntr.server_state

type: keyword

Role in the ZooKeeper ensemble.


[float]
=== zookeeper.mntr.synced_followers

type: long

Number of synced followers reported when a node server_state is leader.


[float]
=== zookeeper.mntr.version

type: keyword

ZooKeeper version and build string reported.


[float]
=== zookeeper.mntr.watch_count

type: long

Number of watches currently set on the local ZooKeeper process.


[float]
=== zookeeper.mntr.znode_count

type: long

Number of znodes reported by the local ZooKeeper process.


