
////
This file is generated! See etc/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
== Exported Fields

This document describes the fields that are exported by Metricbeat. They are
grouped in the following categories:

* <<exported-fields-apache>>
* <<exported-fields-beat>>
* <<exported-fields-common>>
* <<exported-fields-mysql>>
* <<exported-fields-nginx>>
* <<exported-fields-redis>>
* <<exported-fields-system>>
* <<exported-fields-zookeeper>>

[[exported-fields-apache]]
=== Apache Fields

Apache HTTPD server metric sets collected from the apache web server.



[float]
=== apache Fields

Apache contains the metrics that were scraped from apache.



[float]
=== status Fields

`status` contains the metrics that were scraped from the apache status page.



==== apache.status.hostname

type: keyword

Apache hostname.


==== apache.status.total_accesses

type: integer

Total number of access requests.


==== apache.status.total_kbytes

type: integer

Total number of kilobytes served.


==== apache.status.requests_per_sec

type: float

Requests per second.


==== apache.status.bytes_per_sec

type: float

Bytes per second.


==== apache.status.bytes_per_request

type: float

Bytes per request.


==== apache.status.workers.busy

type: integer

Number of busy workers.


==== apache.status.workers.idle

type: integer

Number of idle workers.


[float]
=== uptime Fields

Uptime stats.



==== apache.status.uptime.server_uptime

type: integer

Server uptime in seconds.


==== apache.status.uptime.uptime

type: integer

Server uptime.


[float]
=== cpu Fields

CPU stats.



==== apache.status.cpu.load

type: float

CPU Load.


==== apache.status.cpu.user

type: float

CPU user load.


==== apache.status.cpu.system

type: float

System cpu.


==== apache.status.cpu.children_user

type: float

CPU of children user.


==== apache.status.cpu.children_system

type: float

CPU of children system.


[float]
=== connections Fields

Connection stats.



==== apache.status.connections.total

type: integer

Total connections.


==== apache.status.connections.async.writing

type: integer

Async connection writing.


==== apache.status.connections.async.keep_alive

type: integer

Async keeped alive connections.


==== apache.status.connections.async.closing

type: integer

Async closed connections.


[float]
=== load Fields

Load averages.



==== apache.status.load.1

type: float

Load average for the last minute.


==== apache.status.load.5

type: float

Load average for the last 5 minutes.


==== apache.status.load.15

type: float

Load average for the last 15 minutes.


[float]
=== scoreboard Fields

Scoreboard metrics.



==== apache.status.scoreboard.starting_up

type: integer

Starting up.


==== apache.status.scoreboard.reading_request

type: integer

Reading requests.


==== apache.status.scoreboard.sending_reply

type: integer

Sending Reply.


==== apache.status.scoreboard.keepalive

type: integer

Keep alive.


==== apache.status.scoreboard.dns_lookup

type: integer

Dns Lookups.


==== apache.status.scoreboard.closing_connection

type: integer

Closing connections.


==== apache.status.scoreboard.logging

type: integer

Logging


==== apache.status.scoreboard.gracefully_finishing

type: integer

Gracefully finishing.


==== apache.status.scoreboard.idle_cleanup

type: integer

Idle cleanups


==== apache.status.scoreboard.open_slot

type: integer

Open slots.


==== apache.status.scoreboard.waiting_for_connection

type: integer

Waiting for connections.


==== apache.status.scoreboard.total

type: integer

Total.


[[exported-fields-beat]]
=== Beat Fields

Contains common beat fields available in all event types.



==== beat.name

The name of the Beat sending the log messages. If the shipper name is set in the configuration file, then that value is used. If it is not set, the hostname is used.


==== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


==== @timestamp

type: date

example: 2015-01-24 14:06:05.071000

format: YYYY-MM-DDTHH:MM:SS.milliZ

required: True

The timestamp when the event log record was generated.


==== tags

Arbitrary tags that can be set per Beat and per transaction type.


==== fields

type: dict

Contains user configurable fields.


[[exported-fields-common]]
=== Common Fields

Contains common fields available in all event types.



==== metricset.module

The name of the module that generated the event.


==== metricset.name

The name of the metricset that generated the event.


==== metricset.host

Hostname of the machine from which the metricset was collected. This field may not be present when the data was collected locally.


==== metricset.rtt

type: long

required: True

Event round trip time in microseconds


==== type

example: metricsets

required: True

The document type. Always set to "metricsets".


[[exported-fields-mysql]]
=== MySQL Status Fields

MySQL server status metrics collected from MySQL



[float]
=== mysql Fields

mysql contains the metrics that were obtained from MySQL query.



[float]
=== status Fields

`status` contains the metrics that were obtained by the status SQL query.



[float]
=== aborted Fields

Aborted status fields



==== mysql.status.aborted.clients

type: integer

The number of connections that were aborted because the client died without closing the connection properly.


==== mysql.status.aborted.connects

type: integer

The number of failed attempts to connect to the MySQL server.


[float]
=== binlog Fields




==== mysql.status.binlog.cache.disk_use

type: integer



==== mysql.status.binlog.cache.use

type: integer



[float]
=== bytes Fields

Bytes stats



==== mysql.status.bytes.received

type: integer

The number of bytes received from all clients.


==== mysql.status.bytes.sent

type: integer

The number of bytes sent to all clients.


==== mysql.status.connections

type: integer



[float]
=== created Fields




==== mysql.status.created.tmp.disk_tables

type: integer



==== mysql.status.created.tmp.files

type: integer



==== mysql.status.created.tmp.tables

type: integer



[float]
=== delayed Fields




==== mysql.status.delayed.errors

type: integer



==== mysql.status.delayed.insert_threads

type: integer



==== mysql.status.delayed.writes

type: integer



==== mysql.status.flush_commands

type: integer



==== mysql.status.max_used_connections

type: integer



[float]
=== open Fields




==== mysql.status.open.files

type: integer



==== mysql.status.open.streams

type: integer



==== mysql.status.open.tables

type: integer



==== mysql.status.opened_tables

type: integer



[[exported-fields-nginx]]
=== Nginx Status Fields

Nginx server status metrics collected from various modules.



[float]
=== nginx Fields

nginx contains the metrics that were scraped from nginx.



[float]
=== stubstatus Fields

`stubstatus` contains the metrics that were scraped from the ngx_http_stub_status_module status page.



==== nginx.stubstatus.hostname

type: keyword

Nginx hostname


==== nginx.stubstatus.active

type: integer

The current number of active client connections including Waiting connections.


==== nginx.stubstatus.accepts

type: integer

The total number of accepted client connections.


==== nginx.stubstatus.handled

type: integer

The total number of handled client connections.


==== nginx.stubstatus.dropped

type: integer

The total number of dropped client connections.


==== nginx.stubstatus.requests

type: integer

The total number of client requests.


==== nginx.stubstatus.current

type: integer

The current number of client requests.


==== nginx.stubstatus.reading

type: integer

The current number of connections where nginx is reading the request header.


==== nginx.stubstatus.writing

type: integer

The current number of connections where nginx is writing the response back to the client.


==== nginx.stubstatus.waiting

type: integer

The current number of idle client connections waiting for a request.


[[exported-fields-redis]]
=== Redis Status Fields

Redis metrics collected from the Redis



[float]
=== redis Fields

`redis` contains the information and statistics from Redis



[float]
=== info Fields

`info` contains the information and statistics returned by the `INFO` command.



[float]
=== clients Fields

Redis client stats



==== redis.info.clients.connected

type: integer

Number of client connections (excluding connections from slaves)


==== redis.info.clients.longest_output_list

type: integer

Longest output list among current client connections.


==== redis.info.clients.biggest_input_buf

type: integer

Biggest input buffer among current client connections


==== redis.info.clients.blocked

type: integer

Number of clients pending on a blocking call (BLPOP, BRPOP, BRPOPLPUSH)


[float]
=== cluster Fields

Redis cluster information



==== redis.info.cluster.enabled

type: boolean

Indicate Redis cluster is enabled


[float]
=== cpu Fields

Redis CPU stats



==== redis.info.cpu.used.sys

type: float

System CPU consumed by the Redis server


==== redis.info.cpu.used.sys_children

type: float

User CPU consumed by the Redis server


==== redis.info.cpu.used.user

type: float

System CPU consumed by the background processes


==== redis.info.cpu.used.user_children

type: float

User CPU consumed by the background processes


[float]
=== memory Fields

Redis CPU stats



==== redis.info.memory.used.value

type: integer

Used memory


==== redis.info.memory.used.rss

type: integer

Used memory rss


==== redis.info.memory.used.peak

type: integer

Used memory peak


==== redis.info.memory.used.lua

type: integer

Used memory lua


==== redis.info.memory.allocator

type: keyword

Memory allocator


[float]
=== persistence Fields

Redis CPU stats



==== redis.info.persistence.loading

type: boolean

None

==== redis.info.persistence.rdb.changes_since_last_save

type: integer

None

==== redis.info.persistence.rdb.bgsave_in_progress

type: boolean

None

==== redis.info.persistence.rdb.last_save_time

type: integer

None

==== redis.info.persistence.rdb.last_bgsave_status

type: keyword

None

==== redis.info.persistence.rdb.last_bgsave_time_sec

type: integer

None

==== redis.info.persistence.rdb.current_bgsave_time_sec

type: integer

None

==== redis.info.persistence.used.enabled

type: boolean

None

==== redis.info.persistence.used.rewrite_in_progress

type: boolean

None

==== redis.info.persistence.used.rewrite_scheduled

type: boolean

None

==== redis.info.persistence.used.last_rewrite_time_sec

type: integer

None

==== redis.info.persistence.used.current_rewrite_time_sec

type: integer

None

==== redis.info.persistence.used.last_bgrewrite_status

type: keyword

None

==== redis.info.persistence.used.last_write_status

type: keyword

None

[float]
=== replication Fields

Replication



==== redis.info.replication.role

type: keyword

None

==== redis.info.replication.connected_slaves

type: integer

None

==== redis.info.replication.master_offset

type: integer

None

==== redis.info.replication.backlog.active

type: integer

None

==== redis.info.replication.backlog.size

type: integer

None

==== redis.info.replication.backlog.first_byte_offset

type: integer

None

==== redis.info.replication.backlog.histlen

type: integer

None

[float]
=== server Fields

Server info



==== redis.info.server.version

type: keyword

None

==== redis.info.server.git_sha1

type: keyword

None

==== redis.info.server.git_dirty

type: keyword

None

==== redis.info.server.build_id

type: keyword

None

==== redis.info.server.mode

type: keyword

None

==== redis.info.server.os

type: keyword

None

==== redis.info.server.arch_bits

type: keyword

None

==== redis.info.server.multiplexing_api

type: keyword

None

==== redis.info.server.gcc_version

type: keyword

None

==== redis.info.server.process_id

type: integer

None

==== redis.info.server.run_id

type: keyword

None

==== redis.info.server.tcp_port

type: integer

None

==== redis.info.server.uptime

type: integer

None

==== redis.info.server.hz

type: integer

None

==== redis.info.server.lru_clock

type: integer

None

==== redis.info.server.config_file

type: keyword

None

[float]
=== stats Fields

Redis stats



==== redis.info.stats.connections.received

type: integer

None

==== redis.info.stats.connections.rejected

type: integer

None

==== redis.info.stats.total_commands_processed

type: integer

None

==== redis.info.stats.total_net_input_bytes

type: integer

None

==== redis.info.stats.total_net_output_bytes

type: integer

None

==== redis.info.stats.instantaneous_ops_per_sec

type: integer

None

==== redis.info.stats.instantaneous_input_kbps

type: float

None

==== redis.info.stats.instantaneous_output_kbps

type: float

None

==== redis.info.stats.sync.full

type: integer

None

==== redis.info.stats.sync.partial_ok

type: integer

None

==== redis.info.stats.sync.partial_err

type: integer

None

==== redis.info.stats.keys.expired

type: integer

None

==== redis.info.stats.keys.evicted

type: integer

None

==== redis.info.stats.keyspace.hits

type: integer

None

==== redis.info.stats.keyspace.misses

type: integer

None

==== redis.info.stats.pubsub_channels

type: integer

None

==== redis.info.stats.pubsub_patterns

type: integer

None

==== redis.info.stats.latest_fork_usec

type: integer

None

==== redis.info.stats.migrate_cached_sockets

type: integer

None

[[exported-fields-system]]
=== System Status Fields

System status metrics, like CPU and memory usage, that are collected from the operating system.



[float]
=== system Fields

`system` contains local system metrics



[float]
=== core Fields

`system-core` contains local cpu core stats.



==== system.core.id

type: integer

CPU Core number.


==== system.core.user_p

type: float

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


==== system.core.system_p

type: float

The percentage of CPU time spent in kernel space.


==== system.core.nice_p

type: float

The percentage of CPU time spent on low-priority processes.


==== system.core.idle_p

type: float

The percentage of CPU time spent idle.


==== system.core.iowait_p

type: float

The percentage of CPU time spent in wait (on disk).


==== system.core.irq_p

type: float

The percentage of CPU time spent servicing and handling hardware interrupts.


==== system.core.softirq_p

type: float

The percentage of CPU time spent servicing and handling software interrupts.

==== system.core.steal_p

type: float

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


==== system.core.user

type: long

The amount of CPU time spent in user space.


==== system.core.system

type: long

The amount of CPU time spent in kernel space.


==== system.core.nice

type: long

The amount of CPU time spent on low-priority processes.


==== system.core.idle

type: long

The amount of CPU time spent idle.


==== system.core.iowait

type: long

The amount of CPU time spent in wait (on disk).


==== system.core.irq

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


==== system.core.softirq

type: long

The amount of CPU time spent servicing and handling software interrupts.

==== system.core.steal

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== cpu Fields

`cpu` contains local cpu stats.



==== system.cpu.user_p

type: float

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


==== system.cpu.system_p

type: float

The percentage of CPU time spent in kernel space.


==== system.cpu.nice_p

type: float

The percentage of CPU time spent on low-priority processes.


==== system.cpu.idle_p

type: float

The percentage of CPU time spent idle.


==== system.cpu.iowait_p

type: float

The percentage of CPU time spent in wait (on disk).


==== system.cpu.irq_p

type: float

The percentage of CPU time spent servicing and handling hardware interrupts.


==== system.cpu.softirq_p

type: float

The percentage of CPU time spent servicing and handling software interrupts.

==== system.cpu.steal_p

type: float

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


==== system.cpu.user

type: long

The amount of CPU time spent in user space.


==== system.cpu.system

type: long

The amount of CPU time spent in kernel space.


==== system.cpu.nice

type: long

The amount of CPU time spent on low-priority processes.


==== system.cpu.idle

type: long

The amount of CPU time spent idle.


==== system.cpu.iowait

type: long

The amount of CPU time spent in wait (on disk).


==== system.cpu.irq

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


==== system.cpu.softirq

type: long

The amount of CPU time spent servicing and handling software interrupts.

==== system.cpu.steal

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== load Fields

Load averages.



==== system.cpu.load.load1

type: float

Load average for the last minute.


==== system.cpu.load.load5

type: float

Load average for the last 5 minutes.


==== system.cpu.load.load15

type: float

Load average for the last 15 minutes.


[float]
=== disk Fields

`disk` contains disk IO metrics collected from the operating system.



==== system.disk.name

type: keyword

example: sda1

The disk name.


==== system.disk.serial_number

type: keyword

The disk's serial number. This may not be provided by all operating systems.


==== system.disk.read_count

type: long

This is the total number of reads completed successfully.


==== system.disk.write_count

type: long

This is the total number of writes completed successfully.


==== system.disk.read_bytes

type: long

This is the total number of bytes read successfully. On Linux this is the number of sectors read multiplied by an assumed sector size of 512.


==== system.disk.write_bytes

type: long

This is the total number of bytes written successfully. On Linux this is the number of sectors written multiplied by an assumed sector size of 512.


==== system.disk.read_time

type: long

This is the total number of milliseconds spent by all reads.


==== system.disk.write_time

type: long

This is the total number of milliseconds spent by all writes.


==== system.disk.io_time

type: long

This is the total number of of milliseconds spent doing I/Os.


[float]
=== filesystem Fields

`filesystem` contains local filesystem stats



==== system.filesystem.avail

type: long

The disk space available to an unprivileged user in bytes.


==== system.filesystem.device_name

type: keyword

The disk name. For example: `/dev/disk1`


==== system.filesystem.mount_point

type: keyword

The mounting point. For example: `/`


==== system.filesystem.files

type: long

The total number of file nodes in the file system.


==== system.filesystem.free

type: long

The disk space available in bytes.


==== system.filesystem.free_files

type: long

The number of free file nodes in the file system.


==== system.filesystem.total

type: long

The total disk space in bytes.


==== system.filesystem.used

type: long

The used disk space in bytes.


==== system.filesystem.used_p

type: float

The percentage of used disk space.


[float]
=== fsstat Fields

`system.fsstat` contains filesystem metrics aggregated from all mounted filesystems.



==== system.fsstat.count

type: long

Number of file systems found.

==== system.fsstat.total_files

type: long

Total number of files.

[float]
=== total_size Fields

Nested file system docs.


==== system.fsstat.total_size.free

type: long

Total free space.


==== system.fsstat.total_size.used

type: long

Total used space.


==== system.fsstat.total_size.total

type: long

Total space (used plus free).


[float]
=== memory Fields

`memory` contains local memory stats.



[float]
=== mem Fields

This group contains statistics related to the memory usage on the system.


==== system.memory.mem.total

type: long

Total memory.


==== system.memory.mem.used

type: long

Used memory.


==== system.memory.mem.free

type: long

Available memory.


==== system.memory.mem.used_p

type: float

The percentage of used memory.


==== system.memory.mem.actual_used

type: long

Actual used memory. This value is the "used" memory minus the memory used for disk caches and buffers. Available only on Unix.


==== system.memory.mem.actual_free

type: long

Actual available memory. This value is the "free" memory plus the memory used for disk caches and buffers. Available only on Unix.


==== system.memory.mem.actual_used_p

type: float

The percentage of actual used memory.


[float]
=== swap Fields

This group contains statistics related to the swap memory usage on the system.


==== system.memory.swap.total

type: long

Total swap memory.


==== system.memory.swap.used

type: long

Used swap memory.


==== system.memory.swap.free

type: long

Available swap memory.


==== system.memory.swap.used_p

type: float

The percentage of used swap memory.


[float]
=== process Fields

`process` contains process metadata, CPU metrics, and memory metrics.



==== system.process.name

type: keyword

The process name.


==== system.process.state

type: keyword

The process state. For example: "running"


==== system.process.pid

type: integer

The process pid.


==== system.process.ppid

type: integer

The process parent pid.


==== system.process.cmdline

type: keyword

The full command-line used to start the process, including the arguments separated by space.


==== system.process.username

type: keyword

The username of the user that created the process. If the username can not be determined then the the field will contain the user's numeric identifier (UID). On Windows, this field includes the user's domain and is formatted as `domain\username`.


[float]
=== cpu Fields

CPU-specific statistics per process.


==== system.process.cpu.user

type: long

The amount of CPU time the process spent in user space.


==== system.process.cpu.total_p

type: float

The percentage of CPU time spent by the process since the last update. Its value is similar with the %CPU value of the process displayed by the top command on unix systems.


==== system.process.cpu.system

type: long

The amount of CPU time the process spent in kernel space.


==== system.process.cpu.total

type: long

The total CPU time spent by the process.


==== system.process.cpu.start_time

type: keyword

The time when the process was started. Example: "17:45".


[float]
=== mem Fields

Memory-specific statistics per process.


==== system.process.mem.size

type: long

The total virtual memory the process has.


==== system.process.mem.rss

type: long

The Resident Set Size. The amount of memory the process occupied in main memory (RAM).


==== system.process.mem.rss_p

type: float

The percentage of memory the process occupied in main memory (RAM).


==== system.process.mem.share

type: long

The shared memory the process uses.


[[exported-fields-zookeeper]]
=== Zookeeper Status Fields

ZooKeeper metrics collected by the four-letter monitoring commands.



[float]
=== zookeeper Fields

`zookeeper` contains the metrics reported by zookeeper command.



[float]
=== mntr Fields

`mntr` contains the metrics reported by the four-letter `mntr` command.



==== zookeeper.mntr.hostname

type: keyword

Zookeeper hostname.


==== zookeeper.mntr.approximate_data_size

type: long

Approximate size of zookeeper data.


==== zookeeper.mntr.latency.avg

type: integer

Average latency between ensemble hosts in milliseconds.


==== zookeeper.mntr.ephemerals_count

type: integer

Number of ephemeral znodes.


==== zookeeper.mntr.followers

type: integer

Number of followers seen by the current host.


==== zookeeper.mntr.max_file_descriptor_count

type: integer

Maximum number of file descriptors allowed for the zookeeper process.


==== zookeeper.mntr.latency.max

type: integer

Maximum latency in milliseconds.


==== zookeeper.mntr.latency.min

type: integer

Minimum latency in milliseconds.


==== zookeeper.mntr.num_alive_connections

type: integer

Number of connections to zookeeper that are currently alive.


==== zookeeper.mntr.open_file_descriptor_count

type: integer

Number of file descriptors open by the zookeeper process.


==== zookeeper.mntr.outstanding_requests

type: integer

Number of outstanding requests that need to be processed by the cluster.


==== zookeeper.mntr.packets.received

type: integer

Number zookeeper network packets received.


==== zookeeper.mntr.packets.sent

type: long

Number zookeeper network packets sent.


==== zookeeper.mntr.pending_syncs

type: integer

Number of pending syncs to carry out to zookeeper ensemble followers.


==== zookeeper.mntr.server_state

type: keyword

Role in the zookeeper ensemble.


==== zookeeper.mntr.synced_followers

type: integer

Number of synced followers reported when a node server_state is leader.


==== zookeeper.mntr.version

type: keyword

Zookeeper version and build string reported.


==== zookeeper.mntr.watch_count

type: integer

Number of watches currently set on the local zookeeper process.


==== zookeeper.mntr.znode_count

type: integer

Number of znodes reported by the local zookeeper process.


