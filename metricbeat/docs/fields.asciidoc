
////
This file is generated! See _meta/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
= Exported Fields

[partintro]

--
This document describes the fields that are exported by Metricbeat. They are
grouped in the following categories:

* <<exported-fields-apache>>
* <<exported-fields-beat>>
* <<exported-fields-cloud>>
* <<exported-fields-common>>
* <<exported-fields-docker>>
* <<exported-fields-haproxy>>
* <<exported-fields-kafka>>
* <<exported-fields-mongodb>>
* <<exported-fields-mysql>>
* <<exported-fields-nginx>>
* <<exported-fields-postgresql>>
* <<exported-fields-redis>>
* <<exported-fields-system>>
* <<exported-fields-zookeeper>>

--
[[exported-fields-apache]]
== Apache Fields

Apache HTTPD server metricsets collected from the Apache web server.



[float]
== apache Fields

`apache` contains the metrics that were scraped from Apache.



[float]
== status Fields

`status` contains the metrics that were scraped from the Apache status page.



[float]
=== apache.status.hostname

type: keyword

Apache hostname.


[float]
=== apache.status.total_accesses

type: long

Total number of access requests.


[float]
=== apache.status.total_kbytes

type: long

Total number of kilobytes served.


[float]
=== apache.status.requests_per_sec

type: scaled_float

Requests per second.


[float]
=== apache.status.bytes_per_sec

type: scaled_float

Bytes per second.


[float]
=== apache.status.bytes_per_request

type: scaled_float

Bytes per request.


[float]
=== apache.status.workers.busy

type: long

Number of busy workers.


[float]
=== apache.status.workers.idle

type: long

Number of idle workers.


[float]
== uptime Fields

Uptime stats.



[float]
=== apache.status.uptime.server_uptime

type: long

Server uptime in seconds.


[float]
=== apache.status.uptime.uptime

type: long

Server uptime.


[float]
== cpu Fields

CPU stats.



[float]
=== apache.status.cpu.load

type: scaled_float

CPU Load.


[float]
=== apache.status.cpu.user

type: scaled_float

CPU user load.


[float]
=== apache.status.cpu.system

type: scaled_float

System cpu.


[float]
=== apache.status.cpu.children_user

type: scaled_float

CPU of children user.


[float]
=== apache.status.cpu.children_system

type: scaled_float

CPU of children system.


[float]
== connections Fields

Connection stats.



[float]
=== apache.status.connections.total

type: long

Total connections.


[float]
=== apache.status.connections.async.writing

type: long

Async connection writing.


[float]
=== apache.status.connections.async.keep_alive

type: long

Async keeped alive connections.


[float]
=== apache.status.connections.async.closing

type: long

Async closed connections.


[float]
== load Fields

Load averages.



[float]
=== apache.status.load.1

type: scaled_float

Load average for the last minute.


[float]
=== apache.status.load.5

type: scaled_float

Load average for the last 5 minutes.


[float]
=== apache.status.load.15

type: scaled_float

Load average for the last 15 minutes.


[float]
== scoreboard Fields

Scoreboard metrics.



[float]
=== apache.status.scoreboard.starting_up

type: long

Starting up.


[float]
=== apache.status.scoreboard.reading_request

type: long

Reading requests.


[float]
=== apache.status.scoreboard.sending_reply

type: long

Sending Reply.


[float]
=== apache.status.scoreboard.keepalive

type: long

Keep alive.


[float]
=== apache.status.scoreboard.dns_lookup

type: long

Dns Lookups.


[float]
=== apache.status.scoreboard.closing_connection

type: long

Closing connections.


[float]
=== apache.status.scoreboard.logging

type: long

Logging


[float]
=== apache.status.scoreboard.gracefully_finishing

type: long

Gracefully finishing.


[float]
=== apache.status.scoreboard.idle_cleanup

type: long

Idle cleanups.


[float]
=== apache.status.scoreboard.open_slot

type: long

Open slots.


[float]
=== apache.status.scoreboard.waiting_for_connection

type: long

Waiting for connections.


[float]
=== apache.status.scoreboard.total

type: long

Total.


[[exported-fields-beat]]
== Beat Fields

Contains common beat fields available in all event types.



[float]
=== beat.name

The name of the Beat sending the log messages. If the Beat name is set in the configuration file, then that value is used. If it is not set, the hostname is used. To set the Beat name, use the `name` option in the configuration file.


[float]
=== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


[float]
=== beat.version

The version of the beat that generated this event.


[float]
=== @timestamp

type: date

example: August 26th 2016, 12:35:53.332

format: date

required: True

The timestamp when the event log record was generated.


[float]
=== tags

Arbitrary tags that can be set per Beat and per transaction type.


[float]
=== fields

type: dict

Contains user configurable fields.


[[exported-fields-cloud]]
== Cloud Provider Metadata Fields

Metadata from cloud providers added by the add_cloud_metadata processor.



[float]
=== meta.cloud.provider

example: ec2

Name of the cloud provider. Possible values are ec2, gce, or digitalocean.


[float]
=== meta.cloud.instance_id

Instance ID of the host machine.


[float]
=== meta.cloud.machine_type

example: t2.medium

Machine type of the host machine.


[float]
=== meta.cloud.availability_zone

example: us-east-1c

Availability zone in which this host is running.


[float]
=== meta.cloud.project_id

example: project-x

Name of the project in Google Cloud.


[float]
=== meta.cloud.region

Region in which this host is running.


[[exported-fields-common]]
== Common Fields

Contains common fields available in all event types.



[float]
=== metricset.module

The name of the module that generated the event.


[float]
=== metricset.name

The name of the metricset that generated the event.


[float]
=== metricset.host

Hostname of the machine from which the metricset was collected. This field may not be present when the data was collected locally.


[float]
=== metricset.rtt

type: long

required: True

Event round trip time in microseconds.


[float]
=== type

example: metricsets

required: True

The document type. Always set to "metricsets".


[[exported-fields-docker]]
== docker Fields

experimental[]
Docker stats collected from Docker.



[float]
== docker Fields

docker contains different informations and statistics of docker's containers running



[float]
== container Fields

Docker container metrics



[float]
=== docker.container.command

type: keyword

Executed command in docker container.


[float]
=== docker.container.created

type: date

Date then the container was created.


[float]
=== docker.container.id

type: keyword

Unique container id.


[float]
=== docker.container.image

type: keyword

Name of the image the container was built on.


[float]
=== docker.container.name

type: keyword

Container name.


[float]
=== docker.container.status

type: keyword

Container status.


[float]
== size Fields

Container size metrics.



[float]
=== docker.container.size.root_fs

type: long

Total size of all the files in the container.


[float]
=== docker.container.size.rw

type: long

Size of the files which have been created or changed since creation.


[float]
== cpu Fields

Runtime cpu metrics.



[float]
=== docker.cpu.kernel.pct

type: scaled_float

format: percentage

The system kernel consumed by The Docker server.


[float]
=== docker.cpu.kernel.ticks

type: long

Cpu kernel tikcs


[float]
=== docker.cpu.system.pct

type: scaled_float

format: percentage



[float]
=== docker.cpu.system.ticks

type: long

Cpu system tikcs


[float]
=== docker.cpu.user.pct

type: scaled_float

format: percentage



[float]
=== docker.cpu.user.ticks

type: long

Cpu user tikcs


[float]
=== docker.cpu.total.pct

type: scaled_float

format: percentage

Total cpu usage.


[float]
== diskio Fields

Diskio metrics.



[float]
=== docker.diskio.reads

type: scaled_float

Number of reads.


[float]
=== docker.diskio.writes

type: scaled_float

Number of writes.


[float]
=== docker.diskio.total

type: scaled_float

Reads and writes numbers combined.


[float]
== info Fields

experimental[]
info metrics based on https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/display-system-wide-information



[float]
== containers Fields

Overall container stats.



[float]
=== docker.info.containers.paused

type: long

Total number of paused containers.


[float]
=== docker.info.containers.running

type: long

Total number of running containers.


[float]
=== docker.info.containers.stopped

type: long

Total number of stopped containers.


[float]
=== docker.info.containers.total

type: long

Total number of existing containers.


[float]
=== docker.info.id

type: keyword

Unique docker host identifier.


[float]
=== docker.info.images

type: long

Total number of existing images.


[float]
== memory Fields

Memory metrics.



[float]
=== docker.memory.fail.count

type: scaled_float

Fail counter.


[float]
=== docker.memory.limit

type: long

format: bytes

Memory limit.


[float]
== rss Fields

Rss memory stats.



[float]
=== docker.memory.rss.total

type: long

format: bytes

Total memory resident set size.


[float]
=== docker.memory.rss.pct

type: scaled_float

Memory resident set size percentage.


[float]
== usage Fields

Usage memory stats.



[float]
=== docker.memory.usage.max

type: long

format: bytes

Max memory usage.


[float]
=== docker.memory.usage.pct

type: scaled_float

Memory usage percentage.


[float]
=== docker.memory.usage.total

type: long

format: bytes

Total memory usage.


[float]
== network Fields

Netowrk metrics.



[float]
=== docker.network.interface

type: keyword

Network interface name.


[float]
== in Fields

Incoming network stats.



[float]
=== docker.network.in.bytes

type: long

format: bytes

Total number of incoming bytes.


[float]
=== docker.network.in.dropped

type: scaled_float

Total number of dropped incoming packets.


[float]
=== docker.network.in.errors

type: long

Total errors on incoming packets.


[float]
=== docker.network.in.packets

type: long

Total number of incoming packets.


[float]
== out Fields

Outgoing network stats.



[float]
=== docker.network.out.bytes

type: long

format: bytes

Total number of outgoing bytes.


[float]
=== docker.network.out.dropped

type: scaled_float

Total number of dropped outgoing packets.


[float]
=== docker.network.out.errors

type: long

Total errors on outgoing packets.


[float]
=== docker.network.out.packets

type: long

Total number of outgoing packets.


[[exported-fields-haproxy]]
== haproxy Fields

experimental[]
haproxy Module



[float]
== haproxy Fields

HAProx metrics.



[float]
== info Fields

General infomration collected on HAProxy process



[float]
=== haproxy.info.processes

type: long

Number of processes


[float]
=== haproxy.info.process_num

type: long

Process number


[float]
=== haproxy.info.pid

type: long

Process ID


[float]
=== haproxy.info.run_queue

type: long



[float]
=== haproxy.info.tasks

type: long



[float]
=== haproxy.info.uptime.sec

type: long

Current uptime in seconds


[float]
=== haproxy.info.memory.max.bytes

type: long

format: bytes

Max number of memory usage in bytes (The 'Memmax_MB' value converted to bytes)


[float]
=== haproxy.info.ulimit_n

type: long

Max number of open files for process


[float]
== compress Fields




[float]
== bps Fields




[float]
=== haproxy.info.compress.bps.in

type: long



[float]
=== haproxy.info.compress.bps.out

type: long



[float]
=== haproxy.info.compress.bps.rate_limit

type: long



[float]
== connection Fields




[float]
== rate Fields




[float]
=== haproxy.info.connection.rate.value

type: long



[float]
=== haproxy.info.connection.rate.limit

type: long



[float]
=== haproxy.info.connection.rate.max

type: long



[float]
=== haproxy.info.connection.current

type: long

Current Connections


[float]
=== haproxy.info.connection.total

type: long

Total Connections


[float]
=== haproxy.info.connection.ssl.current

type: long

Current ssl Connections


[float]
=== haproxy.info.connection.ssl.total

type: long

Current Connections


[float]
=== haproxy.info.connection.ssl.max

type: long

Current Connections


[float]
=== haproxy.info.connection.max

type: long

Max connections


[float]
=== haproxy.info.connection.hard_max

type: long



[float]
=== haproxy.info.requests.total

type: long



[float]
=== haproxy.info.sockets.max

type: long



[float]
=== haproxy.info.requests.max

type: long



[float]
== pipes Fields




[float]
=== haproxy.info.pipes.used

type: integer



[float]
=== haproxy.info.pipes.free

type: integer



[float]
=== haproxy.info.pipes.max

type: integer



[float]
== session Fields

None


[float]
=== haproxy.info.session.rate.value

type: integer



[float]
=== haproxy.info.session.rate.limit

type: integer



[float]
=== haproxy.info.session.rate.max

type: integer



[float]
== ssl Fields

None


[float]
=== haproxy.info.ssl.rate.value

type: integer

None

[float]
=== haproxy.info.ssl.rate.limit

type: integer

None

[float]
=== haproxy.info.ssl.rate.max

type: integer

None

[float]
== frontend Fields

None


[float]
=== haproxy.info.ssl.frontend.key_rate.value

type: integer

None

[float]
=== haproxy.info.ssl.frontend.key_rate.max

type: integer

None

[float]
=== haproxy.info.ssl.frontend.session_reuse.pct

type: scaled_float

format: percent

None

[float]
== backend Fields

None


[float]
=== haproxy.info.ssl.backend.key_rate.value

type: integer

None

[float]
=== haproxy.info.ssl.backend.key_rate.max

type: integer

MaxConnRate

[float]
=== haproxy.info.ssl.cached_lookups

type: long

None

[float]
=== haproxy.info.ssl.cache_misses

type: long

None

[float]
== zlib_mem_usage Fields




[float]
=== haproxy.info.zlib_mem_usage.value

type: integer



[float]
=== haproxy.info.zlib_mem_usage.max

type: integer



[float]
=== haproxy.info.idle.pct

type: scaled_float

format: percent



[float]
== stat Fields

Stats collected from HAProxy process



[float]
=== haproxy.stat.status

type: keyword

status (UP/DOWN/NOLB/MAINT/MAINT(via)...)


[float]
=== haproxy.stat.weight

type: long

total weight (backend), server weight (server)


[float]
=== haproxy.stat.downtime

type: long

total downtime (in seconds). The value for the backend is the downtime for the whole backend, not the sum of the server downtime.


[float]
=== haproxy.stat.component_type

type: integer

(0=frontend, 1=backend, 2=server, 3=socket/listener)


[float]
=== haproxy.stat.process_id

type: integer

process id (0 for first instance, 1 for second, ...)


[float]
=== haproxy.stat.service_name

type: keyword

service name (FRONTEND for frontend, BACKEND for backend, any name for server/listener)


[float]
=== haproxy.stat.in.bytes

type: long

format: bytes

bytes in


[float]
=== haproxy.stat.out.bytes

type: long

format: bytes

bytes out


[float]
=== haproxy.stat.last_change

type: integer

number of seconds since the last UP<->DOWN transition


[float]
=== haproxy.stat.throttle.pct

type: scaled_float

format: percentage

current throttle percentage for the server, when slowstart is active, or no value if not in slowstart.


[float]
=== haproxy.stat.selected.total

type: long

total number of times a server was selected, either for new sessions, or when re-dispatching. The server counter is the number of times that server was selected.


[float]
=== haproxy.stat.tracked.id

type: long

id of proxy/server if tracking is enabled.



[float]
=== haproxy.stat.connection.total

type: long

cumulative number of connections


[float]
=== haproxy.stat.connection.retried

type: long

number of times a connection to a server was retried.


[float]
=== haproxy.stat.connection.time.avg

type: long

the average connect time in ms over the 1024 last requests



[float]
=== haproxy.stat.request.denied

type: long

requests denied because of security concerns.
  * For tcp this is because of a matched tcp-request content rule.
  * For http this is because of a matched http-request or tarpit rule.


[float]
=== haproxy.stat.request.queued.current

type: long

current queued requests. For the backend this reports the number queued without a server assigned


[float]
=== haproxy.stat.request.queued.max

type: long

max value of queued.current


[float]
=== haproxy.stat.request.errors

type: long

request errors. Some of the possible causes are:
  * early termination from the client, before the request has been sent.
  * read error from the client
  * client timeout
  * client closed connection
  * various bad requests from the client.
  * request was tarpitted.


[float]
=== haproxy.stat.request.redispatched

type: long

number of times a request was redispatched to another server. The server value counts the number of times that server was switched away from.


[float]
=== haproxy.stat.request.connection.errors

type: long

number of requests that encountered an error trying to connect to a backend server. The backend stat is the sum of the stat for all servers of that backend, plus any connection errors not associated with a particular server (such as the backend having no active servers).


[float]
== rate Fields




[float]
=== haproxy.stat.request.rate.value

type: long

HTTP requests per second over last elapsed second


[float]
=== haproxy.stat.request.rate.max

type: long

max number of HTTP requests per second observed


[float]
=== haproxy.stat.request.total

type: long

total number of HTTP requests received



[float]
=== haproxy.stat.response.errors

type: long

response errors. srv_abrt will be counted here also. Some other errors are: * write error on the client socket (won't be counted for the server stat) * failure applying filters to the respons


[float]
=== haproxy.stat.response.time.avg

type: long

the average response time in ms over the 1024 last requests (0 for TCP)


[float]
=== haproxy.stat.response.denied

type: integer

responses denied because of security concerns.
  * For http this is because of a matched http-request rule, or "option checkcache".


[float]
== http Fields




[float]
=== haproxy.stat.response.http.1xx

type: long

http responses with 1xx code


[float]
=== haproxy.stat.response.http.2xx

type: long

http responses with 2xx code


[float]
=== haproxy.stat.response.http.3xx

type: long

http responses with 3xx code


[float]
=== haproxy.stat.response.http.4xx

type: long

http responses with 4xx code


[float]
=== haproxy.stat.response.http.5xx

type: long

http responses with 5xx code


[float]
=== haproxy.stat.response.http.other

type: long

http responses with other codes (protocol error)



[float]
=== haproxy.stat.session.current

type: long

current sessions


[float]
=== haproxy.stat.session.max

type: long

max sessions


[float]
=== haproxy.stat.session.limit

type: long

configured session limit



[float]
=== haproxy.stat.session.rate.value

type: integer

number of sessions per second over last elapsed second


[float]
=== haproxy.stat.session.rate.limit

type: integer

configured limit on new sessions per second


[float]
=== haproxy.stat.session.rate.max

type: integer

max number of new sessions per second


[float]
== check Fields




[float]
=== haproxy.stat.check.status

type: keyword

status of last health check, one of:
  UNK     -> unknown
  INI     -> initializing
  SOCKERR -> socket error
  L4OK    -> check passed on layer 4, no upper layers testing enabled
  L4TOUT  -> layer 1-4 timeout
  L4CON   -> layer 1-4 connection problem, for example
            "Connection refused" (tcp rst) or "No route to host" (icmp)
  L6OK    -> check passed on layer 6
  L6TOUT  -> layer 6 (SSL) timeout
  L6RSP   -> layer 6 invalid response - protocol error
  L7OK    -> check passed on layer 7
  L7OKC   -> check conditionally passed on layer 7, for example 404 with
            disable-on-404
  L7TOUT  -> layer 7 (HTTP/SMTP) timeout
  L7RSP   -> layer 7 invalid response - protocol error
  L7STS   -> layer 7 response error, for example HTTP 5xx


[float]
=== haproxy.stat.check.code

type: long

layer5-7 code, if available


[float]
=== haproxy.stat.check.duration

type: long

time in ms took to finish last health check


[float]
=== haproxy.stat.check.health.last

type: long



[float]
=== haproxy.stat.check.health.fail

type: long



[float]
=== haproxy.stat.check.agent.last

type: integer



[float]
=== haproxy.stat.check.failed

type: long

number of failed checks. (Only counts checks failed when the server is up.)


[float]
=== haproxy.stat.check.down

type: long

number of UP->DOWN transitions. The backend counter counts transitions to the whole backend being down, rather than the sum of the counters for each server.


[float]
=== haproxy.stat.client.aborted

type: integer

number of data transfers aborted by the client


[float]
== server Fields




[float]
=== haproxy.stat.server.id

type: integer

server id (unique inside a proxy)


[float]
=== haproxy.stat.server.aborted

type: integer

number of data transfers aborted by the server (inc. in eresp)


[float]
=== haproxy.stat.server.active

type: integer

number of active servers (backend), server is active (server)


[float]
=== haproxy.stat.server.backup

type: integer

number of backup servers (backend), server is backup (server)


[float]
== compressor Fields




[float]
=== haproxy.stat.compressor.in.bytes

type: long

format: bytes

number of HTTP response bytes fed to the compressor


[float]
=== haproxy.stat.compressor.out.bytes

type: integer

format: bytes

number of HTTP response bytes emitted by the compressor


[float]
=== haproxy.stat.compressor.bypassed.bytes

type: long

format: bytes

number of bytes that bypassed the HTTP compressor (CPU/BW limit)


[float]
=== haproxy.stat.compressor.response.bytes

type: long

format: bytes

number of HTTP responses that were compressed


[float]
== proxy Fields




[float]
=== haproxy.stat.proxy.id

type: integer

unique proxy id


[float]
=== haproxy.stat.proxy.name

type: keyword

proxy name


[float]
== queue Fields




[float]
=== haproxy.stat.queue.limit

type: integer

configured maxqueue for the server, or nothing in the value is 0 (default, meaning no limit)


[float]
=== haproxy.stat.queue.time.avg

type: integer

the average queue time in ms over the 1024 last requests


[[exported-fields-kafka]]
== kafka Fields

kafka Module
experimental[]



[float]
== kafka Fields




[float]
== partition Fields

partition



[float]
== offset Fields

Available offsets of the given partition.



[float]
=== kafka.partition.offset.newest

type: long

Newest offset of the partition.


[float]
=== kafka.partition.offset.oldest

type: long

Oldest offset of the partition.


[float]
== partition Fields

Partition data.



[float]
=== kafka.partition.partition.id

type: long

Partition id.


[float]
=== kafka.partition.partition.leader

type: long

Leader id (broker).


[float]
=== kafka.partition.partition.isr

type: list

List of isr ids.


[float]
=== kafka.partition.partition.replica

type: long

Replica id (broker).


[float]
=== kafka.partition.partition.insync_replica

type: boolean

Indicates if replica is included in the in-sync replicate set (ISR).


[float]
=== kafka.partition.partition.error.code

type: long

Error code from fetching partition.


[float]
=== kafka.partition.topic.error.code

type: long

topic error code.


[float]
=== kafka.partition.topic.name

type: keyword

Topic name


[float]
=== kafka.partition.broker.id

type: long

Broker id


[float]
=== kafka.partition.broker.address

type: keyword

Broker address


[[exported-fields-mongodb]]
== MongoDB Fields

Metrics collected from MongoDB servers.



[float]
== mongodb Fields

MongoDB metrics.



[float]
== status Fields

MongoDB server status metrics.



[float]
=== mongodb.status.version

type: keyword

Instance version.


[float]
=== mongodb.status.uptime.ms

type: long

Instance uptime in milliseconds.


[float]
=== mongodb.status.local_time

type: date

Local time as reported by the MongoDB instance.


[float]
=== mongodb.status.asserts.regular

type: long

Number of regular assertions produced by the server.


[float]
=== mongodb.status.asserts.warning

type: long

Number of warning assertions produced by the server.


[float]
=== mongodb.status.asserts.msg

type: long

Number of msg assertions produced by the server.


[float]
=== mongodb.status.asserts.user

type: long

Number of user assertions produced by the server.


[float]
=== mongodb.status.asserts.rollovers

type: long

Number of rollovers assertions produced by the server.


[float]
== background_flushing Fields

Data about the process MongoDB uses to write data to disk. This data is only available for instances that use the MMAPv1 storage engine.



[float]
=== mongodb.status.background_flushing.flushes

type: long

A counter that collects the number of times the database has flushed all writes to disk.


[float]
=== mongodb.status.background_flushing.total.ms

type: long

The total number of milliseconds (ms) that the mongod processes have spent writing (i.e. flushing) data to disk. Because this is an absolute value, consider the value of `flushes` and `average_ms` to provide better context for this datum.


[float]
=== mongodb.status.background_flushing.average.ms

type: long

The average time spent flushing to disk per flush event.


[float]
=== mongodb.status.background_flushing.last.ms

type: long

The amount of time, in milliseconds, that the last flush operation took to complete.


[float]
=== mongodb.status.background_flushing.last_finished

type: date

A timestamp of the last completed flush operation.


[float]
== connections Fields

Data regarding the current status of incoming connections and availability of the database server.



[float]
=== mongodb.status.connections.current

type: long

The number of connections to the database server from clients. This number includes the current shell session. Consider the value of `available` to add more context to this datum.


[float]
=== mongodb.status.connections.available

type: long

The number of unused available incoming connections the database can provide.


[float]
=== mongodb.status.connections.total_created

type: long

A count of all incoming connections created to the server. This number includes connections that have since closed.


[float]
== journaling Fields

Data about the journaling-related operations and performance. Journaling information only appears for mongod instances that use the MMAPv1 storage engine and have journaling enabled.



[float]
=== mongodb.status.journaling.commits

type: long

The number of transactions written to the journal during the last journal group commit interval.


[float]
=== mongodb.status.journaling.journaled.mb

type: long

The amount of data in megabytes (MB) written to journal during the last journal group commit interval.


[float]
=== mongodb.status.journaling.write_to_data_files.mb

type: long

The amount of data in megabytes (MB) written from journal to the data files during the last journal group commit interval.


[float]
=== mongodb.status.journaling.compression

type: long

The compression ratio of the data written to the journal.


[float]
=== mongodb.status.journaling.commits_in_write_lock

type: long

Count of the commits that occurred while a write lock was held. Commits in a write lock indicate a MongoDB node under a heavy write load and call for further diagnosis.


[float]
=== mongodb.status.journaling.early_commits

type: long

The number of times MongoDB requested a commit before the scheduled journal group commit interval.


[float]
== times Fields

Information about the performance of the mongod instance during the various phases of journaling in the last journal group commit interval.



[float]
=== mongodb.status.journaling.times.dt.ms

type: long

The amount of time over which MongoDB collected the times data. Use this field to provide context to the other times field values.


[float]
=== mongodb.status.journaling.times.prep_log_buffer.ms

type: long

The amount of time spent preparing to write to the journal. Smaller values indicate better journal performance.


[float]
=== mongodb.status.journaling.times.write_to_journal.ms

type: long

The amount of time spent actually writing to the journal. File system speeds and device interfaces can affect performance.


[float]
=== mongodb.status.journaling.times.write_to_data_files.ms

type: long

The amount of time spent writing to data files after journaling. File system speeds and device interfaces can affect performance.


[float]
=== mongodb.status.journaling.times.remap_private_view.ms

type: long

The amount of time spent remapping copy-on-write memory mapped views. Smaller values indicate better journal performance.


[float]
=== mongodb.status.journaling.times.commits.ms

type: long

The amount of time spent for commits.


[float]
=== mongodb.status.journaling.times.commits_in_write_lock.ms

type: long

The amount of time spent for commits that occurred while a write lock was held.


[float]
== extra_info Fields

Platform specific data.



[float]
=== mongodb.status.extra_info.heap_usage.bytes

type: long

format: bytes

The total size in bytes of heap space used by the database process. Only available on Unix/Linux.


[float]
=== mongodb.status.extra_info.page_faults

type: long

The total number of page faults that require disk operations. Page faults refer to operations that require the database server to access data that isn't available in active memory.


[float]
== network Fields

Platform specific data.



[float]
=== mongodb.status.network.in.bytes

type: long

format: bytes

The amount of network traffic, in bytes, received by this database.


[float]
=== mongodb.status.network.out.bytes

type: long

format: bytes

The amount of network traffic, in bytes, sent from this database.


[float]
=== mongodb.status.network.requests

type: long

The total number of requests received by the server.


[float]
== opcounters Fields

An overview of database operations by type.



[float]
=== mongodb.status.opcounters.insert

type: long

The total number of insert operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.query

type: long

The total number of queries received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.update

type: long

The total number of update operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.delete

type: long

The total number of delete operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.getmore

type: long

The total number of getmore operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters.command

type: long

The total number of commands issued to the database since the mongod instance last started.


[float]
== opcounters_replicated Fields

An overview of database replication operations by type.



[float]
=== mongodb.status.opcounters_replicated.insert

type: long

The total number of replicated insert operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.query

type: long

The total number of replicated queries received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.update

type: long

The total number of replicated update operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.delete

type: long

The total number of replicated delete operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.getmore

type: long

The total number of replicated getmore operations received since the mongod instance last started.


[float]
=== mongodb.status.opcounters_replicated.command

type: long

The total number of replicated commands issued to the database since the mongod instance last started.


[float]
== memory Fields

Data about the current memory usage of the mongod server.



[float]
=== mongodb.status.memory.bits

type: long

Either 64 or 32, depending on which target architecture was specified during the mongod compilation process.


[float]
=== mongodb.status.memory.resident.mb

type: long

The amount of RAM, in megabytes (MB), currently used by the database process.


[float]
=== mongodb.status.memory.virtual.mb

type: long

The amount, in megabytes (MB), of virtual memory used by the mongod process.


[float]
=== mongodb.status.memory.mapped.mb

type: long

The amount of mapped memory, in megabytes (MB), used by the database. Because MongoDB uses memory-mapped files, this value is likely to be to be roughly equivalent to the total size of your database or databases.


[float]
=== mongodb.status.memory.mapped_with_journal.mb

type: long

The amount of mapped memory, in megabytes (MB), including the memory used for journaling.


[float]
=== mongodb.status.write_backs_queued

type: boolean

True when there are operations from a mongos instance queued for retrying.


[float]
=== mongodb.status.storage_engine.name

type: keyword

A string that represents the name of the current storage engine.


[float]
== wired_tiger Fields

Statistics about the WiredTiger storage engine.



[float]
== concurrent_transactions Fields

Statistics about the transactions currently in progress.



[float]
=== mongodb.status.wired_tiger.concurrent_transactions.write.out

type: long

Number of concurrent write transaction in progress.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.write.available

type: long

Number of concurrent write tickets available.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.write.total_tickets

type: long

Number of total write tickets.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.read.out

type: long

Number of concurrent read transaction in progress.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.read.available

type: long

Number of concurrent read tickets available.


[float]
=== mongodb.status.wired_tiger.concurrent_transactions.read.total_tickets

type: long

Number of total read tickets.


[float]
== cache Fields

Statistics about the cache and page evictions from the cache.



[float]
=== mongodb.status.wired_tiger.cache.maximum.bytes

type: long

format: bytes

Maximum cache size.


[float]
=== mongodb.status.wired_tiger.cache.used.bytes

type: long

format: bytes

Size in byte of the data currently in cache.


[float]
=== mongodb.status.wired_tiger.cache.dirty.bytes

type: long

format: bytes

Size in bytes of the dirty data in the cache.


[float]
=== mongodb.status.wired_tiger.cache.pages.read

type: long

Number of pages read into the cache.


[float]
=== mongodb.status.wired_tiger.cache.pages.write

type: long

Number of pages written from the cache.


[float]
=== mongodb.status.wired_tiger.cache.pages.evicted

type: long

Number of pages evicted from the cache.


[float]
== log Fields

Statistics about the write ahead log used by WiredTiger.



[float]
=== mongodb.status.wired_tiger.log.size.bytes

type: long

format: bytes

Total log size in bytes.


[float]
=== mongodb.status.wired_tiger.log.write.bytes

type: long

format: bytes

Number of bytes written into the log.


[float]
=== mongodb.status.wired_tiger.log.max_file_size.bytes

type: long

format: bytes

Maximum file size.


[float]
=== mongodb.status.wired_tiger.log.flushes

type: long

Number of flush operations.


[float]
=== mongodb.status.wired_tiger.log.writes

type: long

Number of write operations.


[float]
=== mongodb.status.wired_tiger.log.scans

type: long

Number of scan operations.


[float]
=== mongodb.status.wired_tiger.log.syncs

type: long

Number of sync operations.


[[exported-fields-mysql]]
== MySQL Fields

MySQL server status metrics collected from MySQL.



[float]
== mysql Fields

`mysql` contains the metrics that were obtained from MySQL query.



[float]
== status Fields

`status` contains the metrics that were obtained by the status SQL query.



[float]
== aborted Fields

Aborted status fields.



[float]
=== mysql.status.aborted.clients

type: long

The number of connections that were aborted because the client died without closing the connection properly.


[float]
=== mysql.status.aborted.connects

type: long

The number of failed attempts to connect to the MySQL server.


[float]
== binlog Fields




[float]
=== mysql.status.binlog.cache.disk_use

type: long



[float]
=== mysql.status.binlog.cache.use

type: long



[float]
== bytes Fields

Bytes stats.



[float]
=== mysql.status.bytes.received

type: long

format: bytes

The number of bytes received from all clients.


[float]
=== mysql.status.bytes.sent

type: long

format: bytes

The number of bytes sent to all clients.


[float]
== threads Fields

Threads stats.



[float]
=== mysql.status.threads.cached

type: long

The number of cached threads.


[float]
=== mysql.status.threads.created

type: long

The number of created threads.


[float]
=== mysql.status.threads.connected

type: long

The number of connected threads.


[float]
=== mysql.status.threads.running

type: long

The number of running threads.


[float]
=== mysql.status.connections

type: long



[float]
== created Fields




[float]
=== mysql.status.created.tmp.disk_tables

type: long



[float]
=== mysql.status.created.tmp.files

type: long



[float]
=== mysql.status.created.tmp.tables

type: long



[float]
== delayed Fields




[float]
=== mysql.status.delayed.errors

type: long



[float]
=== mysql.status.delayed.insert_threads

type: long



[float]
=== mysql.status.delayed.writes

type: long



[float]
=== mysql.status.flush_commands

type: long



[float]
=== mysql.status.max_used_connections

type: long



[float]
== open Fields




[float]
=== mysql.status.open.files

type: long



[float]
=== mysql.status.open.streams

type: long



[float]
=== mysql.status.open.tables

type: long



[float]
=== mysql.status.opened_tables

type: long



[[exported-fields-nginx]]
== Nginx Fields

Nginx server status metrics collected from various modules.



[float]
== nginx Fields

`nginx` contains the metrics that were scraped from nginx.



[float]
== stubstatus Fields

`stubstatus` contains the metrics that were scraped from the ngx_http_stub_status_module status page.



[float]
=== nginx.stubstatus.hostname

type: keyword

Nginx hostname.


[float]
=== nginx.stubstatus.active

type: long

The current number of active client connections including Waiting connections.


[float]
=== nginx.stubstatus.accepts

type: long

The total number of accepted client connections.


[float]
=== nginx.stubstatus.handled

type: long

The total number of handled client connections.


[float]
=== nginx.stubstatus.dropped

type: long

The total number of dropped client connections.


[float]
=== nginx.stubstatus.requests

type: long

The total number of client requests.


[float]
=== nginx.stubstatus.current

type: long

The current number of client requests.


[float]
=== nginx.stubstatus.reading

type: long

The current number of connections where Nginx is reading the request header.


[float]
=== nginx.stubstatus.writing

type: long

The current number of connections where Nginx is writing the response back to the client.


[float]
=== nginx.stubstatus.waiting

type: long

The current number of idle client connections waiting for a request.


[[exported-fields-postgresql]]
== PostgreSQL Fields

Metrics collected from PostgreSQL servers.



[float]
== postgresql Fields

PostgreSQL metrics.



[float]
== activity Fields

One document per server process, showing information related to the current activity of that process, such as state and current query. Collected by querying pg_stat_activity.



[float]
=== postgresql.activity.database.oid

type: long

OID of the database this backend is connected to.


[float]
=== postgresql.activity.database.name

type: keyword

Name of the database this backend is connected to.


[float]
=== postgresql.activity.pid

type: long

Process ID of this backend.


[float]
=== postgresql.activity.user.id

type: long

OID of the user logged into this backend.


[float]
=== postgresql.activity.user.name

Name of the user logged into this backend.


[float]
=== postgresql.activity.application_name

Name of the application that is connected to this backend.


[float]
=== postgresql.activity.client.address

IP address of the client connected to this backend.


[float]
=== postgresql.activity.client.hostname

Host name of the connected client, as reported by a reverse DNS lookup of client_addr.


[float]
=== postgresql.activity.client.port

type: long

TCP port number that the client is using for communication with this backend, or -1 if a Unix socket is used.


[float]
=== postgresql.activity.backend_start

type: date

Time when this process was started, i.e., when the client connected to the server.


[float]
=== postgresql.activity.transaction_start

type: date

Time when this process' current transaction was started.


[float]
=== postgresql.activity.query_start

type: date

Time when the currently active query was started, or if state is not active, when the last query was started.


[float]
=== postgresql.activity.state_change

type: date

Time when the state was last changed.


[float]
=== postgresql.activity.waiting

type: boolean

True if this backend is currently waiting on a lock.


[float]
=== postgresql.activity.state

Current overall state of this backend. Possible values are:

  * active: The backend is executing a query.
  * idle: The backend is waiting for a new client command.
  * idle in transaction: The backend is in a transaction, but is not
    currently executing a query.
  * idle in transaction (aborted): This state is similar to idle in
    transaction, except one of the statements in the transaction caused
    an error.
  * fastpath function call: The backend is executing a fast-path function.
  * disabled: This state is reported if track_activities is disabled in this backend.


[float]
=== postgresql.activity.query

Text of this backend's most recent query. If state is active this field shows the currently executing query. In all other states, it shows the last query that was executed.


[float]
== bgwriter Fields

Statistics about the background writer process's activity. Collected using the pg_stat_bgwriter query.



[float]
=== postgresql.bgwriter.checkpoints.scheduled

type: long

Number of scheduled checkpoints that have been performed.


[float]
=== postgresql.bgwriter.checkpoints.requested

type: long

Number of requested checkpoints that have been performed.


[float]
=== postgresql.bgwriter.checkpoints.times.write.ms

type: float

Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in milliseconds.


[float]
=== postgresql.bgwriter.checkpoints.times.sync.ms

type: float

Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in milliseconds.


[float]
=== postgresql.bgwriter.buffers.checkpoints

type: long

Number of buffers written during checkpoints.


[float]
=== postgresql.bgwriter.buffers.clean

type: long

Number of buffers written by the background writer.


[float]
=== postgresql.bgwriter.buffers.clean_full

type: long

Number of times the background writer stopped a cleaning scan because it had written too many buffers.


[float]
=== postgresql.bgwriter.buffers.backend

type: long

Number of buffers written directly by a backend.


[float]
=== postgresql.bgwriter.buffers.backend_fsync

type: long

Number of times a backend had to execute its own fsync call (normally the background writer handles those even when the backend does its own write)


[float]
=== postgresql.bgwriter.buffers.allocated

type: long

Number of buffers allocated.


[float]
=== postgresql.bgwriter.stats_reset

type: date

Time at which these statistics were last reset.


[float]
== database Fields

One row per database, showing database-wide statistics. Collected by querying pg_stat_database



[float]
=== postgresql.database.oid

type: long

OID of the database this backend is connected to.


[float]
=== postgresql.database.name

type: keyword

Name of the database this backend is connected to.


[float]
=== postgresql.database.number_of_backends

type: long

Number of backends currently connected to this database.


[float]
=== postgresql.database.transactions.commit

type: long

Number of transactions in this database that have been committed.


[float]
=== postgresql.database.transactions.rollback

type: long

Number of transactions in this database that have been rolled back.


[float]
=== postgresql.database.blocks.read

type: long

Number of disk blocks read in this database.


[float]
=== postgresql.database.blocks.hit

type: long

Number of times disk blocks were found already in the buffer cache, so that a read was not necessary (this only includes hits in the PostgreSQL buffer cache, not the operating system's file system cache).


[float]
=== postgresql.database.blocks.time.read.ms

type: long

Time spent reading data file blocks by backends in this database, in milliseconds.


[float]
=== postgresql.database.blocks.time.write.ms

type: long

Time spent writing data file blocks by backends in this database, in milliseconds.


[float]
=== postgresql.database.rows.returned

type: long

Number of rows returned by queries in this database.


[float]
=== postgresql.database.rows.fetched

type: long

Number of rows fetched by queries in this database.


[float]
=== postgresql.database.rows.inserted

type: long

Number of rows inserted by queries in this database.


[float]
=== postgresql.database.rows.updated

type: long

Number of rows updated by queries in this database.


[float]
=== postgresql.database.rows.deleted

type: long

Number of rows deleted by queries in this database.


[float]
=== postgresql.database.conflicts

type: long

Number of queries canceled due to conflicts with recovery in this database.


[float]
=== postgresql.database.temporary.files

type: long

Number of temporary files created by queries in this database. All temporary files are counted, regardless of why the temporary file was created (e.g., sorting or hashing), and regardless of the log_temp_files setting.


[float]
=== postgresql.database.temporary.bytes

type: long

Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.


[float]
=== postgresql.database.deadlocks

type: long

Number of deadlocks detected in this database.


[float]
=== postgresql.database.stats_reset

type: date

Time at which these statistics were last reset.


[[exported-fields-redis]]
== Redis Fields

Redis metrics collected from Redis.



[float]
== redis Fields

`redis` contains the information and statistics from Redis.



[float]
== info Fields

`info` contains the information and statistics returned by the `INFO` command.



[float]
== clients Fields

Redis client stats.



[float]
=== redis.info.clients.connected

type: long

Number of client connections (excluding connections from slaves).


[float]
=== redis.info.clients.longest_output_list

type: long

Longest output list among current client connections.


[float]
=== redis.info.clients.biggest_input_buf

type: long

Biggest input buffer among current client connections.


[float]
=== redis.info.clients.blocked

type: long

Number of clients pending on a blocking call (BLPOP, BRPOP, BRPOPLPUSH).


[float]
== cluster Fields

Redis cluster information.



[float]
=== redis.info.cluster.enabled

type: boolean

Indicates that the Redis cluster is enabled.


[float]
== cpu Fields

Redis CPU stats



[float]
=== redis.info.cpu.used.sys

type: scaled_float

System CPU consumed by the Redis server.


[float]
=== redis.info.cpu.used.sys_children

type: scaled_float

User CPU consumed by the Redis server.


[float]
=== redis.info.cpu.used.user

type: scaled_float

System CPU consumed by the background processes.


[float]
=== redis.info.cpu.used.user_children

type: scaled_float

User CPU consumed by the background processes.


[float]
== memory Fields

Redis memory stats.



[float]
=== redis.info.memory.used.value

type: long

format: bytes Used memory.



[float]
=== redis.info.memory.used.rss

type: long

format: bytes

Used memory rss.


[float]
=== redis.info.memory.used.peak

type: long

format: bytes

Used memory peak.


[float]
=== redis.info.memory.used.lua

type: long

format: bytes

Used memory lua.


[float]
=== redis.info.memory.allocator

type: keyword

Memory allocator.


[float]
== persistence Fields

Redis CPU stats.



[float]
=== redis.info.persistence.loading

type: boolean

None

[float]
== rdb Fields

None


[float]
=== redis.info.persistence.rdb.last_save.changes_since

type: long

None

[float]
=== redis.info.persistence.rdb.bgsave.in_progress

type: boolean

None

[float]
=== redis.info.persistence.rdb.last_save.time

type: long

None

[float]
=== redis.info.persistence.rdb.bgsave.last_status

type: keyword

None

[float]
=== redis.info.persistence.rdb.bgsave.last_time.sec

type: long

None

[float]
=== redis.info.persistence.rdb.bgsave.current_time.sec

type: long

None

[float]
== aof Fields

None


[float]
=== redis.info.persistence.aof.enabled

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite.in_progress

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite.scheduled

type: boolean

None

[float]
=== redis.info.persistence.aof.rewrite.last_time.sec

type: long

None

[float]
=== redis.info.persistence.aof.rewrite.current_time.sec

type: long

None

[float]
=== redis.info.persistence.aof.bgrewrite.last_status

type: keyword

None

[float]
=== redis.info.persistence.aof.write.last_status

type: keyword

None

[float]
== replication Fields

Replication



[float]
=== redis.info.replication.role

type: keyword

None

[float]
=== redis.info.replication.connected_slaves

type: long

None

[float]
=== redis.info.replication.master_offset

type: long

None

[float]
=== redis.info.replication.backlog.active

type: long

None

[float]
=== redis.info.replication.backlog.size

type: long

None

[float]
=== redis.info.replication.backlog.first_byte_offset

type: long

None

[float]
=== redis.info.replication.backlog.histlen

type: long

None

[float]
== server Fields

Server info



[float]
=== redis.info.server.version

type: keyword

None

[float]
=== redis.info.server.git_sha1

type: keyword

None

[float]
=== redis.info.server.git_dirty

type: keyword

None

[float]
=== redis.info.server.build_id

type: keyword

None

[float]
=== redis.info.server.mode

type: keyword

None

[float]
=== redis.info.server.os

type: keyword

None

[float]
=== redis.info.server.arch_bits

type: keyword

None

[float]
=== redis.info.server.multiplexing_api

type: keyword

None

[float]
=== redis.info.server.gcc_version

type: keyword

None

[float]
=== redis.info.server.process_id

type: long

None

[float]
=== redis.info.server.run_id

type: keyword

None

[float]
=== redis.info.server.tcp_port

type: long

None

[float]
=== redis.info.server.uptime

type: long

None

[float]
=== redis.info.server.hz

type: long

None

[float]
=== redis.info.server.lru_clock

type: long

None

[float]
=== redis.info.server.config_file

type: keyword

None

[float]
== stats Fields

Redis stats.



[float]
=== redis.info.stats.connections.received

type: long

Total number of connections received.

[float]
=== redis.info.stats.connections.rejected

type: long

Total number of connections rejected.

[float]
=== redis.info.stats.commands_processed

type: long

Total number of commands preocessed.

[float]
=== redis.info.stats.net.input.bytes

type: long

Total network input in bytes.

[float]
=== redis.info.stats.net.output.bytes

type: long

Total network output in bytes.

[float]
=== redis.info.stats.instantaneous.ops_per_sec

type: long

None

[float]
=== redis.info.stats.instantaneous.input_kbps

type: scaled_float

None

[float]
=== redis.info.stats.instantaneous.output_kbps

type: scaled_float

None

[float]
=== redis.info.stats.sync.full

type: long

None

[float]
=== redis.info.stats.sync.partial.ok

type: long

None

[float]
=== redis.info.stats.sync.partial.err

type: long

None

[float]
=== redis.info.stats.keys.expired

type: long

None

[float]
=== redis.info.stats.keys.evicted

type: long

None

[float]
=== redis.info.stats.keyspace.hits

type: long

None

[float]
=== redis.info.stats.keyspace.misses

type: long

None

[float]
=== redis.info.stats.pubsub.channels

type: long

None

[float]
=== redis.info.stats.pubsub.patterns

type: long

None

[float]
=== redis.info.stats.latest_fork_usec

type: long

None

[float]
=== redis.info.stats.migrate_cached_sockets

type: long

None

[float]
== keyspace Fields

`keyspace` contains the information about the keyspaces returned by the `INFO` command.



[float]
=== redis.keyspace.id

type: keyword

Keyspace identifier.


[float]
=== redis.keyspace.avg_ttl

type: long

Average ttl.


[float]
=== redis.keyspace.keys

type: long

Number of keys in the keyspace.


[float]
=== redis.keyspace.expires

type: long



[[exported-fields-system]]
== System Fields

System status metrics, like CPU and memory usage, that are collected from the operating system.



[float]
== system Fields

`system` contains local system metrics.



[float]
== core Fields

`system-core` contains local CPU core stats.



[float]
=== system.core.id

type: long

CPU Core number.


[float]
=== system.core.user.pct

type: scaled_float

format: percent

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


[float]
=== system.core.user.ticks

type: long

The amount of CPU time spent in user space.


[float]
=== system.core.system.pct

type: scaled_float

format: percent

The percentage of CPU time spent in kernel space.


[float]
=== system.core.system.ticks

type: long

The amount of CPU time spent in kernel space.


[float]
=== system.core.nice.pct

type: scaled_float

format: percent

The percentage of CPU time spent on low-priority processes.


[float]
=== system.core.nice.ticks

type: long

The amount of CPU time spent on low-priority processes.


[float]
=== system.core.idle.pct

type: scaled_float

format: percent

The percentage of CPU time spent idle.


[float]
=== system.core.idle.ticks

type: long

The amount of CPU time spent idle.


[float]
=== system.core.iowait.pct

type: scaled_float

format: percent

The percentage of CPU time spent in wait (on disk).


[float]
=== system.core.iowait.ticks

type: long

The amount of CPU time spent in wait (on disk).


[float]
=== system.core.irq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.core.irq.ticks

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.core.softirq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling software interrupts.


[float]
=== system.core.softirq.ticks

type: long

The amount of CPU time spent servicing and handling software interrupts.


[float]
=== system.core.steal.pct

type: scaled_float

format: percent

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== system.core.steal.ticks

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
== cpu Fields

`cpu` contains local CPU stats.



[float]
=== system.cpu.user.pct

type: scaled_float

format: percent

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


[float]
=== system.cpu.system.pct

type: scaled_float

format: percent

The percentage of CPU time spent in kernel space.


[float]
=== system.cpu.nice.pct

type: scaled_float

format: percent

The percentage of CPU time spent on low-priority processes.


[float]
=== system.cpu.idle.pct

type: scaled_float

format: percent

The percentage of CPU time spent idle.


[float]
=== system.cpu.iowait.pct

type: scaled_float

format: percent

The percentage of CPU time spent in wait (on disk).


[float]
=== system.cpu.irq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.cpu.softirq.pct

type: scaled_float

format: percent

The percentage of CPU time spent servicing and handling software interrupts.


[float]
=== system.cpu.steal.pct

type: scaled_float

format: percent

The percentage of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== system.cpu.user.ticks

type: long

The amount of CPU time spent in user space.


[float]
=== system.cpu.system.ticks

type: long

The amount of CPU time spent in kernel space.


[float]
=== system.cpu.nice.ticks

type: long

The amount of CPU time spent on low-priority processes.


[float]
=== system.cpu.idle.ticks

type: long

The amount of CPU time spent idle.


[float]
=== system.cpu.iowait.ticks

type: long

The amount of CPU time spent in wait (on disk).


[float]
=== system.cpu.irq.ticks

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


[float]
=== system.cpu.softirq.ticks

type: long

The amount of CPU time spent servicing and handling software interrupts.


[float]
=== system.cpu.steal.ticks

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
== diskio Fields

`disk` contains disk IO metrics collected from the operating system.



[float]
=== system.diskio.name

type: keyword

example: sda1

The disk name.


[float]
=== system.diskio.serial_number

type: keyword

The disk's serial number. This may not be provided by all operating systems.


[float]
=== system.diskio.read.count

type: long

The total number of reads completed successfully.


[float]
=== system.diskio.write.count

type: long

The total number of writes completed successfully.


[float]
=== system.diskio.read.bytes

type: long

format: bytes

The total number of bytes read successfully. On Linux this is the number of sectors read multiplied by an assumed sector size of 512.


[float]
=== system.diskio.write.bytes

type: long

format: bytes

The total number of bytes written successfully. On Linux this is the number of sectors written multiplied by an assumed sector size of 512.


[float]
=== system.diskio.read.time

type: long

The total number of milliseconds spent by all reads.


[float]
=== system.diskio.write.time

type: long

The total number of milliseconds spent by all writes.


[float]
=== system.diskio.io.time

type: long

The total number of of milliseconds spent doing I/Os.


[float]
== filesystem Fields

`filesystem` contains local filesystem stats.



[float]
=== system.filesystem.available

type: long

format: bytes

The disk space available to an unprivileged user in bytes.


[float]
=== system.filesystem.device_name

type: keyword

The disk name. For example: `/dev/disk1`


[float]
=== system.filesystem.mount_point

type: keyword

The mounting point. For example: `/`


[float]
=== system.filesystem.files

type: long

The total number of file nodes in the file system.


[float]
=== system.filesystem.free

type: long

format: bytes

The disk space available in bytes.


[float]
=== system.filesystem.free_files

type: long

The number of free file nodes in the file system.


[float]
=== system.filesystem.total

type: long

format: bytes

The total disk space in bytes.


[float]
=== system.filesystem.used.bytes

type: long

format: bytes

The used disk space in bytes.


[float]
=== system.filesystem.used.pct

type: scaled_float

format: percent

The percentage of used disk space.


[float]
== fsstat Fields

`system.fsstat` contains filesystem metrics aggregated from all mounted filesystems, similar with what `df -a` prints out.



[float]
=== system.fsstat.count

type: long

Number of file systems found.

[float]
=== system.fsstat.total_files

type: long

Total number of files.

[float]
== total_size Fields

Nested file system docs.


[float]
=== system.fsstat.total_size.free

type: long

format: bytes

Total free space.


[float]
=== system.fsstat.total_size.used

type: long

format: bytes

Total used space.


[float]
=== system.fsstat.total_size.total

type: long

format: bytes

Total space (used plus free).


[float]
== load Fields

Load averages.



[float]
=== system.load.1

type: scaled_float

Load average for the last minute.


[float]
=== system.load.5

type: scaled_float

Load average for the last 5 minutes.


[float]
=== system.load.15

type: scaled_float

Load average for the last 15 minutes.


[float]
=== system.load.norm.1

type: scaled_float

Load divided by the number of cores for the last minute.


[float]
=== system.load.norm.5

type: scaled_float

Load divided by the number of cores for the last 5 minutes.


[float]
=== system.load.norm.15

type: scaled_float

Load divided by the number of cores for the last 15 minutes.


[float]
== memory Fields

`memory` contains local memory stats.



[float]
=== system.memory.total

type: long

format: bytes

Total memory.


[float]
=== system.memory.used.bytes

type: long

format: bytes

Used memory.


[float]
=== system.memory.free

type: long

format: bytes

The total amount of free memory in bytes. This value does not include memory consumed by system caches and buffers (see system.memory.actual.free).


[float]
=== system.memory.used.pct

type: scaled_float

format: percent

The percentage of used memory.


[float]
== actual Fields

Actual memory used and free.



[float]
=== system.memory.actual.used.bytes

type: long

format: bytes

Actual used memory in bytes. It represents the difference between the total and the available memory. The available memory depends on the OS. For more details, please check `system.actual.free`.


[float]
=== system.memory.actual.free

type: long

format: bytes

Actual free memory in bytes. It is calculated based on the OS. On Linux it consists of the free memory plus caches and buffers. On OSX it is a sum of free memory and the inactive memory. On Windows, it is equal to `system.memory.free`.


[float]
=== system.memory.actual.used.pct

type: scaled_float

format: percent

The percentage of actual used memory.


[float]
== swap Fields

This group contains statistics related to the swap memory usage on the system.


[float]
=== system.memory.swap.total

type: long

format: bytes

Total swap memory.


[float]
=== system.memory.swap.used.bytes

type: long

format: bytes

Used swap memory.


[float]
=== system.memory.swap.free

type: long

format: bytes

Available swap memory.


[float]
=== system.memory.swap.used.pct

type: scaled_float

format: percent

The percentage of used swap memory.


[float]
== network Fields

`network` contains network IO metrics for a single network interface.



[float]
=== system.network.name

type: keyword

example: eth0

The network interface name.


[float]
=== system.network.out.bytes

type: long

format: bytes

The number of bytes sent.


[float]
=== system.network.in.bytes

type: long

format: bytes

The number of bytes received.


[float]
=== system.network.out.packets

type: long

The number of packets sent.


[float]
=== system.network.in.packets

type: long

The number or packets received.


[float]
=== system.network.in.errors

type: long

The number of errors while receiving.


[float]
=== system.network.out.errors

type: long

The number of errors while sending.


[float]
=== system.network.in.dropped

type: long

The number of incoming packets that were dropped.


[float]
=== system.network.out.dropped

type: long

The number of outgoing packets that were dropped. This value is always 0 on Darwin and BSD because it is not reported by the operating system.


[float]
== process Fields

`process` contains process metadata, CPU metrics, and memory metrics.



[float]
=== system.process.name

type: keyword

The process name.


[float]
=== system.process.state

type: keyword

The process state. For example: "running".


[float]
=== system.process.pid

type: long

The process pid.


[float]
=== system.process.ppid

type: long

The process parent pid.


[float]
=== system.process.pgid

type: long

The process group id.


[float]
=== system.process.cmdline

type: keyword

The full command-line used to start the process, including the arguments separated by space.


[float]
=== system.process.username

type: keyword

The username of the user that created the process. If the username cannot be determined, the field will contain the user's numeric identifier (UID). On Windows, this field includes the user's domain and is formatted as `domain\username`.


[float]
== cpu Fields

CPU-specific statistics per process.


[float]
=== system.process.cpu.user

type: long

The amount of CPU time the process spent in user space.


[float]
=== system.process.cpu.total.pct

type: scaled_float

format: percent

The percentage of CPU time spent by the process since the last update. Its value is similar to the %CPU value of the process displayed by the top command on Unix systems.


[float]
=== system.process.cpu.system

type: long

The amount of CPU time the process spent in kernel space.


[float]
=== system.process.cpu.total.ticks

type: long

The total CPU time spent by the process.


[float]
=== system.process.cpu.start_time

type: date

The time when the process was started.


[float]
== memory Fields

Memory-specific statistics per process.


[float]
=== system.process.memory.size

type: long

format: bytes

The total virtual memory the process has.


[float]
=== system.process.memory.rss.bytes

type: long

format: bytes

The Resident Set Size. The amount of memory the process occupied in main memory (RAM).


[float]
=== system.process.memory.rss.pct

type: scaled_float

format: percent

The percentage of memory the process occupied in main memory (RAM).


[float]
=== system.process.memory.share

type: long

format: bytes

The shared memory the process uses.


[float]
== fd Fields

File descriptor usage metrics. This set of metrics is available for Linux and FreeBSD.



[float]
=== system.process.fd.open

type: long

The number of file descriptors open by the process.

[float]
=== system.process.fd.limit.soft

type: long

The soft limit on the number of file descriptors opened by the process. The soft limit can be changed by the process at any time.


[float]
=== system.process.fd.limit.hard

type: long

The hard limit on the number of file descriptors opened by the process. The hard limit can only be raised by root.


[float]
== cgroup Fields

experimental[]
Metrics and limits from the cgroup of which the task is a member. cgroup metrics are reported when the process has membership in a non-root cgroup. These metrics are only available on Linux.



[float]
=== system.process.cgroup.id

type: keyword

The ID common to all cgroups associated with this task. If there isn't a common ID used by all cgroups this field will be absent.


[float]
=== system.process.cgroup.path

type: keyword

The path to the cgroup relative to the cgroup subsystem's mountpoint. If there isn't a common path used by all cgroups this field will be absent.


[float]
== cpu Fields

The cpu subsystem schedules CPU access for tasks in the cgroup. Access can be controlled by two separate schedulers, CFS and RT. CFS stands for completely fair scheduler which proportionally divides the CPU time between cgroups based on weight. RT stands for real time scheduler which sets a maximum amount of CPU time that processes in the cgroup can consume during a given period.



[float]
=== system.process.cgroup.cpu.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.cpu.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.cpu.cfs.period.us

type: long

Period of time in microseconds for how regularly a cgroup's access to CPU resources should be reallocated.


[float]
=== system.process.cgroup.cpu.cfs.quota.us

type: long

Total amount of time in microseconds for which all tasks in a cgroup can run during one period (as defined by cfs.period.us).


[float]
=== system.process.cgroup.cpu.cfs.shares

type: long

An integer value that specifies a relative share of CPU time available to the tasks in a cgroup. The value specified in the cpu.shares file must be 2 or higher.


[float]
=== system.process.cgroup.cpu.rt.period.us

type: long

Period of time in microseconds for how regularly a cgroup's access to CPU resources is reallocated.


[float]
=== system.process.cgroup.cpu.rt.runtime.us

type: long

Period of time in microseconds for the longest continuous period in which the tasks in a cgroup have access to CPU resources.


[float]
=== system.process.cgroup.cpu.stats.periods

type: long

Number of period intervals (as specified in cpu.cfs.period.us) that have elapsed.


[float]
=== system.process.cgroup.cpu.stats.throttled.periods

type: long

Number of times tasks in a cgroup have been throttled (that is, not allowed to run because they have exhausted all of the available time as specified by their quota).


[float]
=== system.process.cgroup.cpu.stats.throttled.ns

type: long

The total time duration (in nanoseconds) for which tasks in a cgroup have been throttled.


[float]
== cpuacct Fields

CPU accounting metrics.


[float]
=== system.process.cgroup.cpuacct.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.cpuacct.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.cpuacct.total.ns

type: long

Total CPU time in nanoseconds consumed by all tasks in the cgroup.


[float]
=== system.process.cgroup.cpuacct.stats.user.ns

type: long

CPU time consumed by tasks in user mode.

[float]
=== system.process.cgroup.cpuacct.stats.system.ns

type: long

CPU time consumed by tasks in user (kernel) mode.

[float]
=== system.process.cgroup.cpuacct.percpu

type: dict

CPU time (in nanoseconds) consumed on each CPU by all tasks in this cgroup.


[float]
== memory Fields

Memory limits and metrics.


[float]
=== system.process.cgroup.memory.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.memory.path

type: keyword

Path to the cgroup relative to the cgroup subsystem's mountpoint.


[float]
=== system.process.cgroup.memory.mem.usage.bytes

type: long

format: bytes

Total memory usage by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.mem.usage.max.bytes

type: long

format: bytes

The maximum memory used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.mem.limit.bytes

type: long

format: bytes

The maximum amount of user memory in bytes (including file cache) that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.mem.failures

type: long

The number of times that the memory limit (mem.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.memsw.usage.bytes

type: long

format: bytes

The sum of current memory usage plus swap space used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.memsw.usage.max.bytes

type: long

format: bytes

The maximum amount of memory and swap space used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.memsw.limit.bytes

type: long

format: bytes

The maximum amount for the sum of memory and swap usage that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.memsw.failures

type: long

The number of times that the memory plus swap space limit (memsw.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.kmem.usage.bytes

type: long

format: bytes

Total kernel memory usage by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem.usage.max.bytes

type: long

format: bytes

The maximum kernel memory used by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem.limit.bytes

type: long

format: bytes

The maximum amount of kernel memory that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.kmem.failures

type: long

The number of times that the memory limit (kmem.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.kmem_tcp.usage.bytes

type: long

format: bytes

Total memory usage for TCP buffers in bytes.


[float]
=== system.process.cgroup.memory.kmem_tcp.usage.max.bytes

type: long

format: bytes

The maximum memory used for TCP buffers by processes in the cgroup (in bytes).


[float]
=== system.process.cgroup.memory.kmem_tcp.limit.bytes

type: long

format: bytes

The maximum amount of memory for TCP buffers that tasks in the cgroup are allowed to use.


[float]
=== system.process.cgroup.memory.kmem_tcp.failures

type: long

The number of times that the memory limit (kmem_tcp.limit.bytes) was reached.


[float]
=== system.process.cgroup.memory.stats.active_anon.bytes

type: long

format: bytes

Anonymous and swap cache on active least-recently-used (LRU) list, including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.active_file.bytes

type: long

format: bytes

File-backed memory on active LRU list, in bytes.

[float]
=== system.process.cgroup.memory.stats.cache.bytes

type: long

format: bytes

Page cache, including tmpfs (shmem), in bytes.

[float]
=== system.process.cgroup.memory.stats.hierarchical_memory_limit.bytes

type: long

format: bytes

Memory limit for the hierarchy that contains the memory cgroup, in bytes.


[float]
=== system.process.cgroup.memory.stats.hierarchical_memsw_limit.bytes

type: long

format: bytes

Memory plus swap limit for the hierarchy that contains the memory cgroup, in bytes.


[float]
=== system.process.cgroup.memory.stats.inactive_anon.bytes

type: long

format: bytes

Anonymous and swap cache on inactive LRU list, including tmpfs (shmem), in bytes


[float]
=== system.process.cgroup.memory.stats.inactive_file.bytes

type: long

format: bytes

File-backed memory on inactive LRU list, in bytes.


[float]
=== system.process.cgroup.memory.stats.mapped_file.bytes

type: long

format: bytes

Size of memory-mapped mapped files, including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.page_faults

type: long

Number of times that a process in the cgroup triggered a page fault.


[float]
=== system.process.cgroup.memory.stats.major_page_faults

type: long

Number of times that a process in the cgroup triggered a major fault. "Major" faults happen when the kernel actually has to read the data from disk.


[float]
=== system.process.cgroup.memory.stats.pages_in

type: long

Number of pages paged into memory. This is a counter.


[float]
=== system.process.cgroup.memory.stats.pages_out

type: long

Number of pages paged out of memory. This is a counter.


[float]
=== system.process.cgroup.memory.stats.rss.bytes

type: long

format: bytes

Anonymous and swap cache (includes transparent hugepages), not including tmpfs (shmem), in bytes.


[float]
=== system.process.cgroup.memory.stats.rss_huge.bytes

type: long

format: bytes

Number of bytes of anonymous transparent hugepages.


[float]
=== system.process.cgroup.memory.stats.swap.bytes

type: long

format: bytes

Swap usage, in bytes.


[float]
=== system.process.cgroup.memory.stats.unevictable.bytes

type: long

format: bytes

Memory that cannot be reclaimed, in bytes.


[float]
== blkio Fields

Block IO metrics.


[float]
=== system.process.cgroup.blkio.id

type: keyword

ID of the cgroup.

[float]
=== system.process.cgroup.blkio.path

type: keyword

Path to the cgroup relative to the cgroup subsystems mountpoint.


[float]
=== system.process.cgroup.blkio.total.bytes

type: long

format: bytes

Total number of bytes transferred to and from all block devices by processes in the cgroup.


[float]
=== system.process.cgroup.blkio.total.ios

type: long

Total number of I/O operations performed on all devices by processes in the cgroup as seen by the throttling policy.


[[exported-fields-zookeeper]]
== ZooKeeper Fields

ZooKeeper metrics collected by the four-letter monitoring commands.



[float]
== zookeeper Fields

`zookeeper` contains the metrics reported by ZooKeeper commands.



[float]
== mntr Fields

`mntr` contains the metrics reported by the four-letter `mntr` command.



[float]
=== zookeeper.mntr.hostname

type: keyword

ZooKeeper hostname.


[float]
=== zookeeper.mntr.approximate_data_size

type: long

Approximate size of ZooKeeper data.


[float]
=== zookeeper.mntr.latency.avg

type: long

Average latency between ensemble hosts in milliseconds.


[float]
=== zookeeper.mntr.ephemerals_count

type: long

Number of ephemeral znodes.


[float]
=== zookeeper.mntr.followers

type: long

Number of followers seen by the current host.


[float]
=== zookeeper.mntr.max_file_descriptor_count

type: long

Maximum number of file descriptors allowed for the ZooKeeper process.


[float]
=== zookeeper.mntr.latency.max

type: long

Maximum latency in milliseconds.


[float]
=== zookeeper.mntr.latency.min

type: long

Minimum latency in milliseconds.


[float]
=== zookeeper.mntr.num_alive_connections

type: long

Number of connections to ZooKeeper that are currently alive.


[float]
=== zookeeper.mntr.open_file_descriptor_count

type: long

Number of file descriptors open by the ZooKeeper process.


[float]
=== zookeeper.mntr.outstanding_requests

type: long

Number of outstanding requests that need to be processed by the cluster.


[float]
=== zookeeper.mntr.packets.received

type: long

Number of ZooKeeper network packets received.


[float]
=== zookeeper.mntr.packets.sent

type: long

Number of ZooKeeper network packets sent.


[float]
=== zookeeper.mntr.pending_syncs

type: long

Number of pending syncs to carry out to ZooKeeper ensemble followers.


[float]
=== zookeeper.mntr.server_state

type: keyword

Role in the ZooKeeper ensemble.


[float]
=== zookeeper.mntr.synced_followers

type: long

Number of synced followers reported when a node server_state is leader.


[float]
=== zookeeper.mntr.version

type: keyword

ZooKeeper version and build string reported.


[float]
=== zookeeper.mntr.watch_count

type: long

Number of watches currently set on the local ZooKeeper process.


[float]
=== zookeeper.mntr.znode_count

type: long

Number of znodes reported by the local ZooKeeper process.


