Metricbeat supports a `metrics` Builder for modules:

["source","yaml",subs="attributes"]
-------------------------------------------------------------------------------------
metricbeat.autodiscover:
  providers:
    - type: kubernetes
      builders:
        - type: metrics
-------------------------------------------------------------------------------------

This configuration enables the `metrics` Builder. The `metrics` builder looks for hints
in the form of Kubernetes annotations or Docker labels which have the prefix `co.elastic.metrics`.

[float]
=== Kubernetes
Kubernetes pods can annotate themselves with hints for the `metrics` builder to be able to spin up
Metricbeat modules:

["source","yaml",subs="attributes"]
-------------------------------------------------------------------------------------
annotations:
  co.elastic.metrics/module: prometheus
  co.elastic.metrics/metricsets: collector
  co.elastic.metrics/hosts: '${data.host}:9090'
  co.elastic.metrics/period: 1m
  co.elastic.metrics.sidecar/hosts: '${data.host}:8080'
  co.elastic.metrics.sidecar/period: 10m
-------------------------------------------------------------------------------------

The above annotations are used to spin up a Prometheus collector metricset and it polls the
parent container on port `9090` at a 1 minute interval and the container named `sidecar` on
port `8080` every 10 minutes. Hints can also be provided for the following module configuration
parameters:

["source","yaml",subs="attributes"]
-------------------------------------------------------------------------------------
timeout
ssl.*
-------------------------------------------------------------------------------------

[float]
=== Docker
Docker allows providing hints through Docker labels. When containers are spun up the Builder understands
labels that convey hints to generate the Metricbeat module configurations. Label

["source","yaml",subs="attributes"]
-------------------------------------------------------------------------------------
  co.elastic.metrics/module: prometheus
  co.elastic.metrics/metricsets: collector
  co.elastic.metrics/hosts: '${data.host}:9090'
  co.elastic.metrics/period: 1m
-------------------------------------------------------------------------------------

The above labels would allow Metricbeat to configure a Prometheus collector to poll port `9090`
of the Docker container every 1 minute.
