version: "2.1"

services:
  beat:
    build: ${PWD}/.
    environment:
      - TEST_ENVIRONMENT=false
    working_dir: /go/src/github.com/elastic/beats/metricbeat
    volumes:
      - ${PWD}/..:/go/src/github.com/elastic/beats/
      # This is required to on-demand launching the rest on containers for tests & also docker module tests:
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: host
    command: make

  # Modules
  aerospike:
    extends:
      file: ./module/aerospike/docker-compose.yml
      service: aerospike

  apache:
    extends:
      file: ./module/apache/docker-compose.yml
      service: apache

  apache_2_4_12:
    extends:
      file: ./module/apache/docker-compose.yml
      service: apache
    build:
      args:
        APACHE_VERSION: 2.4.12


  ceph:
    build: ./module/ceph/_meta

  couchbase:
    build: ./module/couchbase/_meta

  dropwizard:
    build: ./module/dropwizard/_meta
    ports:
      - 8080

  elasticsearch:
    build: ./module/elasticsearch/_meta
    environment:
      - "ES_JAVA_OPTS=-Xms90m -Xmx90m"
      - "network.host="
      - "transport.host=127.0.0.1"
      - "http.host=0.0.0.0"
      - "xpack.security.enabled=false"
    ports:
      - 9200

  envoyproxy:
    build: ./module/envoyproxy/_meta
    ports:
      - 9901

  etcd:
    build: ./module/etcd/_meta
    ports:
      - 2379

  haproxy:
    build: ./module/haproxy/_meta

  haproxy_1_6:
    build:
      context: ./module/haproxy/_meta
      dockerfile: Dockerfile.1.6

  haproxy_1_7:
    build:
      context: ./module/haproxy/_meta
      dockerfile: Dockerfile.1.7

  http:
    build: ./module/http/_meta

  jolokia:
    build: ./module/jolokia/_meta

  kafka:
    extends:
      file: ./module/kafka/docker-compose.yml
      service: kafka

  kafka_1_1_0:
    extends:
      file: ./module/kafka/docker-compose.yml
      service: kafka
    build:
      args:
        KAFKA_VERSION: 1.1.0

  kafka_0_10_2:
    extends:
      file: ./module/kafka/docker-compose.yml
      service: kafka
    build:
      args:
        KAFKA_VERSION: 0.10.2.1

  kibana:
    build: ./module/kibana/_meta

  #kubernetes:
  #  build: ./module/kubernetes/_meta
  #  network_mode: host
  #  pid: host
  #  privileged: true
  #  volumes:
  #    - /:/rootfs:ro
  #    - /sys:/sys
  #    - /var/lib/docker:/var/lib/docker
  #    - /var/run:/var/run

  #kubestate:
  #  build:
  #    context: ./module/kubernetes/_meta/
  #    dockerfile: Dockerfile.kube-state
  #  depends_on:
  #    - kubernetes

  logstash:
    build: ./module/logstash/_meta

  memcached:
    build: ./module/memcached/_meta

  mongodb:
    build: ./module/mongodb/_meta
    command: mongod --replSet beats

  munin:
    build: ./module/munin/_meta

  mysql:
    build: ./module/mysql/_meta

  nginx:
    build: ./module/nginx/_meta

  phpfpm:
    build: ./module/php_fpm/_meta

  postgresql:
    build: ./module/postgresql/_meta

  prometheus:
    build: ./module/prometheus/_meta

  rabbitmq:
    build: ./module/rabbitmq/_meta

  redis:
    extends:
      file: ./module/redis/docker-compose.yml
      service: redis

  redis_4:
    extends:
      file: ./module/redis/docker-compose.yml
      service: redis
    image: redis:4.0.11-alpine

  redis_5:
    extends:
      file: ./module/redis/docker-compose.yml
      service: redis
    image: redis:5.0-rc4-alpine

  traefik:
    build: ./module/traefik/_meta

  uwsgi_tcp:
    build: ./module/uwsgi/_meta
    command: uwsgi --http :8080 --master --processes 1 --threads 2 --stats 0.0.0.0:9191 --memory-report --wsgi-file app.py

  uwsgi_http:
    build: ./module/uwsgi/_meta
    command: uwsgi --http :8080 --master --processes 1 --threads 2 --stats 0.0.0.0:9192 --memory-report --stats-http --wsgi-file app.py

  zookeeper:
    build: ./module/zookeeper/_meta
