version: '2.3'

services:
  beat:
    build: ${PWD}/.
    environment:
      - TEST_ENVIRONMENT=false
    working_dir: /go/src/github.com/elastic/beats/metricbeat
    volumes:
      - ${PWD}/..:/go/src/github.com/elastic/beats/
      # This is required to on-demand launching the rest on containers for tests & also docker module tests:
      - /var/run/docker.sock:/var/run/docker.sock
    command: make
    env_file:
      - ./module/aerospike/_meta/env
      - ./module/apache/_meta/env
      - ./module/ceph/_meta/env
      - ./module/consul/_meta/env
      - ./module/couchbase/_meta/env
      - ./module/couchdb/_meta/env
      - ./module/dropwizard/_meta/env
      - ./module/elasticsearch/_meta/env
      - ./module/envoyproxy/_meta/env
      - ./module/etcd/_meta/env
      - ./module/golang/_meta/env
      - ./module/haproxy/_meta/env
      - ./module/http/_meta/env
      - ./module/jolokia/_meta/env
      - ./module/kafka/_meta/env
      - ./module/kibana/_meta/env
      #- ./module/kubernetes/_meta/env
      - ./module/logstash/_meta/env
      - ./module/memcached/_meta/env
      - ./module/mongodb/_meta/env
      - ./module/munin/_meta/env
      - ./module/mysql/_meta/env
      - ./module/nats/_meta/env
      - ./module/nginx/_meta/env
      - ./module/php_fpm/_meta/env
      - ./module/postgresql/_meta/env
      - ./module/prometheus/_meta/env
      - ./module/rabbitmq/_meta/env
      - ./module/redis/_meta/env
      - ./module/traefik/_meta/env
      - ./module/uwsgi/_meta/env
      - ./module/zookeeper/_meta/env

  # Modules
  aerospike:
    build: ./module/aerospike/_meta
    ports:
      - 3000

  apache:
    build: ./module/apache/_meta
    ports:
      - 80

  apache_2_4_12:
    build:
      context: ./module/apache/_meta
      dockerfile: Dockerfile.2.4.12
    ports:
      - 80

  ceph:
    build: ./module/ceph/_meta
    ports:
      - 5000

  consul:
    build: ./module/consul/_meta
    ports:
      - 8500

  couchbase:
    build: ./module/couchbase/_meta
    ports:
      - 8091

  couchdb:
    build: ./module/couchdb/_meta
    ports:
      - 5984

  # Dummy container for docker tests, so there is a container with
  # healthcheck generating events
  docker:
    image: alpine
    command: '/bin/sh -c "trap : TERM INT; sleep 15d"'
    healthcheck:
      interval: 1s
      test: ["CMD", "true"]

  dropwizard:
    build: ./module/dropwizard/_meta
    ports:
      - 8080

  elasticsearch:
    build: ./module/elasticsearch/_meta
    environment:
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - "network.host="
      - "transport.host=127.0.0.1"
      - "http.host=0.0.0.0"
      - "xpack.security.enabled=false"
    ports:
      - 9200

  envoyproxy:
    build: ./module/envoyproxy/_meta
    ports:
      - 9901

  etcd:
    build: ./module/etcd/_meta
    ports:
      - 2379

  etcd_3_2:
    build:
      context: ./module/etcd/_meta
      args:
        ETCD_VERSION: v3.2.25
    ports:
      - 2379

  golang:
    build: ./module/golang/_meta
    ports:
      - 6060

  haproxy:
    build: ./module/haproxy/_meta
    ports:
      - 14567
      - 14568
      - 14569

  haproxy_1_6:
    build:
      context: ./module/haproxy/_meta
      dockerfile: Dockerfile.1.6
    ports:
      - 14567
      - 14568
      - 14569

  haproxy_1_7:
    build:
      context: ./module/haproxy/_meta
      dockerfile: Dockerfile.1.7
    ports:
      - 14567
      - 14568
      - 14569

  http:
    build: ./module/http/_meta
    ports:
      - 8080

  jolokia:
    build: ./module/jolokia/_meta
    ports:
      - 8778

  kafka:
    build:
      context: ./module/kafka/_meta
      args:
        KAFKA_VERSION: 2.1.1
    ports:
      - 9092

  kafka_1_1_0:
    build:
      context: ./module/kafka/_meta
      args:
        KAFKA_VERSION: 1.1.0
    ports:
      - 9092

  kafka_0_10_2:
    build:
      context: ./module/kafka/_meta
      args:
        KAFKA_VERSION: 0.10.2.2
    ports:
      - 9092

  kibana:
    build: ./module/kibana/_meta
    depends_on:
      - elasticsearch
    ports:
      - 5601

  #kubernetes:
  #  build: ./module/kubernetes/_meta
  #  network_mode: host
  #  pid: host
  #  privileged: true
  #  volumes:
  #    - /:/rootfs:ro
  #    - /sys:/sys
  #    - /var/lib/docker:/var/lib/docker
  #    - /var/run:/var/run
  #  ports:
  #    - 10255

  #kubestate:
  #  build:
  #    context: ./module/kubernetes/_meta/
  #    dockerfile: Dockerfile.kube-state
  #  depends_on:
  #    - kubernetes
  #  ports:
  #    - 18080

  logstash:
    build: ./module/logstash/_meta
    ports:
      - 9600

  memcached:
    build: ./module/memcached/_meta
    ports:
      - 11211

  mongodb:
    build: ./module/mongodb/_meta
    command: mongod --replSet beats
    ports:
      - 27017

  munin:
    build: ./module/munin/_meta
    ports:
      - 4949

  mysql:
    build:
      context: ./module/mysql/_meta
      args:
        MYSQL_IMAGE: mysql:5.7.24
    ports:
      - 3306

  mysql_8_0:
    build:
      context: ./module/mysql/_meta
      args:
        MYSQL_IMAGE: mysql:8.0.13
    ports:
      - 3306

  percona_5_7:
    build:
      context: ./module/mysql/_meta
      args:
        MYSQL_IMAGE: percona:5.7.24
    ports:
      - 3306

  percona_8_0:
    build:
      context: ./module/mysql/_meta
      args:
        MYSQL_IMAGE: percona:8.0.13-4
    ports:
      - 3306

  mariadb_10_2:
    build:
      context: ./module/mysql/_meta
      args:
        MYSQL_IMAGE: mariadb:10.2.23
    ports:
      - 3306

  mariadb_10_3:
    build:
      context: ./module/mysql/_meta
      args:
        MYSQL_IMAGE: mariadb:10.3.14
    ports:
      - 3306

  mariadb_10_4:
    build:
      context: ./module/mysql/_meta
      args:
        MYSQL_IMAGE: mariadb:10.4.4
    ports:
      - 3306

  nats:
    build: ./module/nats/_meta
    ports:
      - 8222

  nginx:
    build: ./module/nginx/_meta
    ports:
      - 80

  phpfpm:
    build: ./module/php_fpm/_meta
    ports:
      - 81

  postgresql:
    build: ./module/postgresql/_meta
    ports:
      - 5432

  prometheus:
    build: ./module/prometheus/_meta
    ports:
      - 9090

  rabbitmq:
    build: ./module/rabbitmq/_meta
    ports:
      - 15672

  redis:
    build: ./module/redis/_meta
    ports:
      - 6379

  redis_4:
    build:
      context: ./module/redis/_meta
      args:
        REDIS_VERSION: 4.0.11
    ports:
      - 6379

  redis_5:
    build:
      context: ./module/redis/_meta
      args:
        REDIS_VERSION: 5.0-rc4
    ports:
      - 6379

  traefik:
    build: ./module/traefik/_meta
    ports:
     - 8080

  uwsgi_tcp:
    build: ./module/uwsgi/_meta
    command: uwsgi --http :8080 --master --processes 1 --threads 2 --stats 0.0.0.0:9191 --memory-report --wsgi-file app.py
    ports:
      - 9191

  uwsgi_http:
    build: ./module/uwsgi/_meta
    command: uwsgi --http :8080 --master --processes 1 --threads 2 --stats 0.0.0.0:9192 --memory-report --stats-http --wsgi-file app.py
    ports:
      - 9192

  zookeeper:
    build: ./module/zookeeper/_meta
    ports:
      - 2181
