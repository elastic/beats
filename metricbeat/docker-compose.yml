version: '2.1'
services:
  beat:
    build: ${PWD}/.
    environment:
      - TEST_ENVIRONMENT=false
    working_dir: /go/src/github.com/elastic/beats/metricbeat
    volumes:
      - ${PWD}/..:/go/src/github.com/elastic/beats/
      # This is required for the docker module tests
      - /var/run/docker.sock:/var/run/docker.sock
    command: make

    # Wait for all services to be up and healthy.
    depends_on:
      - proxy_dep

    env_file:
      - ${PWD}/module/apache/_meta/env
      - ${PWD}/module/ceph/_meta/env
      - ${PWD}/module/couchbase/_meta/env
      - ${PWD}/module/dropwizard/_meta/env
      - ${PWD}/module/elasticsearch/_meta/env
      - ${PWD}/module/haproxy/_meta/env
      - ${PWD}/module/jolokia/_meta/env
      - ${PWD}/module/kafka/_meta/env
      - ${PWD}/module/kibana/_meta/env
      - ${PWD}/module/memcached/_meta/env
      - ${PWD}/module/mongodb/_meta/env
      - ${PWD}/module/mysql/_meta/env
      - ${PWD}/module/nginx/_meta/env
      - ${PWD}/module/php_fpm/_meta/env
      - ${PWD}/module/postgresql/_meta/env
      - ${PWD}/module/prometheus/_meta/env
      - ${PWD}/module/redis/_meta/env
      - ${PWD}/module/zookeeper/_meta/env

  # This is a proxy used to block beats until all services are healthy.
  # See: https://github.com/docker/compose/issues/4369
  proxy_dep:
    image: busybox
    depends_on:
      apache:         { condition: service_healthy }
      ceph:           { condition: service_healthy }
      couchbase:      { condition: service_healthy }
      dropwizard:     { condition: service_healthy }
      elasticsearch:  { condition: service_healthy }
      haproxy:        { condition: service_healthy }
      jolokia:        { condition: service_healthy }
      kafka:          { condition: service_healthy }
      kibana:         { condition: service_healthy }
      memcached:      { condition: service_healthy }
      mongodb:        { condition: service_healthy }
      mysql:          { condition: service_healthy }
      nginx:          { condition: service_healthy }
      phpfpm:         { condition: service_healthy }
      postgresql:     { condition: service_healthy }
      prometheus:     { condition: service_healthy }
      redis:          { condition: service_healthy }
      zookeeper:      { condition: service_healthy }

  # Modules
  apache:
    build: ${PWD}/module/apache/_meta

  ceph:
    build: ${PWD}/module/ceph/_meta

  couchbase:
    build: ${PWD}/module/couchbase/_meta

  dropwizard:
    build: ${PWD}/module/dropwizard/_meta

  elasticsearch:
    extends:
      file: ${ES_BEATS}/testing/environments/${TESTING_ENVIRONMENT}.yml
      service: elasticsearch

  haproxy:
    build: ${PWD}/module/haproxy/_meta

  jolokia:
    build: ${PWD}/module/jolokia/_meta

  kafka:
    build: ${PWD}/module/kafka/_meta

  kibana:
    extends:
      file: ${ES_BEATS}/testing/environments/${TESTING_ENVIRONMENT}.yml
      service: kibana

  memcached:
    build: ${PWD}/module/memcached/_meta

  mongodb:
    build: ${PWD}/module/mongodb/_meta

  mysql:
    build: ${PWD}/module/mysql/_meta

  nginx:
    build: ${PWD}/module/nginx/_meta

  phpfpm:
    build: ${PWD}/module/php_fpm/_meta

  postgresql:
    build: ${PWD}/module/postgresql/_meta

  prometheus:
    build: ${PWD}/module/prometheus/_meta

  redis:
    build: ${PWD}/module/redis/_meta

  zookeeper:
    build: ${PWD}/module/zookeeper/_meta
