== Troubleshooting

If you suspect an issue with Packetbeat, please read the
following tips and send us the logs and, if possible, a traffic trace.

Please contact us on the https://discuss.elastic.co/c/beats/packetbeat[forums].
We will help you troubleshoot the problem you are facing.

If you are sure you found a bug, you can also open a ticket on
https://github.com/elastic/packetbeat/issues?state=open[GitHub]. Note, however,
that we close GitHub issues if they are questions or requests for help that
don't indicate the presence of a bug.

=== Running in the Foreground and Enabling Debugging

By default, Packetbeat sends all its output to syslog. You can use the `-e`
command line flag to direct the output at standard error instead:

[source,shell]
-----------------------------------------------
packetbeat -e
-----------------------------------------------

The default configuration file is `/etc/packetbeat/packetbeat.yml`. You can use
another file by using the `-c` flag:

[source,shell]
------------------------------------------------------------
packetbeat -e -c /etc/packetbeat/packetbeat.yml
------------------------------------------------------------

You can increase the verbosity by enabling one or more debug selectors. For
example, to view which transactions are published, you can start Packetbeat like
this:

[source,shell]
------------------------------------------------------------
packetbeat -e -d "publish"
------------------------------------------------------------

You can enable multiple debug selectors by separating them with comas. For
example, if you want to also see the mysql parsing messages, run:

[source,shell]
---------------------------------------------------------------------------------
packetbeat -e -c /etc/packetbeat/packetbeat.conf -d "publish,mysql,mysqldetailed"
---------------------------------------------------------------------------------

Here is the list of commonly used debug selectors:

* http
* httpdetailed
* ip
* mysql
* mysqldetailed
* pcapfilter
* pcapread
* pgsql
* pgsqldetailed
* procs
* procsdetailed
* publish
* redis
* sockets
* tcp
* thrift
* thriftdetailed

If you want all the debugging output (fair warning, it is quite a lot), you can
use `*`, like this:

[source,shell]
------------------------------------------------------------
packetbeat -e -d "*"
------------------------------------------------------------

=== Recording a Trace

If you are having an issue, it is often useful to record a full network trace
and send it to us. It will help us reproduce the issue and we can also add it
to our automatic regression tests so that the problem never reoccurs. A trace
of 10-20 seconds is usually enough. To record it, you can use Packetbeat itself
like this:

[source,shell]
------------------------------------------------------------
packetbeat -e -dump trace.pcap
------------------------------------------------------------

This executes Packetbeat in normal mode (all processing happens as usual) but
at the same time records all packets in libpcap format in the `trace.pcap`
file. If there's a particular error message you want us to investigate, please
keep the trace running until the error shows up (it will printed on standard
error).

WARNING: PCAP files can be large. Please monitor the disk usage while doing the
dump to make sure you don't run out of disk space. Whenever possible, we
recommend doing this on a non-production machine.
