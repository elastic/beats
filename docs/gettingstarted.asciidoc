[[packetbeat-getting-started]]
== Getting Started

The best way to understand the value of a network packet analytics system like
Packetbeat is to try it on your own traffic.

To get started with your own Packetbeat setup, install and configure these related products:

 * Elasticsearch for storage and indexing the data. {libbeat}/getting-started.html#elasticsearch-installation[More details]
 * Kibana for the UI. {libbeat}/getting-started.html#kibana-installation[More details]
 * Optionally Logstash for inserting data into Elasticsearch. {libbeat}/getting-started.html#logstash-installation[More details]

After you have installed these products, you can start <<packetbeat-installation>>.

[[packetbeat-installation]]
=== Installing Packetbeat

To download and install Packetbeat on your application servers, run the following commands. Use the commands that work with your system (deb for Debian/Ubuntu, rpm for Redhat/Centos/Fedora, mac for OS X).

deb:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo apt-get install libpcap0.8
curl -L -O https://download.elastic.co/beats/packetbeat/packetbeat_{version}_amd64.deb
sudo dpkg -i packetbeat_{version}_amd64.deb
----------------------------------------------------------------------

rpm:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo yum install libpcap
curl -L -O https://download.elastic.co/beats/packetbeat/packetbeat-{version}-x86_64.rpm
sudo rpm -vi packetbeat-{version}-x86_64.rpm
----------------------------------------------------------------------


mac:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
curl -L -O https://download.elastic.co/beats/packetbeat/packetbeat-{version}-darwin.tgz
tar xzvf packetbeat-{version}-darwin.tgz
----------------------------------------------------------------------

NOTE: We also provide 32-bit images that you can get from our
https://www.elastic.co/downloads/beats/packetbeat[download page].

If you are using Windows, see <<windows-install>>.

[[configuring-packetbeat]]
=== Configuring Packetbeat

NOTE: If you plan to use Logstash, you need to set up Logstash to work with the Beat before you
configure Packetbeat. For detailed steps, see {libbeat}/getting-started.html#logstash-setup[Setting Up Logstash].

Before starting Packetbeat, you need to edit the configuration file. For rpm and deb, you'll
find the configuration file at `/etc/packetbeat/packetbeat.yml`. For mac, look in
the archive that you just downloaded.

To configure Packetbeat:

. Select the network interface from which to capture the traffic. On
Linux, Packetbeat supports capturing all messages sent or received by the
server on which Packetbeat is installed. For this, use `any` as the device:
+
[source,yaml]
----------------------------------------------------------------------
interfaces:
  # Select on which network interfaces to sniff. You can use the "any"
  # keyword to sniff on all connected interfaces.
  device: any
----------------------------------------------------------------------
+
Note that on OS X, capturing from the `any` device doesn't work. You would
typically use either `lo0` or `en0` depending on which traffic you want to
capture.

. In the protocols section, configure the ports on which Packetbeat can find each
protocol. If you use any non-standard ports, add them here. Otherwise, the
default values should do just fine.
+
[source,yaml]
----------------------------------------------------------------------
protocols:
  # Configure which protocols to monitor and on which ports are they
  # running. You can disable a given protocol by commenting out its
  # configuration.
  http:
    ports: [80, 8080, 8081, 5000, 8002]

  memcache:
    ports: [11211]

  mysql:
    ports: [3306]

  redis:
    ports: [6379]

  pgsql:
    ports: [5432]

  thrift:
    ports: [9090]
----------------------------------------------------------------------
+
. Set the IP address and port where Packetbeat can find the Elasticsearch
installation:
+
[source,yaml]
----------------------------------------------------------------------
output:

  elasticsearch:
    # Uncomment out this option if you want to output to Elasticsearch. The
    # default is false.
    enabled: true

    # Set the host and port where to find Elasticsearch.
    host: 192.168.1.42
    port: 9200

    # Uncomment this option and set it to true if you want to store the topology in
    # Elasticsearch. Default behavior if this setting is left out of the
    # config file is equivalent to setting "save_topology" to "false"
    #save_topology: false
----------------------------------------------------------------------


[[packetbeat-template]]
=== Loading the Index Template in Elasticsearch

Before starting Packetbeat, you need to load the
http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html[index
template], which lets Elasticsearch know which fields should be analyzed
in which way.

The recommended template file is installed by the Packetbeat packages. Load it with the
following command:

deb or rpm:

[source,shell]
----------------------------------------------------------------------
curl -XPUT 'http://localhost:9200/_template/packetbeat' -d@/etc/packetbeat/packetbeat.template.json
----------------------------------------------------------------------

mac:

[source,shell]
----------------------------------------------------------------------
cd packetbeat-{version}-darwin
curl -XPUT 'http://localhost:9200/_template/packetbeat' -d@packetbeat.template.json
----------------------------------------------------------------------

where `localhost:9200` is the IP and port where Elasticsearch is listening.

=== Running Packetbeat

Run Packetbeat by issuing the following command:

deb:

[source,shell]
----------------------------------------------------------------------
sudo /etc/init.d/packetbeat start
----------------------------------------------------------------------

rpm:

[source,shell]
----------------------------------------------------------------------
sudo /etc/init.d/packetbeat start
----------------------------------------------------------------------

mac:

[source,shell]
----------------------------------------------------------------------
sudo ./packetbeat -e -c packetbeat.yml -d "publish"
----------------------------------------------------------------------

Packetbeat is now ready to capture data from your network traffic. You can test
that it works by creating a simple HTTP request. For example:

[source,shell]
----------------------------------------------------------------------
curl http://www.elastic.co/ > /dev/null
----------------------------------------------------------------------

Now verify that the data is present in Elasticsearch by issuing the following command:

[source,shell]
----------------------------------------------------------------------
curl -XGET 'http://localhost:9200/packetbeat-*/_search?pretty'
----------------------------------------------------------------------

Make sure that you replace `localhost:9200` with the address of your Elasticsearch
instance. The command should return data about the HTTP transaction you just created.

=== Loading Sample Kibana Dashboards

To make it easier for you to get application performance insights
from packet data, we have created a few sample dashboards. The
dashboards are maintained in this
https://github.com/elastic/beats-dashboards[GitHub repository], which also
includes instructions for loading the dashboards.

You can load all of the sample dashboards automatically by following {libbeat}/getting-started.html#load-kibana-dashboards[these steps].


image:./images/packetbeat-statistics.png[Packetbeat statistics]

These dashboards are provided as examples. We recommend that you
http://www.elastic.co/guide/en/kibana/current/dashboard.html[customize] them
to meet your needs.

Enjoy!
