:release-state: released

//TODO: Remove release-state definition before merging.

[[heartbeat-getting-started]]
== Get started with {beatname_uc}

++++
<titleabbrev>Get started</titleabbrev>
++++

This guide describes how to get started quickly collecting uptime data about
your hosts. You'll learn how to:

* install {beatname_uc}
* specify the protocols to monitor
* send uptime data to {es}
* visualize the uptime data in {kib}

//TODO: Move dashboards up to show value.

[float]
=== Before you begin

You need {es} for storing and searching your data, and {kib} for visualizing and
managing it.

// TODO: We might want to provide the instructions for spinning up a deployment
// here. See
// https://github.com/elastic/docs/pull/1815/files#diff-934228d98950ff95c8c53444966daeaeR10
// Or link to the topic that's available for cloud.

include::{libbeat-dir}/tab-widgets/spinup-stack-widget.asciidoc[]

[float]
[[heartbeat-installation]]
=== Step 1: Install Heartbeat

Unlike most Beats, which you install on edge nodes, you typically install
Heartbeat as part of a monitoring service that runs on a separate machine
and possibly even outside of the network where the services that you want to
monitor are running.

To download and install {beatname_uc}, use the commands that work with your
system:

include::{libbeat-dir}/tab-widgets/install-widget.asciidoc[]

[float]
[[other-installation-options]]
==== Other installation options

* <<setup-repositories>>
* https://www.elastic.co/downloads/beats/{beatname_lc}[Download page] 
* <<running-on-docker>>

[float]
[[set-connection]]
=== Step 2: Set the connection information

include::{libbeat-dir}/shared/connecting-to-es.asciidoc[]

[float]
[[heartbeat-configuration]]
=== Step 3: Configure Heartbeat monitors

Heartbeat provides monitors to check the status of hosts at set intervals.
Heartbeat currently provides monitors for ICMP, TCP, and HTTP (see
<<heartbeat-overview>> for more about these monitors). 

You configure each monitor individually. In +{beatname_lc}.yml+, specify the
list of monitors that you want to enable. Each item in the list begins with a
dash (-). The following example configures Heartbeat to use two monitors, an
`icmp` monitor and a `tcp` monitor:

[source,yaml]
----------------------------------------------------------------------
heartbeat.monitors:
- type: icmp
  schedule: '*/5 * * * * * *' <1>
  hosts: ["myhost"]
- type: tcp
  schedule: '@every 5s' <2>
  hosts: ["myhost:12345"]
  mode: any <3>
----------------------------------------------------------------------
<1> The `icmp` monitor is scheduled to run exactly every 5 seconds (10:00:00,
10:00:05, and so on). The `schedule` option uses a cron-like syntax based on
https://github.com/gorhill/cronexpr#implementation[this `cronexpr` implementation].
<2> The `tcp` monitor is set to run every 5 seconds from the time when Heartbeat
was started. Heartbeat adds the `@every` keyword to the syntax provided by the
`cronexpr` package.
<3> The `mode` specifies whether to ping one IP (`any`) or all resolvable IPs
(`all`).

include::{libbeat-dir}/step-look-at-config.asciidoc[]

[float]
[[setup-assets]]
=== Step 4: Set up assets

include::{libbeat-dir}/shared/setup.asciidoc[]

The `setup` command does not install {beatname_uc} dashboards. 
Heartbeat dashboards and installation steps are available in the
https://github.com/elastic/uptime-contrib[uptime-contrib] github repository.

[float]
[[heartbeat-starting]]
=== Step 5: Start Heartbeat

Before starting {beatname_uc}, modify the user credentials in
+{beatname_lc}.yml+ and specify a user who has restricted privileges,
especially if you're running {beatname_uc} in a production environment.
For more information, see <<privileges-to-publish-events>>.

To start {beatname_uc}, run:

:requires-sudo:
include::{libbeat-dir}/tab-widgets/start-widget.asciidoc[]
:requires-sudo!:

Heartbeat is now ready to check the status of your services and send
events to your defined output.

[float]
[[view-kibana-dashboards]]
=== Step 6: View your data in {kib}

{beatname_uc} comes with preconfigured dashboards and UIs for visualizing the
status of your services. The dashboards are available in the
https://github.com/elastic/uptime-contrib[uptime-contrib] github repository.

If you loaded the dashboards earlier, open them now.

include::{libbeat-dir}/shared/opendashboards.asciidoc[tag=open-dashboards]

Example dashboard:

[role="screenshot"]
image::./images/heartbeat-statistics.png[Heartbeat statistics]

[float]
=== What's next?

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=obs-intro]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-metrics]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-logs]

//include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-uptime]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-apm]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=obs-apps]

