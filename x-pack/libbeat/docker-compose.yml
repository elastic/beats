version: '3'
services:
  beat:
    restart: on-failure
    build: ${PWD}/.
    depends_on:
      - elasticsearch
      - kibana
    env_file:
      - ${PWD}/build/test.env
    working_dir: /go/src/github.com/elastic/beats/x-pack/libbeat
    volumes:
      - ${PWD}/../..:/go/src/github.com/elastic/beats/
      # We launch docker containers to test docker autodiscover:
      - /var/run/docker.sock:/var/run/docker.sock
    command: make

  elasticsearch:
    extends:
      file: ${ES_BEATS}/testing/environments/${TESTING_ENVIRONMENT}.yml
      service: elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-u", "elastic:changeme", "-f", "http://localhost:9200"]
      retries: 1200
      interval: 1s
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "network.host="
      - "transport.host=127.0.0.1"
      - "http.host=0.0.0.0"
      - "xpack.security.enabled=true"
      - "xpack.license.self_generated.type=trial"
    command: bash -c "bin/elasticsearch-keystore create && echo changeme | bin/elasticsearch-keystore add --stdin bootstrap.password && /usr/local/bin/docker-entrypoint.sh eswrapper"

  kibana:
    depends_on: elasticsearch
    extends:
      file: ${ES_BEATS}/testing/environments/${TESTING_ENVIRONMENT}.yml
      service: kibana
    healthcheck:
      test: ["CMD-SHELL", 'python -c ''import urllib, json; response = urllib.urlopen("http://elastic:changeme@localhost:5601/api/status"); data = json.loads(response.read()); exit(1) if data["status"]["overall"]["state"] != "green" else exit(0);''']
      retries: 1200
      interval: 1s
    command: /usr/local/bin/kibana-docker --xpack.security.enabled=true --elasticsearch.username=elastic --elasticsearch.password=changeme
