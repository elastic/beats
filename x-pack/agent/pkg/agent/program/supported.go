// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/x-pack/agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]bool

func init() {
	// Packed Files
	// spec/filebeat.yml
	// spec/metricbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]bool)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Name)] = true
	}
}
