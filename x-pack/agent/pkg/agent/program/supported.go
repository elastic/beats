// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/x-pack/agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]bool

func init() {
	// Packed Files
	// spec/filebeat.yml
	// spec/metricbeat.yml
	unpacked := packer.MustUnpack("eJyslkuvozYbx/fvxzjbt2qBDJFSaRaBUwzkciYksY132M5wiQ3oQEKg6nevTG4kZ2Y6UrtACPNc/jyXX/LnS1Xu2G9fU7Gju6j+tZXi5fcXKp2abIo4kKIiyBchXs1CQ9+/pZaM0EmEEiZ8WiZM8u4ttaiX6o6XNrGXLwV3YTOXoqJrU1DppBTA/RdEEuouRW/zbJsHgmKrCnEg5hIeQuRXBK0mRDoVM7bp3J6m8+35TpFzCBEXFMEDt82aGoH4guOaASeLWl1SAAW3vcqzvTpYq7tfh8hMiAFrgkxtGJ+7vk7WPrfl8kglKckItv27TRGTkd+ETdlydBKsK2bzdf/dGsH+Vy6diiPYvcVF7NnTmBmwImip0ZE39tylxiRMKF7M1DsP1GK3KWLuioaszvbP/vO1VVGDd3aqxRQ5zS0ucLTotYjZKGgJcmrWXM5zWBG8GNvpVD3Xnhu0ITI7ChyNbIpz3v6ymhAHxVtqlTS3dG6b2g5b4uLXXyofA7C95rxeBBNB89WRqP5vipiCST7082xLcKl6MOk4CEqa9Tr3Efo0G8bxADT6uo+CjL0WMQfL5jtxdOJOx54L92z6qEXlnhvBMTRqwbIiJmCSRQZsn+JU1GBHJuE+wsuvzDgduXE6kq6Iz2eLJ12nI2kn3Q4vlZ/qm6l8SFPUHiAldQPBxMQI0Um/19rqiJr9UXBk2aAvrfmN+lrvBO/HnhuYDGzPuV21A7Cfp7MObVjXWs0OAeJwf77XYr62tHA0vfk91aD2XF8QILpBrMH36Al7veR0rYSD+OOcur5OwcNMtgSZCUXb8bDOJPePdFPEETIbjlfDWdNodz0P+lkOjUmzu84jIC01tGHew9327k8GvPHa6b0XWaGen/bNV3qzi4azLYApQY5mp4v4VuMR1JgLH84iA5pM9VFuZ9xIhJrfNXC6NVYsWhQ+rulAy00rxlrp2aH0/kgSpqn6wE6xh6zj/JrHb5vYN2AV4qUWoWVHkNOGRpzP7Wl+mcV83veVv4eIvIdrVnk27xnAgdNFNivt+PPnl1/OaJa7+j1l34DzBkGNSZFdYJxRtBp7QBfc9cvQuEAb+znrihi1NyB2BAc6s82SAu2gmhzKkyCvugzRqSPrB3hebTWC9KYHzD9BXeoJlU5OkK4AcqBosicb/dMcW0loVDVRufDqR1C/x8dBy9E2xasyo4YpI8R11r/bjj3AWwYWszsMtX54OIAtHl0WTZ+MIhwUeOQLYsBPtyX4BpSZ3I49x6wJDtoILY7ztLosxlJQADMOJu1banXc9UWI9P8G1vA7+h7h/QHaz1pnr5PVlzNo/j9Pq3Joyw3R6/KHILI1BcVDiHTxAP7bkg5t78upeql+EH9iuS+1C45vqXXRubws5sfcV6jQ4Tzb5qDWHzWwIaiz4kOvHiD7sCc3wB05DgYQ+zkoPGlUf0B6cP4rMJxh0BIUlKztYfBjMPz1v78DAAD//3/nS7Q=")
	SupportedMap = make(map[string]bool)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Name)] = true
	}
}
