[role="xpack"]

:type: unifiedlogs

[id="{beatname_lc}-input-{type}"]
=== Unified Logs input

++++
<titleabbrev>Unified Logs</titleabbrev>
++++

NOTE: Only available for MacOS.

The unified logging system provides a comprehensive and performant API to capture
telemetry across all levels of the system. This system centralizes the storage of
log data in memory and on disk, rather than writing that data to a text-based log file.

The input interacts with the `log` command-line tool to provide access to the events.

The input starts streaming events from the current point in time unless a start date or
the `backfill` options are set. When restarted it will continue where it left off.

Alternatively, it can also do one off operations, such as:

- Stream events contained in a `.logarchive` file.
- Stream events contained in a `.tracev3` file.
- Stream events in a specific time span, by providing a specific end date.

After this one off operations complete, the input will stop.

Other configuration options can be specified to filter what events to process.

NOTE: The input can cause some duplicated events when backfilling and/or
restarting. This is caused by how the underlying fetching method works and
should be taken into account when using the input.

Example configuration:

Process all old and new logs:

["source","yaml",subs="attributes"]
----
{beatname_lc}.inputs:
- type: unifiedlogs
  id: unifiedlogs-id
  enabled: true
  backfill: true
----

Process logs with predicate filters:

["source","yaml",subs="attributes"]
----
{beatname_lc}.inputs:
- type: unifiedlogs
  id: unifiedlogs-id
  enabled: true
  predicate:
    # Captures keychain.db unlock events
    - 'process == "loginwindow" && sender == "Security"'
    # Captures user login events
    - 'process == "logind"'
    # Captures command line activity run with elevated privileges
    - 'process == "sudo"'
----

==== Configuration options

The `unifiedlogs` input supports the following configuration options plus the
<<{beatname_lc}-input-{type}-common-options>> described later.

[float]
==== `archive_file`

Display events stored in the given archive.
The archive must be a valid log archive bundle with the suffix `.logarchive`.

[float]
==== `trace_file`

Display events stored in the given `.tracev3` file.
In order to be decoded, the file must be contained within a valid `.logarchive`

[float]
==== `start`

Shows content starting from the provided date.
The following date/time formats are accepted:
`YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS`, `YYYY-MM-DD HH:MM:SSZZZZZ`.

[float]
==== `end`

Shows content up to the provided date.
The following date/time formats are accepted:
`YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS`, `YYYY-MM-DD HH:MM:SSZZZZZ`.

[float]
==== `predicate`

Filters messages using the provided predicate based on NSPredicate.
A compound predicate or multiple predicates can be provided as a list.

For detailed information on the use of predicate based filtering,
please refer to the https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Predicates/Articles/pSyntax.html[Predicate Programming Guide].

[float]
==== `process`

A list of the processes on which to operate. It accepts a PID or process name.

[float]
==== `source`

Include symbol names and source line numbers for messages, if available.
Default: `false`.

[float]
==== `info`

Disable or enable info level messages.
Default: `false`.

[float]
==== `debug`

Disable or enable debug level messages.
Default: `false`.

[float]
==== `backtrace`

Disable or enable display of backtraces.
Default: `false`.

[float]
==== `signpost`

Disable or enable display of signposts.
Default: `false`.

[float]
==== `unreliable`

Annotate events with whether the log was emitted unreliably.
Default: `false`.

[float]
==== `mach_continuous_time`

Use mach continuous time timestamps rather than walltime.
Default: `false`.

[float]
==== `backfill`

If set to true the input will process all available logs since the beginning
of time the first time it starts.
Default: `false`.


[id="{beatname_lc}-input-{type}-common-options"]
include::../../../../filebeat/docs/inputs/input-common-options.asciidoc[]

[float]
=== Metrics

This input exposes metrics under the <<http-endpoint, HTTP monitoring endpoint>>.
These metrics are exposed under the `/inputs/` path. They can be used to
observe the activity of the input.

You must assign a unique `id` to the input to expose metrics.

[options="header"]
|=======
| Metric                   | Description
| `errors_total`           | Total number of errors.
|=======

:type!:
