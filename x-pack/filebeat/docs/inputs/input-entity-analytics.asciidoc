[role="xpack"]

:type: entity-analytics

[id="{beatname_lc}-input-{type}"]
=== Entity Analytics Input

++++
<titleabbrev>Entity Analytics</titleabbrev>
++++

experimental[]

The Entity Analytics input collects identity assets, such as users, from
external identity providers.

The following identity providers are supported:

- <<provider-activedirectory>>
- <<provider-azure-ad>>
- <<provider-okta>>

==== Configuration options

The `entity-analytics` input supports the following configuration options plus
the <<{beatname_lc}-input-{type}-common-options>> described later.

[float]
==== `provider`

The identity provider. Must be one of: `activedirectory`, `azure-ad` or `okta`.

[id="{beatname_lc}-input-{type}-common-options"]
include::../../../../filebeat/docs/inputs/input-common-options.asciidoc[]

[float]
=== Providers

[id="provider-activedirectory"]
==== Active Directory (`activedirectory`)

The `activedirectory` provider allows the input to retrieve users, with group
memberships, from Active Directory.

[float]
==== Setup

A user with appropriate permissions must be set up in the Active Directory
Server Manager in order for the provider to function properly.

[float]
==== How It Works

[float]
===== Overview

The Active Directory provider periodically queries the Active Directory server,
retrieving updates for users and groups, updates its internal cache of user and
group metadata and group membership information, and ships updated user metadata
to Elasticsearch.

Fetching and shipping updates occurs in one of two processes: *full
synchronizations* and *incremental updates*. Full synchronizations will send the
entire list of users and group membership in state, along with write markers to indicate
the start and end of the synchronization event. Incremental updates will only
send data for changed users during that event. Changes on a user can come in many
forms, whether it be a change to the user metadata, a user was added or modified,
or group membership was changed.

[float]
===== Sending User and Device Metadata to Elasticsearch

During a full synchronization, all users and groups stored in state will be sent
to the output, while incremental updates will only send users and group that have been
updated. Full synchronizations will be bounded on either side by write marker
documents, which will look something like this:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2022-11-04T09:57:19.786056-05:00",
    "event": {
        "action": "started",
        "start": "2022-11-04T09:57:19.786056-05:00"
    },
    "labels": {
        "identity_source": "activedirectory-1"
    }
}
----

User documents will show the current state of the user.

Example user document:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2024-02-05T06:37:40.876026-05:00",
    "event": {
        "action": "user-discovered",
    },
    "activedirectory": {
        "id": "CN=Guest,CN=Users,DC=testserver,DC=local",
        "user": {
            "accountExpires": "2185-07-21T23:34:33.709551516Z",
            "badPasswordTime": "0",
            "badPwdCount": "0",
            "cn": "Guest",
            "codePage": "0",
            "countryCode": "0",
            "dSCorePropagationData": [
                "2024-01-22T06:37:40Z",
                "1601-01-01T00:00:01Z"
            ],
            "description": "Built-in account for guest access to the computer/domain",
            "distinguishedName": "CN=Guest,CN=Users,DC=testserver,DC=local",
            "instanceType": "4",
            "isCriticalSystemObject": true,
            "lastLogoff": "0",
            "lastLogon": "2185-07-21T23:34:33.709551616Z",
            "logonCount": "0",
            "memberOf": "CN=Guests,CN=Builtin,DC=testserver,DC=local",
            "name": "Guest",
            "objectCategory": "CN=Person,CN=Schema,CN=Configuration,DC=testserver,DC=local",
            "objectClass": [
                "top",
                "person",
                "organizationalPerson",
                "user"
            ],
            "objectGUID": "hSt/40XJQU6cf+J2XoYMHw==",
            "objectSid": "AQUAAAAAAAUVAAAA0JU2Fq1k30YZ7UPx9QEAAA==",
            "primaryGroupID": "514",
            "pwdLastSet": "2185-07-21T23:34:33.709551616Z",
            "sAMAccountName": "Guest",
            "sAMAccountType": "805306368",
            "uSNChanged": "8197",
            "uSNCreated": "8197",
            "userAccountControl": "66082",
            "whenChanged": "2024-01-22T06:36:59Z",
            "whenCreated": "2024-01-22T06:36:59Z"
        },
        "whenChanged": "2024-01-22T06:36:59Z"
    },
    "user": {
        "id": "CN=Guest,CN=Users,DC=testserver,DC=local"
    },
    "labels": {
        "identity_source": "activedirectory-1"
    }
}
----

[float]
==== Configuration

Example configuration:

["source","yaml",subs="attributes"]
----
{beatname_lc}.inputs:
- type: entity-analytics
  enabled: true
  id: activedirectory-1
  provider: activedirectory
  sync_interval: "12h"
  update_interval: "30m"
  ad_url: "ldaps://host.domain.tld"
  ad_base_dn: "CN=Users,DC=SERVER,DC=DOMAIN"
  ad_user: "USERNAME"
  ad_password: "PASSWORD"
----

The `azure-ad` provider supports the following configuration:

[float]
===== `ad_url`

The Active Directory server URL. Field is required.

[float]
===== `ad_base_dn`

The Active Directory Base Distinguished Name. Field is required.

[float]
===== `ad_user`

The client user name. Used for authentication. The user must have Active Directory read access. Field is required.

[float]
===== `ad_password`

The client's password, used for authentication. Field is required.

[float]
===== `sync_interval`

The interval in which full synchronizations should occur. The interval must be
longer than the update interval (`update_interval`) Expressed as a duration
string (e.g., 1m, 3h, 24h). Defaults to `24h` (24 hours).

[float]
===== `update_interval`

The interval in which incremental updates should occur. The interval must be
shorter than the full synchronization interval (`sync_interval`). Expressed as a
duration string (e.g., 1m, 3h, 24h). Defaults to `15m` (15 minutes).

[id="provider-azure-ad"]
==== Azure Active Directory (`azure-ad`)

The `azure-ad` provider allows the input to retrieve users, with group
memberships, from Azure Active Directory (AD).

[float]
==== Setup

The necessary API permissions need to be granted in Azure in order for the
provider to function properly:

|===
|Permission |Type

|GroupMember.Read.All
|Application

|User.Read.All
|Application

|Device.Read.All
|Application
|===

For a full guide on how to set up the necessary App Registration, permission
granting, and secret configuration, follow this https://learn.microsoft.com/en-us/graph/auth-v2-service[guide].

[float]
==== How It Works

[float]
===== Overview

The Azure AD provider periodically contacts Azure Active Directory, retrieving
updates for users, devices and groups, updates its internal cache of user and
device metadata and group membership information, and ships updated user metadata
to Elasticsearch.

Fetching and shipping updates occurs in one of two processes: *full
synchronizations* and *incremental updates*. Full synchronizations will send the
entire list of users and devices in state, along with write markers to indicate
the start and end of the synchronization event. Incremental updates will only
send data for changed users and devices during that event. Changes on a user or
device can come in many forms, whether it be a change to the user or device
metadata, a user/device was added or deleted, or group membership was changed
(either direct or transitive).

[float]
===== API Interactions

The provider periodically retrieves changes to user, device and group metadata
from the Microsoft Graph API for Azure Active Directory. This is done through
calls to three API endpoints:

- https://learn.microsoft.com/en-us/graph/api/user-delta?view=graph-rest-1.0&tabs=http[/users/delta]
- https://learn.microsoft.com/en-us/graph/api/device-delta?view=graph-rest-1.0&tabs=http[/devices/delta]
- https://learn.microsoft.com/en-us/graph/api/group-delta?view=graph-rest-1.0&tabs=http[/groups/delta]

The `/delta` endpoint will provide changes that have occurred since the last
call, with state being tracked through a delta token. If the /delta endpoint is
called without a delta token, it will provide a full listing of users, devices
or groups, similar to the non-delta endpoint. Since many results may be returned,
there is a paging mechanism that is used. In the response body, there are two
fields that may appear, `@odata.nextLink` and `@odata.deltaLink`.

- If a `@odata.nextLink` is returned, then there are more results to fetch, and
the value of this field will contain the URL which should be immediately fetched.
- If a `@odata.deltaLink` is returned, then there are currently no more results,
and the value of this field (a URL) should be saved for the next time updates
need to be fetched (the delta token).

The group metadata will be used to enrich users and devices with group membership
information. Direct memberships, along with transitive memberships, will be provided
for users and devices.

[float]
===== Sending User and Device Metadata to Elasticsearch

During a full synchronization, all users and devices stored in state will be sent
to the output, while incremental updates will only send users which have been
updated. Full synchronizations will be bounded on either side by write marker
documents, which will look something like this:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2022-11-04T09:57:19.786056-05:00",
    "event": {
        "action": "started",
        "start": "2022-11-04T09:57:19.786056-05:00"
    },
    "labels": {
        "identity_source": "azure-1"
    }
}
----

User documents will show the current state of the user.

Example user document:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2022-11-04T09:57:19.786056-05:00",
    "event": {
        "action": "user-discovered",
    },
    "azure_ad": {
        "userPrincipalName": "example.user@example.com",
        "mail": "example.user@example.com",
        "displayName": "Example User",
        "givenName": "Example",
        "surname": "User",
        "jobTitle": "Software Engineer",
        "mobilePhone": "123-555-1000",
        "businessPhones": ["123-555-0122"]
    },
    "user": {
        "id": "5ebc6a0f-05b7-4f42-9c8a-682bbc75d0fc",
        "group": [
            {
                "id": "331676df-b8fd-4492-82ed-02b927f8dd80",
                "name": "group1"
            },
            {
                "id": "d140978f-d641-4f01-802f-4ecc1acf8935",
                "name": "group2"
            }
        ]
    },
    "labels": {
        "identity_source": "azure-1"
    }
}
----

Device documents will show the current state of the device.

Example device document:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2022-11-04T09:57:19.786056-05:00",
    "event": {
        "action": "device-discovered",
    },
    "azure_ad": {
        "accountEnabled": true,
        "deviceId": "2fbbb8f9-ff67-4a21-b867-a344d18a4198",
        "displayName": "DESKTOP-LETW452G",
        "operatingSystem": "Windows",
        "operatingSystemVersion": "10.0.19043.1337",
        "physicalIds": {
            "extensionAttributes": {
                "extensionAttribute1": "BYOD-Device"
            }
        },
        "alternativeSecurityIds": [
            {
                "type": 2,
                "identityProvider": null,
                "key": "DGFSGHSGGTH345A...35DSFH0A"
            },
        ]
    },
    "device": {
        "id": "adbbe40a-0627-4328-89f1-88cac84dbc7f",
        "group": [
            {
                "id": "331676df-b8fd-4492-82ed-02b927f8dd80",
                "name": "group1"
            }
        ]
        "registered_owners": [
            {
                "id": "5ebc6a0f-05b7-4f42-9c8a-682bbc75d0fc",
                "userPrincipalName": "example.user@example.com",
                "mail": "example.user@example.com",
                "displayName": "Example User",
                "givenName": "Example",
                "surname": "User",
                "jobTitle": "Software Engineer",
                "mobilePhone": "123-555-1000",
                "businessPhones": ["123-555-0122"]
            },
        ],
        "registered_users": [
            {
                "id": "5ebc6a0f-05b7-4f42-9c8a-682bbc75d0fc",
                "userPrincipalName": "example.user@example.com",
                "mail": "example.user@example.com",
                "displayName": "Example User",
                "givenName": "Example",
                "surname": "User",
                "jobTitle": "Software Engineer",
                "mobilePhone": "123-555-1000",
                "businessPhones": ["123-555-0122"]
            },
        ],
    },
    "labels": {
        "identity_source": "azure-1"
    }
}
----

[float]
==== Configuration

Example configuration:

["source","yaml",subs="attributes"]
----
{beatname_lc}.inputs:
- type: entity-analytics
  enabled: true
  id: azure-1
  provider: azure-ad
  dataset: "all"
  sync_interval: "12h"
  update_interval: "30m"
  client_id: "CLIENT_ID"
  tenant_id: "TENANT_ID"
  secret: "SECRET"
----

The `azure-ad` provider supports the following configuration:

[float]
===== `tenant_id`

The Tenant ID. Field is required.

[float]
===== `client_id`

The client/application ID. Used for authentication. Field is required.

[float]
===== `secret`

The secret value, used for authentication. Field is required.

[float]
===== `dataset`

The datasets to collect from the API. This can be one of "all", "users" or "devices",
or may be left empty for the default behavior which is to collect all entities.
When the `dataset` is set to "devices", some user entity data is collected in order
to populate the registered users and registered owner fields for each device.

[float]
===== `sync_interval`

The interval in which full synchronizations should occur. The interval must be
longer than the update interval (`update_interval`) Expressed as a duration
string (e.g., 1m, 3h, 24h). Defaults to `24h` (24 hours).

[float]
===== `update_interval`

The interval in which incremental updates should occur. The interval must be
shorter than the full synchronization interval (`sync_interval`). Expressed as a
duration string (e.g., 1m, 3h, 24h). Defaults to `15m` (15 minutes).

[float]
===== `login_endpoint`

Override the default authentication login endpoint. Only change if directed to do
so. Altering this value will also require a change to `login_scopes`.

[float]
===== `login_scopes`

Override the default authentication scopes. Only change if directed to do so.

[float]
===== `select.users`

Override the default https://learn.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http#optional-query-parameters[user query selections].
This is a list of optional query parameters. The default is `["accountEnabled", "userPrincipalName",
"mail", "displayName", "givenName", "surname", "jobTitle", "officeLocation", "mobilePhone",
"businessPhones"]`.

[float]
===== `select.groups`

Override the default https://learn.microsoft.com/en-us/graph/api/group-get?view=graph-rest-1.0&tabs=http#optional-query-parameters[group query selections].
This is a list of optional query parameters. The default is `["displayName", "members"]`.

[float]
===== `select.devices`

Override the default https://learn.microsoft.com/en-us/graph/api/device-get?view=graph-rest-1.0&tabs=http#optional-query-parameters[device query selections].
This is a list of optional query parameters. The default is `["accountEnabled", "deviceId",
"displayName", "operatingSystem", "operatingSystemVersion", "physicalIds", "extensionAttributes",
"alternativeSecurityIds"]`.

[id="provider-okta"]
==== Okta User Identities (`okta`)

The `okta` provider allows the input to retrieve users and devices from the
Okta user API.

[float]
==== Setup

The necessary API permissions need to be granted in Okta in order for the
provider to function properly. In the administration dashboard for your
Okta account, navigate to Security>API and in the Tokens tab click the
"Create token" button to create a new token. Copy the token value and retain
this to configure the provider. Note that the token will not be presented
again, so it must be copied now. This value will use given to the provider
via the `okta_token` configuration field.

Devices API access needs to be activated by Okta support.

[float]
==== How It Works

[float]
===== Overview

The Okta provider periodically contacts the Okta API, retrieving updates for
users and devices, updates its internal cache of user metadata, and ships
updated user/device metadata to Elasticsearch.

Fetching and shipping updates occurs in one of two processes: **full
synchronizations** and *incremental updates*. Full synchronizations will send
the entire list of users and devices in state, along with write markers to
indicate the start and end of the synchronization event. Incremental updates
will only send data for changed users and devices during that event. Changes
on a user or device can come in many forms, whether it be a change to the
user's metadata, or a user was added or deleted.

[float]
===== API Interactions

The provider periodically retrieves changes to user/device metadata from the
Okta User and Device APIs. This is done through calls to:

- https://developer.okta.com/docs/reference/api/users/#list-users[/api/v1/users]
- https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Device/#tag/Device/operation/listDevices[/api/v1/devices]

Updates are tracked by the provider by retaining a record of the time of the last
noted update in the returned user list. During provider updates the Okta provider
makes use of the Okta API's query filtering to only request records updated at or
since the provider's recorded last update.

[float]
===== Sending User Metadata to Elasticsearch

During a full synchronization, all users/devices stored in state will be sent
to the output, while incremental updates will only send users and devices
that have been updated. Full synchronizations will be bounded on either side
by write marker documents, which will look something like this:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2022-11-04T09:57:19.786056-05:00",
    "event": {
        "action": "started",
        "start": "2022-11-04T09:57:19.786056-05:00"
    },
    "labels": {
        "identity_source": "okta-1"
    }
}
----

User documents will show the current state of the user.

Example user document:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2023-07-04T09:57:19.786056-05:00",
    "event": {
        "action": "user-discovered",
    },
    "okta": {
        "id": "userid",
        "status": "RECOVERY",
        "created": "2023-06-02T09:33:00.189752+09:30",
        "activated": "0001-01-01T00:00:00Z",
        "statusChanged": "2023-06-02T09:33:00.189752+09:30",
        "lastLogin": "2023-06-02T09:33:00.189752+09:30",
        "lastUpdated": "2023-06-02T09:33:00.189753+09:30",
        "passwordChanged": "2023-06-02T09:33:00.189753+09:30",
        "type": {
            "id": "typeid"
        },
        "profile": {
            "login": "name.surname@example.com",
            "email": "name.surname@example.com",
            "firstName": "name",
            "lastName": "surname"
        },
        "credentials": {
            "password": {},
            "provider": {
                "type": "OKTA",
                "name": "OKTA"
            }
        },
        "_links": {
            "self": {
                "href": "https://localhost/api/v1/users/userid"
            }
        }
    },
    "user": {
        "id": "userid",
    },
    "labels": {
        "identity_source": "okta-1"
    }
}
----

Device documents will show the current state of the device, including any
associated users.

Example device document:

["source","json",subs="attributes"]
----
{
    "@timestamp": "2023-07-04T09:57:19.786056-05:00",
    "event": {
        "action": "device-discovered",
    },
    "okta": {
        "created": "2019-10-02T18:03:07Z",
        "id": "deviceid",
        "lastUpdated": "2019-10-02T18:03:07Z",
        "profile": {
            "diskEncryptionType": "ALL_INTERNAL_VOLUMES",
            "displayName": "Example Device name 1",
            "platform": "WINDOWS",
            "registered": true,
            "secureHardwarePresent": false,
            "serialNumber": "XXDDRFCFRGF3M8MD6D",
            "sid": "S-1-11-111"
        },
        "resourceAlternateID": "",
        "resourceDisplayName": {
            "sensitive": false,
            "value": "Example Device name 1"
        },
        "resourceID": "deviceid",
        "resourceType": "UDDevice",
        "status": "ACTIVE",
        "_links": {
            "activate": {
                "hints": {
                    "allow": [
                        "POST"
                    ]
                },
                "href": "https://localhost/api/v1/devices/deviceid/lifecycle/activate"
            },
            "self": {
                "hints": {
                    "allow": [
                        "GET",
                        "PATCH",
                        "PUT"
                    ]
                },
                "href": "https://localhost/api/v1/devices/deviceid"
            },
            "users": {
                "hints": {
                    "allow": [
                        "GET"
                    ]
                },
                "href": "https://localhost/api/v1/devices/deviceid/users"
            }
        },
        "users": [
            {
                "id": "userid",
                "status": "RECOVERY",
                "created": "2023-05-14T13:37:20Z",
                "activated": "0001-01-01T00:00:00Z",
                "statusChanged": "2023-05-15T01:50:30Z",
                "lastLogin": "2023-05-15T01:59:20Z",
                "lastUpdated": "2023-05-15T01:50:32Z",
                "passwordChanged": "2023-05-15T01:50:32Z",
                "type": {
                    "id": "typeid"
                },
                "profile": {
                    "login": "name.surname@example.com",
                    "email": "name.surname@example.com",
                    "firstName": "name",
                    "lastName": "surname"
                },
                "credentials": {
                    "password": {},
                    "provider": {
                        "type": "OKTA",
                        "name": "OKTA"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://localhost/api/v1/users/userid"
                    }
                }
            }
        ]
    },
    "device": {
        "id": "deviceid",
    },
    "labels": {
        "identity_source": "okta-1"
    }
}
----

[float]
==== Configuration

Example configuration:

["source","yaml",subs="attributes"]
----
{beatname_lc}.inputs:
- type: entity-analytics
  enabled: true
  id: okta-1
  provider: okta
  dataset: "all"
  sync_interval: "12h"
  update_interval: "30m"
  okta_domain: "OKTA_DOMAIN"
  okta_token: "OKTA_TOKEN"
----

The `okta` provider supports the following configuration:

[float]
===== `okta_domain`

The Okta domain. Field is required.

[float]
===== `okta_token`

The Okta secret token, used for authentication. Field is required.

[float]
===== `collect_device_details`

Whether the input should collect device and device-associated user details
from the Okta API. Device details must be activated on the Okta account for
this option.

[float]
===== `dataset`

The datasets to collect from the API. This can be one of "all", "users" or "devices",
or may be left empty for the default behavior which is to collect all entities.
When the `dataset` is set to "devices", some user entity data is collected in order
to populate the registered users and registered owner fields for each device.

[float]
===== `sync_interval`

The interval in which full synchronizations should occur. The interval must be
longer than the update interval (`update_interval`) Expressed as a duration
string (e.g., 1m, 3h, 24h). Defaults to `24h` (24 hours).

[float]
===== `update_interval`

The interval in which incremental updates should occur. The interval must be
shorter than the full synchronization interval (`sync_interval`). Expressed as a
duration string (e.g., 1m, 3h, 24h). Defaults to `15m` (15 minutes).

[float]
==== Metrics

This input exposes metrics under the <<http-endpoint, HTTP monitoring endpoint>>.
These metrics are exposed under the `/inputs` path. They can be used to
observe the activity of the input.

[options="header"]
|=======
| Metric                   | Description
| `sync_total`             | The total number of full synchronizations.
| `sync_error`             | The number of full synchronizations that failed due to an error.
| `sync_processing_time`   | Histogram of the elapsed full synchronizations times in nanoseconds (time of API contact to items sent to output).
| `update_total`           | The total number of incremental updates.
| `update_error`           | The number of incremental updates that failed due to an error.
| `update_processing_time` | Histogram of the elapsed incremental updates times in nanoseconds (time of API contact to items sent to output).
|=======

NOTE: This input is experimental and is under active developement. Configuration
options and behaviors may change without warning. Use with caution and do not use
in production environments.

:type!:
