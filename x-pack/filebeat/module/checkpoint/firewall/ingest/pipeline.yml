description: Pipeline for parsing checkpoint firewall logs
processors:
- grok:
    field: message
    patterns:
    - '%{SYSLOG5424PRI}%{NONNEGINT:syslog5424_ver} +(?:%{TIMESTAMP_ISO8601:syslog5424_ts}|-)
      +(?:%{IPORHOST:syslog5424_host}|-) +(-|%{SYSLOG5424PRINTASCII:syslog5424_app})
      +(-|%{SYSLOG5424PRINTASCII:syslog5424_proc}) +(?::-|%{SYSLOG5424PRINTASCII:syslog5424_msgid})
      +\[%{GREEDYDATA:syslog5424_sd}\]$'
- kv:
    field: syslog5424_sd
    field_split: '; '
    value_split: ':'
    trim_key: ' '
    trim_value: ' '
    prefix: checkpoint.
    strip_brackets: true
    ignore_failure: true
    exclude_keys:
    - flags
    - layer_uuid
    - originsicname
    - __policy_id_tag
    - version
    - rounded_bytes
    - db_tag
    - update_service
- remove:
    field:
    - syslog5424_sd
    - syslog5424_app
    - syslog5424_host
    - syslog5424_msgid
    - syslog5424_pri
    - syslog5424_proc
    - syslog5424_ver
    - message
    - host
    ignore_missing: true
- set:
    field: '@timestamp'
    value: '{{syslog5424_ts}}'
    if: ctx.checkpoint?.time == null
- set:
    field: event.module
    value: checkpoint
- append:
    field: event.category
    value: network
    if: ctx.checkpoint?.operation != 'Log In'
- set:
    field: observer.vendor
    value: Checkpoint
- set:
    field: observer.type
    value: firewall
    if: ctx.checkpoint?.type == null
- set:
    field: observer.product
    value: '{{checkpoint.product}}'
    if: ctx.checkpoint?.product != null
- set:
    field: client.ip
    value: '{{checkpoint.src}}'
    if: ctx.checkpoint?.src != null
- set:
    field: source.ip
    value: '{{checkpoint.src}}'
    if: ctx.checkpoint?.src != null
- set:
    field: client.ip
    value: '{{checkpoint.client_ip}}'
    if: ctx.client?.ip == null && ctx.checkpoint?.client_ip != null
- set:
    field: source.ip
    value: '{{checkpoint.client_ip}}'
    if: ctx.source?.ip == null && ctx.checkpoint?.client_ip != null
- set:
    field: client.nat.ip
    value: '{{checkpoint.xlatesrc}}'
    if: ctx.checkpoint?.xlatesrc != '0.0.0.0' && ctx.checkpoint?.xlatesrc != null
- set:
    field: source.nat.ip
    value: '{{checkpoint.xlatesrc}}'
    if: ctx.checkpoint?.xlatesrc != '0.0.0.0' && ctx.checkpoint?.xlatesrc != null
- set:
    field: server.ip
    value: '{{checkpoint.dst}}'
    if: ctx.checkpoint?.dst != null
- set:
    field: destination.ip
    value: '{{checkpoint.dst}}'
    if: ctx.checkpoint?.dst != null
- set:
    field: server.nat.ip
    value: '{{checkpoint.xlatedst}}'
    if: ctx.checkpoint?.xlatedst != '0.0.0.0' && ctx.checkpoint?.xlatedst != null
- set:
    field: destination.nat.ip
    value: '{{checkpoint.xlatedst}}'
    if: ctx.checkpoint?.xlatedst != '0.0.0.0' && ctx.checkpoint?.xlatedst != null
- set:
    field: client.user.id
    value: '{{checkpoint.uid}}'
    if: ctx.checkpoint?.uid != null
- set:
    field: source.user.id
    value: '{{checkpoint.uid}}'
    if: ctx.checkpoint?.uid != null
- set:
    field: client.user.name
    value: '{{checkpoint.administrator}}'
    if: ctx.checkpoint?.administrator != null
- set:
    field: source.user.name
    value: '{{checkpoint.administrator}}'
    if: ctx.checkpoint?.administrator != null
- set:
    field: client.user.name
    value: '{{checkpoint.source_user_name}}'
    if: ctx.client?.user?.name == null && ctx.checkpoint?.source_user_name != null
- set:
    field: source.user.name
    value: '{{checkpoint.source_user_name}}'
    if: ctx.source?.user?.name == null && ctx.checkpoint?.source_user_name != null
- set:
    field: source.packets
    value: '{{checkpoint.client_outbound_packets}}'
    if: ctx.checkpoint?.client_outbound_packets != null
- set:
    field: client.packets
    value: '{{checkpoint.client_outbound_packets}}'
    if: ctx.checkpoint?.client_outbound_packets != null
- set:
    field: destination.packets
    value: '{{checkpoint.server_outbound_packets}}'
    if: ctx.checkpoint?.server_outbound_packets != null
- set:
    field: server.packets
    value: '{{checkpoint.server_outbound_packets}}'
    if: ctx.checkpoint?.server_outbound_packets != null
- set:
    field: client.bytes
    value: '{{checkpoint.client_outbound_bytes}}'
    if: ctx.checkpoint?.client_outbound_bytes != null
- set:
    field: source.bytes
    value: '{{checkpoint.client_outbound_bytes}}'
    if: ctx.checkpoint?.client_outbound_bytes != null
- set:
    field: client.bytes
    value: '{{checkpoint.sent_bytes}}'
    if: ctx.client?.bytes == null && ctx.checkpoint?.sent_bytes != null
- set:
    field: source.bytes
    value: '{{checkpoint.sent_bytes}}'
    if: ctx.source?.bytes == null && ctx.checkpoint?.sent_bytes != null
- set:
    field: destination.bytes
    value: '{{checkpoint.server_outbound_bytes}}'
    if: ctx.checkpoint?.server_outbound_bytes != null
- set:
    field: server.bytes
    value: '{{checkpoint.server_outbound_bytes}}'
    if: ctx.checkpoint?.server_outbound_bytes != null
- set:
    field: destination.bytes
    value: '{{checkpoint.server_outbound_bytes}}'
    if: ctx.checkpoint?.received_bytes != null && ctx.destination?.bytes == null
- set:
    field: server.bytes
    value: '{{checkpoint.server_outbound_bytes}}'
    if: ctx.checkpoint?.received_bytes != null && ctx.server?.bytes == null
- set:
    field: destination.port
    value: '{{checkpoint.service}}'
    if: ctx.checkpoint?.service != null
- set:
    field: server.port
    value: '{{checkpoint.service}}'
    if: ctx.checkpoint?.service != null
- set:
    field: destination.nat.port
    value: '{{checkpoint.xlatedport}}'
    if: ctx.checkpoint?.xlatedport != null
- set:
    field: server.nat.port
    value: '{{checkpoint.xlatedport}}'
    if: ctx.checkpoint?.xlatedport != null
- set:
    field: client.port
    value: '{{checkpoint.s_port}}'
    if: ctx.checkpoint?.s_port != null
- set:
    field: source.port
    value: '{{checkpoint.s_port}}'
    if: ctx.checkpoint?.s_port != null
- set:
    field: client.nat.port
    value: '{{checkpoint.xlatesport}}'
    if: ctx.checkpoint?.xlatesport != null
- set:
    field: source.nat.port
    value: '{{checkpoint.xlatesport}}'
    if: ctx.checkpoint?.xlatesport != null
- set:
    field: client.mac
    value: '{{checkpoint.mac_source_address}}'
    if: ctx.checkpoint?.mac_source_address != null
- set:
    field: source.mac
    value: '{{checkpoint.mac_source_address}}'
    if: ctx.checkpoint?.mac_source_address != null
- set:
    field: client.user.email
    value: '{{checkpoint.from}}'
    if: ctx.checkpoint?.from != null
- set:
    field: source.user.email
    value: '{{checkpoint.from}}'
    if: ctx.checkpoint?.from != null
- set:
    field: client.domain
    value: '{{checkpoint.src_machine_name}}'
    if: ctx.checkpoint?.src_machine_name != null
- set:
    field: source.domain
    value: '{{checkpoint.src_machine_name}}'
    if: ctx.checkpoint?.src_machine_name != null
- set:
    field: server.domain
    value: '{{checkpoint.destination_dns_hostname}}'
    if: ctx.checkpoint?.destination_dns_hostname != null
- set:
    field: destination.domain
    value: '{{checkpoint.destination_dns_hostname}}'
    if: ctx.checkpoint?.destination_dns_hostname != null
- set:
    field: server.domain
    value: '{{checkpoint.dst_machine_name}}'
    if: ctx.server?.domain == null && ctx.checkpoint?.dst_machine_name != null
- set:
    field: destination.domain
    value: '{{checkpoint.dst_machine_name}}'
    if: ctx.server?.domain == null && ctx.checkpoint?.dst_machine_name != null
- set:
    field: client.user.group.name
    value: '{{checkpoint.src_user_group}}'
    if: ctx.checkpoint?.src_user_group != null
- set:
    field: source.user.group.name
    value: '{{checkpoint.src_user_group}}'
    if: ctx.checkpoint?.src_user_group != null
- append:
    field: event.category
    value: authentication
    if: ctx.checkpoint?.operation == 'Log In'
- set:
    field: event.kind
    value: alert
    if: '[''Prevent'', ''Detect'', ''Quarantine''].contains(ctx.checkpoint?.rule_action)'
- set:
    field: event.kind
    value: event
    if: ctx.event?.kind == null
- set:
    field: event.outcome
    value: success
    if: '[''Accept'', ''Allow''].contains(ctx.checkpoint?.rule_action)'
- append:
    field: event.type
    value:
    - allowed
    - connection
    if: '[''Accept'', ''Allow''].contains(ctx.checkpoint?.rule_action)'
- set:
    field: event.outcome
    value: success
    if: ctx.checkpoint?.audit_status == 'Success'
- set:
    field: event.outcome
    value: failure
    if: ctx.checkpoint?.audit_status == 'Failure'
- set:
    field: event.outcome
    value: success
    if: '[''Drop'', ''Reject'', ''Block'', ''Prevent''].contains(ctx.checkpoint?.rule_action)'
- append:
    field: event.type
    value:
    - connection
    - denied
    if: '[''Drop'', ''Reject'', ''Block'', ''Prevent''].contains(ctx.checkpoint?.rule_action)'
- append:
    field: event.category
    value: malware
    if: ctx.checkpoint?.malware_action != null
- append:
    field: event.category
    value: intrusion_detection
    if: '[''Detect'', ''Prevent''].contains(ctx.checkpoint?.rule_action)'
- append:
    field: related.ip
    value: '{{source.ip}}'
    if: ctx.source?.ip != null
- append:
    field: related.ip
    value: '{{source.nat.ip}}'
    if: ctx.source?.nat?.ip != null
- append:
    field: related.ip
    value: '{{destination.ip}}'
    if: ctx.destination?.ip != null
- append:
    field: related.ip
    value: '{{destination.nat.ip}}'
    if: ctx.destination?.nat?.ip != null
- append:
    field: related.hash
    value: '{{checkpoint.file_md5}}'
    if: ctx.checkpoint?.file_md5 != null
- append:
    field: related.hash
    value: '{{checkpoint.file_sha1}}'
    if: ctx.checkpoint?.file_sha1 != null
- append:
    field: related.hash
    value: '{{checkpoint.file_sha256}}'
    if: ctx.checkpoint?.file_sha256 != null
- rename:
    field: checkpoint.to
    target_field: destination.user.email
    ignore_missing: true
- rename:
    field: checkpoint.usercheck_incident_uid
    target_field: destination.user.id
    ignore_missing: true
- rename:
    field: checkpoint.service_name
    target_field: destination.service.name
    ignore_missing: true
- rename:
    field: checkpoint.mac_destination_address
    target_field: destination.mac
    ignore_missing: true
- rename:
    field: checkpoint.dns_type
    target_field: dns.question.type
    ignore_missing: true
- rename:
    field: checkpoint.domain_name
    target_field: dns.question.name
    ignore_missing: true
- rename:
    field: checkpoint.dns_message_type
    target_field: dns.type
    ignore_missing: true
- rename:
    field: checkpoint.tid
    target_field: dns.id
    ignore_missing: true
- rename:
    field: checkpoint.loguid
    target_field: event.id
    ignore_missing: true
- rename:
    field: checkpoint.sequencenum
    target_field: event.sequence
    ignore_missing: true
- rename:
    field: checkpoint.severity
    target_field: event.severity
    ignore_missing: true
- rename:
    field: checkpoint.action
    target_field: event.action
    ignore_missing: true
- rename:
    field: checkpoint.packet_capture
    target_field: event.url
    ignore_missing: true
- rename:
    field: checkpoint.start_time
    target_field: event.start
    ignore_missing: true
- rename:
    field: checkpoint.first_detection
    target_field: event.start
    ignore_missing: true
    if: ctx.event?.start == null
- rename:
    field: checkpoint.last_detection
    target_field: event.end
    ignore_missing: true
- rename:
    field: checkpoint.app_risk
    target_field: event.risk_score
    ignore_missing: true
- rename:
    field: checkpoint.file_id
    target_field: file.inode
    ignore_missing: true
- rename:
    field: checkpoint.file_type
    target_field: file.type
    ignore_missing: true
- rename:
    field: checkpoint.file_name
    target_field: file.name
    ignore_missing: true
- rename:
    field: checkpoint.file_size
    target_field: file.size
    ignore_missing: true
- rename:
    field: checkpoint.file_md5
    target_field: file.hash.md5
    ignore_missing: true
- rename:
    field: checkpoint.file_sha1
    target_field: file.hash.sha1
    ignore_missing: true
- rename:
    field: checkpoint.file_sha256
    target_field: file.hash.sha256
    ignore_missing: true
- rename:
    field: checkpoint.dlp_file_name
    target_field: file.name
    ignore_missing: true
- rename:
    field: checkpoint.user_group
    target_field: group.name
    ignore_missing: true
- rename:
    field: checkpoint.os_version
    target_field: host.os.version
    ignore_missing: true
- rename:
    field: checkpoint.os_name
    target_field: host.os.name
    ignore_missing: true
- rename:
    field: checkpoint.method
    target_field: http.request.method
    ignore_missing: true
- rename:
    field: checkpoint.referrer
    target_field: http.request.referrer
    ignore_missing: true
- rename:
    field: checkpoint.service_id
    target_field: network.application
    ignore_missing: true
- rename:
    field: checkpoint.ifdir
    target_field: network.direction
    ignore_missing: true
- rename:
    field: checkpoint.bytes
    target_field: network.bytes
    ignore_missing: true
- rename:
    field: checkpoint.proto
    target_field: network.iana_number
    ignore_missing: true
- rename:
    field: checkpoint.packets
    target_field: network.packets
    ignore_missing: true
- rename:
    field: checkpoint.layer_name
    target_field: network.name
    ignore_missing: true
- rename:
    field: checkpoint.app_name
    target_field: network.application
    ignore_missing: true
- rename:
    field: checkpoint.client_inbound_interface
    target_field: observer.ingress.interface.name
    ignore_missing: true
- rename:
    field: checkpoint.client_inbound_interface
    target_field: observer.egress.interface.name
    ignore_missing: true
- rename:
    field: checkpoint.ifname
    target_field: observer.ingress.interface.name
    ignore_missing: true
    if: ctx.network?.direction == 'inbound'
- rename:
    field: checkpoint.client_inbound_interface
    target_field: observer.egress.interface.name
    ignore_missing: true
    if: ctx.network?.direction == 'outbound'
- rename:
    field: checkpoint.type
    target_field: observer.type
    ignore_missing: true
- rename:
    field: checkpoint.origin
    target_field: observer.name
    ignore_missing: true
- rename:
    field: checkpoint.origin_ip
    target_field: observer.ip
    ignore_missing: true
- rename:
    field: checkpoint.endpoint_ip
    target_field: observer.ip
    ignore_missing: true
    if: ctx.observer?.ip == null
- rename:
    field: checkpoint.outzone
    target_field: observer.egress.zone
    ignore_missing: true
- rename:
    field: checkpoint.inzone
    target_field: observer.ingress.zone
    ignore_missing: true
- rename:
    field: checkpoint.security_outzone
    target_field: observer.egress.zone
    ignore_missing: true
    if: ctx.observer?.egress?.zone == null
- rename:
    field: checkpoint.security_inzone
    target_field: observer.ingress.zone
    ignore_missing: true
    if: ctx.observer?.ingress?.zone == null
- rename:
    field: checkpoint.update_version
    target_field: observer.version
    ignore_missing: true
- rename:
    field: checkpoint.process_md5
    target_field: process.hash.md5
    ignore_missing: true
- rename:
    field: checkpoint.process_name
    target_field: process.name
    ignore_missing: true
- rename:
    field: checkpoint.parent_process_md5
    target_field: process.parent.hash.md5
    ignore_missing: true
- rename:
    field: checkpoint.parent_process_name
    target_field: process.parent.name
    ignore_missing: true
- rename:
    field: checkpoint.matched_category
    target_field: rule.category
    ignore_missing: true
- rename:
    field: checkpoint.categories
    target_field: rule.category
    ignore_missing: true
    if: ctx.rule?.category == null
- rename:
    field: checkpoint.malware_action
    target_field: rule.description
    ignore_missing: true
- rename:
    field: checkpoint.malware_rule_id
    target_field: rule.id
    ignore_missing: true
- rename:
    field: checkpoint.app_rule_id
    target_field: rule.id
    ignore_missing: true
    if: ctx.rule?.id == null
- rename:
    field: checkpoint.objectname
    target_field: rule.name
    ignore_missing: true
- rename:
    field: checkpoint.rule_name
    target_field: rule.name
    ignore_missing: true
    if: ctx.rule?.name == null
- rename:
    field: checkpoint.malware_rule_name
    target_field: rule.name
    ignore_missing: true
    if: ctx.rule?.name == null
- rename:
    field: checkpoint.app_rule_name
    target_field: rule.name
    ignore_missing: true
    if: ctx.rule?.name == null
- rename:
    field: checkpoint.dlp_rule_name
    target_field: rule.name
    ignore_missing: true
    if: ctx.rule?.name == null
- rename:
    field: checkpoint.smartdefence_profile
    target_field: rule.ruleset
    ignore_missing: true
- rename:
    field: checkpoint.policy
    target_field: rule.ruleset
    ignore_missing: true
    if: ctx.rule?.ruleset == null
- rename:
    field: checkpoint.rule_uid
    target_field: rule.uuid
    ignore_missing: true
- rename:
    field: checkpoint.dlp_rule_uid
    target_field: rule.uuid
    ignore_missing: true
    if: ctx.rule?.uuid == null
- rename:
    field: checkpoint.url
    target_field: url.original
    ignore_missing: true
- rename:
    field: checkpoint.resource
    target_field: url.original
    ignore_missing: true
    if: ctx.url?.original == null
- rename:
    field: checkpoint.http_host
    target_field: url.domain
    ignore_missing: true
- rename:
    field: checkpoint.web_client_type
    target_field: user_agent.name
    ignore_missing: true
- rename:
    field: checkpoint.user_agent
    target_field: user_agent.original
    ignore_missing: true
- rename:
    field: checkpoint.industry_reference
    target_field: vulnerability.id
    ignore_missing: true
- rename:
    field: checkpoint.time
    target_field: '@timestamp'
    ignore_missing: true
- rename:
    field: checkpoint.message
    target_field: message
    ignore_missing: true
- rename:
    field: checkpoint.reason
    target_field: message
    ignore_missing: true
    if: ctx.message == null
- rename:
    field: checkpoint.subject
    target_field: message
    ignore_missing: true
    if: ctx.message == null
- append:
    field: related.user
    value: '{{source.user.name}}'
    if: ctx.source?.user?.name != null
- append:
    field: related.user
    value: '{{destination.user.name}}'
    if: ctx.destination?.user?.name != null
- script:
    lang: painless
    source: ctx.network.bytes = ctx.source.bytes + ctx.destination.bytes
    if: ctx?.source?.bytes != null && ctx?.destination?.bytes != null && ctx?.network?.bytes == null
    ignore_failure: true
- script:
    lang: painless
    source: ctx.network.packets = ctx.source.packets + ctx.destination.packets
    if: ctx?.source?.packets != null && ctx?.destination?.packets != null && ctx?.network?.packets == null
    ignore_failure: true
- geoip:
    field: source.ip
    target_field: source.geo
    ignore_missing: true
    if: ctx.source?.geo == null
- geoip:
    field: destination.ip
    target_field: destination.geo
    ignore_missing: true
    if: ctx.destination?.geo == null
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: source.ip
    target_field: source.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: destination.ip
    target_field: destination.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- rename:
    field: source.as.asn
    target_field: source.as.number
    ignore_missing: true
- rename:
    field: source.as.organization_name
    target_field: source.as.organization.name
    ignore_missing: true
- rename:
    field: destination.as.asn
    target_field: destination.as.number
    ignore_missing: true
- rename:
    field: destination.as.organization_name
    target_field: destination.as.organization.name
    ignore_missing: true
- remove:
    field:
    - checkpoint.client_outbound_packets
    - checkpoint.client_outbound_bytes
    - checkpoint.server_outbound_packets
    - checkpoint.server_outbound_bytes
    - checkpoint.received_bytes
    - checkpoint.product
    - checkpoint.uid
    - checkpoint.from
    - checkpoint.mac_source_address
    - checkpoint.source_user_name
    - checkpoint.administrator
    - checkpoint.src_machine_name
    - checkpoint.src_user_group
    - checkpoint.destination_dns_hostname
    - checkpoint.dst_machine_name
    - checkpoint.dst
    - checkpoint.src
    - checkpoint.service
    - checkpoint.s_port
    - checkpoint.ifname
    - checkpoint.xlatesrc
    - checkpoint.xlatedst
    - checkpoint.xlatedport
    - checkpoint.xlatesport
    - checkpoint.client_ip
    - syslog5424_ts
    ignore_missing: true
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'