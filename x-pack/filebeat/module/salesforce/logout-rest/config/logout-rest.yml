type: httpjson

interval: {{ .interval }}
request.method: GET
auth.oauth2:
  enabled: true
  client.id: {{ .client_id }}
  client.secret: {{ .client_secret }}
  token_url: {{ .token_url }}
  user: {{ .user }}
  password: {{ .password }}
# Query params will be overwritten by request.transforms from start of the input and 
# it is to indicate that this url is for Logout type of events as cursor stores the url as source.
# Each filebeat input cursor source needs to be uniquely identified with a name.
request.url: {{ .url }}/services/data/v52.0/query?q=logout+rest
{{ if .proxy_url }}
request.proxy_url: {{ .proxy_url }}
{{ end }}
request.transforms:
  - set:
      target: url.params.q
      value: "SELECT Id,CreatedDate,LogDate,LogFile FROM EventLogFile WHERE Interval = 'Hourly' AND EventType = 'Logout' AND CreatedDate > [[.cursor.last_published_logout]] ORDER BY CreatedDate ASC NULLS FIRST"
      default: "SELECT Id,CreatedDate,LogDate,LogFile FROM EventLogFile WHERE Interval = 'Hourly' AND EventType = 'Logout' ORDER BY CreatedDate ASC NULLS FIRST"
response.split:
  target: body.records
chain:
  - step:
      request.url: {{ .url }}/services/data/v52.0/sobjects/EventLogFile/records.#.Id/LogFile
      request.method: GET
      replace: records.#.Id
cursor:
  last_published_logout:
    value: '[[.last_event.CreatedDate]]'

tags: {{.tags | tojson}}
publisher_pipeline.disable_host: {{ inList .tags "forwarded" }}

processors:
  - decode_json_fields:
      fields: [message]
      target: "json"
  - add_fields:
      target: ''
      fields:
        ecs.version: 1.12.0
  - add_locale: ~
