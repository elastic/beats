{
  "description": "Pipeline for normalizing envoy HTTP ACCESS logs",
  "processors": [
    {
      "script": {
        "lang": "painless",
        "source": "ctx['http'] = new HashMap(); def p = ctx.proto.indexOf ('/'); def l = ctx.proto.length(); ctx.http.version = ctx.proto.substring(p+1, l);", 
        "ignore_failure" : true
      }
    },
    {
      "rename": {
        "field": "method",
        "target_field": "http.request.method"
      }
    },
    {
      "rename": {
        "field": "path",
        "target_field": "url.path"
      }
    },
    {
      "convert" : {
        "field" : "response_code",
        "type": "long"
      }
    },
    {
      "rename": {
        "field": "response_code",
        "target_field": "http.response.status_code"
      }
    },
    {
      "rename": {
        "field": "bytes_received",
        "target_field": "http.response.body.bytes"
      }
    },
    {
      "convert" : {
        "field" : "http.response.body.bytes",
        "type": "long"
      }
    },
    {
      "rename": {
        "field": "bytes_sent",
        "target_field": "http.request.body.bytes"
      }
    },
    {
      "convert" : {
        "field" : "http.request.body.bytes",
        "type": "long"
      }
    },
    {
      "rename": {
        "field": "upstream_service_time",
        "target_field": "envoyproxy.upstream_service_time"
      }
    },
    {
      "convert" : {
        "field" : "envoyproxy.upstream_service_time",
        "type": "double"
      }
    },
    {
      "rename": {
        "field": "authority",
        "target_field": "url.domain"
      }
    },
    {
      "user_agent": {
        "field": "user_agent.original",
        "ignore_missing": true
      }
    }
  ],
  "on_failure" : [{ 
    "set" : { 
      "field" : "error.message", 
      "value" : "pipeline-http: {{ _ingest.on_failure_message }}" 
    } 
  }]
}