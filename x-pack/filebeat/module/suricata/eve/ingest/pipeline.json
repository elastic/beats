{ "description": "Pipeline for parsing Suricata EVE logs"
, "processors":
  [ { "script":
      { "lang": "painless"
      , "source": "ctx['suricata'] = new HashMap(); ctx['suricata']['eve'] = ctx['json']; ctx.remove('json');"
      }
    }
  , {"convert":
      {"field": "suricata.eve.src_ip"
      ,"target_field": "source_ecs.ip"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.src_port"
      ,"target_field": "source_ecs.port"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.dest_ip"
      ,"target_field": "destination.ip"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.dest_port"
      ,"target_field": "destination.port"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"lowercase":
       {"field": "suricata.eve.http.http_method"
       ,"target_field": "http.request.method"
       ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.http.status"
      ,"target_field": "http.response.status_code"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.http.hostname"
      ,"target_field": "url.domain"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , { "grok":
      { "field": "suricata.eve.http.url"
      , "patterns": ["%{PATH:url.path}(?:\\?%{QUERY:url.query})?(?:#%{ANY:url.fragment})?"]
      , "ignore_missing": true
      , "pattern_definitions":
        { "PATH": "[^?#]*"
        , "QUERY": "[^#]*"
        , "ANY": ".*"
        }
      }
    }
  , {"convert":
      {"field": "suricata.eve.http.hostname"
      ,"target_field": "destination.domain"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.http.http_refer"
      ,"target_field": "http.request.referrer"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.http.length"
      ,"target_field": "http.response.body.bytes"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.fileinfo.filename"
      ,"target_field": "file.path"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.fileinfo.size"
      ,"target_field": "file.size"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.http.http_user_agent"
      ,"target_field": "user_agent.original"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }

  , { "date":
      { "field": "suricata.eve.timestamp"
      , "target_field": "@timestamp"
      , "formats": ["ISO8601"]
      }
    }

  , { "lowercase":
      { "field": "suricata.eve.event_type"
      , "target_field": "event.type"
      , "ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.alert.category"
      ,"target_field": "message"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.alert.action"
      ,"target_field": "event.outcome"
      ,"type": "string"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.alert.severity"
      ,"target_field": "event.severity"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.flow.pkts_toclient"
      ,"target_field": "destination.packets"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.flow.pkts_toserver"
      ,"target_field": "source_ecs.packets"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.flow.bytes_toclient"
      ,"target_field": "destination.bytes"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , {"convert":
      {"field": "suricata.eve.flow.bytes_toserver"
      ,"target_field": "source_ecs.bytes"
      ,"type": "integer"
      ,"ignore_missing": true
      }
    }
  , { "script":
      { "lang": "painless"
      , "source": "long getOrZero(def map, def key) { if(map!=null && map[key]!=null) { return map[key]; } return 0; } def network=ctx['network'], source=ctx['source_ecs'], dest=ctx['destination']; def sp=getOrZero(source,'packets'), sb=getOrZero(source,'bytes'), dp=getOrZero(dest,'packets'), db=getOrZero(dest,'bytes'); if(sb+db+sp+dp > 0){if (network==null){network=new HashMap(); ctx['network']=network; } if(sb+db>0) network['bytes'] = sb+db; if(sp+dp>0) network['packets'] = sp+dp; }"
      }
    }
  , {"date":
      {"field": "suricata.eve.flow.start"
      ,"target_field": "event.start"
      ,"formats": ["ISO8601"]
      ,"ignore_failure": true
      }
    }
  , {"set":
      {"field": "event.end"
      ,"value": "{{@timestamp}}"
      }
    }
  , { "script":
      { "lang": "painless"
      , "source": "Instant ins(def d){try{return Instant.parse(d);}catch(Exception e){return null;}}def ev=ctx['event'];if(ev!=null){def start=ins(ev['start']); def end=ins(ev['end']); if(start!=null && end!=null && !start.isAfter(end)) {ev['duration'] = Duration.between(start,end).toNanos();}}"
      }
    }
  , { "lowercase":
      { "field": "suricata.eve.proto"
      , "target_field": "network.transport"
      , "ignore_missing": true
      }
    }
  , { "lowercase":
      { "field": "suricata.eve.app_proto"
      , "target_field": "network.protocol"
      , "ignore_missing": true
      }
    }
  , { "user_agent":
      { "field": "user_agent.original"
      , "target_field": "user_agent"
      , "ignore_missing": true
      , "ecs": false
      }
    }
  , { "rename":
      { "field": "user_agent.os"
      , "target_field": "user_agent.temp_os"
      , "ignore_missing": true
      }
    }
  , { "rename":
      { "field": "user_agent.temp_os"
      , "target_field": "user_agent.os.full_name"
      , "ignore_missing": true
      }
    }
  , { "rename":
      { "field": "user_agent.os_name"
      , "target_field": "user_agent.os.name"
      , "ignore_missing": true
      }
    }
  , { "rename":
      { "field": "user_agent.os_version"
      , "target_field": "user_agent.os.version"
      , "ignore_missing": true
      }
    }
  , { "rename":
      { "field": "user_agent.os_major"
      , "target_field": "user_agent.os.major"
      , "ignore_missing": true
      }
    }
  , { "rename":
      { "field": "user_agent.os_minor"
      , "target_field": "user_agent.os.minor"
      , "ignore_missing": true
      }
    }

  , { "geoip":
      { "field": "source_ecs.ip"
      , "target_field": "source_ecs.geo"
      , "ignore_missing": true
      }
    }
  , { "geoip":
      { "field": "destination.ip"
      , "target_field": "destination.geo"
      , "ignore_missing": true
      }
    }

  ]
, "on_failure":
  [ { "set" :
      { "field" : "error.message"
      , "value" : "{{ _ingest.on_failure_message }}"
      }
    }
  ]
}
