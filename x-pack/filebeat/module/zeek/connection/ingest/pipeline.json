{
  "description": "Pipeline for normalizing Zeek conn.log",
  "processors": [
    {
      "set": {
        "field": "event.created",
        "value": "{{_ingest.timestamp}}"
      }
    },
    {
      "date": {
        "field": "zeek.connection.ts",
        "formats": ["UNIX"]
      }
    },
    {
      "remove": {
        "field": "zeek.connection.ts"
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "ctx.event.duration = Math.round(ctx.temp.duration * params.scale)",
        "params": {
          "scale": 1000000000
        },
        "if": "ctx.temp?.duration != null"
      }
    },
    {
      "remove": {
        "field": "temp.duration",
        "ignore_missing": true
      }
    },
    {
      "set": {
        "field": "event.id",
        "value": "{{zeek.session_id}}",
        "if": "ctx.zeek.session_id != null"
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "if (ctx.zeek.connection.local_orig) ctx.tags.add(\"local_orig\");",
        "if": "ctx.zeek.connection.local_orig != null"
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "if (ctx.zeek.connection.local_resp) ctx.tags.add(\"local_resp\");",
        "if": "ctx.zeek.connection.local_resp != null"
      }
    },
    {
      "set": {
        "field": "source.ip",
        "value": "{{source.address}}"
      }
    },
    {
      "set": {
        "field": "destination.ip",
        "value": "{{destination.address}}"
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "if (ctx.zeek.connection.local_orig == true && ctx.zeek.connection.local_resp == true) {ctx.network.direction = \"internal\"} else if (ctx.zeek.connection.local_orig == true && ctx.zeek.connection.local_resp == false) {ctx.network.direction = \"outbound\"} else if (ctx.zeek.connection.local_orig == false && ctx.zeek.connection.local_resp == true) {ctx.network.direction = \"inbound\"} else {ctx.network.direction = \"external\"}"
      }
    },
    {
      "geoip": {
        "field": "destination.ip",
        "target_field": "destination.geo"
      }
    },
    {
      "geoip": {
        "field": "source.ip",
        "target_field": "source.geo"
      }
    },
    {
      "script": {
        "source": "if (ctx.zeek.connection.state.code == \"S0\") {ctx.zeek.connection.state.msg = \"Connection attempt seen, no reply.\"} else if (ctx.zeek.connection.state.code == \"S1\") {ctx.zeek.connection.state.msg = \"Connection established, not terminated.\"} else if (ctx.zeek.connection.state.code == \"SF\") {ctx.zeek.connection.state.msg = \"Normal establishment and termination. Note that this is the same symbol as for state S1. You can tell the two apart because for S1 there will not be any byte counts in the summary, while for SF there will be.\"} else if (ctx.zeek.connection.state.code == \"REJ\") {ctx.zeek.connection.state.msg = \"Connection attempt rejected.\"} else if (ctx.zeek.connection.state.code == \"S2\") {ctx.zeek.connection.state.msg = \" Connection established and close attempt by originator seen (but no reply from responder).\"} else if (ctx.zeek.connection.state.code == \"S3\") {ctx.zeek.connection.state.msg = \"Connection established and close attempt by responder seen (but no reply from originator).\"} else if (ctx.zeek.connection.state.code == \"RSTO\") {ctx.zeek.connection.state.msg = \"Connection established, originator aborted (sent a RST).\"} else if (ctx.zeek.connection.state.code == \"RSTR\") {ctx.zeek.connection.state.msg = \"Responder sent a RST.\"} else if (ctx.zeek.connection.state.code == \"RSTOS0\") {ctx.zeek.connection.state.msg = \"Originator sent a SYN followed by a RST, we never saw a SYN-ACK from the responder.\"} else if (ctx.zeek.connection.state.code == \"RSTRH\") {ctx.zeek.connection.state.msg = \"Responder sent a SYN ACK followed by a RST, we never saw a SYN from the (purported) originator.\"} else if (ctx.zeek.connection.state.code == \"SH\") {ctx.zeek.connection.state.msg = \"Originator sent a SYN followed by a FIN, we never saw a SYN ACK from the responder (hence the connection was 'half' open).\"} else if (ctx.zeek.connection.state.code == \"SHR\") {ctx.zeek.connection.state.msg = \"Responder sent a SYN ACK followed by a FIN, we never saw a SYN from the originator.\"} else if (ctx.zeek.connection.state.code == \"OTH\") {ctx.zeek.connection.state.msg = \"No SYN seen, just midstream traffic (a 'partial connection' that was not later closed).\"}"
      }
    }
  ],
  "on_failure" : [{
    "set" : {
      "field" : "error.message",
      "value" : "{{ _ingest.on_failure_message }}"
    }
  }]
}
