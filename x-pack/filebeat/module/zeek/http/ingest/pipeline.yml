description: Pipeline for normalizing Zeek http.log
processors:
- set:
    field: event.created
    value: '{{_ingest.timestamp}}'
- date:
    field: zeek.http.ts
    formats:
    - UNIX
- remove:
    field: zeek.http.ts
- geoip:
    field: destination.ip
    target_field: destination.geo
- geoip:
    field: source.ip
    target_field: source.geo
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: source.ip
    target_field: source.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: destination.ip
    target_field: destination.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- rename:
    field: source.as.asn
    target_field: source.as.number
    ignore_missing: true
- rename:
    field: source.as.organization_name
    target_field: source.as.organization.name
    ignore_missing: true
- rename:
    field: destination.as.asn
    target_field: destination.as.number
    ignore_missing: true
- rename:
    field: destination.as.organization_name
    target_field: destination.as.organization.name
    ignore_missing: true
- user_agent:
    field: user_agent.original
    ignore_missing: true
- lowercase:
    field: "event.action"
    ignore_missing: true
- set:
    field: event.outcome
    value: success
    if: "ctx?.http?.response?.status_code != null && ctx.http.response.status_code < 400"
- set:
    field: event.outcome
    value: failure
    if: "ctx?.http?.response?.status_code != null && ctx.http.response.status_code >= 400"
- append:
    field: related.ip
    value: "{{source.ip}}"
    if: "ctx?.source?.ip != null"
- append:
    field: related.ip
    value: "{{destination.ip}}"
    if: "ctx?.destination?.ip != null"
- append:
    field: related.user
    value: "{{url.username}}"
    if: "ctx?.url?.username != null"
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
