// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded zlib format compressed contents of module/aws.
func AssetAws() string {
	return "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"
}
