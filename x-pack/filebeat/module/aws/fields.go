// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
