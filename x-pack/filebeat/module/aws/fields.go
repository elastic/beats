// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
