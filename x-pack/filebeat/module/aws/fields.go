// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
