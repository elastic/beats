// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
