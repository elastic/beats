// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
