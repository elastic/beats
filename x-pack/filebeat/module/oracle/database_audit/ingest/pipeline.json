{
  "description": "Pipeline for parsing Oracle Audit logs",
  "processors": [
    {
      "set": {
        "field": "event.ingested",
        "value": "{{_ingest.timestamp}}"
      }
    },
    {
      "set": {
        "field": "event.action",
        "value": "database_audit"
      }
    },
    {
      "set": {
        "field": "event.kind",
        "value": "event"
      }
    },
    {
      "set": {
        "value": "database",
        "field": "event.category"
      }
    },
    {
      "set": {
        "value": "access",
        "field": "event.type"
      }
    },
    {
      "set": {
        "value": "success",
        "field": "event.outcome"
      }
    },
    {
      "grok": {
        "field": "message",
        "patterns": [
          "%{GREEDYDATA:tmp_timestamp}\\\nLENGTH : '%{GREEDYDATA:LENGTH}'\\\n(?m)%{GREEDYDATA:audit}",
          "%{GREEDYDATA:tmp_timestamp}\\\nLENGTH: \"%{GREEDYDATA:LENGTH}\"\\\n(?m)%{GREEDYDATA:auth}"
        ]
      }
    },
    {
      "gsub": {
        "field": "auth",
        "pattern": "\" ",
        "replacement": "\"\\|",
        "ignore_missing": true
      }
    },
    {
      "kv": {
        "field": "audit",
        "field_split": "\\\n(?=[a-zA-Z])",
        "value_split": ":\\S\\d+\\S(?= ')",
        "prefix": "oracle.database_audit.",
        "trim_key": " ",
        "trim_value": " '",
        "if": "ctx?.audit != null && ctx?.auth == null"
      }
    },
    {
      "kv": {
        "field": "auth",
        "field_split": "\\|",
        "value_split": ":\\S\\d+\\S(?= \")",
        "prefix": "oracle.database_audit.",
        "trim_key": " ",
        "trim_value": "\" ",
        "if": "ctx?.auth != null"
      }
    },
    {
      "rename": {
        "field": "auth",
        "target_field": "audit",
        "ignore_missing": true
      }
    },
    {
      "grok": {
        "field": "log.file.path",
        "patterns": [
          "%{BASE10NUM:process.pid}\\_%{BASE10NUM}\\.aud(\\.log)?$"
        ]
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "ctx.oracle.database_audit = ctx.oracle.database_audit.entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey().toLowerCase(), Map.Entry::getValue));",
        "if": "ctx?.oracle?.database_audit != null"
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "ctx.oracle.database_audit = ctx?.oracle?.database_audit.entrySet().stream().collect(Collectors.toMap(e -> e.getKey().replace(' ', '_'), e -> e.getValue()));",
        "if": "ctx?.oracle?.database_audit != null"
      }
    },
    {
      "script": {
        "lang": "painless",
        "source": "ctx.oracle.database_audit = ctx?.oracle?.database_audit.entrySet().stream().collect(Collectors.toMap(e -> e.getKey().replace('$', '_'), e -> e.getValue()));",
        "if": "ctx?.oracle?.database_audit != null"
      }
    },
    {
      "grok": {
        "field": "oracle.database_audit.comment$text",
        "patterns": [
          "Authenticated by: DATABASE; Client address: \\(ADDRESS=\\(PROTOCOL=%{WORD:network.transport}\\)\\(HOST=%{IP:source.ip}\\)\\(PORT=%{INT:source.port}\\)\\)"
        ],
        "ignore_missing": true
      }
    },
    {
      "script": {
        "source": "def x = ctx.oracle.database_audit.action_number;\nif (x == 100) {\n    ctx.oracle.database_audit.action = \"LOGON\";\n}\nif (x == 101) {\n    ctx.oracle.database_audit.action = \"LOGOFF\";\n}\nif (x == 102) {\n    ctx.oracle.database_audit.action = \"LOGOFF BY CLEANUP\";\n}",
        "if": "[100, 101, 102].contains(ctx?.oracle?.database_audit?.action_number)"
      }
    },
    {
      "append": {
        "field": "event.category",
        "value": [
          "authentication"
        ],
        "if": "(ctx?.oracle?.database_audit?.action == '100' && ['0', '1017'].contains(ctx?.oracle?.database_audit?.returncode)) || ['101', '102'].contains(ctx?.oracle?.database_audit?.action)"
      }
    },
    {
      "append": {
        "field": "event.action",
        "value": [
          "logon-failed"
        ],
        "if": "ctx?.oracle?.database_audit?.action == '100' && ctx?.oracle?.database_audit?.returncode == '1017'"
      }
    },
    {
      "append": {
        "field": "event.action",
        "value": [
          "logged-in"
        ],
        "if": "ctx?.oracle?.database_audit?.action == '100' && ctx?.oracle?.database_audit?.returncode == '0'"
      }
    },
    {
      "append": {
        "field": "event.action",
        "value": [
          "logout"
        ],
        "if": "['101', '102'].contains(ctx?.oracle?.database_audit?.action)"
      }
    },
    {
      "set": {
        "field": "event.outcome",
        "value": "failure",
        "if": "ctx?.oracle?.database_audit?.action == '100' && ctx?.oracle?.database_audit?.returncode == '1017'"
      }
    },
    {
      "gsub": {
        "field": "oracle.database_audit.action",
        "pattern": "\\n",
        "replacement": "",
        "if": "ctx?.oracle?.database_audit?.action != null"
      }
    },
    {
      "gsub": {
        "field": "oracle.database_audit.action",
        "pattern": "\\s{2,}",
        "replacement": " ",
        "if": "ctx?.oracle?.database_audit?.action != null"
      }
    },
    {
      "trim": {
        "field": "oracle.database_audit.action_number",
        "ignore_missing": true
      }
    },
    {
      "script": {
        "if": "ctx?.oracle?.database_audit != null",
        "source": "void handleMap(Map map) {\n  for (def x : map.values()) {\n    if (x instanceof Map) {\n        handleMap(x);\n    } else if (x instanceof List) {\n        handleList(x);\n    }\n  }\n  map.values().removeIf(v -> v instanceof String && v.isEmpty() == true);\n}\nvoid handleList(List list) {\n  for (def x : list) {\n      if (x instanceof Map) {\n          handleMap(x);\n      } else if (x instanceof List) {\n          handleList(x);\n      }\n  }\n}\nhandleMap(ctx);\n",
        "lang": "painless"
      }
    },
    {
      "remove": {
        "field": [
          "@timestamp"
        ],
        "ignore_missing": true
      }
    },
    {
      "date": {
        "target_field": "@timestamp",
        "formats": [
          "EEE MMM [ d][dd] HH:mm:ss uuuu XXX"
        ],
        "field": "tmp_timestamp"
      }
    },
    {
      "grok": {
        "patterns": [
          "%{ISO8601_TIMEZONE:event.timezone}$"
        ],
        "field": "tmp_timestamp"
      }
    },
    {
      "rename": {
        "ignore_missing": true,
        "field": "oracle.database_audit.privilege",
        "target_field": "user.roles"
      }
    },
    {
      "rename": {
        "field": "LENGTH",
        "target_field": "oracle.database_audit.length",
        "ignore_missing": true
      }
    },
    {
      "rename": {
        "ignore_missing": true,
        "field": "oracle.database_audit.client_user",
        "target_field": "client.user.name"
      }
    },
    {
      "rename": {
        "field": "oracle.database_audit.client_address",
        "target_field": "client.address",
        "ignore_missing": true
      }
    },
    {
      "rename": {
        "target_field": "server.address",
        "ignore_missing": true,
        "field": "oracle.database_audit.userhost"
      }
    },
    {
      "rename": {
        "field": "oracle.database_audit.database_user",
        "target_field": "server.user.name",
        "ignore_missing": true
      }
    },
    {
      "convert": {
        "field": "oracle.database_audit.length",
        "type": "long",
        "ignore_missing": true,
        "if": "ctx?.oracle?.database_audit != null"
      }
    },
    {
      "grok": {
        "patterns": [
          "(?:%{IP:client.ip}|%{GREEDYDATA:client.domain})"
        ],
        "ignore_failure": true,
        "ignore_missing": true,
        "field": "client.address"
      }
    },
    {
      "grok": {
        "patterns": [
          "(?:%{IP:server.ip}|%{GREEDYDATA:server.domain})"
        ],
        "ignore_failure": true,
        "ignore_missing": true,
        "field": "server.address"
      }
    },
    {
      "rename": {
        "field": "oracle.database_audit.sessionid",
        "target_field": "oracle.database_audit.session_id",
        "ignore_missing": true
      }
    },
    {
      "rename": {
        "ignore_missing": true,
        "field": "oracle.database_audit.client_terminal",
        "target_field": "oracle.database_audit.client.terminal"
      }
    },
    {
      "rename": {
        "field": "oracle.database_audit.client_address",
        "target_field": "oracle.database_audit.client.address",
        "ignore_missing": true
      }
    },
    {
      "rename": {
        "field": "oracle.database_audit.database_user",
        "target_field": "oracle.database_audit.database.user",
        "ignore_missing": true
      }
    },
    {
      "rename": {
        "field": "oracle.database_audit.userhost",
        "target_field": "oracle.database_audit.database.host",
        "ignore_missing": true
      }
    },
    {
      "rename": {
        "field": "oracle.database_audit.dbid",
        "target_field": "oracle.database_audit.database.id",
        "ignore_missing": true
      }
    },
    {
      "rename": {
        "ignore_missing": true,
        "field": "oracle.database_audit.entry_id",
        "target_field": "oracle.database_audit.entry.id"
      }
    },
    {
      "remove": {
        "field": [
          "tmp_timestamp",
          "audit",
          "message"
        ],
        "ignore_missing": true
      }
    }
  ],
  "on_failure": [
    {
      "set": {
        "field": "error.message",
        "value": "{{ _ingest.on_failure_message }}"
      }
    }
  ]
}
