// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package threatintel

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "threatintel", asset.ModuleFieldsPri, AssetThreatintel); err != nil {
		panic(err)
	}
}

// AssetThreatintel returns asset data.
// This is the base64 encoded zlib format compressed contents of module/threatintel.
func AssetThreatintel() string {
	return "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"
}
