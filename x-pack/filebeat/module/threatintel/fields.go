// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package threatintel

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "threatintel", asset.ModuleFieldsPri, AssetThreatintel); err != nil {
		panic(err)
	}
}

// AssetThreatintel returns asset data.
// This is the base64 encoded gzipped contents of module/threatintel.
func AssetThreatintel() string {
	return "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"
}
