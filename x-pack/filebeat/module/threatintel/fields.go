// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package threatintel

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "threatintel", asset.ModuleFieldsPri, AssetThreatintel); err != nil {
		panic(err)
	}
}

// AssetThreatintel returns asset data.
// This is the base64 encoded zlib format compressed contents of module/threatintel.
func AssetThreatintel() string {
	return "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"
}
