// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package cisco

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "cisco", asset.ModuleFieldsPri, AssetCisco); err != nil {
		panic(err)
	}
}

// AssetCisco returns asset data.
// This is the base64 encoded zlib format compressed contents of module/cisco.
func AssetCisco() string {
	return "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"
}
