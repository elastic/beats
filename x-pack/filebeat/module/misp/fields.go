// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package misp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "misp", asset.ModuleFieldsPri, AssetMisp); err != nil {
		panic(err)
	}
}

// AssetMisp returns asset data.
// This is the base64 encoded gzipped contents of module/misp.
func AssetMisp() string {
	return "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"
}
