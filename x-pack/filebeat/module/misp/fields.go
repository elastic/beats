// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package misp

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "misp", asset.ModuleFieldsPri, AssetMisp); err != nil {
		panic(err)
	}
}

// AssetMisp returns asset data.
// This is the base64 encoded gzipped contents of module/misp.
func AssetMisp() string {
	return "eJzkPF1v2zqW7/dXnLe2gOy9nWKAbYBdIGhngDx0WjTdOwssFgZNHUucUDxaknLq/fULfkgWZUWR3TiJdwrc20SUzhd5PnlOF3CHuyuohKl/A7DCSryCLze3334DyNFwLWorSF3Bv/8GAPCF8kYibEhDyVQuhSrAlhqZBaE2pCvm3oaNpspDWf4GsBEoc3Plv1+AYhV2+Nwfu6vxCgpNTftkBK/781cPZw97BPEyvtxH2UfLrGX8blUza1Grbrlj/Nqvw7eDdVOStlctCbZkFiRa2FEDxpLGCBkiZNP79AFuehzVmrYiRzBNXZO2XrqmRi42OyffvmDZmho7RLbsM3IgzTF59JZa0Yg8IU3iFuUVcNKYPA/w73B3Tzr9YoJPgJsclRUbgRpoA7bE/eblgjNLejlFnPv/Ocn7G6uwJSwV7iRZPZhj1OFPiyrHfIRCiz/tfPI+7xdPoPJOSLniJRNqVZfMoEmgh7N1BcZqoYoj2Tha0D9K9PSApwc8PW/NO7AE96XgJdhSmAFzbpc1mppUbkYYbdnkrKqZKEa0+tPhyqP63ELra995lbrFeJnq3FL/atR4FkEvqMCz6GNSHCjsU9N2LZ2SMSu26LEaaAzmTiNF2OVdUMpZBG+ENnZlEEfl+cA+58zicSbEigqD1nrSWgWHe2YCCeBIyEAo+P7XTx8+fPgY7dwk8ZK9NO2OgpNIp/U/kLstPCPpwgTDAzluhELjj3FL/htn8UTF9A4KYjLbU5Q5uEJjDtRYThVmQBqECscXcLNBPsZcZ9ep0QZXtFkxPlDU1r77N5xiXQ/feNTOj9jhDlrAt5xn9q8PyADnyVSEApbdoQIUtkTtlKvWuEVl/RvB3SXgyL8U3Z77cf+e50IYd0JqTYVGc5kuYyivF3UdTjMdjjHjdySpL+hUZtC5323Hn90dqtPN4coJatTCn6k+LVLgTIHGWqPx2sFtw6TPErYib5g0znoUTIn/9cj8r+GwmyzVIGbgHqV0f3PJjEHj5DIL0kWq082BwF+dGs0i8QXVZxZ97cFe+VN1bmG6Tx15UTv2cUOnMAHEGk0GuCyWmfMU+1PuDnX/mC9hgORrjQr+IM7WsOh4W3jeFrSF6XhpjfLY4PQkKUhhrJOCJolmTAg1ameAzBJS/vAnq2pn1IZQP/3l6xRrBrkl/ay8RZRj3K1RkioMWFoO9kvljbF6twgfP7ZhnJRl3K7Gc9qnVzHHXsSZeIi3uKiYkBnUJSkE1VRr1Bmg5ct3PlFO2J9yYsrqxghSK4N2xJO1y3CbLJ/gzhJQc0NClX7mA8LgSjAHg37bWb5FbVzcvMaSbQVpYCp3kR81mqOBe2FL4FRVpNKzXWuqUVvRaoQw7qAI3AbLu0YgzUs0VjOLOax3wMAIVUhMLcJFOrvx7Xh9Hm82nS/p9mYT+WrqEccQPV2TmKD7l3P7VPvPWJx4XiZOrlIUxI6OF473OKUoygA4IAzHfMhJ5mmSuwzuHatMO55xB1b7+qwlyGmSmdZCrzyqM3MlTFJ16dtvJiOzzPZr6Om22V0tOJNyB/ek78x0FBjqDIuWwYUHv6DtlDRi8WdVkRXb54ks2nqTRmZIZbBH7VO5utE1GXRuVah8RCizhLAH+ogADHJSeSqC85/1DmuUgumLwfTlYM4riO5il8l7lnjW9k75YOGEKCwCmRl/xbdD2NUmUj9+fOvCJSYNwZ2iewXMONIFF9QY4JSjj8L2jwxtrAM2KDJo3KCL2QlYKMaxqlefM6hd5CWUXzc7Y7HKoDGN10ROW9TWWyAX4jm99lVRHxYmWDhVtaZKmHDd7oPqTfCGTAq7y/yHhfY/ugByy4Rka+HWWie/FdyK6o1xDoENSyV1LQXvnRkXWDLrsAWi4e3X23d+YQNkS9T3wjgJKfLGkjTkwuimti2BAdtFhpYHZ+zVBZVzKHzBcHIOeQ+XDs5RPIlGCdbozmdbMMmn7V78aOFJXdD24G2We4OwZvwuJ9LZmmyW52SyXFNdo87wZy1J2MWdsNkd7iQVBepMM2Wo8p8OAGqsyOKCcY7GLKymfzCVdV44QgsOTlPRoMv6G6f0i846aSLr0A0gG64R1YKz2jYaM1Pv/NsRxVboxmT3pKupLXttbQRt3WTYTmB8BaEXCXVuQBnLFEdfYl4H3ZqoLSiyI27sb+nTs/uwa48xuDBOVeXdg/bEhdKKUEk7wRa9AjubUaKswZ0aJ5roNfxagsBZdOUiSqgcvbc/bv4Tvvq7OwNvbz9/NW7p9vtX8y7eSbWNDSzPRYw/mWJyZ8S+DpFgUGRbUr0zjBGsKIT7NtwTjhqLi3EZbosmzZ1pKheqnlstrmGtBW76LwUPwtzxiUTMJvq5XEhbJYyRzyzaWGPLZ6rPqn5vmEf71ulCzCkfpTSc75XGzbNQO6K/LpANChyTegzmw9cLnfHw4Z+PMybMYejXW3X9eoem8Ufo6LsZeeNRMzn89swNlLH5MIHVcWayWIGVvm5aMctLB+ZJ2y3PHwC1/jEEQTWqxdZHNl76QToilhPaOGnfjDn3GuUzVc67/N3JyCF8TVb5qA7TLWrzgKF7Kgr/CChOIu8RW/wAib8cyh9F4wbxmB0+jrh+a1+kyuGb3lMmRb7aaKqOIOvEeqnvSk/Kb1FkzvY1MncBJydlRI4ac0daw9YShzmFy+OlFAUqjsdWVwO7jbJitBr5tPwOi40DbhWBJFWgHvA9ANeJoc/3Em5iyWLPUHvZtXNeiyphLebZEJot0QeXoeSjyCO2mgkXWISw05l0Y+OW9dKEkY043D8XSh27KQa3qNNmmjnJ0tNlwV5VWioGfdZ7JkdbrKFv+UtRlFOMtiUpftbCyKcOSyx6n4+h15bvPt42/wj3IzxWwmpcWcat4C/I3pebH9//AoEM8wtbeqOEFUzCta+gzGAceanE/zT48ry3lPwK+5+12OJivYNPbb0YJ3Ooh4ahzlKLS7Htuzz2DPoah89f4vzVQcHNdHGrryP4d9uo6k/L3+Eb0xb+DIsEilDFcmY0+1+h1LYUNfwbvHn/8V+Xf36/fP/778v3//LhT2/+e0qYCouhI50W4ppIIlPzhfh3590M+tKO1Y0LD4ZxPFsbbxqTGaHVwYzQeHT+QCvNWQ59P5rrEHvmxCZcyEyarZFRn7OTGZuv93NBcwiNSTPjaTp8dmJjhOzxTlG6L1IY1FvMVzmz7DCz/xqX4XO6fEL1MwE1swbafeOoc4HGFncmge1R3zPTMeLivXB1NShGusxeofW34BmYhpfOrEgqAnDS7SpYzTYbwTNoumu3T7s1ahihzcewURc5e7BD/GIKmg/s0ljS55trWrGfNe9YYyGUr3a3p9xF8fdC5XS/L235bewfhZMabZ6FIVT5eVkJjZWnMOPvk1Efx09A51kSVXRJnoeun79X/48lyi6v6/N5cNXmG2C+/MftD5eG+f5mTx6s0d4jKnjv9frjx49Z/A+E4rIxYjunOHvWMtw15MLPYsTSe7AhPbPRFmv9tnfN3F5IsVtzw7g9NHET5lxjTXqkH/b78PkJBjzAmGm5w8vGd1dxkhK9JGJHViwt7RN/2BD31xWkkjspS7Xgw/GO1nSz5LaDNsAS75e197ihMSJOULXRdhbOSe6MSgK9vSrrF4JztEzI8YTqYiz7cPtGDeD57+a7WcIwI7e/eG+k05ORGnXb7WUary/dBUw469NX+eGd/U3+4N1wXhbhrSz2O8WoOWsDvqydjci6jCVrj9YAXquhC99qE6GH02iJZLZtpEId+3Mm7feLtpnMOCrPdUV4nSi5Px3xzscEExF10+trp7uj9mqEi7pZS2HKcQf5pK217otea204cdELBePuQk7h28M6qmAd9oO7c0R6cPIPqqCnDA4/eD35JLX720SRkxtK2/be+kY6HScX4sT5g1v3SHqV3kde8yPvIg99Xh/STM/X/yT4v7FRxnZwcTCkdTjI0fXjJUh83+C+RzF0D162fxoX9Ut7qfHr0n6cMe2A+j7gQTfEuBVbYWzGqarRCucvuBYVLswuuBz0vwvFZFYyfoc6E+FmZcE497abyaEzat/IhSl0o6zEPFOhj9dYB9KgMrGR3CE39S6zqDXpR65zX9I5CZMcFKc/ye/+oF+65zpKHZ5lMqfrKfA9wHE6Z+/Oki0YTKM1ZjoT85OdZ6Xeq7OvMQ+nSVMxQy3Z7pEJiUSfHZgxdS5Q2SwX2o9muqgRa8eJcjpGyvhnG82M1Q23jcZFsPKkD1U4eY1pXgqL3Lbx5yK0JU2J94Unb/ry/eXBG0N1KYyNhbazM2XuhJRZV93ztVSJeYHxGZPg75iFKrwjx59+KtMgsPRcDWBXjbFQsi36psowv9yrNB9xAFOBjBxFRQqzSihRMZm5KEFXmAtn/Fm+ZYpjnoUp0ULwLNCfCaVom7RxjWnt656BSsT/JCNQQ8nuo7mMy2adeQtubGaRVVmfwqygLWpVoZp0qpcxRpV4paOHhw7jni524YSaO8w5uTBHcXRpN0kqdpkiS1qg3WXpzi8KJtTQZNaozX6x+80FOmYT/kWezP8DPAVmjao15oJbtpaTF6aXNeL1T7pJLZhn3aMW6YwtGslzQGPBdC7RmIPRLxjaOe9Yh7vz/207uwSfSI4k9unTUxJ6Ijk3kSeSIYGXWAgrKmaxmwYM2HrzJKF2sU8LTd+5h4258AJyKroXSswR7oTK2z58Iul+PGq6y330YCaeoxJMLmizMKi3gmOWDF/1ztOiYC4VcrFfvDfuhqwGMLnGOLA5mOTqD32lpeGF4cxfeL7WNHzGabiUPPsxPtx5WU00iT91t19E1UrbKSAzhrjwV1HdwPCjdE93MZ7DF86ey3O0HzuUN3510nmGPx5YPsFFJKBmD+slX4VqQyWMZXcOxbjbCBUCuev8B4NQ3EvtlyVwfhWCoYDeRHmvaeWyXcsDIn91Rm8+nRdi/R5jqIdtYnHqh/8LAAD//+qMyR4="
}
