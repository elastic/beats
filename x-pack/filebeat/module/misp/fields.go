// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package misp

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "misp", asset.ModuleFieldsPri, AssetMisp); err != nil {
		panic(err)
	}
}

// AssetMisp returns asset data.
// This is the base64 encoded gzipped contents of module/misp.
func AssetMisp() string {
	return "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"
}
