// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package windows

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "windows", asset.ModuleFieldsPri, AssetWindows); err != nil {
		panic(err)
	}
}

// AssetWindows returns asset data.
// This is the base64 encoded zlib format compressed contents of module/windows.
func AssetWindows() string {
	return "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"
}
