// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package windows

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "windows", asset.ModuleFieldsPri, AssetWindows); err != nil {
		panic(err)
	}
}

// AssetWindows returns asset data.
// This is the base64 encoded zlib format compressed contents of module/windows.
func AssetWindows() string {
	return "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"
}
