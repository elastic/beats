// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package zoom

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "zoom", asset.ModuleFieldsPri, AssetZoom); err != nil {
		panic(err)
	}
}

// AssetZoom returns asset data.
// This is the base64 encoded zlib format compressed contents of module/zoom.
func AssetZoom() string {
	return "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"
}
