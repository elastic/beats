// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package sessionmd

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("auditbeat", "fields.yml", asset.BeatFieldsPri, AssetFieldsYml); err != nil {
		panic(err)
	}
}

// AssetFieldsYml returns asset data.
// This is the base64 encoded zlib format compressed contents of fields.yml.
func AssetFieldsYml() string {
	return "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"
}
