// tag::deb[]

The DEB package includes a service unit for Linux systems with systemd. On these
systems, you can manage {agent} by using the usual systemd commands.

// tag::stop-command[]
Use `systemctl` to stop the agent:

[source,shell]
----
systemctl stop elastic-agent
----

Otherwise, use:

[source,shell]
----
sudo service elastic-agent stop
----

NOTE: {agent} will restart automatically if the system is rebooted.

// end::stop-command[]

// end::deb[]

// tag::rpm[]
The RPM package includes a service unit for Linux systems with systemd. On these
systems, you can manage {agent} by using the usual systemd commands.

include::stop.asciidoc[tag=stop-command]

// end::rpm[]

// tag::mac[]
// tag::kill-process[]
Get the process ID (PID) of the `elastic-agent` process:

[source,shell]
----
ps | grep elastic-agent <1>
----
<1> Make sure you list processes as the root user.

Then kill the process, replacing the PID in this example with the PID from
the grep command:

[source,shell]
----
kill -9 90682
----

NOTE: {agent} will restart automatically if the system is rebooted.

// end::kill-process[]
// end::mac[]

// tag::linux[]
include::stop.asciidoc[tag=kill-process]
// end::linux[]

// tag::win[]

If you installed {agent} as a service, stop the service. 
[source,shell]
----
Stop-Service elastic-agent
----

If necessary, use Task Manager on Windows to stop {agent}. This will kill the
`elastic-agent` process and any sub-processes it created (such as {beats}).

NOTE: {agent} will restart automatically if the system is rebooted.

// end::win[]
