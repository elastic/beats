name: Metricbeat
cmd: metricbeat
args: ["-E", "setup.ilm.enabled=false", "-E", "setup.template.enabled=false", "-E", "management.mode=x-pack-fleet", "-E", "management.enabled=true", "-E", "logging.level=debug"]
artifact: beats/metricbeat
post_install:
  - move_file:
      path: "modules.d/system.yml"
      target: "modules.d/system.yml.disabled"
rules:
- fix_stream: {}
- inject_index:
    type: metrics

- inject_stream_processor:
    on_conflict: insert_after
    type: metrics

- rename:
    from: inputs
    to: inputsstreams

- map:
    path: inputsstreams
    rules:
    - copy_all_to_list:
        to: streams
        on_conflict: noop
        except: ["streams", "id", "enabled", "processors"]
    - copy_to_list:
        item: processors
        to: streams
        on_conflict: insert_before

- extract_list_items:
    path: inputsstreams
    item: streams
    to: inputs

- filter_values_with_regexp:
    key: type
    re: ^.+/metrics$
    selector: inputs

- filter_values:
    selector: inputs
    key: enabled
    values:
    - true

- map:
    path: inputs
    rules:
    - translate_with_regexp:
        path: type
        re: ^(?P<type>.+)/metrics$
        with: $type
    - rename:
        from: type
        to: module
    - make_array:
        item: metricset
        to: metricsets
    - remove_key:
        key: metricset
    - remove_key:
        key: enabled
    - remove_key:
        key: dataset
    - remove_key:
        key: dataset.name
    - remove_key:
        key: dataset.namespace
    - remove_key:
        key: use_output

- copy:
    from: inputs
    to: metricbeat

- rename:
    from: metricbeat.inputs
    to: modules

- filter:
    selectors:
    - metricbeat
    - output
    - keystore

when: HasItems(%{[metricbeat.modules]}) && HasNamespace('output', 'elasticsearch',
  'redis', 'kafka', 'logstash')
