# Fleet enrollment of the elastic agent
fleet:
  # Enroll the agent if not already enrolled
  enroll: true
  # Force the fleet setup and agent enrollment, although the agent is already enrolled
  force: false
  # Allow insecure connection to Kibana (insecure HTTP or un-verified HTTPS)
  insecure: true
  # Token name to use for fetching token from Kibana
  #token_name: ""
  # Token policy name to use for fetching token from Kibana
  #token_policy_name: ""
  # URL of the Fleet Server to enroll into;
  #url: "https://${HOSTNAME}:8220"

# Start and run a Fleet Server along side this Elastic Agent
fleet_server:
  # Enable to bootstrap Fleet Server
  enable: true
  # Fleet Server HTTP binding host (overrides the policy)
  host: "0.0.0.0"
  # expose Fleet Server over HTTP (not recommended; insecure)
  #insecure_http: false
  # policy ID for Fleet Server to use for itself ("Default Fleet Server policy" when undefined)
  # the policy ID needs to be kept in sync with `xpack.fleet.agentPolicies` in the kibana.yml
  policy_id: "5a12d34e-0162-4c2b-9f57-841bf90ffb02"
  #policy_id: "elastic-agent-on-cloud"
  # name of policy for the Fleet Server to use for itself
  #policy_name: ""
  # Fleet Server HTTP binding port (overrides the policy)
  port: 8220

# This prepares the Fleet plugin that exists inside of Kibana. This must either be enabled here or
# done externally before Fleet Server will actually successfully start.
kibana:
  fleet:
    # enables the Fleet plugin
    setup: true
    host: http://localhost:5601
    username: elastic
    password: changeme

  retry_sleep_duration: 10s
  retry_max_count: 60

