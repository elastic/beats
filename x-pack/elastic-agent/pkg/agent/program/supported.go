// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
