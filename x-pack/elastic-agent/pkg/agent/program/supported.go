// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
