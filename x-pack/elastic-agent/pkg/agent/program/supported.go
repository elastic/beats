// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/osquerybeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
