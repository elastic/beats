// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
