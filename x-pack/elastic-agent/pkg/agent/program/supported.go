// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/osquerybeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
