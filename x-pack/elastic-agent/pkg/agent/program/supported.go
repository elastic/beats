// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
