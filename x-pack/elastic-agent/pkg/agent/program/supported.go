// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
