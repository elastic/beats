// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
