// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
