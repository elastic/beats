// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
