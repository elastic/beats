// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
