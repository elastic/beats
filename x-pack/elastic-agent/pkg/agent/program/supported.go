// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
