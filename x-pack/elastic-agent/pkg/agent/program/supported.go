// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/fleet-server.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("eJzMeVt3qzqW9fv3M85rfd3NJU4VPUY9GFIIsEO2SYKE3pBkA7bArhhfoEf/9x4SGAN2dvY+5/SufnICQte15ppz6r9+2++W9D/iXf5v++XHcfnx71XOf/vP30hul/htmyxC05+HPqcF5jTZrQlcPLrAPpFXtcbI0zByZxHylBjiNNLvvitovU1g5ZbBq7t3La+M4CTFWlhiOFHmeXiIoLfHcGEwx1OxbPNZW/WIwbuxtNRTBP2POcR7DEPFzU6Jm6m2/M0H4x8wsJUoNGrmeDyCan07nseswlMJCOuXZJu4lpLgnD8g3VdoHqbkbZssdWXmWtPSBXhHnIBTbmgRPKsYPT9a2TRxrWniOj4nIFwzYFQvmbkjhaky53km31nTJNbCyUtmKktk8us3OCVOyGm97do149gnsujmsmcgrJq5ifdmjeGZR3pwpEVvfGuazF9vx236M1TmmCqb7vQYhIeXzNxjOCkYSLaeU7bf+MbsdfoX92maRHCycUGaUqXky9dks9Ta7x1l71qME2DXDPA11cKU5v7Wqzaz3/5/E0jLgu22WVGOwiiAkw0Fxo4Ui+RdC9cMeTvmbGaRpm5eMpOTPDgRjR+YpdYY+irNubJc7FJaBDuc22v2tE3wtY8Sg1CzChmWu0h7f3SfIv3lKZkRYBRIN1MG0uY4QZDSgu3Iepu4mfEcQ6+KkDeZK+E+Qr4Sw+djb25HqgcpA+9H0c9cCw/YMY+xCL3X7UE8c2Wf5x0pwoeXbJrNNePELMO+bMlc6X2j+0qEAj7XzkdcGb01Kv+c5+KZO3MtU4/hZEN0Vov+FvWOItusiMaqCCpJkPM9Rj5F/7jMV/7djYHsc82AreDwTOXa7fPdcSIt5ZFWrmI4Ee335Gk7m7+afAnCNdLwjoD3NpTMU4SCrZhLf7/p9cyytl1Kc1ZfwnL+Os1YHlYxxBO3fcYALzE0VHF2z/V0RoFRM1v05ysRPO9fkm3pgvABQ38lwhy/tWngiPNLHl3Lux8Xr27TDtgV1rsUKF3L6/p2e/Oav6oqBWI/Az56XmHkHxny1hg9Z71+Phl30P6wzPnp3lr99fRkFWaFQ0MlOT+ImCLg9GhlSoJRyiPVyGN45pe9o8BW4qdt4ua92EE+j/SwilHQ7WcLpbNruk8zBic3a76dSwdvEsKW9gUOlUfXKQ2rfX4f2npws94mMZycGArq9t0HRptH1wkmFLzP7kOa0s/bmdyDFtKQPmr7PQgFJV++SQxIo/zM8bRda27vGQx7cWgqtAi5XNOlPxlzwbHbby3cY+grRPfql8wkWPSHFocI+muM/Bpp9ikODbG2vQuaEjPPy12U24coVIYx2r23T/FC5lQZoekol8ycgJCzds60CPe90lG6jscJNDTcjDmA9LZspJHmc6r7qwiZO6SVfLno1lthqB5ZHq5k265MXPcs1ngmyuhPjNeV7/553d2/674P1nhbipSE6KFCnVDpz4PlvI6hcbCSu6Wp6dNRdu7TQ/JsmSnJFwkB4QHrwXZmBX+9xOPqdZN8y6YnF9gHbJnbCPlzjDaijyNDgWhjzK1pgeE5pXqwi3SfR8hbxxbdWbl/FDlEc1vEicDhzVL3VFIEOwLfD7KdoyTum5J4ml2Rt0jxTtu/X0reKuNLsoxvSp6ANOjxCC0uZU6mfZSHKZvuGvjMTNIxl8LnzAlP85zvyeuEk9zOCAg336BIE58PWM6lbRFwgsy9LDM9ZoNze0+192xuTbP5e/NLoH2IIOMEhgdmTUqiBfwbSkoK7HVcqc1WW99jX99lanuisSKGk2KenznLw/03GPCoCAuXKyOGKPYkqOey7IQZhrbyJURlioCef4qwQxo/YBA+XEKPOfwk9luUP3qSKbgj+U5A1orqQYWhXSJdlFSZQgLGWkgxDkjzjyTH+xj6SgM5glIEqwhiRYR/k+oS3h5dcD5i/VmmBIH2aQzfI2isGDwPYDDSjNMyNFICzisGjBUBvGZPfeZnKqTeJpc501M/lW/meiCaceqnLkbpGiNTkTFVtOwVPcuzj+FC/nbwKc/ZO9HckJAnUlmc02iuClGNfYx8ZQgrXMHyXHp7Wjz/3nVc9zwPc6J7LXSLEizzqD0rXBFNeXQBPwgIufTJwN+uz/RuzbO21IqUFvAv14A0MW+1/uzcxvONUcAF+x8/H4x5+hTyh/Dn9BVGW6Zy+0C1s6CbAwi+zEvG9aK/d2pKHZN38ds9Px9xS+Hk3/39lnGBuaC2LcWSedIfz7VMka8HZhk1A4GkylQPNjF8GI0TahIH9GBNxfyAf/qkHxU700fXCTd0OpxLQ6uDY6SVYh0JBsY61sJq1M+eaPRI83ATI39FtfORCQotYko+e75df2XUS+SL7x5dx5+Iby778CMlkiGfo4vKmf74d0N1ec0fmocl0TGXpfptkOMNZQJCZtgdPs3zSUpgWAssxj9R2kfjN2oX+aIMi7gU9UbByFuNadK1hLs3OXWrVM2x2hUKVaeVuiZAnDVLGfC3o3f183X/02URVvhVbeIDpGp0zYOmD4CPTNDEYtPHoAMD9o7kXXyULmhj5/p9EenTkjphRvXwSuFBqjDHXPWp56Xf2AkUCnY10R6uzzQ7j7V/XKnKNUdKF6hn5ly/J3mo4Px8ZNf1HZ/rSI2QiM1FPwZ6saqMckr8z+vBOE6wptfYEznUtRU0f3l9JySjiPVfS6cBP8S5pNOCExwkrc7x8SUz/7pqqO+a6GYXp7jwjgI/R3VR1gbc40Y/QzGv/Om69w29652vFk6okCv5+4xpKRd41qeMvbEPfwJ93LsWqzAMdrSie7FGTytTnJepV50ST+CQtAGGLsmKL5flfcMtaNRI8q6FlVDUVu6X+ElsmXwulHj7vFG/rr0XSrY5EkuVtO6WcrUqBXVGXp+efKYKBwbUTXh9ASN31eGdEOtU4nh9f9b4oKOtX85B0tpFuyefqaQ2dTo1087zMhdBTwVFuGcMNkZoq5SsSWdSXvqa553LU2NoV5GWJKijAB216EJejDGkH7fK9Pp8SEG+LlUDRdjJkZHh+HmJGpyBvY60sKaqkVLAZdvf10+rwhe/aw0VRuaRClWX08vetSXS/ey8RkbqaE9/yHTdfgJDIt6Dkel65iRnSmwlm6V2obVD9RsDu37Vwono4xI3q1cBNTexU8wWV5WaLuOP8o5MfQVhSougkWEt1sSDZz2caaUk1UKFoekhhufyK9l5actAWFIg6e6hKztPah7Bc/3HTX81JbldYKgKqtvvX5avYVtBl5mIgQORlPZkYBBmDNIMjRxnWWqc5+NgP373ZYG/YhpXYtuoMGR86UxvMGVI+c1KnA8q/Akpgi1Gouw8H+fZ/gfw71+Cm/8LFxbDcb4q7f+qcp4vy4+M3kmuNxgqNOfr1vNpb89UzhxvF2mtN3R7Q1ZjFKjUmuwIUL5KlktboW1PBNgK/so7GiULgcYGv6kPc2SmkbYv20L8Pe/o2j8KKgZHPhMwCqzxA64me6k9n9QNhp6KK48JMGGA51Gj/WVC0cooMQqqGPptgplHqgeDq4qWh8sCMbgqGNjn6hE70lo9YEvqQQVD5bCEameNC/4p9hujxaMAGqIFMpnn+eIo+LgAqXnBS2JNhPa8eCWzq2V7P+H7nlMMJxuMkosfIHXUS2Ze1liPuPTlZnJFHe8oi6RmdMlDtMlK6CCcn3cNkeMHSZAEBy+CTgd1Hlgbb60vUYnYIbC72slpbpS33kRwvD7zu5vSZp5qSp9G1zJ3/JZ7BOOiB5Bm74n9iZfUjH0dswcOt2ufHIk+7WtpvgQ+p85CFqfOp6lkXuxaj6uL1cY3HXhWGVqM5qoHR6Sdd1RfDG3xixfUO6OBr/VT6+jOMMMQSzD7xX7VjS+AdLZjIF3RPCwwSjtv844X0BSl7OFjrrU4pj9vvntV9Eevl8aF6M4V04W4/3EvLvy8SH/Pm3M8kePL2ZOx+NYInr/Ms/3udo/aQirGeNom3kAcSSJ7iKDKh15P632OhNRFSwv8FmKu51eksRauIuRV0fh6p42RDie0IZltYuUyZ5/3r2++9rR63/2MhzbyIH6t7yb/r/HQt/kl3t3IcxzUEFlrC1lLcnHGosYIjJC+/A954kOOIb4dx9bFnyF9jiI4x21t6OrkIJfXtz5TPycH/f6gX2MVbIvhw+NQCA3WcrjE+x8RRnM5nyvRcy32EUH8Eb3Kv/dEY4J71PJ6MPl7J6J2Md0s76mod2CvYy1UBkTPEYSq5AyMiR4tg2agL4ieaHPT9rtET7LUSrUbtvpDRK8QTHj+/i5/vyB6w7afEj32GdGTCg6jT5XUL3GaaHtWF+fmerEo9mrSXDDmf7vrgv1Jqub/hHqRgf3f/+9/AgAA///49IAc")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
