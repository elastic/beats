// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
