// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
