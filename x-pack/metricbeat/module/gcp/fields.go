// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "eJzkXVtv28aXf8+nOOhLmoWj7L+72IdgUSB1tm2wcWvATl7ZIXkkTTWcYediR/n0i7nwKpKiJJKOs8mTJXLmd+4XzqFeww73b2GT5C8ANNUM38LL34TYMIRrJkwKt4zotZDZyxcAEhkShW8hRk1eAKSoEklzTQV/Cz+/AAD47foWMpEahi8A1hRZqt66L14DJxkWW9l/ep/bv6UwxSf16+v3MBIjU+XHxa0i/hsTXfu4A0/xz+PiVAtJ+QYy1JIm6nDlNoQ6DKNQrv6t8VUvFPvPfxj5K3a4fxQy7Vw4Q01Soslci1tSZ1lb7ZXGbLKli2V/KDH7/z8cF31j3VSY2Clgx7dRRvKc8k249IfG4gMKdBM0Rm+JBonaSI4prKXIoGEv724/wD8G5X51QFZMGaN8U1u2bVBNIuumcYCusekvfuVC1iP1ORHK86RTfF1yb2G4Fkq7qxVQnjCTIkjcGEbkFWjy5QpI+rdROkOur4DwFKQwPLXMRymFXHWiovxB0ASjTHC9PRdZwRCJuZAa3Frd2+VSON2g7fVG73XrV4AP70GsQW+xEHSxe4xM8I0CLbohaKEJ69x9zQRpW1Bj73t7a7kfyYTh+lDxEpHlRuMMinftVz5R8ShXmvCkW+/am/ctVl9wTSU+EtZm4vCiQwvXF0+lyHNMo3ivUUWJY/EDYaYNv7mjFXnPBQ12fuCJyKzw3PLFZhDvnSYNEHYIMCfJDvWMEMMGo0GW+pebWSQjUaF8wDRKhEQ1guKDwNBL8x8mi1Fag3Zrl1uB4I7mrXV9wdx71LmJ1WjK6FdiV58U6L0VgCSJ/asARBgTCdGYwvXtJx+xqILESIlcsz1QbnOZgpRx8BXZYKRphpOi/2SXhbWQFnNgNeWgMBE8Vb0KlVK1m0mjyFyGfm3XsxLyhm538ulDDzEtUCKfEZKF4BF9+BNEjtLp6SH/66geJdW4DK/sVho5aHGcWR7W/Nxy+xxhV2k8+aDhDMJoQPhdPLrrnN1+voEtURAjcpCGc8o3V2OMh6N+FHIu+0mQPswWLA9syO/m7cjypJ+2DoxzxcsSZREvz8OpkOtl+Gh3AvGA8jRsi/FvHL6q4M2E3K9iGwUFn0fNSRYp+nVMLBxLtI3jrhAIWbyl31Nibdrb+wrut1SFZNuGdMHZHsgDoYzEzMfRzzehRvVVh/WZ9mb8CdYko2y/OkqYUZhOSNiNJ6LKPuz6S9KkHkkeUT6TKVm5HUjMhVLKA86NQaW97VOtQDxyhwlUThJciH5h5vIlnQwoInbp8DwPtJidA2WfcYdH69q+KrhB38u/Njv8CxLBNaFcuX2zejPoEUElkuRlO+j6Fu40SXappNZnvbv9UNztejSHXUhLob3rt//9n5eDJXRV0LvlUL44lNuhXxvsAR2UZqdW4RUmiVGtTFCYHKjPYHnQjAEmM4xo+oCuhnHr2oKlKhOcGwkVaMmPWv6zgjuS5QxTwAeUe/ivfy+/6aGA0YzqwVryBPy3nwJOt2pRmZVAz0VXLyPzg+7qKQi7CkeL2uMdWzQG43XsgoRwLjTglwQxhX8BUUFwzS/s/W6XASbAu7VGCcp+7xLblGhiAdl1HqiihWcwuXUGP/3nUf5J/Mf6oInkW/UHKkmHHTrUcjpC//XTaELnVZWK2FN6DG11gRhhI5Fol9sR3lKausaEDRfQmYKRmG8xQ0lYpLSQZHNpv7JhySsXjXuE0hl7GyL5KBLCKoQQEAbrpdxn9qd7mYLL86ALq1+AzyWn84DzWncqtGbV8Q1pSMi7u8PPBRJYIg5ldezPLBSN8NC5TZLWxDC9ctn42TKuolDu+qh2SXUFsRQ75JDaPNuGon2OV5CRv4V0T+EyytsP36Z2ADdFHeTt/Rz1e/6BMWjxdxUbJ/XEQUsuc7wSlSay25J6gfRYkS1cVEtVt0QVe2C6gL62msaHZdSAejaVk2ZYq4e8Hh7SVu8fj+N92UgWKX5DBWh46kVihpMn+bW1awl/MGDLh9PjaB3uvB6pDX68Q1rQnTxJ+6AmwIs6B65xO5HS+SMdvKO+PEPd5i5laqo1U1bun1DUVfgiq6P2NhWtJfY178cC/lUi1sTkF7bgWDclZ2N1ynUh2LZSzYDWw7xMCTzMPiW4SPAzFo4eXb0feY6JTlpATmeXNU8a8tnLyH3qAHhhUj6mqOzYbvliZwpzrPKfYIDl853J/PEEZjm1hg6fkzjXIpsnIy6s+2sk85aMyrMGNcoPnp2fLqfqMMJ80LUkXGVU64nQl+0Wmka+ydMVRMfViNatZOQL3PpTvn/eXZKNWUC9T9nH46n4F8o3yKVIUKni6fo5KOvFXZQSzFpHKP7/PmR0usjwAVmYewDPnjMqh1li/tQNmUD2Aa0ndGlKhRfpxUr0fbjjXKTP1xtfAr6A/iCYyaYqP6erOSrq3enOUHWWZ1DCeZNcLNEBnNSk/+girO7WhmnqAzZrvu51pCNHj9FGuTr6oTx9uH/eegoUzt6VEg8YwgmlWWVePlkTJI0JIzyZZ0rsoyAp/FJscOLMzlbrvK2F/WZ7AYg+IHUwMUl2yNOoeKIz5mTb+FPWzdyqdkSWlGc8lD/q9fv9/e2bOyc48JKzuiYKfAfm00/BPNhLtGF4Jd6X0OzXXfD7IT81sxNGkWtl+Xse8MV4fCo8lQuuxs1STMVYv+URNQ4c7w7k7D9WlGuUvGd2cTG3UPa4NxKVGsHF0ZlBHwcd0z58/KUwpopX8KP19ffXt7Bm4lEB1S8VOCzViJ8tMPKc0cSFT1BaIsncoddXfeE2kDbmwP15xDVO2g+QFwK0Ja6/a72sHAIyLRqQ55FDQduSguikr2eQOMkjpViUS/FlfFU5c6xOmFBuRJNzdFle/6DmeOdWH88s1y2OY0sEjTKj3I1AuoLl/vr2zd3dR3Cc6XfFo13IeVjbqvv5pmZaRoUOzhDA8cY1DcJK+T7fjEPI8XFhWScuxz9N0CJHPjHMa1+l1GxZGG2Lk9RyrQldCrPZOk/ag/d1b9Lv3tdyaInzDe6XPRwTKxPPUJbcmvjOxCeWI8rE5Xrnebo7U/5hSSH+xNY5Ho4kuyhD5bqSU5lkrTGTVLM1bg9lN+TikWG68fnmu+rvMh298hzwF6TIqKtcLYDhooSJTegsTZCC+rdT7DWCol+xyB4MbxBQkvUjWe1WZFXAKL94BZQDaYh8wP+YLKoZXiGYaR1RCTkwFl2O1IT4UkFu1BaQp7mgXF9BbLRrC+xRN0Q4TIzh5SbzEDOrOARL3ZFLu0dFQEQ2U4xDv9sg/Fh1318VCuY37SGsj66TyMoNY1Hd7ssp8Fk9QI2ekpxq/rxh8hKVYXoFvwoJBFJcU06LHlvXrQpr/vhN5ZAbDHmTidSRnSJJGeXYS/9xzk1dlR/jV6djDFwaRrusjO2Wz1q4SwjWMelMiartQhDVFojWmOXdEOETZ3SHjhZ15Xvx9h7XR5JAs5xhhlz78jQV6JvKMdHJ1r2LrvTIK7gTgCTZVgfuOdtXI6uCY+OGlSs665tJqw6+Jnav5rI6YwPahj4gb9zrjp6TPEciITNM05yhPzc9kuc20+IJnSSIvadKSxqbQvcdSQUPyo1cjMhoIkURKE7SGPewbdH8ztVf8b5lsloU5moDd+jNnZPm+U6HTY6eKIzdFQBurRl/B0Gtg6NLuJhy26Y/hEeqt8AFf219z77BYJqe5i5blC2rJy36llKO/05Eij+fpSJj+Vj2/BdVj9D0P0kBLMURQ61RLusEcxMzqra+tLIowKMALXKanERDr/QWIeRxKxRCsTc8EgUmT0k4V3EjUrrev0t274sLLqngR7uyeWg+JGaczY6nZwm3OlIkx7CH0leiG7ZydCxdAXfWvwWgM8r4flqieB9J3Ay93fCpqDqYh/VOP6A9o3OxJK09PYypiGwJdObGX3ef6Rx97MI9qVgmouBMsSjEhTJIxN1gkTo6MXzawNOsKA4d+Jnh5xiR31CSf0izf2xxEr1W36NEqMlp8e8AqEshQ6KM9DYTThS7E3w0nE7UorgE/jFCk8aRw/6HzYKv6Sby+dV0D0i75OK3Mp4gSLaEW1ewFtJ3YppeoCaDkgluf/9a9CNiKWLQYm6u75HAJf6tOrOb0+6R9qOP7O7trRc+rHu2hZhCni7einYl2LPtysxxwHKIT/OUCd9Yah3K7+80p76Eum85Kb2ErkmzgstSgVoS4EKtSw0Gnjw8dT5waeQvLMSKe54HJk0P7/ZxtuME8eqZpCSnancZITjJ1VZ0vzbo+AmicPeFGUlwios2hnq6JoGgow78iRz3MOpzvdsyh576mgVHWd7At4SlHUF6Jpu5yWY+i3UqY+uIJuXraGxnsvK5BbWq9Gq/emiqI6R34U0sp50hJTkd7fiPTRMfLzLGzgO8R6ZJJQH39nDiTojUuG7t1H6Tod6K1KEoWO9KS0hEit0xjxi9/Xoh3fWzryyKicI0Cr+xR5IE1XRK2eJG2f0KP8NnFc3ZFA+/8RdGRDeScBuRPRpQgiHbQ2rcJG+48t31x4HM0RJWJamT0eN/8MjK9fpjLQnuemXnQBT2rFY5JnRNk8hizYyetiHQ4nzR4MpIWmdigaGDm9MO7veN7s9Fb2t8vz32fqk1Quc0/7zEdP6MylRuZZr3yh3o+GTTkK0pf7+8ghwlxCbZoW4woni1V8KIUo3ZcvdLFaFeFTxBt0JK9v4HLt30enGdxNxPphAdesJhShzc4OQDYcUoiDD+zZwpGZhZ8S8ZdMV4MUL+nLW+Ime6rLtIYwljpYTDu3C+MSH/XwAAAP//NG3JnQ=="
}
