// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
