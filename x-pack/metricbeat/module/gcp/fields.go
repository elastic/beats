// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
