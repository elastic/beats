// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
