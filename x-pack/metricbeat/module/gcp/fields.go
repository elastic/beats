// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
