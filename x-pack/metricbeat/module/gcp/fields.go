// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
