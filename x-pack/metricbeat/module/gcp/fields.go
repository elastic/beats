// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
