// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
