// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
