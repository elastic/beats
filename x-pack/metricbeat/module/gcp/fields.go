// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
