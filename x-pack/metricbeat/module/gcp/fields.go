// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
