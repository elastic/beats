// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
