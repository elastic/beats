// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
