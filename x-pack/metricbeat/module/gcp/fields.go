// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "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"
}
