// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
	return "eJzkXVuP2zYWfs+vOOhLksXE2XYX+xAsCqSTbRtsph1gkryqlHRss6ZIlaRm4vz6BW+yZEuybImeJJs8jS2R37lfePEL2OD2Fayy8gmApprhK3j6ixArhnDNRJXDLSN6KWTx9AmARIZE4StIUZMnADmqTNJSU8FfwY9PAAB+ub6FQuQVwycAS4osV6/sFy+AkwLDVOaf3pbmbymq8Enz+eY7jKTIVP1xeFWkf2KmGx934An/HC5OtZCUr6BALWmmDkfeh9CEUSmUi7+1vuqFYv65DxP3xAa3D0LmnQMXqElONIk1uCE1ythqqzQWsw0dhv2uxuz+f3dc9K1xc1GlVgE7vk0KUpaUr/yj37UGH1CgG68xek00SNSV5JjDUooCWvby+vYt/FWh3C4OyEopY5Sv+uZrDfOTezZIr/HOvhG2GdM0J+jU54AmE8px5Mmh6Lpk3sJ6LZS2zyqgPGNVjiBxVTEir0CTT1dA8j8rpQvk+goIz0GKiueG7SilkIsOPJTfC5phUgiu1+dgCiyTWAqpwY7TNVEphdUGmp8zy617G96+AbEEvcYg1jBvikzwlQItuibXQhPWMe+SCaL7Z31vXqtnIoWouD5UsEwUZaXxbGXpV8drN3KHOg45TMqVJjzDTvewP3nfYM0Bl1TiA2Hs4IGhQYcGbg6eS1GWmCfpVqNKMsvie8KqffjtGY2wex5osfMtz0RhhGeHD5NBurU6NEDYIcCSZBvUESH6CUaDrPWvrKJIRqJCeY95kgmJagTFBwGgl+bfqiJFaUzZjl1PBYJbmtfG0XlD71HnNtZKU0Y/EzP6rEDfGwFIkpm/AiDCmMiIxhyubz+4yEQVZJWUyDXbAuUmZwmkjIOvyAoTTQucFf0HMywshTSYPaspB4WZ4LnqVaicqk0kjSKxDP3ajGck5AzdzOTShB5i9kCJMiIkA8Ehevs7iBKl1dND/jdRPUiq8TK8MlNp5KDFcWY5WPG5Zec5wq7aeMpBwxmE0YLwq3iwz1m7/XgDa6IgReQgK84pX12NMR6O+kHIWPaTIb2PFiwPbMjN5uzI8KSftg6MseJljTLEy/NwKuT6Mnw0M4G4R3katovxbxy+XWFbCLldpCYKCh5HzUmRKPp5TCwcS7SJ47YI8Fm8od9RYmza2fsC3q+p8sm2CemCsy2Qe0IZSZmLox9vfC3q6g3jM83L+AMsSUHZdnGUsEphPiNhN46IXfZhxr8kTeqBlAnlkUzJyO1AYjaUUu5xripU2tk+1QrEA7eYQJUkwwvRL6pYvqSTASFi1w7P8UCL6Byo+4kbPFrX9lXBLfqe/rHa4B+QCa4J5crOWzSbPg8IKpOkrNs+17dwp0m2ySU1Puv17dvwtu3cHHYbDYXmrV/++5+nI3s0djiUHR2DQ782VIoflmanVuE7TBKTo2XCYIHQjgJVUTGi6T3aKsaObEqWXaFgHYmvQWuONDKgBdyRomSYA96j3MK//l5/00MDowXVg9XkCfhvP3icdtRQm9VAz0V3vJAcj7GreDS4HeKxhaM3YAsGMsK50ICfMsQcvgeivOjaX5j37SwDbIDXS40SlPneJrc50cQAMuPcU0WDd6hK4xB++OdRDkr8y/ihmSS86xHsZO1n6FDM+Qj9/ofRhMZWlh25p3Qa9hUGUoSVRKJthkf4nto0dcZPeAGtCazEco0FSsISpYUkq6ldy7Y125g8KJrOONwSzDuREbbDCR6nt2LKXZZ/ur8JShQTo59jAkoTBaJCdHp4KsB2NfLF6YzPyrtD0wRpXCZGFU30X1mYGuG9S5NELUnF9GC2PlbWuzhV2m6rGVhdQSrFBjnkJhs3wWpb4hUU5E8h7cpcQXl7QQ4iuYabUDM5T3COMn4LAdTr9DcVQyN4aa8t05yyRKWJHLKuXjg9lmVKHrWnuGuiwkyYX0B7R7SbB5S1raq0wEYl5bTykLpm73mcDOomtMi7Nhg8VvHqV8xIynD24qAxdqNQ8OZs+HB6lG3Cje2h9uGPd1AXdC+P1HxoCHFS38E2fmdSPLclhHfUpmeoXOwiqKnIMXN4t87RVOVJ9kfNaypZShxWteOAf5aIDWG5gQ041k3J2Vitik0Eu69aEdA6S5hDFRzYPlWYJP7oJafD2OxvnmO0s5aec1tqw8P6zHca0Y8fHCcm8GPK0Y7pLl8azWeiuxzJG2W9fjSbp57NVOfW1+HdGOda6Qn7L84gnO/Jq97X0KD/YJ3+dJmN3PgwAwFaEq4KqvVMNNQNHJonrm10fm1p3E1BPsGt21H8+92U/M0A6l3XH49nxz9f9EEpRYZKhfX8c1A2S8IkJ1jsbdr4f17WtNrI8B6ZP1MBjkFnVBtRsoI4bR1P/AHFJ/R6asUXXbv5T1Omb8lFlyL/2j30FBICAfeCVcVcRezcNcuOB3anqa9d6/0wfu9LKS7RU4xg6r91kdd0esOU9cGLnOk7jenI7lM0cbCJfyjDH+7S7608+f2AteQ9Br9rKqrs6/U8QfKUMMKzsSfU3gmSw0/hlYgH1dZal2qRkmyDPE9aK1K9XqlHRwcSncYOWVJv71Bup9ev79/fvryzPALHJCNWAR5TZ0DqRj0f3hqhP6+Sbms45usuyGNgqlJwdWy7/3Tuumk8e2vcz4SEjGRrfG64i580Sk6YpeXZ3fOxxDyGhmSMItfKwD6N8xdRjFMhPYYS9NmY52wXXPaPRdCRBa4kKhUTskVZ6+T769uXH97chrxkD7fX6B3+EF2WTDws4GchzQD2LwVUP1VgIe+OB5pCoSwZzWygA6UlksJumB3JiGN79k9nRWuT/nzMOEIO5ZcRrEfWdDujqIorzED9JaR5Nge6aaD8spb59t1PHZr2bDlBOs9HknYJ6XSTd9yQaqyXN6Qm5LhyeBwzadDXedI/KxOlWFJK8Wm7yJhQ9gAz52jrja7qagy+5oHleqxwQEEiaJQF5fZQsC2ejQ3f3b0DB+Moztmsdb/nv+Pgx5uGBlfKdxfHgJtPh/vR7eT78eY0dBwfLiDfzFaV5wlXlMhngHjtauKGmYhKm1I4N9xqw5aiWq2tk+rB+qK3TrQ3Ex2WlfGurqh7iVWqqnTU4LdVelelEYtfxUmp1kLbEo2JVW9nZpRvc7eIbDWCop9xt8tWKbKyTUS758ue2iO7qUfDStJtInHV3ZqJB/Bgi6uTjUcyhD4TfElXSVXmZKpHafQ2s3BIzg1fuWPjkK0JX6G6ctJ3lVl9qNzO4W7KQVWxYabzqkgCTya7mSnSbwKZLPzRkM6Xt2C5Kbb9+AlZda3zjMH6eoXwbLc28zxoqpsgEHAOSw8hTmbsJLCnM7tK67kXJNvUpMxtXbWWkGzDxQPDfOWM6vXu77ob0rK6HBm1zVQz9VEaInreirew1xQ9I4vNgizAT11/8dzLpgnvKPytNrxXs7De7dvfXYVxBQUSVUmnNX7dznbDqe/1axEegb8qoUmrgX8M+2P4Z9sxR5KtW1AmeO0mQTmSPGGoNcr4dlFWKaNq7YRgZgY3M2hR0qxF0Uj4hcgTY9JmMEY5xqfhYS0UQpgPHogCpw0W9o3I6XL7Otu8CQ/MYO+9RNZin53cQzqCU26a2gzymqPdPI6ATkGMhG3SikZJESHX8RrhTKPtUJ8aw1FrQJ6XgnITACttl9S2qFuxZhQdFa/nmo+OS8QNn4iErMDo0Y6EeKlTF2H7qcmsZMROr04kaFq+5am1+nEJaXUrYp8eTlDDDopiC66HtpklVlaMJc00OV6UaZAzMr7YxQ0COS4pp2GXRNerChsdkZe7lkiL1pejI+topsWKZ+RYCTEyklmg8SVrpvkWRBpLnJY/0+So1hHRqTUQrbEou9HBB87oBi0Z6srtnTLv2BV+CbQoGRbItatJcoFuC1BKdLa2t5bXicAC7oQrbupj2Jxtd5ceCY6tFxZ2PaQ5mTRK4JZr7FXORlNMCrWi98hb79rjyKQskUgoKqZpydCdnz2N3Yxo5Bk9O216Q5WWNK2CsltqAvn14DYSFDSTIoSDc/RkL82I0DLoTvwmJEhdkGM1ck8FPy20KsR4EcIMPmi0x9FxHb9+tgtbNeOCJ9ciYDEFhd9iM6Fkdou1plS7YDpzFya9Nd7920luOpgZTYnDVO0ICQ9Ur4EL/sJo97bFW5qfp+1touJrxx5pl1KJf2cixx/PUoxTWXj5NlXb4g57PtOaVcfoe2QjOCTXrdrOQGq94zI6aX7L5TmYQwUeNUHoa2xNzwxsz3v6Ysi0FZDG2oddZrArIp3psIP7da1PO8zBDRmxzpey25WM2hXbsW3Gbhn+vBfM19D986sxZ+nzl9kdm0LRl1aOTKFFIc8v0v1pW8dXk/Y2uBSvt+J4c2LzxyP7OsK0A/v48fkUU6lTjINrhub6yao7f8fKaT9ZRUra+nzK+d9hjR6QxAFhb5BpstMXe9M4sb3AhoIY+ZhvCtRrkVsUIWBbdQJTmnQfkyWVXn+eSHdjtIwlKVGYJ/5390iWoTp2I/0AL4a5USfs/qf5jJlYheT+d//80c2VJFxjDg4NKMGQbSGv7Elb/+Tr63cHJ0/bhO085Gz0uB9HMnK9ftfwwF0Xd/Zj86xWJWZ0SbPEYC0qPRxxJnI+7JgpSN5kYsDQwc15j9qfddh+Ar17R+33D6dPtUY4/eT9ZGI6f3JlLrcyzx1yBzo+F0P2T+G74RWUKCGtsg3qFiPCpV0ZI0q1znzbX7XwRaDgGdoRcrJ1P31pT5WH5ySWbv8+0X6TmT+9DfY0yz1hYdO8qNxNnDnp+N2PwysJknC0+2vW+uM3LJwu35C+EMZqCftbbL4wIf8vAAD//yrpIkE="
}
