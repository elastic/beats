// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package istio

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "istio", asset.ModuleFieldsPri, AssetIstio); err != nil {
		panic(err)
	}
}

// AssetIstio returns asset data.
// This is the base64 encoded gzipped contents of module/istio.
func AssetIstio() string {
	return "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"
}
