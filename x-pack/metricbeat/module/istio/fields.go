// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package istio

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "istio", asset.ModuleFieldsPri, AssetIstio); err != nil {
		panic(err)
	}
}

// AssetIstio returns asset data.
// This is the base64 encoded gzipped contents of module/istio.
func AssetIstio() string {
	return "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"
}
