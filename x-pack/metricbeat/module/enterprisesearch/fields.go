// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package enterprisesearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "enterprisesearch", asset.ModuleFieldsPri, AssetEnterprisesearch); err != nil {
		panic(err)
	}
}

// AssetEnterprisesearch returns asset data.
// This is the base64 encoded zlib format compressed contents of module/enterprisesearch.
func AssetEnterprisesearch() string {
	return "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"
}
