// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package enterprisesearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "enterprisesearch", asset.ModuleFieldsPri, AssetEnterprisesearch); err != nil {
		panic(err)
	}
}

// AssetEnterprisesearch returns asset data.
// This is the base64 encoded zlib format compressed contents of module/enterprisesearch.
func AssetEnterprisesearch() string {
	return "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"
}
