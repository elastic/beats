// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package googlecloud

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "googlecloud", asset.ModuleFieldsPri, AssetGooglecloud); err != nil {
		panic(err)
	}
}

// AssetGooglecloud returns asset data.
// This is the base64 encoded gzipped contents of module/googlecloud.
func AssetGooglecloud() string {
	return "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"
}
