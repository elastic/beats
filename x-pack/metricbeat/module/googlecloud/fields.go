// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package googlecloud

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "googlecloud", asset.ModuleFieldsPri, AssetGooglecloud); err != nil {
		panic(err)
	}
}

// AssetGooglecloud returns asset data.
// This is the base64 encoded gzipped contents of module/googlecloud.
func AssetGooglecloud() string {
	return "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"
}
