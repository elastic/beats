// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package googlecloud

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "googlecloud", asset.ModuleFieldsPri, AssetGooglecloud); err != nil {
		panic(err)
	}
}

// AssetGooglecloud returns asset data.
// This is the base64 encoded gzipped contents of module/googlecloud.
func AssetGooglecloud() string {
	return "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"
}
