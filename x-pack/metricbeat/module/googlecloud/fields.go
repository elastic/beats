// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package googlecloud

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "googlecloud", asset.ModuleFieldsPri, AssetGooglecloud); err != nil {
		panic(err)
	}
}

// AssetGooglecloud returns asset data.
// This is the base64 encoded gzipped contents of module/googlecloud.
func AssetGooglecloud() string {
	return "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"
}
