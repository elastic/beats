// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package googlecloud

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "googlecloud", asset.ModuleFieldsPri, AssetGooglecloud); err != nil {
		panic(err)
	}
}

// AssetGooglecloud returns asset data.
// This is the base64 encoded gzipped contents of module/googlecloud.
func AssetGooglecloud() string {
	return "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"
}
