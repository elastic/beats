// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package ibmmq

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "ibmmq", asset.ModuleFieldsPri, AssetIbmmq); err != nil {
		panic(err)
	}
}

// AssetIbmmq returns asset data.
// This is the base64 encoded gzipped contents of module/ibmmq.
func AssetIbmmq() string {
	return "eJzEW19v4zgOf59PQezTLtDO3p+3PhwwN8UBA0wPM9vZ2wMOB69iMTG3suRSctrspz9Qkh2nSd3EcfbmaWpb5I8URfFfruEBNzdAi7p+fAcQKBi8ge/i39+9A9DoS6YmkLM38Ld3AAD43CBTjTYo85//vovP4vdQO90afAewJDTa38RX12BVjVsW8i9sGryBFbu2yU8O8JF/v8ZVv0LpbFBkPfigAvlApYdQqQBPyAiMSsOSXQ2f/n4Hd1/z8iGKIZLHesX9w0Ng9gB9PMCe0aiAGoKDry22CHfKqhUOKTMaVB5vYIFBDZ6/BDYEVz+WqlAmICvhXWgVcOfDDnDA5/DixQ7mbxWCLL4CshAqhKXjGjabzea6rq+1vgJn4amisopvycr7yBOelAejfICIA/X7o5AGqqcjlcW7SKvqfV2/9/4KZJvPxVkih8KoBZpJED8iB1pSqQJCpCIYIVTk4TFufp02X6yh9fg+ypQ+JI1W1qLPUjTI3llloBwQzZI/4AYYG+cpON5ApTwsEC14NFiGcQkrZS2aQrXBFRqXBT7TS5mOFDZRAqF0rXFJlqK6hWDkOIbCtD4gF0+OH4xTWuxXTUJxq4KCRnmfzphoJxOHjnhEdAqYySr5p6oR3HIaClfXyuqCbNOG4rGQV9P2JRGCSCjb3Vvb4awVi6jOllqIiCGX6egNj6Fb/IZlSP6YvNh/3LGG3Zo0xtXG5XVuKe8ZPt2CiCL7++RYvyA/JhHjmY4xeeuOzqiPPALGZK/3sQPwuusbYd/64OppfONSUCEwLdoQWYLFJ1iiCi2jH1G+RqULg0EO1RmGfCv3dSID37dWo6G1+G+o0Xu1wh+OM25xcs81nXWmbnGpWhMgsLK+Ju9lR47iTtYHZUw2RvTl5LtvSGn49pU75lhMk3Wyh0konQmmURN90B4YoXQ6mEYx2mm+XxDYgSesCFlxWVGpjNlIaGrj3fwiErCuJhsjROXjugQhUTkB+WNRr3i6gX3dATV49RbHPm7hyVprLT22uI2AuFPhsbJvQ6HzrLnbPtVf3mJAXVC5F8SRH95fahiReeQ1lWN+4QVmQ/58s1MgZOR/Gb+/oADem6Jkcz76+/vPOzEu47oLA/p44CCTA3A2TXBFpVg/KZ5mB18Uqxqj7oKTU7ukVcspPIlII48Vq6aiEg6y2sP1gJvBfk+C9bnThIRDQzcjmHbTgdexrJH9yyN9yk7l9R3rlEVD6fSInZTLInrBNRbGrQp8DmjD5GM6xqZsWTznHGz2nLlxK0g0cz0hZlxkV/DEFAJaMRYV4rcSqPUqso8tMUIO7t/DpwOeLUXDQqwkLlujWPityK6u0qltOpuULxdG2YdRfYsCzrhIdxlu01LBrYmxjA7iqUJOelmSQQ+Kc7CMGhabU9x3uSxq1KQubR/pvvJBcZieFdyKh3qqZMP3/alYRaSPGr4/nCr8MKqHIcTpdRKxv5MhVtVNXd94Pw6QMYG73FaRKlRZutYGsquUmLo1MpM+zIVswNVe8LGjkPsGy66ygqFCBtU0JueQHkploWMR9eExCHPfHeIYG33oQUUXfPf10+DJro770/NqjrQrpIjAa3W45PSafKXfK4xBRyimiR5LZ/WwLhZfx6MWELb8gbF0rNMRzu7sOOD1I03ck6PIP16AeKA1hc3/1a46s/rw8du/vv30EdbKtH1lb9eS+ux7dD+yTGkbya6myvNLJ0WmGGMKDkmSBcIKLbIaKS8O0QRW5WTNzoJEr5UtURelatSCDIXDkddZ9lQ/Nhel34bKsagT16/lpefQj+XutTJF4wyVU/HvHARxNPf3n3/89vl+J6pfK0M6p+aR2bAGmF9KfLGisFvz9uKfkNaYezeMtQsxTQ4WGfzGB6xfq4HRfsF7qpAfnQ3szPawZ1gc7wPJl5Cvc5YvUma+vc1uy+SjZrtfnz9j5/dBl68V7YVLugL6w3WVogjVS3q1L+YVOO6yzWuPVg94kD9V6MvIeki2UTCiFLkihNzkMyFxUmoEdOoQVavgGHTL+1FDDKxGYRlxB9nN+/l9wcsuiEG7eiWJOGY3XrY/ErkxAc2TKWpuO2uYKuI+69r5EI3YBrNJTuf7u59+/qE/o2+haj1ODUbgZx+zwey24p6/PxQ69DWnQzWa1mPv+NoQH7m4LH7sIR8xiSIGzzsiHp4oVDnC6NhkI9wqKX5box01wloXyQfMeD5yvyrRnXg4nJabvlJceAwF6fmPR27PzeyisuynuqgMxuD6lU71UWAS70gEfNtIiJWy96My94gjlcdS8X5u1Qxon6oguTg7h5Z7P4JkKjjJsG5xmR3Lv2sKMSf8tmlw0CErtyLEgut+r4h836IXNevcVVpsXrlC40FfYeg6Xj6GQFfyVD6Mx6d/FVxPpQ9NjnBwmnwoDPkw2d/ekk8qiCVb8qEzpteZkq1oQWFmk8lUR4SlplBaM3o/Wgw9gvmnL5Ap9WXRtLWOX2dvXKnmjnIiTUBmx6eeEuNWK+SZ8Uh8skbepJrpaYBq9VxUymqDk43xTj1T3dZg23qROkmZ4Btsa786M+LpOOcD+XbAI2wbppjgncu0o/MmO9dIaoV+JmG3BI+Tt7Vyd1EIqEXlM27zgPLWJ+a4R0FrKTbGJNwZgxgL0VSrFU4ryx0TSgyZGHem2R3HJh/Kwi1++0P4zF+6+4O4OEvBSQCaEnC5UL0+3NqeiU++oidfvjmG6IqLS8fgrCGLsGUSnx4RCwxgXUC3flXUih+KBbsnf8Hz1SDHqTNb4sx324DydTfYe+IV1xgVhMZUTF/y+t2x3N1sidGTHr3xGnYhF/3Or192Tc3cD/5wdy95TeMs2jjpl+dyUOd5nJ1Gcl4Uu6oHO6PcWism3EpgPCZSu/Dtoov6Z9vyfUyN4kAlNbE2SRaadmHIVz/6diGEFn2KTXb1Nt5aPcvBYAy8KWLr45wkZXsdqhCwblKpgLFhV0qoqmCpSHaiSzy7YCVqF/zGltA4Gq0BdMDdnJ2TOPm0p0i0K3FkKqc6cR/0ge+iK1mqEuMxzBbztgi2Eac0oxAONPlSsQbH8IDYgLIwnFxMM7lZ6UcBZPTN2cYsyltgpdbkcqy0hSQMnPXbRPJtWGImRTPZUPcV56zZxIF38nHGoo/fHIMyZvu3bG+2ZdSnGG0qns2e6sSK3KTci1GcIBba+sI499BO3uVfejSRIiRq/Rii8yFPZrKrQcGtqxXZNLR9n0pu5KFUzIQaXDumRe/nzl7v7z+fqjkBsaTGF4xxuGZqrW8fTDTDf3z6cn+d+0+oQZmVJFZVnQAGBwtMJWRaDofBYj8Ln7FsQ6rD5ouNgkezfEMcRo9hTu/fWrQRXCw0Bcw/g8otCLlO4yxb7kzcffzgU0HJ9W0tWODSxR9NWVy5blVqY5eMAR5wLNlMYyI+uGZmg4mEU8stuOZk2+l/mHXZ+H7A58z4ft9ZDn5cplVQuUMgYYczubZ4ZLg/QHlmMH70DMoA/CA96eQYDNPF0ub2i9Q3OUqUS0ylDMjPnxj5lgIWi8IHjpWA4k+XZ/Hny7P4y+VZ/HV+Fhtbxlhi8nntoxFQa0Ump1YjphsnZQp2bcDzZ3gOBKVC/jqS3/k5Vh5LSBzlorM6jYCbTZ8VHONSAyMWhpb4+sTikf5DiGQf0nkOucuss9dK12TJB1ZB7qbgGirHPFtgiqXts91aotN7tRGWzzxDJn04McqhxDc0WEueCFtGcdtyMpeuwZ1G3tFjuPRyUNvT71M3c4xFHq4Qf9rOPsMg9LcN6svx6Kdfzg/Z8tD6IHTbUvfdPXj8DhqtmiG+i+lATIRs0fpLGIkQbwMZ+l3t/QRpHg7bgfML2XmDXCc7t3ox+2DgcFT8Mvs7HPS+kIoYW68W5nx3878AAAD//xnC+Gk="
}
