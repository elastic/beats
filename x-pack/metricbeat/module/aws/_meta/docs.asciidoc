This module periodically fetches monitoring metrics from AWS Cloudwatch using GetMetricData API. Note: extra AWS charges on
GetMetricData API requests will be generated by this module.

The default metricset is `ec2`.

[float]
=== Module-specific configuration notes

This module environment variable `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, `AWS_SESSION_TOKEN` and `AWS_REGION`
references in the config file to set values that need to be configurable during deployment.

There are two different kinds of AWS credentials can be used here: `access keys` and `temporary security credentials`.
`AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` are the two parts of `access keys` for AWS to authenticate AWS API requests.
`access keys` are long-term credentials for an IAM user or the AWS account root user. Please see
https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys[AWS Access Keys
 and Secret Access Keys] for more details. A more AWS recommended way is to use
`temporary security credentials` instead of `access keys`. `temporary security credentials` consist of an access key ID,
a secret access key, and a security token which typically returned from `GetSessionToken`. MFA-enabled IAM users would
need to submit an MFA code while calling `GetSessionToken`. `aws_default_region` is to set the region for SDK to use. Please
see https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html[Temporary Security Credentials] for more details.
`sts get-session-token` AWS CLI can be used to generate temporary credentials. For example. with MFA-enabled:

----
aws> sts get-session-token --serial-number arn:aws:iam::1234:mfa/test@elastic.co --token-code 456789 --duration-seconds 129600
----

By default, Amazon EC2 sends metric data to CloudWatch every 5 minutes. With this basic monitoring, `period` in aws module
configuration should be larger or equal than `300s`. If `period` is set to be less than `300s`, the same cloudwatch metrics
will be collected more than once which will cause extra fees without getting more granular metrics. For example, in `US East (N. Virginia)` region, it costs
$0.01/1000 metrics requested using GetMetricData. Please see https://aws.amazon.com/cloudwatch/pricing/[AWS Cloudwatch Pricing]
for more details. To avoid unnecessary charges, `period` is preferred to be set to `300s` or multiples of `300s`, such as
`600s` and `900s`.

For more granular monitoring data you can enable detailed monitoring on the instance to get metrics every 1 minute. With this
detailed monitoring enabled, `period` in aws module configuration can be any number larger than `60s`. Since AWS sends metric
data to CloudWatch in 1-minute periods, setting metricbeat module `period` less than `60s` will cause extra API requests which
means extra charges on AWS. To avoid unnecessary charges, `period` is preferred to be set to `60s` or multiples of `60s`,
such as `120s` and `180s`.

Here is an example of aws metricbeat module configuration:

[source,yaml]
----
metricbeat.modules:
- module: aws
  period: 300s
  metricsets: ["ec2"]
  access_key_id: '${AWS_ACCESS_KEY_ID}'
  secret_access_key: '${AWS_SECRET_ACCESS_KEY}'
  session_token: '${AWS_SESSION_TOKEN}'
  default_region: '${AWS_REGION:us-west-1}'
----

The AWS module comes with a predefined dashboard. For example:

image::./images/metricbeat-aws-ec2-overview.png[]
