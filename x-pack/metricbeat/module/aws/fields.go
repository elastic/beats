// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
