// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
