// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
