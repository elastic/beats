// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
