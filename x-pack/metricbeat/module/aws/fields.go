// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
