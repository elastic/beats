// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
