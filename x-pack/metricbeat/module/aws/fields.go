// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
