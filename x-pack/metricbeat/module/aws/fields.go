// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
