// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
