// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
