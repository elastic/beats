// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
