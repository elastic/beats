// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
