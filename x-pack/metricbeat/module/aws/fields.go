// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
