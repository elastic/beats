// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "eJzsXUtz27iy3udXdM1mkpStc8887iKLW+XEvue4yjOT2JmaJQcEWhSOQYDBw7JS8+Nv4UGKop6USDlTdbOYcZES8H0NoLvR3YAu4REX74DMzSsAy63Ad/AdmZvvXgEwNFTzynIl38H/vAIA+JPMzZ9QKuYEAlVCILUGrv54gFJJbpXmsoASrebUwFSrMrz7IJRjc2LpbPIKQKNAYvAdFOQVwJSjYOZdaP0SJCnxHVD/+QmhVDlpJ/5ZeA1gFxW+84jnSrP0bANK/+/zDGM7kNoJbYPSQAQnBpxBBlYBZygtny6A8ekUNUoL/oHlaIBLIFA6YfmlRUnCqyeulSxR2skK5CjAJcZCK1ftQtjm3W7IksJM3jaP6/ZU/h+ktvU4Psg2SaTzOitJVXFZpM9+9/a71ue2SC9IkBS+YXgiwiFUhOs0pGRuQKNRTlM0kzUG5sdJ7ugjrozcttHbg+HXMGZTIPDwI6RW1zpkvERpuJLfiOB+CfO/DWsN8vdvJ2mVTN5O3n7fEzVTLhc4BmgDdkYsaLROS2RxvJfLF64+3sIXh3qxTinnQnBZrFFpr4Q9GP5MbfwJVElLuPRwENBYXhKLDOiM6AINTJWGhXI6aJd6fXPZUTT1v0bh5GhJ6/m2JUibVk4is2ymw6dsi3qOGsFQTapa3I3G/COIfD7jdLZsYIOeNV5p5W0N5nmYiqwsz67i3SaFtiSadlbebl/Je0QCSS83zYKpkPIpRwbzGco4tVryB1LxDet9IUmpWH7S6NSNnGls/BevQ5fX70+Zm5ibk2hjbs7I+Ob9Q/8J2FClP5xGlf5wTqoffjhtrdHKTayyREyqFc2/JG8oEciyqVCk+4EDFl2FmqK0pIgGVQhFg069+fADUFVWziI4yW0SD9EI1GmvTsTC61ZnEJQMcuTSWCIpTrYSoRoZt5kzpNisO4RaMRUHcpCuzFF7/B8+/g6xE+OVSByHNrZgI/ynnOWCfyW+2b14cyL8d0dBjCRY1DbwKGi5xDwjxpsz7ZCB4f4JtzAnBgRxks6Qef/VWKItsu1kjNOVcCY7A6nU1SqjGXlCyBHlcmSIBCcFL7mfcQ3doPP91z58/P1DaOF9xJp8Tm7gK2p1KFOTRf+ga5EGohq4bCTs14pU1vvIDJiaS095fbwvgEiW1IqdOb+/oE572RDGuEdBRHJxNlOWaOdKP064nFTE+8JmFKapbdBIkT/5SSe9vqi7By4t6qn3LrqL7lDYWYU6M0hHhV+hBoNUSRYVtXJ2KCbK2bOMwIi4/+5DwOUkX1g8WP5TpUti38GmL/XiFhoYY22Ehkcdlgi9NShDs/Dz6yVHZYz18gLDMhQNxs0jVxONhJ1tWN6n5UGSU+3xNwbfWKURnpRwJRogT4QLkgsEq45hM/CgtJC3xmIcEnPNLZ55THyfFqXHOSafUUalxt4amDFohLmlqqGM+gdVVgK9yxtmlapQh32IOX5WxZj0MmxSoeaKeS1ieXkYuYEHaDvJIVbRCXzjnBxjNEPLbaZHzsUhyI02mmskT197x/A1llhnJnSG9DGbEi4G297dY6W0NX4XameoV5H6nXhFjEEGubKz1ZcREwRMYU/n35qFsViuvuMxXiKIsVBy6ezhJLPY3pm5jkGk7ucFqGwesUPJNCaDKu3/4+TmuJx3ywrUJ4ezlE6pjf32qnnLS1LghG9eE0cH6G+vw6L0MHz7TbI0hqH64FtGTSd+DAZMJNxKxikJzkGaCQxtmHHtUC03gNLroi3xsgZopfkTsThh0mSdvOUAAk2tw/WvDykPHcW75tkfiJJXm2di93EPaLcfn34CwphGY4AYoygP8eE5T+qvN1aXC07HEmhofE2eB87KBG1AKdaCSzhuvHLhFG4/Nm9eewG/gVy5aECPEWlYQhOq2GZpHq2IQrtdGV4AMUDgn/99mXMLThpeyBC9DZ0chHT4cd+IFF5XKJlf7n+BdlLGv8zMWctlcRkisn+BRV1yGeb0X95jCWny+k9kb/YwsjPv30Z/y6vqsUxB6ie4W7VZWM+Bojgt/YninJnPm7vNSc+D8oCClDkjJ7GNTZyR8F3o8JREr2anJXo1O2ei9/76iEQvDJX9rEMjKcV5hDVZyY32zRr+f5bz3FlORizJicGMKimRhv3pKHTqjqDVUUqGb0GWN/udCdFyOON3VZKvSsJ9qrsLlXGvr+5/fROmABI68ypjPygqiNksq6NgfWhrmLYnVpcU+O1xiaXSC6CkIpTbBQQM9Qev3++LzbXQp2pNvmZih6BA/LDqS+OqSnBky8Ff9jqBzzNuWg/8BsOzcJJ/cRjqJcN8bz7hm+1FMW5Vh6P3kMItEWcq6Wj7Udw0TLeHnLIvDh1mDCs724jtyKqU5VJTznoJBDfu9jcDr70b9I8YhdL4xaGx5g3MCfc+XYhAUer9as/KI9yMvQ6mfBGZQf2EOiMFSpv9R+XjaIzYITx8uoOH0CFc+Q7BdwjMBQt6UPRhqhH9xjWLq+eseTVShopKNW3F8jSRTJW11BOorcgzY5UmxflyHNtgJxwQ6g034y3JMy9dmTmDLLOaSEOCps84G3KOpG6g1QPcXtclMyZWzHgME7gKGijElT8qYwuND5/uNoNXgqGxmcZKcBrsf2aEspkgxaTMB4QvSFH4yWv410bJp16bd8HNVCbU4vrtVlDyf1zdBQXTZJt78fNaIONqb6j7SP1DnjBMj5bJ5+YxpjJu//Hb5vj3NqRBGEHyPQLy9ZxnLnZ0yrS3vEQgcO/R36exaRkfP05+ns14HbOOvkTbPrXH5pfFw6e7C/iFaE6u38fypeV4rXSzxfMwc1JF//iFFIEHENd+DGKmCsYVxsGkx12NN+dS2Zb+8N7VUplvZtnWGUIVJitQ4sbRPGUBhonZouK3Ai1V4jvutbKCaT3/0ooWvefa+uJQ88Onz1HoUh+Az0idRbYXFEPChKKP48JqeqnzFo1bug9fzMcFs/ZSqy8Z33q+xjMbTiu9opcuPLXQ2U4iyRT0zXgOV2PEhajT3J35G/PbQIUzFnUCfOFNgvK7WCAWfr6M3l4M9j4RsZtsvTpfjG1cp2HJdsim4PUQZIOrKBQl4oUdxnqmrip+i2WlNNELsP6ZCRbQK9p9M1aogsuQAHV6ZLWVNhyhRyDWQ7b7FaqdaeWKWeXshKqy5JtjboNp/thHH43fAshQ4JbM4XCmKfTR2IA+6JgYF9r19V2zAe4FrBwZGJcGtTUX4CpGLKb69ijJXkhjQ+cAe8wApyTdoPAavVNnAJf9xXqTpjI3Whbvr3tfr+TWxlQ8FRylNfGkAZ2t1Nh47ZysbHDhva1N2nqpuI4QQZZQDSkKLqkq/d7x9X1s/M1SJppMp5xu8Nk9CypciBUFcVFnrCpRL52j+stedHXs9PqheRw8Eq/iW4kNEiqim330wVKpR2ZIsShnCxXE8jm1/veRi3eQxljMnX2uJY+pInTdSdmL0aDALYmmwVRO7OMYlRMV6rjoYh/HoAue4bjg8m7FchjifRgFsSjpoq9HM2QEJkEIS2jN6QnKt+RC8Mhim/OYaPTxLMbiEAJ3DKdc8hhlILJwfqxeX1/fvWn8kr7MergmYzHb6b305NPTgRmXUr2ke3LopbUHYDCUUq/x99ToY43BqtLvOQY99f5YHFZNQ08O/azDNziRem43R9O8KzvSAwchpGpTvJ2HYPQLxVNawWpFqat4DADmXBK9CCGU2n0tid+XrOcdYpxN70wvtOh2E2DDJr82xN5bHYLvEKZcYL8IfAt+N4UwOvyTUgetL5uJ//+WPeFQMa66aqHdb4rT+w2KkkBkveNdVm3UO+K9rm2bTS4UfRz0CoF1Ois0ulH95kaBhGR/GqJVPMLyLG30szFKZY4sfqkjxenkDyVCRB2XNqDLjED65H6iWokBK4uv34Nv0IDgjwh/3N9+vrkHpeH+5ur65v5iSOAoCy5x4Ir4G0JnK4le7WSSfezvIjLrJnRbyVzv/KKlmwmQwDNLJiVrZbqHXCfdNLZeZrDrGVRXdy9lH44nRINBVVkRy3MuuF3syHXvHKtEtRAqJyJjeWNYkDU5mX42de85lpby+lfoFq6TMriIZXWdnEwnHbMEGIOFNh7qKL2hDbW5WHglvzFrk07kBe2y+vkDpePVVgyATVGfWS7LCaORKW/F4na1hqPbEoluRkcgJ1Fvexyh2mYo5v+r9OHUBSniPToNHFnUW9pd8+FAhzKxTo1PRuSZCklO47eSUT6GXVaS5+EYtsu+VinlaOeIciP4qIu9Sl9PldfuQieifxxVLgemyuW3QDUn9NFqQh8zOiOywEwjVZqZCdUYl6vetss++SqPumuIXUPqGkLXyEA9oYYpf8JU+9m6y3KfZdpKK5y+HtRjpdYRcQitlcKOwwnMuWRqPon9DLrPiTdgUlyZdZboAm2LRey/Obqd+HbfH8pCbIv9nTqbvB+Uzk/sgOm9cFMSIcJhaLKbsp9tBAr+FIMjBxy/D3URqYiI0EdXZRqt9++VzGILg5p9L4FwEKilRWK/TY1Gk8GsjyUbV1VKRyFVikt7yeVlcCI1xqsJpkis0xi8xdUE6XLSfm/qjhqCOyfCimiMJJWZqZ7XHw0oC6qkcWVcjUSIml6NK+oZsmHLEgrvOcNwEV8vAVBCZ5jNuM2CKzrJnV99A3JfPZbV1EA0O+RQ0c/qM1Gx+4jqMMAajRM2Mzjk8u0H+j5AMGh34U57RleFdTrsNVTdsGmtbFZOa4XS9LT3CkZ4p/3VzGRWZcnjqOIe03wR2ZEV0j1DqEULYA/X8f76ob0fbvhbBSpcLyAVwyZcs9fQuaquaMti3WAWjze+lH7wyz+e6VwoF+NLsZyxbREOjGekkU2VigKndiRyGkvCw4a/daAjhDHrazK6RYglEuN0OKberc9b3k+fMcLFoh6fV12sfY7ZdhvrnLkN75rBGPME7sOPpx3ATZfrG/71pUoww969ma/RqY3xie7F/23c0VvK1DSLl+APv7ZaR9RiDxuwxVUkRDPU4YjjltmXbMKp8y4105px6ck3Pc9qgxhPe484WP/+/Pnj0vyWhAVV7j2gGLttflDiAjQWRDNR39+xqLbY4QZ7MajH0MH8r5vPHdx+ctVzj8tNHPbgrdyIeD/+PjjeHSnYQSBf39zdfL4ZGvVsWwXFIJj/fXN1fdB83jcXlBlzMvz20J0NR6HcUc1xKs4lkoebu5sPn+G3MOjhHLhXdAPPisgkM5RIeeaDON16utrIJiwxd3KwOE5hX/+gzDdBv/l1mzPwF3zM1ba6u/R9pbsXAnQTfzlpF06m5lIowl5mZOKwLDGExXaYyZ7PvFsTzyCbSsmQ76fCsZBzzhXbcjbdVS9Nt0YQxyy5XSHbGZ03j/2iv+ZErZU2k5+en8ebbj89P6dzB7G75lpFxfCgcYsrjqSfd1BTQB621v8FSsM/dxL7eUxiPz8/x7iMPiOxut5syrWxmZ8cPbIxp1edVagv6zkXQj9NRISmO2CXUxL9bqA5khJ/z2NNBFbFaMvKogzX+ISaohwbxbtbHsGRr3c3ZxUJClKZWHGzRTRhrMJCXoojJdbDhR7hTdgu7Vu7zX5QnnbPl5HnvOfr4dfN93wdeKmZ+XIi2S9nJfvpxEvN0t0cJRpDCsxI0St4O0BhaVVp9Rx+Ow9SPNrLLMICqeRl3GgxSBDr6Ga47GfLZSnxk2GPRhbDpR1XtXLdywqgZQw99R0SeOvXNWgk4QQUL0tknFgUW5yBhotUNnvihudbispONTINnYYBlzAVvJhtseYNsrOg6orPao5PRCzV3oHzwU+lcZHW87UXslpTjwut2VXkC6BEiOacfDrX+EtaYrHucw9ks36N4dBjzli0XWSXDLGs7KI+9jnOhVkd8Vx9vK3F59cK43GFR+kCqQlsScmiXKrbs4ey65uReso4vhq2IPTh00PSmSvtNrsgc2reI7SwxRZ3fzTWr4NQgxC+FE5GqhKDid3wM8L7vYr/CwAA//9PfnsW"
}
