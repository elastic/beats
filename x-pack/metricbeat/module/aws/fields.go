// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
