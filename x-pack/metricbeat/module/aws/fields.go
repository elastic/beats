// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
