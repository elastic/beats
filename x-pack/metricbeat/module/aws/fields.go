// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
