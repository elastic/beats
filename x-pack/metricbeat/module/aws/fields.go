// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
