// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
