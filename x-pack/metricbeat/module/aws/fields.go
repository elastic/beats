// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
