// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
