// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
