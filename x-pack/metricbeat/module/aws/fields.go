// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
