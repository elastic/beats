// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
