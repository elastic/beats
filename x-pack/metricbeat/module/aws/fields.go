// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
