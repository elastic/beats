// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
