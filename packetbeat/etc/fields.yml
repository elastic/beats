- key: common
  title: Common
  description: >
      These fields contain data about the environment in which the
      transaction or flow was captured.
  fields:
    - name: server
      description: >
        The name of the server that served the transaction.

    - name: client_server
      description: >
        The name of the server that initiated the transaction.

    - name: service
      description: >
        The name of the logical service that served the transaction.

    - name: client_service
      description: >
        The name of the logical service that initiated the transaction.

    - name: ip
      description: >
        The IP address of the server that served the transaction.
      format: dotted notation.

    - name: client_ip
      description: >
        The IP address of the server that initiated the transaction.
      format: dotted notation.

    - name: real_ip
      description: >
        If the server initiating the transaction is a proxy, this field
        contains the original client IP address.
        For HTTP, for example, the IP address extracted from a configurable
        HTTP header, by default `X-Forwarded-For`.

        Unless this field is disabled, it always has a value, and it matches
        the `client_ip` for non proxy clients.
      format: Dotted notation.

    - name: client_location
      type: geo_point
      example: "40.715, -74.011"
      description: >
        The GeoIP location of the `real_ip` IP address or of the
        `client_ip` address if the `real_ip` is disabled. The field is a string
        containing the latitude and longitude separated by a comma.

    - name: client_port
      description: >
        The layer 4 port of the process that initiated the transaction.
      format: dotted notation.

    - name: transport
      description: >
        The transport protocol used for the transaction. If not specified, then
        tcp is assumed.
      example: udp

    - name: port
      description: >
        The layer 4 port of the process that served the transaction.
      format: dotted notation.

    - name: proc
      description: >
        The name of the process that served the transaction.

    - name: client_proc
      description: >
        The name of the process that initiated the transaction.

    - name: release
      description: >
        The software release of the service serving the transaction.
        This can be the commit id or a semantic version.

- key: flows_event
  title: "Flow Event"
  description: >
    These fields contain data about the flow itself.
  fields:
    - name: "@timestamp"
      type: date
      required: true
      format: YYYY-MM-DDTHH:MM:SS.milliZ
      example: 2015-01-24T14:06:05.071Z
      description: >
        The timestamp of the event, as measured by the Beat. The precision is in
        milliseconds. The timezone is UTC.

    - name: "start_time"
      type: date
      required: true
      format: YYYY-MM-DDTHH:MM:SS.milliZ
      example: 2015-01-24T14:06:05.071Z
      description: >
        The time, the first packet for the flow has been seen.

    - name: "last_time"
      type: date
      required: true
      format: YYYY-MM-DDTHH:MM:SS.milliZ
      example: 2015-01-24T14:06:05.071Z
      description: >
        The time, the most recent processed packet for the flow has been seen.

    - name: type
      description: >
        Indicates the event to be a flow event. This field is always set to "flow".
      required: true

    - name: final
      description: >
        Indicates if event is last event in flow. If final is false, the event
        reports an intermediate flow state only.

    - name: flow_id
      description: >
        Internal flow id based on connection meta data and address.

    - name: vlan
      description: >
        Innermost VLAN address used in network packets.

    - name: outer_vlan
      description: >
        Second innermost VLAN address used in network packets.


    - name: source
      type: group
      description: >
        Properties of the source host
      fields:
        - name: mac
          description: >
            Source MAC address as indicated by first packet seen for the current flow.

        - name: ip
          description: >
            Innermost IPv4 source address as indicated by first packet seen for the
            current flow.

        - name: ip_location
          type: geo_point
          example: "40.715, -74.011"
          description: >
            The GeoIP location of the `ip_source` IP address. The field is a string
            containing the latitude and longitude separated by a comma.

        - name: outer_ip
          description: >
            Second innermost IPv4 source address as indicated by first packet seen
            for the current flow.

        - name: outer_ip_location
          type: geo_point
          example: "40.715, -74.011"
          description: >
            The GeoIP location of the `outer_ip_source` IP address. The field is a
            string containing the latitude and longitude separated by a comma.

        - name: ipv6
          description: >
            Innermost IPv6 source address as indicated by first packet seen for the
            current flow.

        - name: ipv6_location
          type: geo_point
          example: "60.715, -76.011"
          description: >
            The GeoIP location of the `ipv6_source` IP address. The field is a string
            containing the latitude and longitude separated by a comma.

        - name: outer_ipv6
          description: >
            Second innermost IPv6 source address as indicated by first packet seen
            for the current flow.

        - name: outer_ipv6_location
          type: geo_point
          example: "60.715, -76.011"
          description: >
            The GeoIP location of the `outer_ipv6_source` IP address. The field is a
            string containing the latitude and longitude separated by a comma.

        - name: port
          description: >
            Source port number as indicated by first packet seen for the current flow.

        - name: stats
          type: group
          description: >
            Object with source to destination flow measurements.
          fields:
            - name: net_packets_total
              type: long
              description: >
                Total number of packets

            - name: net_bytes_total
              type: long
              description: >
                Total number of bytes



    - name: dest
      type: group
      description: >
        Properties of the destination host
      fields:
        - name: mac
          description: >
            Destination MAC address as indicated by first packet seen for the current flow.

        - name: ip
          description: >
            Innermost IPv4 destination address as indicated by first packet seen for the
            current flow.

        - name: ip_location
          type: geo_point
          example: "40.715, -74.011"
          description: >
            The GeoIP location of the `ip_dest` IP address. The field is a string
            containing the latitude and longitude separated by a comma.

        - name: outer_ip
          description: >
            Second innermost IPv4 destination address as indicated by first packet
            seen for the current flow.

        - name: outer_ip_location
          type: geo_point
          example: "40.715, -74.011"
          description: >
            The GeoIP location of the `outer_ip_dest` IP address. The field is a
            string containing the latitude and longitude separated by a comma.

        - name: ipv6
          description: >
            Innermost IPv6 destination address as indicated by first packet seen for the
            current flow.

        - name: ipv6_location
          type: geo_point
          example: "60.715, -76.011"
          description: >
            The GeoIP location of the `ipv6_dest` IP address. The field is a string
            containing the latitude and longitude separated by a comma.

        - name: outer_ipv6
          description: >
            Second innermost IPv6 destination address as indicated by first packet
            seen for the current flow.

        - name: outer_ipv6_location
          type: geo_point
          example: "60.715, -76.011"
          description: >
            The GeoIP location of the `outer_ipv6_dest` IP address. The field is a
            string containing the latitude and longitude separated by a comma.

        - name: port
          description: >
            Destination port number as indicated by first packet seen for the current flow.

        - name: stats
          type: group
          description: >
            Object with destination to source flow measurements.
          fields:
            - name: net_packets_total
              type: long
              description: >
                Total number of packets

            - name: net_bytes_total
              type: long
              description: >
                Total number of bytes
    - name: icmp_id
      description: >
        ICMP id used in ICMP based flow.

    - name: transport
      description: >
        The transport protocol used by the flow. If known, one of "udp" or "tcp".

    - name: connection_id
      description: >
        optional TCP connection id

- key: trans_event
  title: "Transaction Event"
  description: >
    These fields contain data about the transaction itself.
  fields:
    - name: "@timestamp"
      type: date
      required: true
      format: YYYY-MM-DDTHH:MM:SS.milliZ
      example: 2015-01-24T14:06:05.071Z
      description: >
        The timestamp of the event, as measured either by the Beat or
        by a common collector point. The precision is in milliseconds.
        The timezone is UTC.

    - name: type
      description: >
        The type of the transaction (for example, HTTP, MySQL, Redis, or RUM).
      required: true

    - name: direction
      required: true
      description: >
        Indicates whether the transaction is inbound (emitted by server)
        or outbound (emitted by the client). Values can be in or out. No defaults.
      possible_values:
        - in
        - out

    - name: status
      description: >
        The high level status of the transaction. The way to compute this
        value depends on the protocol, but the result has a meaning
        independent of the protocol.
      required: true
      possible_values:
        - OK
        - Error
        - Server Error
        - Client Error

    - name: method
      description: >
        The command/verb/method of the transaction. For HTTP, this is the
        method name (GET, POST, PUT, and so on), for SQL this is the verb (SELECT,
        UPDATE, DELETE, and so on).

    - name: resource
      description: >
        The logical resource that this transaction refers to. For HTTP, this is
        the URL path up to the last slash (/). For example, if the URL is `/users/1`,
        the resource is `/users`. For databases, the resource is typically the
        table name. The field is not filled for all transaction types.

    - name: path
      required: true
      description: >
        The path the transaction refers to. For HTTP, this is the URL.
        For SQL databases, this is the table name. For key-value stores, this
        is the key.

    - name: query
      type: keyword
      description: >
        The query in a human readable format. For HTTP, it will typically be
        something like `GET /users/_search?name=test`. For MySQL, it is
        something like `SELECT id from users where name=test`.

    - name: params
      type: text
      description: >
        The request parameters. For HTTP, these are the POST or GET parameters.
        For Thrift-RPC, these are the parameters from the request.

    - name: notes
      description: >
        Messages from Packetbeat itself. This field usually contains error messages for
        interpreting the raw data. This information can be helpful for troubleshooting.

- key: icmp
  title: "ICMP"
  description: >
    ICMP specific event fields.
  fields:
    - name: icmp
      type: group
      fields:
        - name: version
          description: The version of the ICMP protocol.
          possible_values:
            - 4
            - 6

        - name: request.message
          type: keyword
          description: A human readable form of the request.

        - name: request.type
          type: integer
          description: The request type.

        - name: request.code
          type: integer
          description: The request code.

        - name: response.message
          type: keyword
          description: A human readable form of the response.

        - name: response.type
          type: integer
          description: The response type.

        - name: response.code
          type: integer
          description: The response code.

- key: dns
  title: "DNS"
  description: DNS-specific event fields.
  fields:
    - name: dns
      type: group
      fields:
        - name: id
          type: integer
          description: >
            The DNS packet identifier assigned by the program that generated the
            query. The identifier is copied to the response.

        - name: op_code
          description: >
            The DNS operation code that specifies the kind of query in the message.
            This value is set by the originator of a query and copied into the
            response.
          example: QUERY

        - name: flags.authoritative
          type: boolean
          description: >
            A DNS flag specifying that the responding server is an authority for
            the domain name used in the question.

        - name: flags.recursion_available
          type: boolean
          description: >
            A DNS flag specifying whether recursive query support is available in the
            name server.

        - name: flags.recursion_desired
          type: boolean
          description: >
            A DNS flag specifying that the client directs the server to pursue a
            query recursively. Recursive query support is optional.

        - name: flags.authentic_data
          type: boolean
          description: >
            A DNS flag specifying that the recursive server considers the response
            authentic.

        - name: flags.checking_disabled
          type: boolean
          description: >
            A DNS flag specifying that the client disables the server
            signature validation of the query.

        - name: flags.truncated_response
          type: boolean
          description: >
            A DNS flag specifying that only the first 512 bytes of the reply were
            returned.

        - name: response_code
          description: The DNS status code.
          example: NOERROR

        - name: question.name
          description: >
            The domain name being queried. If the name field contains non-printable
            characters (below 32 or above 126), then those characters are represented
            as escaped base 10 integers (\DDD). Back slashes and quotes are escaped.
            Tabs, carriage returns, and line feeds are converted to \t, \r, and
            \n respectively.
          example: www.google.com.

        - name: question.type
          description: The type of records being queried.
          example: AAAA

        - name: question.class
          description: The class of of records being queried.
          example: IN

        - name: question.etld_plus_one
          description: The effective top-level domain (eTLD) plus one more label.
            For example, the eTLD+1 for "foo.bar.golang.org." is "golang.org.".
            The data for determining the eTLD comes from an embedded copy of the
            data from http://publicsuffix.org.
          example: amazon.co.uk.

        - name: answers_count
          type: integer
          description: >
            The number of resource records contained in the `dns.answers` field.

        - name: answers.name
          description: The domain name to which this resource record pertains.
          example: example.com.

        - name: answers.type
          description: The type of data contained in this resource record.
          example: MX

        - name: answers.class
          description: The class of DNS data contained in this resource record.
          example: IN

        - name: answers.ttl
          description: >
            The time interval in seconds that this resource record may be cached
            before it should be discarded. Zero values mean that the data should
            not be cached.
          type: integer

        - name: answers.data
          description: >
            The data describing the resource. The meaning of this data depends
            on the type and class of the resource record.

        - name: authorities
          type: dict
          description: >
            An array containing a dictionary for each authority section from the
            answer.

        - name: authorities_count
          type: integer
          description: >
            The number of resource records contained in the `dns.authorities` field.
            The `dns.authorities` field may or may not be included depending on the
            configuration of Packetbeat.

        - name: authorities.name
          description: The domain name to which this resource record pertains.
          example: example.com.

        - name: authorities.type
          description: The type of data contained in this resource record.
          example: NS

        - name: authorities.class
          description: The class of DNS data contained in this resource record.
          example: IN

        - name: answers
          type: dict
          description: >
            An array containing a dictionary about each answer section returned by
            the server.

        - name: answers.ttl
          description: >
            The time interval in seconds that this resource record may be cached
            before it should be discarded. Zero values mean that the data should
            not be cached.
          type: integer

        - name: answers.data
          description: >
            The data describing the resource. The meaning of this data depends
            on the type and class of the resource record.

        - name: additionals
          type: dict
          description: >
            An array containing a dictionary for each additional section from the
            answer.

        - name: additionals_count
          type: integer
          description: >
            The number of resource records contained in the `dns.additionals` field.
            The `dns.additionals` field may or may not be included depending on the
            configuration of Packetbeat.

        - name: additionals.name
          description: The domain name to which this resource record pertains.
          example: example.com.

        - name: additionals.type
          description: The type of data contained in this resource record.
          example: NS

        - name: additionals.class
          description: The class of DNS data contained in this resource record.
          example: IN

        - name: additionals.ttl
          description: >
            The time interval in seconds that this resource record may be cached
            before it should be discarded. Zero values mean that the data should
            not be cached.
          type: integer

        - name: additionals.data
          description: >
            The data describing the resource. The meaning of this data depends
            on the type and class of the resource record.

        - name: opt.version
          description: The EDNS version.
          example: "0"

        - name: opt.do
          type: boolean
          description: If set, the transaction uses DNSSEC.

        - name: opt.ext_rcode
          description: Extended response code field.
          example: "BADVERS"

        - name: opt.udp_size
          type: integer
          description: Requestor's UDP payload size (in bytes).

- key: amqp
  title: "AMQP"
  description: AMQP specific event fields.
  fields:
    - name: amqp
      type: group
      fields:
        - name: reply-code
          type: integer
          description: >
            AMQP reply code to an error, similar to http reply-code
          example: 404

        - name: reply-text
          type: keyword
          description: >
            Text explaining the error.

        - name: class-id
          type: integer
          description: >
            Failing method class.

        - name: method-id
          type: integer
          description: >
            Failing method ID.

        - name: exchange
          type: keyword
          description: >
            Name of the exchange.

        - name: exchange-type
          type: keyword
          description: >
            Exchange type.
          example: fanout

        - name: passive
          type: boolean
          description: >
            If set, do not create exchange/queue.

        - name: durable
          type: boolean
          description: >
            If set, request a durable exchange/queue.

        - name: exclusive
          type: boolean
          description: >
            If set, request an exclusive queue.

        - name: auto-delete
          type: boolean
          description: >
            If set, auto-delete queue when unused.

        - name: no-wait
          type: boolean
          description: >
            If set, the server will not respond to the method.

        - name: consumer-tag
          description: >
            Identifier for the consumer, valid within the current channel.

        - name: delivery-tag
          type: integer
          description: >
            The server-assigned and channel-specific delivery tag.

        - name: message-count
          type: integer
          description: >
            The number of messages in the queue, which will be zero for
            newly-declared queues.

        - name: consumer-count
          type: integer
          description: >
            The number of consumers of a queue.

        - name: routing-key
          type: keyword
          description: >
            Message routing key.

        - name: no-ack
          type: boolean
          description: >
            If set, the server does not expect acknowledgements for messages.

        - name: no-local
          type: boolean
          description: >
            If set, the server will not send messages to the connection that
            published them.

        - name: if-unused
          type: boolean
          description: >
            Delete only if unused.

        - name: if-empty
          type: boolean
          description: >
            Delete only if empty.

        - name: queue
          type: keyword
          description: >
            The queue name identifies the queue within the vhost.

        - name: redelivered
          type: boolean
          description: >
            Indicates that the message has been previously delivered to this
            or another client.

        - name: multiple
          type: boolean
          description: >
            Acknowledge multiple messages.

        - name: arguments
          type: dict
          description: >
            Optional additional arguments passed to some methods. Can be of
            various types.

        - name: mandatory
          type: boolean
          description: >
            Indicates mandatory routing.

        - name: immediate
          type: boolean
          description: >
            Request immediate delivery.

        - name: content-type
          type: keyword
          description: >
            MIME content type.
          example: text/plain

        - name: content-encoding
          type: keyword
          description: >
            MIME content encoding.

        - name: headers
          type: dict
          dict-type: keyword
          description: >
            Message header field table.

        - name: delivery-mode
          type: keyword
          description: >
            Non-persistent (1) or persistent (2).

        - name: priority
          type: integer
          description: >
            Message priority, 0 to 9.

        - name: correlation-id
          type: keyword
          description: >
            Application correlation identifier.

        - name: reply-to
          type: keyword
          description: >
            Address to reply to.

        - name: expiration
          type: keyword
          description: >
            Message expiration specification.

        - name: message-id
          type: keyword
          description: >
            Application message identifier.

        - name: timestamp
          type: keyword
          description: >
            Message timestamp.

        - name: type
          type: keyword
          description: >
            Message type name.

        - name: user-id
          type: keyword
          description: >
            Creating user id.

        - name: app-id
          type: keyword
          description: >
            Creating application id.

- key: http
  title: "HTTP"
  description: HTTP-specific event fields.
  fields:
    - name: http
      type: group
      fields:
        - name: code
          description: The HTTP status code.
          example: 404

        - name: phrase
          description: The HTTP status phrase.
          example: Not found.

        - name: request_headers
          type: dict
          dict-type: keyword
          description: >
            A map containing the captured header fields from the request.
            Which headers to capture is configurable. If headers with the same
            header name are present in the message, they will be separated by
            commas.

        - name: response_headers
          type: dict
          dict-type: keyword
          description: >
            A map containing the captured header fields from the response.
            Which headers to capture is configurable. If headers with the
            same header name are present in the message, they will be separated
            by commas.

        - name: content_length
          type: long
          description: >
            The value of the Content-Length header if present.

- key: memcache
  title: "Memcache"
  description: Memcached-specific event fields
  fields:
    - name: memcache
      type: group
      fields:
        - name: protocol_type
          type: keyword
          description: >
            The memcache protocol implementation. The value can be "binary"
            for binary-based, "text" for text-based, or "unknown" for an unknown
            memcache protocol type.

        - name: request.line
          type: keyword
          description: >
            The raw command line for unknown commands ONLY.

        - name: request.command
          type: keyword
          description: >
            The memcache command being requested in the memcache text protocol.
            For example "set" or "get".
            The binary protocol opcodes are translated into memcache text protocol
            commands.

        - name: response.command
          type: keyword
          description: >
            Either the text based protocol response message type
            or the name of the originating request if binary protocol is used.

        - name: request.type
          type: keyword
          description: >
            The memcache command classification. This value can be "UNKNOWN", "Load",
            "Store", "Delete", "Counter", "Info", "SlabCtrl", "LRUCrawler",
            "Stats", "Success", "Fail", or "Auth".

        - name: response.type
          type: keyword
          description: >
            The memcache command classification. This value can be "UNKNOWN", "Load",
            "Store", "Delete", "Counter", "Info", "SlabCtrl", "LRUCrawler",
            "Stats", "Success", "Fail", or "Auth".
            The text based protocol will employ any of these, whereas the
            binary based protocol will mirror the request commands only (see
            `memcache.response.status` for binary protocol).

        - name: response.error_msg
          type: keyword
          description: >
            The optional error message in the memcache response (text based protocol only).

        - name: request.opcode
          type: keyword
          description: >
            The binary protocol message opcode name.

        - name: response.opcode
          type: keyword
          description: >
            The binary protocol message opcode name.

        - name: request.opcode_value
          type: integer
          description: >
            The binary protocol message opcode value.

        - name: response.opcode_value
          type: integer
          description: >
            The binary protocol message opcode value.

        - name: request.opaque
          type: integer
          description: >
            The binary protocol opaque header value used for correlating request
            with response messages.

        - name: response.opaque
          type: integer
          description: >
            The binary protocol opaque header value used for correlating request
            with response messages.

        - name: request.vbucket
          type: integer
          description: >
            The vbucket index sent in the binary message.

        - name: response.status
          type: keyword
          description: >
            The textual representation of the response error code
            (binary protocol only).

        - name: response.status_code
          type: integer
          description: >
            The status code value returned in the response (binary protocol only).

        - name: request.keys
          type: list
          description: >
            The list of keys sent in the store or load commands.

        - name: response.keys
          type: list
          description: >
            The list of keys returned for the load command (if present).

        - name: request.count_values
          type: integer
          description: >
            The number of values found in the memcache request message.
            If the command does not send any data, this field is missing.

        - name: response.count_values
          type: integer
          description: >
            The number of values found in the memcache response message.
            If the command does not send any data, this field is missing.

        - name: request.values
          type: list
          description: >
            The list of base64 encoded values sent with the request (if present).

        - name: response.values
          type: list
          description: >
            The list of base64 encoded values sent with the response (if present).

        - name: request.bytes
          type: long
          format: bytes
          description: >
            The byte count of the values being transfered.

        - name: response.bytes
          type: long
          format: bytes
          description: >
            The byte count of the values being transfered.

        - name: request.delta
          type: integer
          description: >
            The counter increment/decrement delta value.

        - name: request.initial
          type: integer
          description: >
            The counter increment/decrement initial value parameter (binary protocol only).

        - name: request.verbosity
          type: integer
          description: >
            The value of the memcache "verbosity" command.

        - name: request.raw_args
          type: keyword
          description: >
            The text protocol raw arguments for the "stats ..." and "lru crawl ..." commands.

        - name: request.source_class
          type: integer
          description: >
            The source class id in 'slab reassign' command.

        - name: request.dest_class
          type: integer
          description: >
            The destination class id in 'slab reassign' command.

        - name: request.automove
          type: keyword
          description: >
              The automove mode in the 'slab automove' command expressed as a string.
              This value can be "standby"(=0), "slow"(=1), "aggressive"(=2), or the raw value if
              the value is unknown.

        - name: request.flags
          type: long
          description: >
            The memcache command flags sent in the request (if present).

        - name: response.flags
          type: long
          description: >
            The memcache message flags sent in the response (if present).

        - name: request.exptime
          type: integer
          description: >
            The data expiry time in seconds sent with the memcache command (if present).
            If the value is <30 days, the expiry time is relative to "now", or else it
            is an absolute Unix time in seconds (32-bit).

        - name: request.sleep_us
          type: long
          description: >
            The sleep setting in microseconds for the 'lru_crawler sleep' command.

        - name: response.value
          type: long
          description: >
            The counter value returned by a counter operation.

        - name: request.noreply
          type: boolean
          description: >
            Set to true if noreply was set in the request.
            The `memcache.response` field will be missing.

        - name: request.quiet
          type: boolean
          description: >
            Set to true if the binary protocol message is to be treated as a quiet message.

        - name: request.cas_unique
          type: long
          description: >
            The CAS (compare-and-swap) identifier if present.

        - name: response.cas_unique
          type: long
          description: >
            The CAS (compare-and-swap) identifier to be used with CAS-based updates
            (if present).

        - name: response.stats
          type: list
          description: >
            The list of statistic values returned. Each entry is a dictionary with the
            fields "name" and "value".

        - name: response.version
          type: keyword
          description: >
            The returned memcache version string.

- key: mysql
  title: "MySQL"
  description: >
    MySQL-specific event fields.
  fields:
    - name: mysql
      type: group
      fields:
        - name: iserror
          type: boolean
          description: >
           If the MySQL query returns an error, this field is set to true.

        - name: affected_rows
          type: integer
          description: >
            If the MySQL command is successful, this field contains the affected
            number of rows of the last statement.

        - name: insert_id
          description: >
            If the INSERT query is successful, this field contains the id of the
            newly inserted row.

        - name: num_fields
          description: >
            If the SELECT query is successful, this field is set to the number
            of fields returned.

        - name: num_rows
          description: >
            If the SELECT query is successful, this field is set to the number
            of rows returned.

        - name: query
          description: >
            The row mysql query as read from the transaction's request.

        - name: error_code
          type: integer
          description: >
            The error code returned by MySQL.

        - name: error_message
          description: >
            The error info message returned by MySQL.
- key: pgsql
  title: "PostgreSQL"
  description: >
    PostgreSQL-specific event fields.
  fields:
    - name: pgsql
      type: group
      fields:
        - name: query
          description: >
            The row pgsql query as read from the transaction's request.

        - name: iserror
          type: boolean
          description: >
            If the PgSQL query returns an error, this field is set to true.

        - name: error_code
          description: The PostgreSQL error code.
          type: integer

        - name: error_message
          description: The PostgreSQL error message.

        - name: error_severity
          description: The PostgreSQL error severity.
          possible_values:
            - ERROR
            - FATAL
            - PANIC

        - name: num_fields
          description: >
            If the SELECT query if successful, this field is set to the number
            of fields returned.

        - name: num_rows
          description: >
            If the SELECT query if successful, this field is set to the number
            of rows returned.


- key: thrift
  title: "Thrift-RPC"
  description: >
    Thrift-RPC specific event fields.
  fields:
    - name: thrift
      type: group
      fields:
        - name: params
          description: >
            The RPC method call parameters in a human readable format. If the IDL
            files are available, the parameters use names whenever possible.
            Otherwise, the IDs from the message are used.

        - name: service
          description: >
            The name of the Thrift-RPC service as defined in the IDL files.

        - name: return_value
          description: >
            The value returned by the Thrift-RPC call. This is encoded in a human
            readable format.

        - name: exceptions
          description: >
            If the call resulted in exceptions, this field contains the exceptions in a human
            readable format.

- key: redis
  title: "Redis"
  description: >
    Redis-specific event fields.
  fields:
    - name: redis
      type: group
      fields:
        - name: return_value
          description: >
            The return value of the Redis command in a human readable format.

        - name: error
          description: >
            If the Redis command has resulted in an error, this field contains the
            error message returned by the Redis server.

- key: mongodb
  title: "MongoDb"
  description: >
    MongoDB-specific event fields. These fields mirror closely
    the fields for the MongoDB wire protocol. The higher level fields
    (for example, `query` and `resource`) apply to MongoDB events as well.
  fields:
    - name: mongodb
      type: group
      fields:
        - name: error
          description: >
            If the MongoDB request has resulted in an error, this field contains the
            error message returned by the server.
        - name: fullCollectionName
          description: >
            The full collection name.
            The full collection name is the concatenation of the database name with the collection name,
            using a dot (.) for the concatenation.
            For example, for the database foo and the collection bar, the full collection name is foo.bar.
        - name: numberToSkip
          type: integer
          description: >
            Sets the number of documents to omit - starting from the first document in the resulting dataset -
            when returning the result of the query.
        - name: numberToReturn
          type: integer
          description: >
            The requested maximum number of documents to be returned.
        - name: numberReturned
          type: integer
          description: >
            The number of documents in the reply.
        - name: startingFrom
          description: >
            Where in the cursor this reply is starting.
        - name: query
          description: >
            A JSON document that represents the query.
            The query will contain one or more elements, all of which must match for a document
            to be included in the result set.
            Possible elements include $query, $orderby, $hint, $explain, and $snapshot.
        - name: returnFieldsSelector
          description: >
            A JSON document that limits the fields in the returned documents.
            The returnFieldsSelector contains one or more elements, each of which is the name of a field that should be returned,
            and the integer value 1.
        - name: selector
          description: >
            A BSON document that specifies the query for selecting the document to update or delete.
        - name: update
          description: >
            A BSON document that specifies the update to be performed.
            For information on specifying updates, see the Update Operations documentation from the MongoDB Manual.
        - name: cursorId
          description: >
            The cursor identifier returned in the OP_REPLY. This must be the value that was returned from the database.

    - name: rpc
      type: group
      description: OncRPC specific event fields.
      fields:
        - name: xid
          description: RPC message transaction identifier.

        - name: call_size
          type: integer
          description: RPC call size with argument.

        - name: reply_size
          type: integer
          description: RPC reply size with argument.

        - name: status
          description: RPC message reply status.

        - name: time
          type: long
          description: RPC message processing time.

        - name: time_str
          description: RPC message processing time in human readable form.

        - name: auth_flavor
          description: RPC authentication flavor.

        - name: cred.uid
          type: integer
          description: RPC caller's user id, in case of auth-unix.

        - name: cred.gid
          type: integer
          description: RPC caller's group id, in case of auth-unix.

        - name: cred.gids
          description: RPC caller's secondary group ids, in case of auth-unix.

        - name: cred.stamp
          type: integer
          description: Arbitrary ID which the caller machine may generate.

        - name: cred.machinename
          description: The name of the caller's machine.

- key: nfs
  title: "NFS"
  description: NFS v4/3 specific event fields.
  fields:
    - name: nfs
      type: group
      fields:
        - name: version
          type: integer
          description: NFS protocol version number.

        - name: minor_version
          type: integer
          description: NFS protocol minor version number.

        - name: tag
          description: NFS v4 COMPOUND operation tag.

        - name: opcode
          description: >
            NFS operation name, or main operation name, in case of COMPOUND
            calls.

        - name: status
          description: NFS operation reply status.


- key: raw
  title: Raw
  description: These fields contain the raw transaction data.
  fields:
    - name: request
      type: text
      description: >
        For text protocols, this is the request as seen on the wire
        (application layer only). For binary protocols this is our
        representation of the request.

    - name: response
      type: text
      description: >
        For text protocols, this is the response as seen on the wire
        (application layer only). For binary protocols this is our
        representation of the request.

- key: trans_measurements
  title: "Measurements (Transactions)"
  description: >
    These fields contain measurements related to the transaction.
  fields:
    - name: responsetime
      description: >
        The wall clock time it took to complete the transaction.
        The precision is in milliseconds.
      type: long

    - name: cpu_time
      description: The CPU time it took to complete the transaction.
      type: long

    - name: bytes_in
      description: >
        The number of bytes of the request. Note that this size is
        the application layer message length, without the length of the IP or
        TCP headers.
      type: long
      format: bytes

    - name: bytes_out
      description: >
        The number of bytes of the response. Note that this size is
        the application layer message length, without the length of the IP or
        TCP headers.
      type: long
      format: bytes

    - name: dnstime
      type: long
      description: >
        The time it takes to query the name server for a given request.
        This is typically used for RUM (real-user-monitoring) but can
        also have values for server-to-server communication when DNS
        is used for service discovery.
        The precision is in microseconds.

    - name: connecttime
      type: long
      description: >
        The time it takes for the TCP connection to be established for
        the given transaction.
        The precision is in microseconds.

    - name: loadtime
      type: long
      description: >
        The time it takes for the content to be loaded. This is typically
        used for RUM (real-user-monitoring) but it can make sense in other
        cases as well.
        The precision is in microseconds.

    - name: domloadtime
      type: long
      description: >
        In RUM (real-user-monitoring), the total time it takes for the
        DOM to be loaded. In terms of the W3 Navigation Timing API, this is
        the difference between `domContentLoadedEnd` and
        `domContentLoadedStart`.
