:release-state: released

//TODO: Remove release-state definition before merging.

[[packetbeat-getting-started]]
== Get started: install and configure {beatname_uc}

++++
<titleabbrev>Get started</titleabbrev>
++++

The best way to understand the value of a network packet analytics system like
{Packetbeat} is to try it on your own traffic.

This guide describes how to get started quickly with network packets analytics.
You'll learn how to:

//TODO: Update this

* install {beatname_uc} on each system you want to monitor
* specify the network devices and protocols to sniff
* parse the packet data into fields and send it to {es}
* visualize the packet data in {kib}

[float]
=== Before you begin

You need {es} for storing and searching your data, and {kib} for visualizing and
managing it.

// TODO: We might want to provide the instructions for spinning up a deployment
// here. See
// https://github.com/elastic/docs/pull/1815/files#diff-934228d98950ff95c8c53444966daeaeR10
// Or link to the topic that's available for cloud.

include::{libbeat-dir}/tab-widgets/spinup-stack-widget.asciidoc[]

[float]
[[installation]]
=== Step 1: Install Packetbeat

Install {beatname_uc} on all the servers you want to monitor.

To download and install {beatname_uc}, use the commands that work with your
system:

//TODO: ADD WIDGETS and other installation options section

[[deb]]
*deb:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo apt-get install libpcap0.8
curl -L -O https://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-{version}-amd64.deb
sudo dpkg -i packetbeat-{version}-amd64.deb
----------------------------------------------------------------------

endif::[]

[[rpm]]
*rpm:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo yum install libpcap
curl -L -O https://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-{version}-x86_64.rpm
sudo rpm -vi packetbeat-{version}-x86_64.rpm
----------------------------------------------------------------------

endif::[]

[[docker]]
*docker:*

See <<running-on-docker, Running on Docker>> for deploying Docker containers.

[[mac]]
*mac:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
curl -L -O https://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-{version}-darwin-x86_64.tar.gz
tar xzvf packetbeat-{version}-darwin-x86_64.tar.gz
----------------------------------------------------------------------

endif::[]

include::{libbeat-dir}/shared-brew-install.asciidoc[]

[[linux]]
*linux:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
curl -L -O https://artifacts.elastic.co/downloads/beats/packetbeat/packetbeat-{version}-linux-x86_64.tar.gz
tar xzvf packetbeat-{version}-linux-x86_64.tar.gz
----------------------------------------------------------------------

endif::[]

[[win]]
*win:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

. Download and install a packet sniffing library,
such as https://nmap.org/npcap/[Npcap], that implements the
https://github.com/the-tcpdump-group/libpcap[libpcap] interfaces.
+
If you use Npcap, make sure you install it in WinPcap API-compatible mode. If
you plan to capture traffic from the loopback device (127.0.0.1 traffic), also
select the option to support loopback traffic. 

. Download the Packetbeat Windows zip file from the
https://www.elastic.co/downloads/beats/packetbeat[downloads page].

. Extract the contents of the zip file into `C:\Program Files`.

. Rename the `packetbeat-<version>-windows` directory to `Packetbeat`.

. Open a PowerShell prompt as an Administrator (right-click the PowerShell icon and select *Run As Administrator*).

. From the PowerShell prompt, run the following commands to install Packetbeat as a Windows service:
+
[source,shell]
----------------------------------------------------------------------
PS > cd 'C:\Program Files\Packetbeat'
PS C:\Program Files\Packetbeat> .\install-service-packetbeat.ps1
----------------------------------------------------------------------

NOTE: If script execution is disabled on your system, you need to set the execution policy for the current session to allow the script to run. For example: `PowerShell.exe -ExecutionPolicy UnRestricted -File .\install-service-packetbeat.ps1`.

endif::[]

Before starting Packetbeat, you should look at the configuration options in the
configuration file, for example `C:\Program Files\Packetbeat\packetbeat.yml` or `/etc/packetbeat/packetbeat.yml`. For
more information about these options, see <<configuring-howto-packetbeat>>.


[float]
[[set-connection]]
=== Step 2: Set the connection information

include::{libbeat-dir}/shared/connecting-to-es.asciidoc[]


[float]
[[configuration]]
=== Step 3: Configure sniffing

include::{libbeat-dir}/shared/configuring-intro.asciidoc[]

To configure Packetbeat:

. Select the network interface from which to capture the traffic.

* On
Linux: Packetbeat supports capturing all messages sent or received by the
server on which Packetbeat is installed. For this, use `any` as the device:
+
[source,yaml]
----------------------------------------------------------------------
packetbeat.interfaces.device: any
----------------------------------------------------------------------

* On OS X, capturing from the `any` device doesn't work. You would
typically use either `lo0` or `en0` depending on which traffic you want to
capture.

* On Windows, run the following command to list the available network interfaces:
+
[source,shell]
----------------------------------------------------------------------
PS C:\Program Files\Packetbeat> .\packetbeat.exe devices

0: \Device\NPF_{113535AD-934A-452E-8D5F-3004797DE286} (Intel(R) PRO/1000 MT Desktop Adapter)
----------------------------------------------------------------------
+
In this example, there's only one network card, with the index 0, installed on the system. If
there are multiple network cards, remember the index of the device you want to use for
capturing the traffic.
+
Modify the `device` line to point to the index of the device:
+
[source,yml]
----------------------------------------------------------------------
packetbeat.interfaces.device: 0
----------------------------------------------------------------------

. In the protocols section, configure the ports on which Packetbeat can find each
protocol. If you use any non-standard ports, add them here. Otherwise, the
default values should do just fine.
+
[source,yaml]
----------------------------------------------------------------------
packetbeat.protocols:

- type: dhcpv4
  ports: [67, 68]

- type: dns
  ports: [53]

- type: http
  ports: [80, 8080, 8081, 5000, 8002]

- type: memcache
  ports: [11211]

- type: mysql
  ports: [3306,3307]

- type: pgsql
  ports: [5432]

- type: redis
  ports: [6379]

- type: thrift
  ports: [9090]

- type: mongodb
  ports: [27017]

- type: cassandra
  ports: [9042]

- type: tls
  ports: [443, 993, 995, 5223, 8443, 8883, 9243]

----------------------------------------------------------------------
+
include::{libbeat-dir}/step-look-at-config.asciidoc[]

[float]
[[setup-assets]]
=== Step 4: Set up assets

include::{libbeat-dir}/shared/setup.asciidoc[]

[float]
[[start]]
=== Step 5: Start Packetbeat

Before starting {beatname_uc}, modify the user credentials in
+{beatname_lc}.yml+ and specify a user who has restricted privileges,
especially if you're running {beatname_uc} in a production environment.
For more information, see <<privileges-to-publish-events>>.

To start {beatname_uc}, run:

include::{libbeat-dir}/tab-widgets/start-widget.asciidoc[]

{beatname_uc} should begin streaming data to {es}.

[float]
[[view-data]]
=== Step 6: View your data in {kib}

include::{libbeat-dir}/shared/opendashboards.asciidoc[tag=open-dashboards-intro]

include::{libbeat-dir}/shared/opendashboards.asciidoc[tag=open-dashboards]

TIP: To populate the client locations map in the overview dashboard, follow the
steps described in <<{beatname_lc}-geoip>>.

[role="screenshot"]
image::./images/packetbeat-statistics.png[Packetbeat statistics]

[float]
=== What's next?

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=obs-intro]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-metrics]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-logs]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-uptime]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-apm]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-security]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=add-win-logs]

include::{libbeat-dir}/shared/obs-apps.asciidoc[tag=obs-apps]