[[packetbeat-getting-started]]
== Getting Started

The best way to understand the value of a network packet analytics system like
Packetbeat is to try it on your own traffic.

To get started with your own Packetbeat setup, install and configure these related products:

 * Elasticsearch for storage and indexing the data. {libbeat}/getting-started.html#elasticsearch-installation[More details]
 * Kibana for the UI. {libbeat}/getting-started.html#kibana-installation[More details]
 * Optionally Logstash for inserting data into Elasticsearch. {libbeat}/getting-started.html#logstash-installation[More details]

After you have installed these products, you can start <<packetbeat-installation>>.

[[packetbeat-installation]]
=== Installing Packetbeat

To download and install Packetbeat on your application servers, use the commands
that work with your system (<<deb, deb>> for Debian/Ubuntu, <<rpm, rpm>> for
Redhat/Centos/Fedora, <<mac, mac>> for OS X, and <<win, win>> for Windows).

[NOTE]
==================================================
If you use Apt or Yum, you can {libbeat}/setup-repositories.html[install Packetbeat from our repositories] to update to the newest version more easily. 

See our https://www.elastic.co/downloads/beats/packetbeat[download page] for other installation options, such as 32-bit images. 
==================================================

[[deb]]
*deb:*

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo apt-get install libpcap0.8
curl -L -O https://download.elastic.co/beats/packetbeat/packetbeat_{version}_amd64.deb
sudo dpkg -i packetbeat_{version}_amd64.deb
----------------------------------------------------------------------

[[rpm]]
*rpm:*

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo yum install libpcap
curl -L -O https://download.elastic.co/beats/packetbeat/packetbeat-{version}-x86_64.rpm
sudo rpm -vi packetbeat-{version}-x86_64.rpm
----------------------------------------------------------------------

[[mac]]
*mac:*

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
curl -L -O https://download.elastic.co/beats/packetbeat/packetbeat-{version}-darwin.tgz
tar xzvf packetbeat-{version}-darwin.tgz
----------------------------------------------------------------------

[[win]]
*win:*

. Download and install WinPcap from this
http://www.winpcap.org/install/default.htm[page]. WinPcap is a library that uses
a driver to enable packet capturing.

. Download the Packetbeat Windows zip file from the
https://www.elastic.co/downloads/beats/packetbeat[downloads page].

. Extract the contents of the zip file into `C:\Program Files`.

. Rename the `packetbeat-<version>-windows` directory to `Packetbeat`.

. Open a PowerShell prompt as an Administrator (right-click the PowerShell icon and select *Run As Administrator*). If you are running Windows XP, you may need to download and install PowerShell.

. Run the following commands to install Packetbeat as a Windows service:
+
[source,shell]
----------------------------------------------------------------------
PS > cd 'C:\Program Files\Packetbeat'
PS C:\Program Files\Packetbeat> .\install-service-packetbeat.ps1
----------------------------------------------------------------------

NOTE: If script execution is disabled on your system, you need to set the execution policy for the current session to allow the script to run. For example: `PowerShell.exe -ExecutionPolicy UnRestricted -File .\install-service-packetbeat.ps1`. 

Before starting Packetbeat, you should look at the configuration options in the
configuration file, for example `C:\Program Files\Packetbeat\packetbeat.yml` or `/etc/packetbeat/packetbeat.yml`. For
more information about these options, see <<packetbeat-configuration>>.

[[configuring-packetbeat]]
=== Configuring Packetbeat

To configure Packetbeat, you edit the configuration file. For rpm and deb, you'll
find the configuration file at `/etc/packetbeat/packetbeat.yml`. For mac and win, look in
the archive that you just extracted.

To configure Packetbeat:

. Select the network interface from which to capture the traffic.

* On
Linux: Packetbeat supports capturing all messages sent or received by the
server on which Packetbeat is installed. For this, use `any` as the device:
+
[source,yaml]
----------------------------------------------------------------------
# Select the network interfaces to sniff the data. You can use the "any"
# keyword to sniff on all connected interfaces.
interfaces:
  device: any
----------------------------------------------------------------------

* On OS X, capturing from the `any` device doesn't work. You would
typically use either `lo0` or `en0` depending on which traffic you want to
capture.

* On Windows, run the following command to list the available network interfaces:
+
[source,shell]
----------------------------------------------------------------------
PS C:\Program Files\Packetbeat> .\packetbeat.exe -devices

0: \Device\NPF_{113535AD-934A-452E-8D5F-3004797DE286} (Intel(R) PRO/1000 MT Desktop Adapter)
----------------------------------------------------------------------
+
In this example, there is only one network card, with the index 0, installed on the system. If
there are multiple network cards, remember the index of the device you want to use for
capturing the traffic.
+
Modify the `device` line to point to the index of the device:
+
[source,yml]
----------------------------------------------------------------------
interfaces:
  device: 0
----------------------------------------------------------------------

. In the protocols section, configure the ports on which Packetbeat can find each
protocol. If you use any non-standard ports, add them here. Otherwise, the
default values should do just fine.
+
[source,yaml]
----------------------------------------------------------------------
protocols:
  dns:
    ports: [53]
    
    include_authorities: true
    include_additionals: true
    
  http:
    ports: [80, 8080, 8081, 5000, 8002]

  memcache:
    ports: [11211]

  mysql:
    ports: [3306]
    
  pgsql:
    ports: [5432]

  redis:
    ports: [6379]

  thrift:
    ports: [9090]
    
  mongodb:
    ports: [27017]
----------------------------------------------------------------------
+
. Set the IP address and port where Packetbeat can find the Elasticsearch
installation:
+
[source,yaml]
----------------------------------------------------------------------
# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.
output:
  ### Elasticsearch as output
  elasticsearch:
    # Array of hosts to connect to.
     hosts: ["192.168.1.42:9200"]
----------------------------------------------------------------------
+
If you are sending output to Logstash, see <<config-filebeat-logstash>> instead.

[[config-filebeat-logstash]]
=== Configuring Packetbeat to Use Logstash

include::../../libbeat/docs/shared-logstash-config.asciidoc[]

[[packetbeat-template]]
=== Loading the Index Template in Elasticsearch

Before starting Packetbeat, you need to load the
http://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates.html[index
template], which lets Elasticsearch know which fields should be analyzed
in which way.

The recommended template file is installed by the Packetbeat packages. Load it with the
following command:

*deb or rpm:*

[source,shell]
----------------------------------------------------------------------
curl -XPUT 'http://localhost:9200/_template/packetbeat' -d@/etc/packetbeat/packetbeat.template.json
----------------------------------------------------------------------

*mac:*

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
cd packetbeat-{version}-darwin
curl -XPUT 'http://localhost:9200/_template/packetbeat' -d@packetbeat.template.json
----------------------------------------------------------------------

*win:*

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
PS C:\Program Files\Packetbeat> Invoke-WebRequest -Method Put -InFile packetbeat.template.json -Uri http://localhost:9200/_template/packetbeat?pretty
----------------------------------------------------------------------

where `localhost:9200` is the IP and port where Elasticsearch is listening.

NOTE: If you've already used Packetbeat to index data into Elasticsearch,
the index may contain old documents. After you load the index template,
you can delete the old documents from `packetbeat-*` to force Kibana to look
at the newest documents. Use this command:
`curl -XDELETE 'http://localhost:9200/packetbeat-*'`.

=== Running Packetbeat

Run Packetbeat by issuing the following command:

*deb:*

[source,shell]
----------------------------------------------------------------------
sudo /etc/init.d/packetbeat start
----------------------------------------------------------------------

*rpm:*

[source,shell]
----------------------------------------------------------------------
sudo /etc/init.d/packetbeat start
----------------------------------------------------------------------

*mac:*

[source,shell]
----------------------------------------------------------------------
sudo ./packetbeat -e -c packetbeat.yml -d "publish"
----------------------------------------------------------------------

*win:*

[source,shell]
----------------------------------------------------------------------
PS C:\Program Files\Packetbeat> Start-Service packetbeat
----------------------------------------------------------------------

By default the log files are stored in `C:\ProgramData\packetbeat\Logs`.

=== Testing the Packetbeat Installation

Packetbeat is now ready to capture data from your network traffic. You can test
that it works by creating a simple HTTP request. For example:

[source,shell]
----------------------------------------------------------------------
curl http://www.elastic.co/ > /dev/null
----------------------------------------------------------------------

Now verify that the data is present in Elasticsearch by issuing the following command:

[source,shell]
----------------------------------------------------------------------
curl -XGET 'http://localhost:9200/packetbeat-*/_search?pretty'
----------------------------------------------------------------------

Make sure that you replace `localhost:9200` with the address of your Elasticsearch
instance. The command should return data about the HTTP transaction you just created.

=== Loading Sample Kibana Dashboards

To make it easier for you to get application performance insights
from packet data, we have created a few sample dashboards. The
dashboards are maintained in this
https://github.com/elastic/beats-dashboards[GitHub repository], which also
includes instructions for loading the dashboards.

You can load all of the sample dashboards automatically by following {libbeat}/getting-started.html#load-kibana-dashboards[these steps].


image:./images/packetbeat-statistics.png[Packetbeat statistics]

These dashboards are provided as examples. We recommend that you
http://www.elastic.co/guide/en/kibana/current/dashboard.html[customize] them
to meet your needs.

Enjoy!
