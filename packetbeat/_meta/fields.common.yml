- key: common
  title: Common
  description: >
      These fields contain data about the environment in which the
      transaction or flow was captured.
  fields:
    - name: real_ip
      type: ip
      description: >
        If the server initiating the transaction is a proxy, this field
        contains the original client IP address.
        For HTTP, for example, the IP address extracted from a configurable
        HTTP header, by default `X-Forwarded-For`.

        Unless this field is disabled, it always has a value, and it matches
        the `client_ip` for non proxy clients.
      format: Dotted notation.

    - name: transport
      description: >
        The transport protocol used for the transaction. If not specified, then
        tcp is assumed.
      example: udp

    - name: type
      description: >
        The type of the transaction (for example, HTTP, MySQL, Redis, or RUM) or "flow" in case of flows.
      required: true

    - name: server.process.name
      description: >
        The name of the process that served the transaction.

    - name: server.process.args
      description: >
        The command-line of the process that served the transaction.

    - name: server.process.executable
      description: >
        Absolute path to the server process executable.

    - name: server.process.working_directory
      description: >
        The working directory of the server process.

    - name: server.process.start
      description: >
        The time the server process started.

    - name: client.process.name
      description: >
        The name of the process that initiated the transaction.

    - name: client.process.args
      description: >
        The command-line of the process that initiated the transaction.

    - name: client.process.executable
      description: >
        Absolute path to the client process executable.

    - name: client.process.working_directory
      description: >
        The working directory of the client process.

    - name: client.process.start
      description: >
        The time the client process started.

- key: flows_event
  title: "Flow Event"
  description: >
    These fields contain data about the flow itself.
  fields:
    - name: flow.final
      type: boolean
      description: >
        Indicates if event is last event in flow. If final is false, the event
        reports an intermediate flow state only.

    - name: flow.id
      description: >
        Internal flow ID based on connection meta data and address.

    - name: flow.vlan
      type: long
      description: >
        VLAN identifier from the 802.1q frame. In case of a multi-tagged frame
        this field will be an array with the outer tag's VLAN identifier listed
        first.

- key: trans_event
  title: "Transaction Event"
  description: >
    These fields contain data about the transaction itself.
  fields:

    - name: status
      description: >
        The high level status of the transaction. The way to compute this
        value depends on the protocol, but the result has a meaning
        independent of the protocol.
      required: true
      possible_values:
        - OK
        - Error
        - Server Error
        - Client Error

    - name: method
      description: >
        The command/verb/method of the transaction. For HTTP, this is the
        method name (GET, POST, PUT, and so on), for SQL this is the verb (SELECT,
        UPDATE, DELETE, and so on).

    - name: resource
      description: >
        The logical resource that this transaction refers to. For HTTP, this is
        the URL path up to the last slash (/). For example, if the URL is `/users/1`,
        the resource is `/users`. For databases, the resource is typically the
        table name. The field is not filled for all transaction types.

    - name: path
      required: true
      description: >
        The path the transaction refers to. For HTTP, this is the URL.
        For SQL databases, this is the table name. For key-value stores, this
        is the key.

    - name: query
      type: keyword
      description: >
        The query in a human readable format. For HTTP, it will typically be
        something like `GET /users/_search?name=test`. For MySQL, it is
        something like `SELECT id from users where name=test`.

    - name: params
      type: text
      description: >
        The request parameters. For HTTP, these are the POST or GET parameters.
        For Thrift-RPC, these are the parameters from the request.

    - name: notes
      description: >
        Messages from Packetbeat itself. This field usually contains error messages for
        interpreting the raw data. This information can be helpful for troubleshooting.

- key: raw
  title: Raw
  description: These fields contain the raw transaction data.
  fields:
    - name: request
      type: text
      description: >
        For text protocols, this is the request as seen on the wire
        (application layer only). For binary protocols this is our
        representation of the request.

    - name: response
      type: text
      description: >
        For text protocols, this is the response as seen on the wire
        (application layer only). For binary protocols this is our
        representation of the request.

- key: trans_measurements
  title: "Measurements (Transactions)"
  description: >
    These fields contain measurements related to the transaction.
  fields:
    - name: responsetime
      description: >
        The wall clock time it took to complete the transaction.
        The precision is in milliseconds.
      type: long

    - name: cpu_time
      description: The CPU time it took to complete the transaction.
      type: long

    - name: bytes_in
      description: >
        The number of bytes of the request. Note that this size is
        the application layer message length, without the length of the IP or
        TCP headers.
      type: long
      format: bytes

    - name: bytes_out
      description: >
        The number of bytes of the response. Note that this size is
        the application layer message length, without the length of the IP or
        TCP headers.
      type: long
      format: bytes

    - name: dnstime
      type: long
      description: >
        The time it takes to query the name server for a given request.
        This is typically used for RUM (real-user-monitoring) but can
        also have values for server-to-server communication when DNS
        is used for service discovery.
        The precision is in microseconds.

    - name: connecttime
      type: long
      description: >
        The time it takes for the TCP connection to be established for
        the given transaction.
        The precision is in microseconds.

    - name: loadtime
      type: long
      description: >
        The time it takes for the content to be loaded. This is typically
        used for RUM (real-user-monitoring) but it can make sense in other
        cases as well.
        The precision is in microseconds.

    - name: domloadtime
      type: long
      description: >
        In RUM (real-user-monitoring), the total time it takes for the
        DOM to be loaded. In terms of the W3 Navigation Timing API, this is
        the difference between `domContentLoadedEnd` and
        `domContentLoadedStart`.

