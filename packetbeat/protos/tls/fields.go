// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package tls

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("packetbeat", "tls", asset.ModuleFieldsPri, AssetTls); err != nil {
		panic(err)
	}
}

// AssetTls returns asset data.
// This is the base64 encoded gzipped contents of protos/tls.
func AssetTls() string {
	return "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"
}
