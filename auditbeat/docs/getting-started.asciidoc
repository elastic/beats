[id="{beatname_lc}-getting-started"]
== Getting started with {beatname_uc}

//TODO: Need to add summary here.

//QUESTION: We've made some recent enhancements that should make the getting started experience easier. We should remove whatever is no longer required (because it happens by default) and instead explain what happens. Then we can point the user for info somewhere else if they want to override the default behavior. I think we make it seem like there are more steps than are actually required now.

To get started with your own {beatname_uc} setup, install and configure these
related products:

 * Elasticsearch for storage and indexing the data.
 * Kibana for the UI.
 * Logstash (optional) for inserting data into Elasticsearch.

See {libbeat}/getting-started.html[Getting Started with Beats and the Elastic Stack]
for more information.

After installing the Elastic Stack, read the following topics to learn how to
install, configure, and run {beatname_uc}:

* <<{beatname_lc}-installation>>
* <<{beatname_lc}-configuration>>
* <<{beatname_lc}-template>>
* <<{beatname_lc}-starting>>
* <<{beatname_lc}-sample-dashboards>>
* <<command-line-options>>
* <<directory-layout>>

[id="{beatname_lc}-installation"]
=== Step 1: Install {beatname_uc}

You should install {beatname_uc} on all the servers you want to monitor.

//QUESTION: WHAT ELSE DO WE WANT TO SAY ABOUT WHERE TO INSTALL?

include::../../libbeat/docs/shared-download-and-install.asciidoc[]

[[deb]]
*deb:*

ifeval::["{release-state}"=="unreleased"]

Version {stack-version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
curl -L -O https://artifacts.elastic.co/downloads/beats/{beatname_lc}/{beatname_lc}-{version}-amd64.deb
sudo dpkg -i {beatname_lc}-{version}-amd64.deb
------------------------------------------------

endif::[]

[[rpm]]
*rpm:*

ifeval::["{release-state}"=="unreleased"]

Version {stack-version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
curl -L -O https://artifacts.elastic.co/downloads/beats/{beatname_lc}/{beatname_lc}-{version}-x86_64.rpm
sudo rpm -vi {beatname_lc}-{version}-x86_64.rpm
------------------------------------------------

endif::[]

[[mac]]
*mac:*

ifeval::["{release-state}"=="unreleased"]

Version {stack-version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
curl -L -O https://artifacts.elastic.co/downloads/beats/{beatname_lc}/{beatname_lc}-{version}-darwin-x86_64.tar.gz
tar xzvf {beatname_lc}-{version}-darwin-x86_64.tar.gz
------------------------------------------------

endif::[]

[[docker]]
*docker:*

ifeval::["{release-state}"=="unreleased"]

Version {stack-version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
docker pull {dockerimage}
------------------------------------------------

endif::[]

[[win]]
*win:*

ifeval::["{release-state}"=="unreleased"]

Version {stack-version} of {beatname_uc} has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

. Download the {beatname_uc} Windows zip file from the
https://www.elastic.co/downloads/beats/{beatname_lc}[downloads page].

. Extract the contents of the zip file into `C:\Program Files`.

. Rename the +{beatname_lc}-<version>-windows+ directory to +{beatname_uc}+.

. Open a PowerShell prompt as an Administrator (right-click the PowerShell icon
and select *Run As Administrator*). If you are running Windows XP, you may need
to download and install PowerShell.

. From the PowerShell prompt, run the following commands to install {beatname_uc}
as a Windows service:
+
["source","sh",subs="attributes"]
----------------------------------------------------------------------
PS > cd 'C:{backslash}Program Files{backslash}{beatname_uc}'
PS C:{backslash}Program Files{backslash}{beatname_uc}> .{backslash}install-service-{beatname_lc}.ps1
----------------------------------------------------------------------

NOTE: If script execution is disabled on your system, you need to set the
execution policy for the current session to allow the script to run. For
example: +PowerShell.exe -ExecutionPolicy UnRestricted -File
.\install-service-{beatname_lc}.ps1+.

endif::[]

Before starting {beatname_uc}, you should look at the configuration options in the
configuration file, for example +C:{backslash}Program Files{backslash}{beatname_uc}{backslash}{beatname_lc}.yml+.
For more information about these options, see
<<configuring-howto-{beatname_lc}>>.

[id="{beatname_lc}-configuration"]
=== Step 2: Configure {beatname_uc}

include::../../libbeat/docs/shared-configuring.asciidoc[]

{beatname_uc} uses <<{beatname_lc}-modules,modules>> to collect audit
information. You configure each module individually. The following example shows
the default configuration in the +{beatname_lc}.yml+ file. The audit module is
enabled by default to collect audit information

The following example shows the `file` metricset configured to generate events
when a file changes on disk in one of the specified locations.

["source","sh",subs="attributes"]
-------------------------------------
auditbeat.modules:

- module: audit
  metricsets: [file]
  file.paths:
    binaries:
    - /bin
    - /usr/bin
    - /sbin
    - /usr/sbin
    conf:
    - /etc
-------------------------------------

To configure {beatname_uc}:

. Define the {beatname_uc} modules that you want to enable. For each module, specify
the metricsets that you want to collect. See <<configuring-howto-{beatname_lc}>> for
more details about configuring modules.

. If you are sending output to Elasticsearch, set the IP address and port where
{beatname_uc} can find the Elasticsearch installation:
+
[source,yaml]
----------------------------------------------------------------------
output.elasticsearch:
  hosts: ["192.168.1.42:9200"]
----------------------------------------------------------------------
+
If you are sending output to Logstash, see <<config-{beatname_lc}-logstash>>
instead.

[id="{beatname_lc}-template"]
=== Step 3: Load the index template in Elasticsearch

:allplatforms:
include::../../libbeat/docs/shared-template-load.asciidoc[]

[id="{beatname_lc}-starting"]
=== Step 4: Start {beatname_uc}

Run {beatname_uc} by issuing the appropriate command for your platform.

NOTE: If you use an init.d script to start {beatname_uc} on deb or rpm, you can't
specify command line flags (see <<command-line-options>>). To specify flags,
start {beatname_uc} in the foreground.

*deb:*

["source","sh",subs="attributes"]
----------------------------------------------------------------------
sudo /etc/init.d/{beatname_lc} start
----------------------------------------------------------------------

*rpm:*

["source","sh",subs="attributes"]
----------------------------------------------------------------------
sudo /etc/init.d/{beatname_lc} start
----------------------------------------------------------------------

*docker:*

["source","sh",subs="attributes"]
----------------------------------------------------------------------
docker run {dockerimage}
----------------------------------------------------------------------

*mac:*

["source","sh",subs="attributes"]
----------------------------------------------------------------------
sudo chown root {beatname_lc}.yml <1>
sudo ./{beatname_lc} -e -c {beatname_lc}.yml -d "publish"
----------------------------------------------------------------------
<1> You'll be running {beatname_uc} as root, so you need to change ownership
of the configuration file (see
{libbeat}/config-file-permissions.html[Config File Ownership and Permissions]
in the _Beats Platform Reference_).

*win:*

["source","sh",subs="attributes"]
----------------------------------------------------------------------
PS C:{backslash}Program Files{backslash}{beatname_uc}> Start-Service {beatname_lc}
----------------------------------------------------------------------

By default the log files are stored in +C:\ProgramData\{beatname_lc}\Logs+.

==== Test the {beatname_uc} installation

To verify that your server's statistics are present in Elasticsearch, issue
the following command:

["source","sh",subs="attributes"]
----------------------------------------------------------------------
curl -XGET 'http://localhost:9200/{beatname_lc}-*/_search?pretty'
----------------------------------------------------------------------

Make sure that you replace `localhost:9200` with the address of your
Elasticsearch instance.

On Windows, if you don't have cURL installed, simply point your browser to the
URL.

[id="{beatname_lc}-sample-dashboards"]
=== Step 5: Load sample Kibana dashboards

To make it easier for you to start monitoring potential security policy
violations and track them in Kibana, we have created sample {beatname_uc}
dashboards. The dashboards are provided as examples. We recommend that you
{kibana-ref}/dashboard.html[customize] them to meet your needs.

image:./images/auditbeat-file-integrity-dashboard.png[Auditbeat File Integrity Dashboard]

:allplatforms:
include::../../libbeat/docs/dashboards.asciidoc[]
