:release-state: released

//TODO: Remove release-state definition before merging.

[id="{beatname_lc}-getting-started"]
== Get started with {beatname_uc}

++++
<titleabbrev>Get started</titleabbrev>
++++

This guide describes how to get started quickly with audit data collection.
You'll learn how to:

* install {beatname_uc} on each system you want to monitor
* specify the location of your audit data
* parse log data into fields and send it to {es}
* visualize the log data in {kib}

[float]
=== Before you begin

You need {es} for storing and searching your data, and {kib} for visualizing and
managing it.

// TODO: We might want to provide the instructions for spinning up a deployment
// here. See
// https://github.com/elastic/docs/pull/1815/files#diff-934228d98950ff95c8c53444966daeaeR10
// Or link to the topic that's available for cloud.

include::{libbeat-dir}/tab-widgets/spinup-stack-widget.asciidoc[]

[float]
[id="{beatname_lc}-installation"]
=== Step 1: Install {beatname_uc}

Install {beatname_uc} on all the servers you want to monitor.

To download and install {beatname_uc}, use the commands that work with your
system:

include::{libbeat-dir}/tab-widgets/install-widget.asciidoc[]

[float]
[[other-installation-options]]
==== Other installation options

* <<setup-repositories>>
* https://www.elastic.co/downloads/beats/{beatname_lc}[Download page] 
* <<running-on-docker>>
* <<running-on-kubernetes>> 

[float]
[[set-connection]]
=== Step 2: Set the connection information

include::{libbeat-dir}/shared/connecting-to-es.asciidoc[]

[float]
[[enable-modules]]
=== Step 3: Configure data collection modules

{beatname_uc} uses <<auditbeat-modules,modules>> to collect audit information.

By default, {beatname_uc} uses a configuration that's tailored to the operating 
system where {beatname_uc} is running.

To use a different configuration, change the module settings in
+{beatname_lc}.yml+. 

The following example shows the `file_integrity` module configured to generate
events whenever a file in one of the specified paths changes on disk:

["source","sh",subs="attributes"]
-------------------------------------
auditbeat.modules:

- module: file_integrity
  paths:
  - /bin
  - /usr/bin
  - /sbin
  - /usr/sbin
  - /etc
-------------------------------------

include::{libbeat-dir}/step-test-config.asciidoc[]

include::{libbeat-dir}/step-look-at-config.asciidoc[]

[float]
[[setup-modules]]
=== Step 4: Set up assets

include::{libbeat-dir}/shared/setup.asciidoc[]

[float]
[id="{beatname_lc}-starting"]
=== Step 5: Start {beatname_uc}

include::{libbeat-dir}/shared/start-beat.asciidoc[]

If you see a warning about too many open files, you need to increase the
`ulimit`. See the <<ulimit,FAQ>> for more details.

//REVIEWERS: Removing cURL test because I think users will see a better view of
//the data simply by going to the Discover app in Kibana. Showing the cURL
//command is not ideal for cloud users.

[float]
[[view-kibana-dashboards]]
=== Step 6: View your data in {kib}

To make it easier for you to start auditing the activities of users and
processes on your system, {beatname_uc} comes with preconfigured dashboards and
UIs for visualizing your data.

include::{libbeat-dir}/shared/opendashboards.asciidoc[]

Example dashboard:

[role="screenshot"]
image::./images/auditbeat-file-integrity-dashboard.png[Auditbeat File Integrity Dashboard]

[float]
=== What's next?

Now that you have audit data streaming into {es}, learn how to unify your logs,
metrics, uptime, and application performance data:

//REVIEWERS: I need to tailor this description to SIEM.

* Add infrastructure metrics:
{metricbeat-ref}/metricbeat-getting-started.html[Get started with {metricbeat}]
* Add logs: 
{metricbeat-ref}/filebeat-getting-started.html[Get started with {filebeat}]
* Add uptime info:
{heartbeat-ref}/heartbeat-getting-started.html[Get Started with {heartbeat}]
* Add application metrics:
{apm-get-started-ref}/index.html[APM overview]

Then use the Observability apps in {kib} to search across all your data:

** Analyze security events in the {kibana-ref}/xpack-siem.html[SIEM app]. 
** Explore metrics about systems and services across your ecosystem: 
{kibana-ref}/xpack-infra[Metrics app]
** Drill down into related log data and tail your logs in real time:
{kibana-ref}/xpack-logs.html[Logs app]
** View related traces and monitor application performance:
{kibana-ref}/xpack-apm.html[APM app]
