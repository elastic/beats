
////
This file is generated! See etc/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
== Exported Fields

This document describes the fields that are exported by Topbeat. They are
grouped in the following categories:

* <<exported-fields-env>>
* <<exported-fields-system>>
* <<exported-fields-process>>
* <<exported-fields-filesystem>>

[[exported-fields-env]]
=== Common Fields

Contains common fields available in all event types.



==== @timestamp

type: date

example: 2015-01-24 14:06:05.071000

format: YYYY-MM-DDTHH:MM:SS.milliZ

required: True

The timestamp of when the measurements were taken. The precision is in milliseconds. The timezone is UTC.


==== type

required: True

Set to "system" to indicate that the statistics are system-wide.


==== beat.name

Name of the Beat sending the events. If the shipper name is set in the configuration file, then that value is used. If it is not set, the hostname is used.


==== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


==== tags

Arbitrary tags that can be set per Beat and per transaction type.


==== fields

type: dict

Contains user configurable fields.


[[exported-fields-system]]
=== System-Wide Statistics Fields

Contains system-wide statistics. These statistics are the details that you can get by running the *top* command on Unix systems.



[float]
=== load Fields

The system load average. The load average is the average number of jobs in the run queue.



==== load.load1

type: float

The load average over 1 minute.


==== load.load5

type: float

The load average over 5 minutes.


==== load.load15

type: float

The load average over 15 minutes.


[float]
=== cpu Fields

This group contains statistics related to CPU usage.


==== cpu.user

type: long

The amount of CPU time spent in user space.


==== cpu.user_p

type: float

The percentage of CPU time spent in user space. On multi-core systems, you can have percentages that are greater than 100%. For example, if 3 cores are at 60% use, then the `cpu.user_p` will be 180%.


==== cpu.nice

type: long

The amount of CPU time spent on low-priority processes.


==== cpu.system

type: long

The amount of CPU time spent in kernel space.


==== cpu.system_p

type: float

The percentage of CPU time spent in kernel space.


==== cpu.idle

type: long

The amount of CPU time spent idle.


==== cpu.iowait

type: long

The amount of CPU time spent in wait (on disk).


==== cpu.irq

type: long

The amount of CPU time spent servicing and handling hardware interrupts.


==== cpu.softirq

type: long

The amount of CPU time spent servicing and handling software interrupts.

==== cpu.steal

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor. Available only on Unix.


[float]
=== cpus Fields

This group contains CPU usage per core statistics.


[float]
=== cpuX Fields

This group contains CPU usage statistics of the core X, where 0<X<N and N is the number of cores.


==== cpus.cpuX.user

type: long

The amount of CPU time spent in user space on core X.


==== cpus.cpuX.user_p

type: float

The percentage of CPU time spent in user space on core X.


==== cpus.cpuX.nice

type: long

The amount of CPU time spent on low-priority processes on core X.


==== cpus.cpuX.system

type: long

The amount of CPU time spent in kernel space on core X.


==== cpus.cpuX.system_p

type: float

The percentage of CPU time spent in kernel space on core X.


==== cpus.cpuX.idle

type: long

The amount of CPU time spent idle on core X.


==== cpus.cpuX.iowait

type: long

The amount of CPU time spent in wait (on disk) on core X.


==== cpus.cpuX.softirq

type: long

The amount of CPU time spent servicing and handling software interrupts on core X.

==== cpus.cpuX.steal

type: long

The amount of CPU time spent in involuntary wait by the virtual CPU while the hypervisor was servicing another processor on core X. Available only on Unix.


[float]
=== mem Fields

This group contains statistics related to the memory usage on the system.


==== mem.total

type: long

Total memory.


==== mem.used

type: long

Used memory.


==== mem.free

type: long

Available memory.


==== mem.used_p

type: float

The percentage of used memory.


==== mem.actual_used

type: long

Actual used memory. This value is the "used" memory minus the memory used for disk caches and buffers. Available only on Unix.


==== mem.actual_free

type: long

Actual available memory. This value is the "free" memory plus the memory used for disk caches and buffers. Available only on Unix.


==== mem.actual_used_p

type: float

The percentage of actual used memory.


[float]
=== swap Fields

This group contains statistics related to the swap memory usage on the system.


==== swap.total

type: long

Total swap memory.


==== swap.used

type: long

Used swap memory.


==== swap.free

type: long

Available swap memory.


==== swap.used_p

type: float

The percentage of used swap memory.


[[exported-fields-process]]
=== Per-Process Statistics Fields

Per-process statistics that you can get by running the *top* or *ps* command on Unix systems.



[float]
=== proc Fields

Contains per-process statistics like memory usage, CPU usage, and details about each process, such as state, name, pid, and ppid.



==== proc.name

type: keyword

The process name.


==== proc.state

type: keyword

The process state. For example: "running"


==== proc.pid

type: integer

The process pid.


==== proc.ppid

type: integer

The process parent pid.


==== proc.cmdline

type: keyword

The full command-line used to start the process, including the arguments separated by space.


==== proc.username

type: keyword

The username of the user that created the process. If the username can not be determined then the the field will contain the user's numeric identifier (UID). On Windows, this field includes the user's domain and is formatted as `domain\username`.


[float]
=== cpu Fields

CPU-specific statistics per process.


==== proc.cpu.user

type: long

The amount of CPU time the process spent in user space.


==== proc.cpu.total_p

type: float

The percentage of CPU time spent by the process since the last update. Its value is similar with the %CPU value of the process displayed by the top command on unix systems.


==== proc.cpu.system

type: long

The amount of CPU time the process spent in kernel space.


==== proc.cpu.total

type: long

The total CPU time spent by the process.


==== proc.cpu.start_time

type: keyword

The time when the process was started. Example: "17:45".


[float]
=== mem Fields

Memory-specific statistics per process.


==== proc.mem.size

type: long

The total virtual memory the process has.


==== proc.mem.rss

type: long

The Resident Set Size. The amount of memory the process occupied in main memory (RAM).


==== proc.mem.rss_p

type: float

The percentage of memory the process occupied in main memory (RAM).


==== proc.mem.share

type: long

The shared memory the process uses.


[[exported-fields-filesystem]]
=== File System Statistics Fields

File system-related statistics that you can get by using the *df* command on Unix systems.



[float]
=== fs Fields

Contains details about the mounted disks, such as the total or used disk space, and details about each disk, such as the device name and the mounting place.



==== fs.avail

type: long

The disk space available to an unprivileged user in bytes.


==== fs.device_name

type: keyword

The disk name. For example: `/dev/disk1`


==== fs.mount_point

type: keyword

The mounting point. For example: `/`


==== fs.files

type: long

The total number of file nodes in the file system.


==== fs.free

type: long

The disk space available in bytes.


==== fs.free_files

type: long

The number of free file nodes in the file system.


==== fs.total

type: long

The total disk space in bytes.


==== fs.used

type: long

The used disk space in bytes.


==== fs.used_p

type: float

The percentage of used disk space.


