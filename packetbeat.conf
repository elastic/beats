###
### Packetbeat Agent configuration file.
###
### Packetbeat is an application monitoring system that works by sniffing
### the network traffic between your application components.
###
### For more configuration options, please visit:
###
###    http://packetbeat.com/docs/configuration.html
###

[output]

  [output.elasticsearch]
    # Comment this option if you don't want to output to Elasticsearch.
    enabled = true

    # Set the host and port where to find Elasticsearch.
    host = "localhost"
    port = 9200

    # Comment this option if you don't want to store the topology in Elasticsearch.
    save_topology = true

  [output.redis]
    # Uncomment out this option if you want to output to Redis.
    # enabled = true

    # Set the host and port where to find Redis.
    #host = "localhost"
    #port = 6379

    # Uncomment out this option if you want to store the topology in Redis.
    # save_topology = true

  [output.file]
    # Uncomment the following lines if you want to output to flat files.
    #enabled = true
    #path="/tmp/packetbeat"
    #filename="packetbeat"
    #rotate_every_kb=1000
    #number_of_files=7

[interfaces]
# Select on which network interfaces to sniff. You can use the "any"
# keyword to sniff on all connected interfaces.
device = "any"

[protocols]
# Configure which protocols to monitor and on which ports are they
# running. You can disable a given protocol by commenting out its
# configuration.
  [protocols.http]
  ports = [80, 8080, 8000, 5000, 8002]
  ## Include the actual request: For Http this will only include the Headers of the request- See the Http section for finer controler
  #send_request=false
  ## Include the acutal response: For Http this will only include the Heards of the response - See the Http Sections for finer controle
  #send_response=false

  [protocols.mysql]
  ports = [3306]

  [protocols.pgsql]
  ports = [5432]

  #[protocols.redis]
  #ports = [6379]

  [protocols.thrift]
  ports = [9090]

[procs]
# Which processes to monitor and how to find them. The processes can
# be found by searching their command line by a given string.
  [procs.monitored.mysqld]
  cmdline_grep = "mysqld"

  [procs.monitored.pgsql]
  cmdline_grep = "postgres"

  [procs.monitored.nginx]
  cmdline_grep = "nginx"

  [procs.monitored.app]
  cmdline_grep = "gunicorn"

[agent]
# The name of the agent as it will show up in the web interface. If not
# defined, we will just use the hostname.
#
#name=

# The tags of the agent are included in their own field with each
# transaction published. Tags make it easy to group servers by different
# logical properties.
# tags = ["service1"]

# Uncomment the following if you want to ignore transactions created
# by the server on which the agent is installed. This option is useful
# to remove duplicates if agents are installed on multiple servers.
#ignore_outgoing = true

[passwords]
# Uncomment the following to hide certain parameters in URL or forms attached 
# to HTTP requests. The names of the parameters are case insensitive. 
# The value of the parameters will be replaced with the 'xxxxx' string.
# This is generally useful for avoiding storing user passwords or other
# sensitive information.
#hide_keywords = ["pass", "password", "passwd"]

[http]
######
#Only include the HTTP body if the content-type matches
# An empty array []  will capture everything
#Include_body_for=["text/html"]
######
#Send The Http Headers as a specific field
#Send_all_headers=true
######
#Remove the HTTP Authentication header
#Strip_authorization=false
######
#Split All cookies to their own field
#Split_cookie=true

# vim: set ft=toml:
