sudo: required
dist: trusty
services:
  - docker

language: go

# Make sure project can also be built on travis for clones of the repo
go_import_path: github.com/elastic/beats

env:
  global:
    # Cross-compile for amd64 only to speed up testing.
    - GOX_FLAGS="-arch amd64"
    - DOCKER_COMPOSE_VERSION=1.21.0
    - TRAVIS_GO_VERSION=$(cat .go-version)
    # Newer versions of minikube fail on travis, see: https://github.com/kubernetes/minikube/issues/2704
    - TRAVIS_MINIKUBE_VERSION=v0.25.2

jobs:
  include:
    # Kubernetes
    - os: linux
      stage: test
      before_script:
        # install dind kubernetes
        - wget https://github.com/kubernetes-sigs/kubeadm-dind-cluster/releases/download/v0.1.0/dind-cluster-v1.13.sh
        - chmod +x dind-cluster-v1.13.sh
        - ./dind-cluster-v1.13.sh up
        # Add Kubectl directory to the PATH.
        - export PATH="$HOME/.kubeadm-dind-cluster:$PATH"
        # Wait for Kubernetes to be up and ready.
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      env:
        - TARGETS="-C deploy/kubernetes test"

    - os: linux
      stage: test
      before_script:
        # Download and install kubectl (optional)
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.12.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        # Download and install kind using cURL
        - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/0.0.1/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
        # Create a new Kubernetes cluster using kind
        - kind create cluster
        # Set KUBECONFIG environment variable
        - export KUBECONFIG=“$(kind get kubeconfig-path)”
      env:
        - TARGETS="-C deploy/kubernetes test"

    - os: linux
      dist: xenial
      stage: test
      addons:
        snaps:
          - name: microk8s
            classic: true
            channel: stable
      before_script:
        - microk8s.start
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl && \
    chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      env:
        - TARGETS="-C deploy/kubernetes test"

addons:
  apt:
    update: true
    packages:
      - python-virtualenv
      - libpcap-dev
      - xsltproc
      - libxml2-utils
      - libsystemd-journal-dev
      - librpm-dev

before_install:
  - python --version
  - umask 022
  - chmod -R go-w $GOPATH/src/github.com/elastic/beats
  # Docker-compose installation
  - sudo rm /usr/local/bin/docker-compose || true
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - if [ $TRAVIS_OS_NAME = osx ]; then pip install virtualenv; fi


# Skips installations step
install: true

script:
  - make $TARGETS