sudo: required
dist: trusty
services:
  - docker

language: go

go:
  - 1.6.2

os:
  - linux
  - osx

env:
  matrix:
    - TARGETS="check"
    - TARGETS="-C libbeat testsuite"
    - TARGETS="-C filebeat testsuite"
    - TARGETS="-C packetbeat testsuite"
    - TARGETS="-C metricbeat testsuite"
    - TARGETS="-C libbeat crosscompile"
    - TARGETS="-C metricbeat crosscompile"
    - TARGETS="-C winlogbeat crosscompile"
    - TARGETS="-C generate/metricbeat/metricset test"
    - TARGETS="-C generate/beat test"
  global:
    # Cross-compile for amd64 only to speed up testing.
    - GOX_FLAGS="-arch amd64"
    - DOCKER_COMPOSE_VERSION: 1.7.0

matrix:
  exclude:
    - os: osx
      env: TARGETS="check"
    - os: osx
      env: TARGETS="-C filebeat crosscompile"
    - os: osx
      env: TARGETS="-C libbeat crosscompile"
    - os: osx
      env: TARGETS="-C metricbeat crosscompile"
    - os: osx
      env: TARGETS="-C winlogbeat crosscompile"
    - os: osx
      env: TARGETS="-C libbeat testsuite"
    - os: osx
      env: TARGETS="-C metricbeat testsuite"
    - os: osx
      env: TARGETS="-C generate/metricbeat/metricset test"
    - os: osx
      env: TARGETS="-C generate/beat test"
  fast_finish: true
  allow_failures:
    - env: TARGETS="-C libbeat crosscompile"
    - env: TARGETS="-C filebeat crosscompile"


addons:
  apt:
    packages:
      - python-virtualenv
      - libpcap-dev
      - geoip-database

before_script:
  - wget https://github.com/Masterminds/glide/releases/download/0.10.2/glide-0.10.2-linux-386.tar.gz -O /tmp/glide.tar.gz
  - tar -xvf /tmp/glide.tar.gz
  - export PATH=$PATH:$PWD/linux-386

before_install:
  # Update to most recent docker version
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update;
      sudo apt-cache search docker;
      sudo apt-get -o Dpkg::Options::="--force-confnew" install -y docker-engine;
    fi
  # Redo the travis setup but with the elastic/beats path. This is needed so the package path is correct also for forks
  - mkdir -p $HOME/gopath/src/github.com/elastic/beats/
  - rsync -az ${TRAVIS_BUILD_DIR}/ $HOME/gopath/src/github.com/elastic/beats/
  - export TRAVIS_BUILD_DIR=$HOME/gopath/src/github.com/elastic/beats/
  - cd $HOME/gopath/src/github.com/elastic/beats/
  # Docker-compose installation
  - sudo rm /usr/local/bin/docker-compose || true
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

install:
  - true

script:
  - make $TARGETS

notifications:
  slack:
    rooms:
      secure: "e25J5puEA31dOooTI4T+K+zrTs8XeWIGq2cgmiPt9u/g7eqWeQj1UJnVsr8GOu1RPDyuJZJHXqfrvuOYJTdHzXbwjD0JTbwwVVZMkkZW2SWZHG46HCXPiucjWXEr3hXJKBJDDpIx6VxrN7r17dejv1biQ8QuEFZfiB1H8kbH/ho="

after_success:
  # Copy full.cov to coverage.txt because codecov.io requires this file
  - test -f filebeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f filebeat/build/coverage/full.cov
  - test -f packetbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f packetbeat/build/coverage/full.cov
  - test -f libbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f libbeat/build/coverage/full.cov
  - test -f metricbeat/build/coverage/full.cov && bash <(curl -s https://codecov.io/bash) -f metricbeat/build/coverage/full.cov
