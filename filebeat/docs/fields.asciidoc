
////
This file is generated! See _meta/fields.yml and scripts/generate_fields_docs.py
////

[[exported-fields]]
= Exported fields

[partintro]

--
This document describes the fields that are exported by Filebeat. They are
grouped in the following categories:

* <<exported-fields-activemq>>
* <<exported-fields-apache>>
* <<exported-fields-auditd>>
* <<exported-fields-aws>>
* <<exported-fields-aws-cloudwatch>>
* <<exported-fields-azure>>
* <<exported-fields-barracuda>>
* <<exported-fields-beat-common>>
* <<exported-fields-bluecoat>>
* <<exported-fields-cef>>
* <<exported-fields-cef-module>>
* <<exported-fields-checkpoint>>
* <<exported-fields-cisco>>
* <<exported-fields-citrix>>
* <<exported-fields-cloud>>
* <<exported-fields-coredns>>
* <<exported-fields-crowdstrike>>
* <<exported-fields-cyberark>>
* <<exported-fields-cylance>>
* <<exported-fields-docker-processor>>
* <<exported-fields-ecs>>
* <<exported-fields-elasticsearch>>
* <<exported-fields-envoyproxy>>
* <<exported-fields-f5>>
* <<exported-fields-fortinet>>
* <<exported-fields-googlecloud>>
* <<exported-fields-gsuite>>
* <<exported-fields-haproxy>>
* <<exported-fields-host-processor>>
* <<exported-fields-ibmmq>>
* <<exported-fields-icinga>>
* <<exported-fields-iis>>
* <<exported-fields-imperva>>
* <<exported-fields-infoblox>>
* <<exported-fields-iptables>>
* <<exported-fields-jolokia-autodiscover>>
* <<exported-fields-juniper>>
* <<exported-fields-kafka>>
* <<exported-fields-kibana>>
* <<exported-fields-kubernetes-processor>>
* <<exported-fields-log>>
* <<exported-fields-logstash>>
* <<exported-fields-microsoft>>
* <<exported-fields-misp>>
* <<exported-fields-mongodb>>
* <<exported-fields-mssql>>
* <<exported-fields-mysql>>
* <<exported-fields-nats>>
* <<exported-fields-netflow>>
* <<exported-fields-netscout>>
* <<exported-fields-nginx>>
* <<exported-fields-o365>>
* <<exported-fields-okta>>
* <<exported-fields-oracle>>
* <<exported-fields-osquery>>
* <<exported-fields-panw>>
* <<exported-fields-postgresql>>
* <<exported-fields-process>>
* <<exported-fields-proofpoint>>
* <<exported-fields-rabbitmq>>
* <<exported-fields-radware>>
* <<exported-fields-redis>>
* <<exported-fields-s3>>
* <<exported-fields-santa>>
* <<exported-fields-snort>>
* <<exported-fields-sonicwall>>
* <<exported-fields-sophos>>
* <<exported-fields-squid>>
* <<exported-fields-suricata>>
* <<exported-fields-symantec>>
* <<exported-fields-system>>
* <<exported-fields-tomcat>>
* <<exported-fields-traefik>>
* <<exported-fields-zeek>>
* <<exported-fields-zoom>>
* <<exported-fields-zscaler>>

--
[[exported-fields-activemq]]
== ActiveMQ fields

Module for parsing ActiveMQ log files.



[float]
=== activemq




*`activemq.caller`*::
+
--
Name of the caller issuing the logging request (class or resource).


type: keyword

--

*`activemq.thread`*::
+
--
Thread that generated the logging event.


type: keyword

--

*`activemq.user`*::
+
--
User that generated the logging event.


type: keyword

--

[float]
=== audit

Fields from ActiveMQ audit logs.


[float]
=== log

Fields from ActiveMQ application logs.



*`activemq.log.stack_trace`*::
+
--
type: keyword

--

[[exported-fields-apache]]
== Apache fields

Apache Module



[float]
=== apache2

Aliases for backward compatibility with old apache2 fields




*`apache2.access.remote_ip`*::
+
--
type: alias

alias to: source.address

--

*`apache2.access.ssl.protocol`*::
+
--
type: alias

alias to: apache.access.ssl.protocol

--

*`apache2.access.ssl.cipher`*::
+
--
type: alias

alias to: apache.access.ssl.cipher

--

*`apache2.access.body_sent.bytes`*::
+
--
type: alias

alias to: http.response.body.bytes

--

*`apache2.access.user_name`*::
+
--
type: alias

alias to: user.name

--

*`apache2.access.method`*::
+
--
type: alias

alias to: http.request.method

--

*`apache2.access.url`*::
+
--
type: alias

alias to: url.original

--

*`apache2.access.http_version`*::
+
--
type: alias

alias to: http.version

--

*`apache2.access.response_code`*::
+
--
type: alias

alias to: http.response.status_code

--

*`apache2.access.referrer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`apache2.access.agent`*::
+
--
type: alias

alias to: user_agent.original

--


*`apache2.access.user_agent.device`*::
+
--
type: alias

alias to: user_agent.device.name

--

*`apache2.access.user_agent.name`*::
+
--
type: alias

alias to: user_agent.name

--

*`apache2.access.user_agent.os`*::
+
--
type: alias

alias to: user_agent.os.full_name

--

*`apache2.access.user_agent.os_name`*::
+
--
type: alias

alias to: user_agent.os.name

--

*`apache2.access.user_agent.original`*::
+
--
type: alias

alias to: user_agent.original

--


*`apache2.access.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`apache2.access.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`apache2.access.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`apache2.access.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`apache2.access.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`apache2.access.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--


*`apache2.error.level`*::
+
--
type: alias

alias to: log.level

--

*`apache2.error.message`*::
+
--
type: alias

alias to: message

--

*`apache2.error.pid`*::
+
--
type: alias

alias to: process.pid

--

*`apache2.error.tid`*::
+
--
type: alias

alias to: process.thread.id

--

*`apache2.error.module`*::
+
--
type: alias

alias to: apache.error.module

--

[float]
=== apache

Apache fields.



[float]
=== access

Contains fields for the Apache HTTP Server access logs.



*`apache.access.ssl.protocol`*::
+
--
SSL protocol version.


type: keyword

--

*`apache.access.ssl.cipher`*::
+
--
SSL cipher name.


type: keyword

--

[float]
=== error

Fields from the Apache error logs.



*`apache.error.module`*::
+
--
The module producing the logged message.


type: keyword

--

[[exported-fields-auditd]]
== Auditd fields

Module for parsing auditd logs.




*`user.terminal`*::
+
--
Terminal or tty device on which the user is performing the observed activity.


type: keyword

--


*`user.audit.id`*::
+
--
One or multiple unique identifiers of the user.


type: keyword

--

*`user.audit.name`*::
+
--
Short name or login of the user.


type: keyword

example: albert

--

*`user.audit.group.id`*::
+
--
Unique identifier for the group on the system/platform.


type: keyword

--

*`user.audit.group.name`*::
+
--
Name of the group.


type: keyword

--


*`user.effective.id`*::
+
--
One or multiple unique identifiers of the user.


type: keyword

--

*`user.effective.name`*::
+
--
Short name or login of the user.


type: keyword

example: albert

--

*`user.effective.group.id`*::
+
--
Unique identifier for the group on the system/platform.


type: keyword

--

*`user.effective.group.name`*::
+
--
Name of the group.


type: keyword

--


*`user.filesystem.id`*::
+
--
One or multiple unique identifiers of the user.


type: keyword

--

*`user.filesystem.name`*::
+
--
Short name or login of the user.


type: keyword

example: albert

--

*`user.filesystem.group.id`*::
+
--
Unique identifier for the group on the system/platform.


type: keyword

--

*`user.filesystem.group.name`*::
+
--
Name of the group.


type: keyword

--


*`user.owner.id`*::
+
--
One or multiple unique identifiers of the user.


type: keyword

--

*`user.owner.name`*::
+
--
Short name or login of the user.


type: keyword

example: albert

--

*`user.owner.group.id`*::
+
--
Unique identifier for the group on the system/platform.


type: keyword

--

*`user.owner.group.name`*::
+
--
Name of the group.


type: keyword

--


*`user.saved.id`*::
+
--
One or multiple unique identifiers of the user.


type: keyword

--

*`user.saved.name`*::
+
--
Short name or login of the user.


type: keyword

example: albert

--

*`user.saved.group.id`*::
+
--
Unique identifier for the group on the system/platform.


type: keyword

--

*`user.saved.group.name`*::
+
--
Name of the group.


type: keyword

--

[float]
=== auditd

Fields from the auditd logs.



[float]
=== log

Fields from the Linux audit log. Not all fields are documented here because they are dynamic and vary by audit event type.



*`auditd.log.old_auid`*::
+
--
For login events this is the old audit ID used for the user prior to this login.


--

*`auditd.log.new_auid`*::
+
--
For login events this is the new audit ID. The audit ID can be used to trace future events to the user even if their identity changes (like becoming root).


--

*`auditd.log.old_ses`*::
+
--
For login events this is the old session ID used for the user prior to this login.


--

*`auditd.log.new_ses`*::
+
--
For login events this is the new session ID. It can be used to tie a user to future events by session ID.


--

*`auditd.log.sequence`*::
+
--
The audit event sequence number.


type: long

--

*`auditd.log.items`*::
+
--
The number of items in an event.


--

*`auditd.log.item`*::
+
--
The item field indicates which item out of the total number of items. This number is zero-based; a value of 0 means it is the first item.


--

*`auditd.log.tty`*::
+
--
type: keyword

--

*`auditd.log.a0`*::
+
--
The first argument to the system call.


--

*`auditd.log.addr`*::
+
--
type: ip

--

*`auditd.log.rport`*::
+
--
type: long

--

*`auditd.log.laddr`*::
+
--
type: ip

--

*`auditd.log.lport`*::
+
--
type: long

--

*`auditd.log.acct`*::
+
--
type: alias

alias to: user.name

--

*`auditd.log.pid`*::
+
--
type: alias

alias to: process.pid

--

*`auditd.log.ppid`*::
+
--
type: alias

alias to: process.ppid

--

*`auditd.log.res`*::
+
--
type: alias

alias to: event.outcome

--

*`auditd.log.record_type`*::
+
--
type: alias

alias to: event.action

--


*`auditd.log.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`auditd.log.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`auditd.log.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`auditd.log.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`auditd.log.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`auditd.log.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

*`auditd.log.arch`*::
+
--
type: alias

alias to: host.architecture

--

*`auditd.log.gid`*::
+
--
type: alias

alias to: user.group.id

--

*`auditd.log.uid`*::
+
--
type: alias

alias to: user.id

--

*`auditd.log.agid`*::
+
--
type: alias

alias to: user.audit.group.id

--

*`auditd.log.auid`*::
+
--
type: alias

alias to: user.audit.id

--

*`auditd.log.fsgid`*::
+
--
type: alias

alias to: user.filesystem.group.id

--

*`auditd.log.fsuid`*::
+
--
type: alias

alias to: user.filesystem.id

--

*`auditd.log.egid`*::
+
--
type: alias

alias to: user.effective.group.id

--

*`auditd.log.euid`*::
+
--
type: alias

alias to: user.effective.id

--

*`auditd.log.sgid`*::
+
--
type: alias

alias to: user.saved.group.id

--

*`auditd.log.suid`*::
+
--
type: alias

alias to: user.saved.id

--

*`auditd.log.ogid`*::
+
--
type: alias

alias to: user.owner.group.id

--

*`auditd.log.ouid`*::
+
--
type: alias

alias to: user.owner.id

--

*`auditd.log.comm`*::
+
--
type: alias

alias to: process.name

--

*`auditd.log.exe`*::
+
--
type: alias

alias to: process.executable

--

*`auditd.log.terminal`*::
+
--
type: alias

alias to: user.terminal

--

*`auditd.log.msg`*::
+
--
type: alias

alias to: message

--

*`auditd.log.src`*::
+
--
type: alias

alias to: source.address

--

*`auditd.log.dst`*::
+
--
type: alias

alias to: destination.address

--

[[exported-fields-aws]]
== AWS fields

Module for handling logs from AWS.



[float]
=== aws

Fields from AWS logs.



[float]
=== cloudtrail

Fields for AWS CloudTrail logs.



*`aws.cloudtrail.event_version`*::
+
--
The CloudTrail version of the log event format.


type: keyword

--

[float]
=== user_identity

The userIdentity element contains details about the type of IAM identity that made the request, and which credentials were used. If temporary credentials were used, the element shows how the credentials were obtained.


*`aws.cloudtrail.user_identity.type`*::
+
--
The type of the identity


type: keyword

--

*`aws.cloudtrail.user_identity.arn`*::
+
--
The Amazon Resource Name (ARN) of the principal that made the call.

type: keyword

--

*`aws.cloudtrail.user_identity.access_key_id`*::
+
--
The access key ID that was used to sign the request.

type: keyword

--

[float]
=== session_context

If the request was made with temporary security credentials, an element that provides information about the session that was created for those credentials


*`aws.cloudtrail.user_identity.session_context.mfa_authenticated`*::
+
--
The value is true if the root user or IAM user whose credentials were used for the request also was authenticated with an MFA device; otherwise, false.

type: keyword

--

*`aws.cloudtrail.user_identity.session_context.creation_date`*::
+
--
The date and time when the temporary security credentials were issued.

type: date

--

[float]
=== session_issuer

If the request was made with temporary security credentials, an element that provides information about how the credentials were obtained.


*`aws.cloudtrail.user_identity.session_context.session_issuer.type`*::
+
--
The source of the temporary security credentials, such as Root, IAMUser, or Role.

type: keyword

--

*`aws.cloudtrail.user_identity.session_context.session_issuer.principal_id`*::
+
--
The internal ID of the entity that was used to get credentials.

type: keyword

--

*`aws.cloudtrail.user_identity.session_context.session_issuer.arn`*::
+
--
The ARN of the source (account, IAM user, or role) that was used to get temporary security credentials.

type: keyword

--

*`aws.cloudtrail.user_identity.session_context.session_issuer.account_id`*::
+
--
The account that owns the entity that was used to get credentials.

type: keyword

--

*`aws.cloudtrail.user_identity.invoked_by`*::
+
--
The name of the AWS service that made the request, such as Amazon EC2 Auto Scaling or AWS Elastic Beanstalk.

type: keyword

--

*`aws.cloudtrail.error_code`*::
+
--
The AWS service error if the request returns an error.

type: keyword

--

*`aws.cloudtrail.error_message`*::
+
--
If the request returns an error, the description of the error.

type: keyword

--

*`aws.cloudtrail.request_parameters`*::
+
--
The parameters, if any, that were sent with the request.

type: keyword

--

*`aws.cloudtrail.request_parameters.text`*::
+
--
type: text

--

*`aws.cloudtrail.response_elements`*::
+
--
The response element for actions that make changes (create, update, or delete actions).

type: keyword

--

*`aws.cloudtrail.response_elements.text`*::
+
--
type: text

--

*`aws.cloudtrail.additional_eventdata`*::
+
--
Additional data about the event that was not part of the request or response.

type: keyword

--

*`aws.cloudtrail.additional_eventdata.text`*::
+
--
type: text

--

*`aws.cloudtrail.request_id`*::
+
--
The value that identifies the request. The service being called generates this value.

type: keyword

--

*`aws.cloudtrail.event_type`*::
+
--
Identifies the type of event that generated the event record.

type: keyword

--

*`aws.cloudtrail.api_version`*::
+
--
Identifies the API version associated with the AwsApiCall eventType value.

type: keyword

--

*`aws.cloudtrail.management_event`*::
+
--
A Boolean value that identifies whether the event is a management event.

type: keyword

--

*`aws.cloudtrail.read_only`*::
+
--
Identifies whether this operation is a read-only operation.

type: keyword

--

[float]
=== resources

A list of resources accessed in the event.


*`aws.cloudtrail.resources.arn`*::
+
--
Resource ARNs

type: keyword

--

*`aws.cloudtrail.resources.account_id`*::
+
--
Account ID of the resource owner

type: keyword

--

*`aws.cloudtrail.resources.type`*::
+
--
Resource type identifier in the format: AWS::aws-service-name::data-type-name

type: keyword

--

*`aws.cloudtrail.recipient_account_id`*::
+
--
Represents the account ID that received this event.

type: keyword

--

*`aws.cloudtrail.service_event_details`*::
+
--
Identifies the service event, including what triggered the event and the result.

type: keyword

--

*`aws.cloudtrail.service_event_details.text`*::
+
--
type: text

--

*`aws.cloudtrail.shared_event_id`*::
+
--
GUID generated by CloudTrail to uniquely identify CloudTrail events from the same AWS action that is sent to different AWS accounts.

type: keyword

--

*`aws.cloudtrail.vpc_endpoint_id`*::
+
--
Identifies the VPC endpoint in which requests were made from a VPC to another AWS service, such as Amazon S3.

type: keyword

--

[float]
=== console_login

Fields specific to ConsoleLogin events


[float]
=== additional_eventdata

Additional Event Data for ConsoleLogin events



*`aws.cloudtrail.console_login.additional_eventdata.mobile_version`*::
+
--
Identifies whether ConsoleLogin was from mobile version

type: boolean

--

*`aws.cloudtrail.console_login.additional_eventdata.login_to`*::
+
--
URL for ConsoleLogin

type: keyword

--

*`aws.cloudtrail.console_login.additional_eventdata.mfa_used`*::
+
--
Identifies whether multi factor authentication was used during ConsoleLogin

type: boolean

--

[float]
=== flattened

ES flattened datatype for objects where the subfields aren't known in advance.


*`aws.cloudtrail.flattened.additional_eventdata`*::
+
--
Additional data about the event that was not part of the request or response.


type: flattened

--

*`aws.cloudtrail.flattened.request_parameters`*::
+
--
The parameters, if any, that were sent with the request.

type: flattened

--

*`aws.cloudtrail.flattened.response_elements`*::
+
--
The response element for actions that make changes (create, update, or delete actions).

type: flattened

--

*`aws.cloudtrail.flattened.service_event_details`*::
+
--
Identifies the service event, including what triggered the event and the result.

type: flattened

--

[float]
=== digest

Fields from Cloudtrail Digest Logs


*`aws.cloudtrail.digest.log_files`*::
+
--
A list of Logfiles contained in the digest.

type: nested

--

*`aws.cloudtrail.digest.start_time`*::
+
--
The starting UTC time range that the digest file covers, taking as a reference the time in which log files have been delivered by CloudTrail.

type: date

--

*`aws.cloudtrail.digest.end_time`*::
+
--
The ending UTC time range that the digest file covers, taking as a reference the time in which log files have been delivered by CloudTrail.

type: date

--

*`aws.cloudtrail.digest.s3_bucket`*::
+
--
The name of the Amazon S3 bucket to which the current digest file has been delivered.

type: keyword

--

*`aws.cloudtrail.digest.s3_object`*::
+
--
The Amazon S3 object key (that is, the Amazon S3 bucket location) of the current digest file.

type: keyword

--

*`aws.cloudtrail.digest.newest_event_time`*::
+
--
The UTC time of the most recent event among all of the events in the log files in the digest.

type: date

--

*`aws.cloudtrail.digest.oldest_event_time`*::
+
--
The UTC time of the oldest event among all of the events in the log files in the digest.

type: date

--

*`aws.cloudtrail.digest.previous_s3_bucket`*::
+
--
The Amazon S3 bucket to which the previous digest file was delivered.

type: keyword

--

*`aws.cloudtrail.digest.previous_hash_algorithm`*::
+
--
The name of the hash algorithm that was used to hash the previous digest file.

type: keyword

--

*`aws.cloudtrail.digest.public_key_fingerprint`*::
+
--
The hexadecimal encoded fingerprint of the public key that matches the private key used to sign this digest file.

type: keyword

--

*`aws.cloudtrail.digest.signature_algorithm`*::
+
--
The algorithm used to sign the digest file.

type: keyword

--

*`aws.cloudtrail.insight_details`*::
+
--
Shows information about the underlying triggers of an Insights event, such as event source, user agent, statistics, API name, and whether the event is the start or end of the Insights event.

type: flattened

--

[float]
=== cloudwatch

Fields for AWS CloudWatch logs.



*`aws.cloudwatch.message`*::
+
--
CloudWatch log message.


type: text

--

[float]
=== ec2

Fields for AWS EC2 logs in CloudWatch.



*`aws.ec2.ip_address`*::
+
--
The internet address of the requester.


type: keyword

--

[float]
=== elb

Fields for AWS ELB logs.



*`aws.elb.name`*::
+
--
The name of the load balancer.


type: keyword

--

*`aws.elb.type`*::
+
--
The type of the load balancer for v2 Load Balancers.


type: keyword

--

*`aws.elb.target_group.arn`*::
+
--
The ARN of the target group handling the request.


type: keyword

--

*`aws.elb.listener`*::
+
--
The ELB listener that received the connection.


type: keyword

--

*`aws.elb.protocol`*::
+
--
The protocol of the load balancer (http or tcp).


type: keyword

--

*`aws.elb.request_processing_time.sec`*::
+
--
The total time in seconds since the connection or request is received until it is sent to a registered backend.


type: float

--

*`aws.elb.backend_processing_time.sec`*::
+
--
The total time in seconds since the connection is sent to the backend till the backend starts responding.


type: float

--

*`aws.elb.response_processing_time.sec`*::
+
--
The total time in seconds since the response is received from the backend till it is sent to the client.


type: float

--

*`aws.elb.connection_time.ms`*::
+
--
The total time of the connection in milliseconds, since it is opened till it is closed.


type: long

--

*`aws.elb.tls_handshake_time.ms`*::
+
--
The total time for the TLS handshake to complete in milliseconds once the connection has been established.


type: long

--

*`aws.elb.backend.ip`*::
+
--
The IP address of the backend processing this connection.


type: keyword

--

*`aws.elb.backend.port`*::
+
--
The port in the backend processing this connection.


type: keyword

--

*`aws.elb.backend.http.response.status_code`*::
+
--
The status code from the backend (status code sent to the client from ELB is stored in `http.response.status_code`


type: keyword

--

*`aws.elb.ssl_cipher`*::
+
--
The SSL cipher used in TLS/SSL connections.


type: keyword

--

*`aws.elb.ssl_protocol`*::
+
--
The SSL protocol used in TLS/SSL connections.


type: keyword

--

*`aws.elb.chosen_cert.arn`*::
+
--
The ARN of the chosen certificate presented to the client in TLS/SSL connections.


type: keyword

--

*`aws.elb.chosen_cert.serial`*::
+
--
The serial number of the chosen certificate presented to the client in TLS/SSL connections.


type: keyword

--

*`aws.elb.incoming_tls_alert`*::
+
--
The integer value of TLS alerts received by the load balancer from the client, if present.


type: keyword

--

*`aws.elb.tls_named_group`*::
+
--
The TLS named group.


type: keyword

--

*`aws.elb.trace_id`*::
+
--
The contents of the `X-Amzn-Trace-Id` header.


type: keyword

--

*`aws.elb.matched_rule_priority`*::
+
--
The priority value of the rule that matched the request, if a rule matched.


type: keyword

--

*`aws.elb.action_executed`*::
+
--
The action executed when processing the request (forward, fixed-response, authenticate...). It can contain several values.


type: keyword

--

*`aws.elb.redirect_url`*::
+
--
The URL used if a redirection action was executed.


type: keyword

--

*`aws.elb.error.reason`*::
+
--
The error reason if the executed action failed.


type: keyword

--

*`aws.elb.target_port`*::
+
--
List of IP addresses and ports for the targets that processed this request.


type: keyword

--

*`aws.elb.target_status_code`*::
+
--
List of status codes from the responses of the targets.


type: keyword

--

*`aws.elb.classification`*::
+
--
The classification for desync mitigation.


type: keyword

--

*`aws.elb.classification_reason`*::
+
--
The classification reason code.


type: keyword

--

[float]
=== s3access

Fields for AWS S3 server access logs.



*`aws.s3access.bucket_owner`*::
+
--
The canonical user ID of the owner of the source bucket.


type: keyword

--

*`aws.s3access.bucket`*::
+
--
The name of the bucket that the request was processed against.


type: keyword

--

*`aws.s3access.remote_ip`*::
+
--
The apparent internet address of the requester.


type: ip

--

*`aws.s3access.requester`*::
+
--
The canonical user ID of the requester, or a - for unauthenticated requests.


type: keyword

--

*`aws.s3access.request_id`*::
+
--
A string generated by Amazon S3 to uniquely identify each request.


type: keyword

--

*`aws.s3access.operation`*::
+
--
The operation listed here is declared as SOAP.operation, REST.HTTP_method.resource_type, WEBSITE.HTTP_method.resource_type, or BATCH.DELETE.OBJECT.


type: keyword

--

*`aws.s3access.key`*::
+
--
The "key" part of the request, URL encoded, or "-" if the operation does not take a key parameter.


type: keyword

--

*`aws.s3access.request_uri`*::
+
--
The Request-URI part of the HTTP request message.


type: keyword

--

*`aws.s3access.http_status`*::
+
--
The numeric HTTP status code of the response.


type: long

--

*`aws.s3access.error_code`*::
+
--
The Amazon S3 Error Code, or "-" if no error occurred.


type: keyword

--

*`aws.s3access.bytes_sent`*::
+
--
The number of response bytes sent, excluding HTTP protocol overhead, or "-" if zero.


type: long

--

*`aws.s3access.object_size`*::
+
--
The total size of the object in question.


type: long

--

*`aws.s3access.total_time`*::
+
--
The number of milliseconds the request was in flight from the server's perspective.


type: long

--

*`aws.s3access.turn_around_time`*::
+
--
The number of milliseconds that Amazon S3 spent processing your request.


type: long

--

*`aws.s3access.referrer`*::
+
--
The value of the HTTP Referrer header, if present.


type: keyword

--

*`aws.s3access.user_agent`*::
+
--
The value of the HTTP User-Agent header.


type: keyword

--

*`aws.s3access.version_id`*::
+
--
The version ID in the request, or "-" if the operation does not take a versionId parameter.


type: keyword

--

*`aws.s3access.host_id`*::
+
--
The x-amz-id-2 or Amazon S3 extended request ID.


type: keyword

--

*`aws.s3access.signature_version`*::
+
--
The signature version, SigV2 or SigV4, that was used to authenticate the request or a - for unauthenticated requests.


type: keyword

--

*`aws.s3access.cipher_suite`*::
+
--
The Secure Sockets Layer (SSL) cipher that was negotiated for HTTPS request or a - for HTTP.


type: keyword

--

*`aws.s3access.authentication_type`*::
+
--
The type of request authentication used, AuthHeader for authentication headers, QueryString for query string (pre-signed URL) or a - for unauthenticated requests.


type: keyword

--

*`aws.s3access.host_header`*::
+
--
The endpoint used to connect to Amazon S3.


type: keyword

--

*`aws.s3access.tls_version`*::
+
--
The Transport Layer Security (TLS) version negotiated by the client.


type: keyword

--

[float]
=== vpcflow

Fields for AWS VPC flow logs.



*`aws.vpcflow.version`*::
+
--
The VPC Flow Logs version. If you use the default format, the version is 2. If you specify a custom format, the version is 3.


type: keyword

--

*`aws.vpcflow.account_id`*::
+
--
The AWS account ID for the flow log.


type: keyword

--

*`aws.vpcflow.interface_id`*::
+
--
The ID of the network interface for which the traffic is recorded.


type: keyword

--

*`aws.vpcflow.action`*::
+
--
The action that is associated with the traffic, ACCEPT or REJECT.


type: keyword

--

*`aws.vpcflow.log_status`*::
+
--
The logging status of the flow log, OK, NODATA or SKIPDATA.


type: keyword

--

*`aws.vpcflow.instance_id`*::
+
--
The ID of the instance that's associated with network interface for which the traffic is recorded, if the instance is owned by you.


type: keyword

--

*`aws.vpcflow.pkt_srcaddr`*::
+
--
The packet-level (original) source IP address of the traffic.


type: ip

--

*`aws.vpcflow.pkt_dstaddr`*::
+
--
The packet-level (original) destination IP address for the traffic.


type: ip

--

*`aws.vpcflow.vpc_id`*::
+
--
The ID of the VPC that contains the network interface for which the traffic is recorded.


type: keyword

--

*`aws.vpcflow.subnet_id`*::
+
--
The ID of the subnet that contains the network interface for which the traffic is recorded.


type: keyword

--

*`aws.vpcflow.tcp_flags`*::
+
--
The bitmask value for the following TCP flags: 2=SYN,18=SYN-ACK,1=FIN,4=RST


type: keyword

--

*`aws.vpcflow.type`*::
+
--
The type of traffic: IPv4, IPv6, or EFA.


type: keyword

--

[[exported-fields-aws-cloudwatch]]
== aws-cloudwatch fields

Fields from AWS CloudWatch logs.



[float]
=== aws-cloudwatch

Fields from AWS CloudWatch logs.



*`aws-cloudwatch.log_group`*::
+
--
The name of the log group to which this event belongs.

type: keyword

--

*`aws-cloudwatch.log_stream`*::
+
--
The name of the log stream to which this event belongs.

type: keyword

--

*`aws-cloudwatch.ingestion_time`*::
+
--
The time the event was ingested in AWS CloudWatch.

type: keyword

--

[[exported-fields-azure]]
== Azure fields

Azure Module



[float]
=== azure




*`azure.subscription_id`*::
+
--
Azure subscription ID


type: keyword

--

*`azure.correlation_id`*::
+
--
Correlation ID


type: keyword

--

*`azure.tenant_id`*::
+
--
tenant ID


type: keyword

--

[float]
=== resource

Resource



*`azure.resource.id`*::
+
--
Resource ID


type: keyword

--

*`azure.resource.group`*::
+
--
Resource group


type: keyword

--

*`azure.resource.provider`*::
+
--
Resource type/namespace


type: keyword

--

*`azure.resource.namespace`*::
+
--
Resource type/namespace


type: keyword

--

*`azure.resource.name`*::
+
--
Name


type: keyword

--

*`azure.resource.authorization_rule`*::
+
--
Authorization rule


type: keyword

--

[float]
=== activitylogs

Fields for Azure activity logs.



[float]
=== identity

Identity



[float]
=== claims_initiated_by_user

Claims initiated by user



*`azure.activitylogs.identity.claims_initiated_by_user.name`*::
+
--
Name


type: keyword

--

*`azure.activitylogs.identity.claims_initiated_by_user.givenname`*::
+
--
Givenname


type: keyword

--

*`azure.activitylogs.identity.claims_initiated_by_user.surname`*::
+
--
Surname


type: keyword

--

*`azure.activitylogs.identity.claims_initiated_by_user.fullname`*::
+
--
Fullname


type: keyword

--

*`azure.activitylogs.identity.claims_initiated_by_user.schema`*::
+
--
Schema


type: keyword

--

*`azure.activitylogs.identity.claims.*`*::
+
--
Claims


type: object

--

[float]
=== authorization

Authorization



*`azure.activitylogs.identity.authorization.scope`*::
+
--
Scope


type: keyword

--

*`azure.activitylogs.identity.authorization.action`*::
+
--
Action


type: keyword

--

[float]
=== evidence

Evidence



*`azure.activitylogs.identity.authorization.evidence.role_assignment_scope`*::
+
--
Role assignment scope


type: keyword

--

*`azure.activitylogs.identity.authorization.evidence.role_definition_id`*::
+
--
Role definition ID


type: keyword

--

*`azure.activitylogs.identity.authorization.evidence.role`*::
+
--
Role


type: keyword

--

*`azure.activitylogs.identity.authorization.evidence.role_assignment_id`*::
+
--
Role assignment ID


type: keyword

--

*`azure.activitylogs.identity.authorization.evidence.principal_id`*::
+
--
Principal ID


type: keyword

--

*`azure.activitylogs.identity.authorization.evidence.principal_type`*::
+
--
Principal type


type: keyword

--

*`azure.activitylogs.operation_name`*::
+
--
Operation name


type: keyword

--

*`azure.activitylogs.result_type`*::
+
--
Result type


type: keyword

--

*`azure.activitylogs.result_signature`*::
+
--
Result signature


type: keyword

--

*`azure.activitylogs.category`*::
+
--
Category


type: keyword

--

*`azure.activitylogs.event_category`*::
+
--
Event Category


type: keyword

--

[float]
=== properties

Properties



*`azure.activitylogs.properties.service_request_id`*::
+
--
Service Request Id


type: keyword

--

*`azure.activitylogs.properties.status_code`*::
+
--
Status code


type: keyword

--

[float]
=== auditlogs

Fields for Azure audit logs.



*`azure.auditlogs.category`*::
+
--
The category of the operation.  Currently, Audit is the only supported value.


type: keyword

--

*`azure.auditlogs.operation_name`*::
+
--
The operation name


type: keyword

--

*`azure.auditlogs.operation_version`*::
+
--
The operation version


type: keyword

--

*`azure.auditlogs.identity`*::
+
--
Identity


type: keyword

--

*`azure.auditlogs.tenant_id`*::
+
--
Tenant ID


type: keyword

--

*`azure.auditlogs.result_signature`*::
+
--
Result signature


type: keyword

--

[float]
=== properties

The audit log properties



*`azure.auditlogs.properties.result`*::
+
--
Log result


type: keyword

--

*`azure.auditlogs.properties.activity_display_name`*::
+
--
Activity display name


type: keyword

--

*`azure.auditlogs.properties.result_reason`*::
+
--
Reason for the log result


type: keyword

--

*`azure.auditlogs.properties.correlation_id`*::
+
--
Correlation ID


type: keyword

--

*`azure.auditlogs.properties.logged_by_service`*::
+
--
Logged by service


type: keyword

--

*`azure.auditlogs.properties.operation_type`*::
+
--
Operation type


type: keyword

--

*`azure.auditlogs.properties.id`*::
+
--
ID


type: keyword

--

*`azure.auditlogs.properties.activity_datetime`*::
+
--
Activity timestamp


type: date

--

*`azure.auditlogs.properties.category`*::
+
--
category


type: keyword

--

[float]
=== target_resources.*

Target resources



*`azure.auditlogs.properties.target_resources.*.display_name`*::
+
--
Display name


type: keyword

--

*`azure.auditlogs.properties.target_resources.*.id`*::
+
--
ID


type: keyword

--

*`azure.auditlogs.properties.target_resources.*.type`*::
+
--
Type


type: keyword

--

*`azure.auditlogs.properties.target_resources.*.ip_address`*::
+
--
ip Address


type: keyword

--

*`azure.auditlogs.properties.target_resources.*.user_principal_name`*::
+
--
User principal name


type: keyword

--

[float]
=== modified_properties.*

Modified properties



*`azure.auditlogs.properties.target_resources.*.modified_properties.*.new_value`*::
+
--
New value


type: keyword

--

*`azure.auditlogs.properties.target_resources.*.modified_properties.*.display_name`*::
+
--
Display value


type: keyword

--

*`azure.auditlogs.properties.target_resources.*.modified_properties.*.old_value`*::
+
--
Old value


type: keyword

--

[float]
=== initiated_by

Information regarding the initiator



[float]
=== app

App



*`azure.auditlogs.properties.initiated_by.app.servicePrincipalName`*::
+
--
Service principal name


type: keyword

--

*`azure.auditlogs.properties.initiated_by.app.displayName`*::
+
--
Display name


type: keyword

--

*`azure.auditlogs.properties.initiated_by.app.appId`*::
+
--
App ID


type: keyword

--

*`azure.auditlogs.properties.initiated_by.app.servicePrincipalId`*::
+
--
Service principal ID


type: keyword

--

[float]
=== user

User



*`azure.auditlogs.properties.initiated_by.user.userPrincipalName`*::
+
--
User principal name


type: keyword

--

*`azure.auditlogs.properties.initiated_by.user.displayName`*::
+
--
Display name


type: keyword

--

*`azure.auditlogs.properties.initiated_by.user.id`*::
+
--
ID


type: keyword

--

*`azure.auditlogs.properties.initiated_by.user.ipAddress`*::
+
--
ip Address


type: keyword

--

[float]
=== signinlogs

Fields for Azure sign-in logs.



*`azure.signinlogs.operation_name`*::
+
--
The operation name


type: keyword

--

*`azure.signinlogs.operation_version`*::
+
--
The operation version


type: keyword

--

*`azure.signinlogs.tenant_id`*::
+
--
Tenant ID


type: keyword

--

*`azure.signinlogs.result_signature`*::
+
--
Result signature


type: keyword

--

*`azure.signinlogs.result_description`*::
+
--
Result description


type: keyword

--

*`azure.signinlogs.result_type`*::
+
--
Result type


type: keyword

--

*`azure.signinlogs.identity`*::
+
--
Identity


type: keyword

--

*`azure.signinlogs.category`*::
+
--
Category


type: keyword

--

[float]
=== properties

The signin log properties



*`azure.signinlogs.properties.id`*::
+
--
ID


type: keyword

--

*`azure.signinlogs.properties.created_at`*::
+
--
Created date time


type: date

--

*`azure.signinlogs.properties.user_display_name`*::
+
--
User display name


type: keyword

--

*`azure.signinlogs.properties.correlation_id`*::
+
--
Correlation ID


type: keyword

--

*`azure.signinlogs.properties.user_principal_name`*::
+
--
User principal name


type: keyword

--

*`azure.signinlogs.properties.user_id`*::
+
--
User ID


type: keyword

--

*`azure.signinlogs.properties.app_id`*::
+
--
App ID


type: keyword

--

*`azure.signinlogs.properties.app_display_name`*::
+
--
App display name


type: keyword

--

*`azure.signinlogs.properties.ip_address`*::
+
--
Ip address


type: keyword

--

*`azure.signinlogs.properties.client_app_used`*::
+
--
Client app used


type: keyword

--

*`azure.signinlogs.properties.conditional_access_status`*::
+
--
Conditional access status


type: keyword

--

*`azure.signinlogs.properties.original_request_id`*::
+
--
Original request ID


type: keyword

--

*`azure.signinlogs.properties.is_interactive`*::
+
--
Is interactive


type: keyword

--

*`azure.signinlogs.properties.token_issuer_name`*::
+
--
Token issuer name


type: keyword

--

*`azure.signinlogs.properties.token_issuer_type`*::
+
--
Token issuer type


type: keyword

--

*`azure.signinlogs.properties.processing_time_ms`*::
+
--
Processing time in milliseconds


type: float

--

*`azure.signinlogs.properties.risk_detail`*::
+
--
Risk detail


type: keyword

--

*`azure.signinlogs.properties.risk_level_aggregated`*::
+
--
Risk level aggregated


type: keyword

--

*`azure.signinlogs.properties.risk_level_during_signin`*::
+
--
Risk level during signIn


type: keyword

--

*`azure.signinlogs.properties.risk_state`*::
+
--
Risk state


type: keyword

--

*`azure.signinlogs.properties.resource_display_name`*::
+
--
Resource display name


type: keyword

--

[float]
=== status

Status



*`azure.signinlogs.properties.status.error_code`*::
+
--
Error code


type: keyword

--

[float]
=== device_detail

Status



*`azure.signinlogs.properties.device_detail.device_id`*::
+
--
Device ID


type: keyword

--

*`azure.signinlogs.properties.device_detail.operating_system`*::
+
--
Operating system


type: keyword

--

*`azure.signinlogs.properties.device_detail.browser`*::
+
--
Browser


type: keyword

--

*`azure.signinlogs.properties.device_detail.display_name`*::
+
--
Display name


type: keyword

--

*`azure.signinlogs.properties.device_detail.trust_type`*::
+
--
Trust type


type: keyword

--

*`azure.signinlogs.properties.service_principal_id`*::
+
--
Status


type: keyword

--

[[exported-fields-barracuda]]
== Barracuda Web Application Firewall fields

barracuda fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-beat-common]]
== Beat fields

Contains common beat fields available in all event types.



*`agent.hostname`*::
+
--
Deprecated - use agent.name or agent.id to identify an agent.


type: alias

alias to: agent.name

--

*`beat.timezone`*::
+
--
type: alias

alias to: event.timezone

--

*`fields`*::
+
--
Contains user configurable fields.


type: object

--

*`beat.name`*::
+
--
type: alias

alias to: host.name

--

*`beat.hostname`*::
+
--
type: alias

alias to: agent.name

--

*`timeseries.instance`*::
+
--
Time series instance id

type: keyword

--

[[exported-fields-bluecoat]]
== Blue Coat Director fields

bluecoat fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-cef]]
== Decode CEF processor fields fields

Common Event Format (CEF) data.



[float]
=== cef

By default the `decode_cef` processor writes all data from the CEF message to this `cef` object. It contains the CEF header fields and the extension data.



*`cef.version`*::
+
--
Version of the CEF specification used by the message.


type: keyword

--

*`cef.device.vendor`*::
+
--
Vendor of the device that produced the message.


type: keyword

--

*`cef.device.product`*::
+
--
Product of the device that produced the message.


type: keyword

--

*`cef.device.version`*::
+
--
Version of the product that produced the message.


type: keyword

--

*`cef.device.event_class_id`*::
+
--
Unique identifier of the event type.


type: keyword

--

*`cef.severity`*::
+
--
Importance of the event. The valid string values are Unknown, Low, Medium, High, and Very-High. The valid integer values are 0-3=Low, 4-6=Medium, 7- 8=High, and 9-10=Very-High.


type: keyword

example: Very-High

--

*`cef.name`*::
+
--
Short description of the event.


type: keyword

--

[float]
=== extensions

Collection of key-value pairs carried in the CEF extension field.



*`cef.extensions.agentAddress`*::
+
--
The IP address of the ArcSight connector that processed the event.

type: ip

--

*`cef.extensions.agentDnsDomain`*::
+
--
The DNS domain name of the ArcSight connector that processed the event.

type: keyword

--

*`cef.extensions.agentHostName`*::
+
--
The hostname of the ArcSight connector that processed the event.

type: keyword

--

*`cef.extensions.agentId`*::
+
--
The agent ID of the ArcSight connector that processed the event.

type: keyword

--

*`cef.extensions.agentMacAddress`*::
+
--
The MAC address of the ArcSight connector that processed the event.

type: keyword

--

*`cef.extensions.agentNtDomain`*::
+
--
None

type: keyword

--

*`cef.extensions.agentReceiptTime`*::
+
--
The time at which information about the event was received by the ArcSight connector.

type: date

--

*`cef.extensions.agentTimeZone`*::
+
--
The agent time zone of the ArcSight connector that processed the event.

type: keyword

--

*`cef.extensions.agentTranslatedAddress`*::
+
--
None

type: ip

--

*`cef.extensions.agentTranslatedZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.agentTranslatedZoneURI`*::
+
--
None

type: keyword

--

*`cef.extensions.agentType`*::
+
--
The agent type of the ArcSight connector that processed the event

type: keyword

--

*`cef.extensions.agentVersion`*::
+
--
The version of the ArcSight connector that processed the event.

type: keyword

--

*`cef.extensions.agentZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.agentZoneURI`*::
+
--
None

type: keyword

--

*`cef.extensions.applicationProtocol`*::
+
--
Application level protocol, example values are HTTP, HTTPS, SSHv2, Telnet, POP, IMPA, IMAPS, and so on.

type: keyword

--

*`cef.extensions.baseEventCount`*::
+
--
A count associated with this event. How many times was this same event observed? Count can be omitted if it is 1.

type: long

--

*`cef.extensions.bytesIn`*::
+
--
Number of bytes transferred inbound, relative to the source to destination relationship, meaning that data was flowing from source to destination.

type: long

--

*`cef.extensions.bytesOut`*::
+
--
Number of bytes transferred outbound relative to the source to destination relationship. For example, the byte number of data flowing from the destination to the source.

type: long

--

*`cef.extensions.customerExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.customerURI`*::
+
--
None

type: keyword

--

*`cef.extensions.destinationAddress`*::
+
--
Identifies the destination address that the event refers to in an IP network. The format is an IPv4 address.

type: ip

--

*`cef.extensions.destinationDnsDomain`*::
+
--
The DNS domain part of the complete fully qualified domain name (FQDN).

type: keyword

--

*`cef.extensions.destinationGeoLatitude`*::
+
--
The latitudinal value from which the destination's IP address belongs.

type: double

--

*`cef.extensions.destinationGeoLongitude`*::
+
--
The longitudinal value from which the destination's IP address belongs.

type: double

--

*`cef.extensions.destinationHostName`*::
+
--
Identifies the destination that an event refers to in an IP network. The format should be a fully qualified domain name (FQDN) associated with the destination node, when a node is available.

type: keyword

--

*`cef.extensions.destinationMacAddress`*::
+
--
Six colon-seperated hexadecimal numbers.

type: keyword

--

*`cef.extensions.destinationNtDomain`*::
+
--
The Windows domain name of the destination address.

type: keyword

--

*`cef.extensions.destinationPort`*::
+
--
The valid port numbers are between 0 and 65535.

type: long

--

*`cef.extensions.destinationProcessId`*::
+
--
Provides the ID of the destination process associated with the event. For example, if an event contains process ID 105, "105" is the process ID.

type: long

--

*`cef.extensions.destinationProcessName`*::
+
--
The name of the event's destination process.

type: keyword

--

*`cef.extensions.destinationServiceName`*::
+
--
The service targeted by this event.

type: keyword

--

*`cef.extensions.destinationTranslatedAddress`*::
+
--
Identifies the translated destination that the event refers to in an IP network.

type: ip

--

*`cef.extensions.destinationTranslatedPort`*::
+
--
Port after it was translated; for example, a firewall. Valid port numbers are 0 to 65535.

type: long

--

*`cef.extensions.destinationTranslatedZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.destinationTranslatedZoneURI`*::
+
--
The URI for the Translated Zone that the destination asset has been assigned to in ArcSight.

type: keyword

--

*`cef.extensions.destinationUserId`*::
+
--
Identifies the destination user by ID. For example, in UNIX, the root user is generally associated with user ID 0.

type: keyword

--

*`cef.extensions.destinationUserName`*::
+
--
Identifies the destination user by name. This is the user associated with the event's destination. Email addresses are often mapped into the UserName fields. The recipient is a candidate to put into this field.

type: keyword

--

*`cef.extensions.destinationUserPrivileges`*::
+
--
The typical values are "Administrator", "User", and "Guest". This identifies the destination user's privileges. In UNIX, for example, activity executed on the root user would be identified with destinationUser Privileges of "Administrator".

type: keyword

--

*`cef.extensions.destinationZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.destinationZoneURI`*::
+
--
The URI for the Zone that the destination asset has been assigned to in ArcSight.

type: keyword

--

*`cef.extensions.deviceAction`*::
+
--
Action taken by the device.

type: keyword

--

*`cef.extensions.deviceAddress`*::
+
--
Identifies the device address that an event refers to in an IP network.

type: ip

--

*`cef.extensions.deviceCustomFloatingPoint1Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomFloatingPoint3Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomFloatingPoint4Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomDate1`*::
+
--
One of two timestamp fields available to map fields that do not apply to any other in this dictionary.

type: date

--

*`cef.extensions.deviceCustomDate1Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomDate2`*::
+
--
One of two timestamp fields available to map fields that do not apply to any other in this dictionary.

type: date

--

*`cef.extensions.deviceCustomDate2Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomFloatingPoint1`*::
+
--
One of four floating point fields available to map fields that do not apply to any other in this dictionary.

type: double

--

*`cef.extensions.deviceCustomFloatingPoint2`*::
+
--
One of four floating point fields available to map fields that do not apply to any other in this dictionary.

type: double

--

*`cef.extensions.deviceCustomFloatingPoint2Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomFloatingPoint3`*::
+
--
One of four floating point fields available to map fields that do not apply to any other in this dictionary.

type: double

--

*`cef.extensions.deviceCustomFloatingPoint4`*::
+
--
One of four floating point fields available to map fields that do not apply to any other in this dictionary.

type: double

--

*`cef.extensions.deviceCustomIPv6Address1`*::
+
--
One of four IPv6 address fields available to map fields that do not apply to any other in this dictionary.

type: ip

--

*`cef.extensions.deviceCustomIPv6Address1Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomIPv6Address2`*::
+
--
One of four IPv6 address fields available to map fields that do not apply to any other in this dictionary.

type: ip

--

*`cef.extensions.deviceCustomIPv6Address2Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomIPv6Address3`*::
+
--
One of four IPv6 address fields available to map fields that do not apply to any other in this dictionary.

type: ip

--

*`cef.extensions.deviceCustomIPv6Address3Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomIPv6Address4`*::
+
--
One of four IPv6 address fields available to map fields that do not apply to any other in this dictionary.

type: ip

--

*`cef.extensions.deviceCustomIPv6Address4Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomNumber1`*::
+
--
One of three number fields available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: long

--

*`cef.extensions.deviceCustomNumber1Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomNumber2`*::
+
--
One of three number fields available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: long

--

*`cef.extensions.deviceCustomNumber2Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomNumber3`*::
+
--
One of three number fields available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: long

--

*`cef.extensions.deviceCustomNumber3Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomString1`*::
+
--
One of six strings available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: keyword

--

*`cef.extensions.deviceCustomString1Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomString2`*::
+
--
One of six strings available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: keyword

--

*`cef.extensions.deviceCustomString2Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomString3`*::
+
--
One of six strings available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: keyword

--

*`cef.extensions.deviceCustomString3Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomString4`*::
+
--
One of six strings available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: keyword

--

*`cef.extensions.deviceCustomString4Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomString5`*::
+
--
One of six strings available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: keyword

--

*`cef.extensions.deviceCustomString5Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceCustomString6`*::
+
--
One of six strings available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: keyword

--

*`cef.extensions.deviceCustomString6Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceDirection`*::
+
--
Any information about what direction the observed communication has taken. The following values are supported - "0" for inbound or "1" for outbound.

type: long

--

*`cef.extensions.deviceDnsDomain`*::
+
--
The DNS domain part of the complete fully qualified domain name (FQDN).

type: keyword

--

*`cef.extensions.deviceEventCategory`*::
+
--
Represents the category assigned by the originating device. Devices often use their own categorization schema to classify event. Example "/Monitor/Disk/Read".

type: keyword

--

*`cef.extensions.deviceExternalId`*::
+
--
A name that uniquely identifies the device generating this event.

type: keyword

--

*`cef.extensions.deviceFacility`*::
+
--
The facility generating this event. For example, Syslog has an explicit facility associated with every event.

type: keyword

--

*`cef.extensions.deviceFlexNumber1`*::
+
--
One of two alternative number fields available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: long

--

*`cef.extensions.deviceFlexNumber1Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceFlexNumber2`*::
+
--
One of two alternative number fields available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible.

type: long

--

*`cef.extensions.deviceFlexNumber2Label`*::
+
--
All custom fields have a corresponding label field. Each of these fields is a string and describes the purpose of the custom field.

type: keyword

--

*`cef.extensions.deviceHostName`*::
+
--
The format should be a fully qualified domain name (FQDN) associated with the device node, when a node is available.

type: keyword

--

*`cef.extensions.deviceInboundInterface`*::
+
--
Interface on which the packet or data entered the device.

type: keyword

--

*`cef.extensions.deviceMacAddress`*::
+
--
Six colon-separated hexadecimal numbers.

type: keyword

--

*`cef.extensions.deviceNtDomain`*::
+
--
The Windows domain name of the device address.

type: keyword

--

*`cef.extensions.deviceOutboundInterface`*::
+
--
Interface on which the packet or data left the device.

type: keyword

--

*`cef.extensions.devicePayloadId`*::
+
--
Unique identifier for the payload associated with the event.

type: keyword

--

*`cef.extensions.deviceProcessId`*::
+
--
Provides the ID of the process on the device generating the event.

type: long

--

*`cef.extensions.deviceProcessName`*::
+
--
Process name associated with the event. An example might be the process generating the syslog entry in UNIX.

type: keyword

--

*`cef.extensions.deviceReceiptTime`*::
+
--
The time at which the event related to the activity was received. The format is MMM dd yyyy HH:mm:ss or milliseconds since epoch (Jan 1st 1970)

type: date

--

*`cef.extensions.deviceTimeZone`*::
+
--
The time zone for the device generating the event.

type: keyword

--

*`cef.extensions.deviceTranslatedAddress`*::
+
--
Identifies the translated device address that the event refers to in an IP network.

type: ip

--

*`cef.extensions.deviceTranslatedZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.deviceTranslatedZoneURI`*::
+
--
The URI for the Translated Zone that the device asset has been assigned to in ArcSight.

type: keyword

--

*`cef.extensions.deviceZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.deviceZoneURI`*::
+
--
Thee URI for the Zone that the device asset has been assigned to in ArcSight.

type: keyword

--

*`cef.extensions.endTime`*::
+
--
The time at which the activity related to the event ended. The format is MMM dd yyyy HH:mm:ss or milliseconds since epoch (Jan 1st1970). An example would be reporting the end of a session.

type: date

--

*`cef.extensions.eventId`*::
+
--
This is a unique ID that ArcSight assigns to each event.

type: long

--

*`cef.extensions.eventOutcome`*::
+
--
Displays the outcome, usually as 'success' or 'failure'.

type: keyword

--

*`cef.extensions.externalId`*::
+
--
The ID used by an originating device. They are usually increasing numbers, associated with events.

type: keyword

--

*`cef.extensions.fileCreateTime`*::
+
--
Time when the file was created.

type: date

--

*`cef.extensions.fileHash`*::
+
--
Hash of a file.

type: keyword

--

*`cef.extensions.fileId`*::
+
--
An ID associated with a file could be the inode.

type: keyword

--

*`cef.extensions.fileModificationTime`*::
+
--
Time when the file was last modified.

type: date

--

*`cef.extensions.filename`*::
+
--
Name of the file only (without its path).

type: keyword

--

*`cef.extensions.filePath`*::
+
--
Full path to the file, including file name itself.

type: keyword

--

*`cef.extensions.filePermission`*::
+
--
Permissions of the file.

type: keyword

--

*`cef.extensions.fileSize`*::
+
--
Size of the file.

type: long

--

*`cef.extensions.fileType`*::
+
--
Type of file (pipe, socket, etc.)

type: keyword

--

*`cef.extensions.flexDate1`*::
+
--
A timestamp field available to map a timestamp that does not apply to any other defined timestamp field in this dictionary. Use all flex fields sparingly and seek a more specific, dictionary supplied field when possible. These fields are typically reserved for customer use and should not be set by vendors unless necessary.

type: date

--

*`cef.extensions.flexDate1Label`*::
+
--
The label field is a string and describes the purpose of the flex field.

type: keyword

--

*`cef.extensions.flexString1`*::
+
--
One of four floating point fields available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible. These fields are typically reserved for customer use and should not be set by vendors unless necessary.

type: keyword

--

*`cef.extensions.flexString2`*::
+
--
One of four floating point fields available to map fields that do not apply to any other in this dictionary. Use sparingly and seek a more specific, dictionary supplied field when possible. These fields are typically reserved for customer use and should not be set by vendors unless necessary.

type: keyword

--

*`cef.extensions.flexString1Label`*::
+
--
The label field is a string and describes the purpose of the flex field.

type: keyword

--

*`cef.extensions.flexString2Label`*::
+
--
The label field is a string and describes the purpose of the flex field.

type: keyword

--

*`cef.extensions.message`*::
+
--
An arbitrary message giving more details about the event. Multi-line entries can be produced by using \n as the new line separator.

type: keyword

--

*`cef.extensions.oldFileCreateTime`*::
+
--
Time when old file was created.

type: date

--

*`cef.extensions.oldFileHash`*::
+
--
Hash of the old file.

type: keyword

--

*`cef.extensions.oldFileId`*::
+
--
An ID associated with the old file could be the inode.

type: keyword

--

*`cef.extensions.oldFileModificationTime`*::
+
--
Time when old file was last modified.

type: date

--

*`cef.extensions.oldFileName`*::
+
--
Name of the old file.

type: keyword

--

*`cef.extensions.oldFilePath`*::
+
--
Full path to the old file, including the file name itself.

type: keyword

--

*`cef.extensions.oldFilePermission`*::
+
--
Permissions of the old file.

type: keyword

--

*`cef.extensions.oldFileSize`*::
+
--
Size of the old file.

type: long

--

*`cef.extensions.oldFileType`*::
+
--
Type of the old file (pipe, socket, etc.)

type: keyword

--

*`cef.extensions.rawEvent`*::
+
--
None

type: keyword

--

*`cef.extensions.Reason`*::
+
--
The reason an audit event was generated. For example "bad password" or "unknown user". This could also be an error or return code. Example "0x1234".

type: keyword

--

*`cef.extensions.requestClientApplication`*::
+
--
The User-Agent associated with the request.

type: keyword

--

*`cef.extensions.requestContext`*::
+
--
Description of the content from which the request originated (for example, HTTP Referrer)

type: keyword

--

*`cef.extensions.requestCookies`*::
+
--
Cookies associated with the request.

type: keyword

--

*`cef.extensions.requestMethod`*::
+
--
The HTTP method used to access a URL.

type: keyword

--

*`cef.extensions.requestUrl`*::
+
--
In the case of an HTTP request, this field contains the URL accessed. The URL should contain the protocol as well.

type: keyword

--

*`cef.extensions.sourceAddress`*::
+
--
Identifies the source that an event refers to in an IP network.

type: ip

--

*`cef.extensions.sourceDnsDomain`*::
+
--
The DNS domain part of the complete fully qualified domain name (FQDN).

type: keyword

--

*`cef.extensions.sourceGeoLatitude`*::
+
--
None

type: double

--

*`cef.extensions.sourceGeoLongitude`*::
+
--
None

type: double

--

*`cef.extensions.sourceHostName`*::
+
--
Identifies the source that an event refers to in an IP network. The format should be a fully qualified domain name (FQDN) associated with the source node, when a mode is available. Examples: 'host' or 'host.domain.com'.


type: keyword

--

*`cef.extensions.sourceMacAddress`*::
+
--
Six colon-separated hexadecimal numbers.

type: keyword

example: 00:0d:60:af:1b:61

--

*`cef.extensions.sourceNtDomain`*::
+
--
The Windows domain name for the source address.

type: keyword

--

*`cef.extensions.sourcePort`*::
+
--
The valid port numbers are 0 to 65535.

type: long

--

*`cef.extensions.sourceProcessId`*::
+
--
The ID of the source process associated with the event.

type: long

--

*`cef.extensions.sourceProcessName`*::
+
--
The name of the event's source process.

type: keyword

--

*`cef.extensions.sourceServiceName`*::
+
--
The service that is responsible for generating this event.

type: keyword

--

*`cef.extensions.sourceTranslatedAddress`*::
+
--
Identifies the translated source that the event refers to in an IP network.

type: ip

--

*`cef.extensions.sourceTranslatedPort`*::
+
--
A port number after being translated by, for example, a firewall. Valid port numbers are 0 to 65535.

type: long

--

*`cef.extensions.sourceTranslatedZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.sourceTranslatedZoneURI`*::
+
--
The URI for the Translated Zone that the destination asset has been assigned to in ArcSight.

type: keyword

--

*`cef.extensions.sourceUserId`*::
+
--
Identifies the source user by ID. This is the user associated with the source of the event. For example, in UNIX, the root user is generally associated with user ID 0.

type: keyword

--

*`cef.extensions.sourceUserName`*::
+
--
Identifies the source user by name. Email addresses are also mapped into the UserName fields. The sender is a candidate to put into this field.

type: keyword

--

*`cef.extensions.sourceUserPrivileges`*::
+
--
The typical values are "Administrator", "User", and "Guest". It identifies the source user's privileges. In UNIX, for example, activity executed by the root user would be identified with "Administrator".

type: keyword

--

*`cef.extensions.sourceZoneExternalID`*::
+
--
None

type: keyword

--

*`cef.extensions.sourceZoneURI`*::
+
--
The URI for the Zone that the source asset has been assigned to in ArcSight.

type: keyword

--

*`cef.extensions.startTime`*::
+
--
The time when the activity the event referred to started. The format is MMM dd yyyy HH:mm:ss or milliseconds since epoch (Jan 1st 1970)

type: date

--

*`cef.extensions.transportProtocol`*::
+
--
Identifies the Layer-4 protocol used. The possible values are protocols such as TCP or UDP.

type: keyword

--

*`cef.extensions.type`*::
+
--
0 means base event, 1 means aggregated, 2 means correlation, and 3 means action. This field can be omitted for base events (type 0).

type: long

--

*`cef.extensions.categoryDeviceType`*::
+
--
Device type. Examples - Proxy, IDS, Web Server

type: keyword

--

*`cef.extensions.categoryObject`*::
+
--
Object that the event is about. For example it can be an operating sytem, database, file, etc.

type: keyword

--

*`cef.extensions.categoryBehavior`*::
+
--
Action or a behavior associated with an event. It's what is being done to the object.

type: keyword

--

*`cef.extensions.categoryTechnique`*::
+
--
Technique being used (e.g. /DoS).

type: keyword

--

*`cef.extensions.categoryDeviceGroup`*::
+
--
General device group like Firewall.

type: keyword

--

*`cef.extensions.categorySignificance`*::
+
--
Characterization of the importance of the event.

type: keyword

--

*`cef.extensions.categoryOutcome`*::
+
--
Outcome of the event (e.g. sucess, failure, or attempt).

type: keyword

--

*`cef.extensions.managerReceiptTime`*::
+
--
When the Arcsight ESM received the event.

type: date

--

*`source.service.name`*::
+
--
Service that is the source of the event.

type: keyword

--

*`destination.service.name`*::
+
--
Service that is the target of the event.

type: keyword

--

[[exported-fields-cef-module]]
== CEF fields

Module for receiving CEF logs over Syslog. The module adds vendor specific fields in addition to the fields the decode_cef processor provides.



[float]
=== forcepoint

Fields for Forcepoint Custom String mappings



*`forcepoint.virus_id`*::
+
--
Virus ID


type: keyword

--

[float]
=== checkpoint

Fields for Check Point custom string mappings.



*`checkpoint.app_risk`*::
+
--
Application risk.

type: keyword

--

*`checkpoint.app_severity`*::
+
--
Application threat severity.

type: keyword

--

*`checkpoint.app_sig_id`*::
+
--
The signature ID which the application was detected by.

type: keyword

--

*`checkpoint.auth_method`*::
+
--
Password authentication protocol used.

type: keyword

--

*`checkpoint.category`*::
+
--
Category.

type: keyword

--

*`checkpoint.confidence_level`*::
+
--
Confidence level determined.

type: integer

--

*`checkpoint.connectivity_state`*::
+
--
Connectivity state.

type: keyword

--

*`checkpoint.cookie`*::
+
--
IKE cookie.

type: keyword

--

*`checkpoint.dst_phone_number`*::
+
--
Destination IP-Phone.

type: keyword

--

*`checkpoint.email_control`*::
+
--
Engine name.

type: keyword

--

*`checkpoint.email_id`*::
+
--
Internal email ID.

type: keyword

--

*`checkpoint.email_recipients_num`*::
+
--
Number of recipients.

type: long

--

*`checkpoint.email_session_id`*::
+
--
Internal email session ID.

type: keyword

--

*`checkpoint.email_spool_id`*::
+
--
Internal email spool ID.

type: keyword

--

*`checkpoint.email_subject`*::
+
--
Email subject.

type: keyword

--

*`checkpoint.event_count`*::
+
--
Number of events associated with the log.

type: long

--

*`checkpoint.frequency`*::
+
--
Scan frequency.

type: keyword

--

*`checkpoint.icmp_type`*::
+
--
ICMP type.

type: long

--

*`checkpoint.icmp_code`*::
+
--
ICMP code.

type: long

--

*`checkpoint.identity_type`*::
+
--
Identity type.

type: keyword

--

*`checkpoint.incident_extension`*::
+
--
Format of original data.

type: keyword

--

*`checkpoint.integrity_av_invoke_type`*::
+
--
Scan invoke type.

type: keyword

--

*`checkpoint.malware_family`*::
+
--
Malware family.

type: keyword

--

*`checkpoint.peer_gateway`*::
+
--
Main IP of the peer Security Gateway.

type: ip

--

*`checkpoint.performance_impact`*::
+
--
Protection performance impact.

type: integer

--

*`checkpoint.protection_id`*::
+
--
Protection malware ID.

type: keyword

--

*`checkpoint.protection_name`*::
+
--
Specific signature name of the attack.

type: keyword

--

*`checkpoint.protection_type`*::
+
--
Type of protection used to detect the attack.

type: keyword

--

*`checkpoint.scan_result`*::
+
--
Scan result.

type: keyword

--

*`checkpoint.sensor_mode`*::
+
--
Sensor mode.

type: keyword

--

*`checkpoint.severity`*::
+
--
Threat severity.

type: keyword

--

*`checkpoint.spyware_name`*::
+
--
Spyware name.

type: keyword

--

*`checkpoint.spyware_status`*::
+
--
Spyware status.

type: keyword

--

*`checkpoint.subs_exp`*::
+
--
The expiration date of the subscription.

type: date

--

*`checkpoint.tcp_flags`*::
+
--
TCP packet flags.

type: keyword

--

*`checkpoint.termination_reason`*::
+
--
Termination reason.

type: keyword

--

*`checkpoint.update_status`*::
+
--
Update status.

type: keyword

--

*`checkpoint.user_status`*::
+
--
User response.

type: keyword

--

*`checkpoint.uuid`*::
+
--
External ID.

type: keyword

--

*`checkpoint.virus_name`*::
+
--
Virus name.

type: keyword

--

*`checkpoint.voip_log_type`*::
+
--
VoIP log types.

type: keyword

--

[float]
=== cef.extensions

Extra vendor-specific extensions.



*`cef.extensions.cp_app_risk`*::
+
--
type: keyword

--

*`cef.extensions.cp_severity`*::
+
--
type: keyword

--

*`cef.extensions.ifname`*::
+
--
type: keyword

--

*`cef.extensions.inzone`*::
+
--
type: keyword

--

*`cef.extensions.layer_uuid`*::
+
--
type: keyword

--

*`cef.extensions.layer_name`*::
+
--
type: keyword

--

*`cef.extensions.logid`*::
+
--
type: keyword

--

*`cef.extensions.loguid`*::
+
--
type: keyword

--

*`cef.extensions.match_id`*::
+
--
type: keyword

--

*`cef.extensions.nat_addtnl_rulenum`*::
+
--
type: keyword

--

*`cef.extensions.nat_rulenum`*::
+
--
type: keyword

--

*`cef.extensions.origin`*::
+
--
type: keyword

--

*`cef.extensions.originsicname`*::
+
--
type: keyword

--

*`cef.extensions.outzone`*::
+
--
type: keyword

--

*`cef.extensions.parent_rule`*::
+
--
type: keyword

--

*`cef.extensions.product`*::
+
--
type: keyword

--

*`cef.extensions.rule_action`*::
+
--
type: keyword

--

*`cef.extensions.rule_uid`*::
+
--
type: keyword

--

*`cef.extensions.sequencenum`*::
+
--
type: keyword

--

*`cef.extensions.service_id`*::
+
--
type: keyword

--

*`cef.extensions.version`*::
+
--
type: keyword

--

[[exported-fields-checkpoint]]
== Checkpoint fields

Some checkpoint module



[float]
=== checkpoint

Module for parsing Checkpoint syslog.



*`checkpoint.confidence_level`*::
+
--
Confidence level determined by ThreatCloud.


type: integer

--

*`checkpoint.calc_desc`*::
+
--
Log description.


type: keyword

--

*`checkpoint.dst_country`*::
+
--
Destination country.


type: keyword

--

*`checkpoint.dst_user_name`*::
+
--
Connected user name on the destination IP.


type: keyword

--

*`checkpoint.email_id`*::
+
--
Email number in smtp connection.


type: keyword

--

*`checkpoint.email_subject`*::
+
--
Original email subject.


type: keyword

--

*`checkpoint.email_session_id`*::
+
--
Connection uuid.


type: keyword

--

*`checkpoint.event_count`*::
+
--
Number of events associated with the log.


type: long

--

*`checkpoint.sys_message`*::
+
--
System messages


type: keyword

--

*`checkpoint.logid`*::
+
--
System messages


type: keyword

--

*`checkpoint.failure_impact`*::
+
--
The impact of update service failure.


type: keyword

--

*`checkpoint.id`*::
+
--
Override application ID.


type: integer

--

*`checkpoint.information`*::
+
--
Policy installation status for a specific blade.


type: keyword

--

*`checkpoint.layer_name`*::
+
--
Layer name.


type: keyword

--

*`checkpoint.layer_uuid`*::
+
--
Layer UUID.


type: keyword

--

*`checkpoint.log_id`*::
+
--
Unique identity for logs.


type: integer

--

*`checkpoint.malware_family`*::
+
--
Additional information on protection.


type: keyword

--

*`checkpoint.origin_sic_name`*::
+
--
Machine SIC.


type: keyword

--

*`checkpoint.policy_mgmt`*::
+
--
Name of the Management Server that manages this Security Gateway.


type: keyword

--

*`checkpoint.policy_name`*::
+
--
Name of the last policy that this Security Gateway fetched.


type: keyword

--

*`checkpoint.protection_id`*::
+
--
Protection malware id.


type: keyword

--

*`checkpoint.protection_name`*::
+
--
Specific signature name of the attack.


type: keyword

--

*`checkpoint.protection_type`*::
+
--
Type of protection used to detect the attack.


type: keyword

--

*`checkpoint.protocol`*::
+
--
Protocol detected on the connection.


type: keyword

--

*`checkpoint.proxy_src_ip`*::
+
--
Sender source IP (even when using proxy).


type: ip

--

*`checkpoint.rule`*::
+
--
Matched rule number.


type: integer

--

*`checkpoint.rule_action`*::
+
--
Action of the matched rule in the access policy.


type: keyword

--

*`checkpoint.scan_direction`*::
+
--
Scan direction.


type: keyword

--

*`checkpoint.session_id`*::
+
--
Log uuid.


type: keyword

--

*`checkpoint.source_os`*::
+
--
OS which generated the attack.


type: keyword

--

*`checkpoint.src_country`*::
+
--
Country name, derived from connection source IP address.


type: keyword

--

*`checkpoint.src_user_name`*::
+
--
User name connected to source IP


type: keyword

--

*`checkpoint.ticket_id`*::
+
--
Unique ID per file.


type: keyword

--

*`checkpoint.tls_server_host_name`*::
+
--
SNI/CN from encrypted TLS connection used by URLF for categorization.


type: keyword

--

*`checkpoint.verdict`*::
+
--
TE engine verdict Possible values: Malicious/Benign/Error.


type: keyword

--

*`checkpoint.user`*::
+
--
Source user name.


type: keyword

--

*`checkpoint.vendor_list`*::
+
--
The vendor name that provided the verdict for a malicious URL.


type: keyword

--

*`checkpoint.web_server_type`*::
+
--
Web server detected in the HTTP response.


type: keyword

--

*`checkpoint.client_name`*::
+
--
Client Application or Software Blade that detected the event.


type: keyword

--

*`checkpoint.client_version`*::
+
--
Build version of SandBlast Agent client installed on the computer.


type: keyword

--

*`checkpoint.extension_version`*::
+
--
Build version of the SandBlast Agent browser extension.


type: keyword

--

*`checkpoint.host_time`*::
+
--
Local time on the endpoint computer.


type: keyword

--

*`checkpoint.installed_products`*::
+
--
List of installed Endpoint Software Blades.


type: keyword

--

*`checkpoint.cc`*::
+
--
The Carbon Copy address of the email.


type: keyword

--

*`checkpoint.parent_process_username`*::
+
--
Owner username of the parent process of the process that triggered the attack.


type: keyword

--

*`checkpoint.process_username`*::
+
--
Owner username of the process that triggered the attack.


type: keyword

--

*`checkpoint.audit_status`*::
+
--
Audit Status. Can be Success or Failure.


type: keyword

--

*`checkpoint.objecttable`*::
+
--
Table of affected objects.


type: keyword

--

*`checkpoint.objecttype`*::
+
--
The type of the affected object.


type: keyword

--

*`checkpoint.operation_number`*::
+
--
The operation nuber.


type: keyword

--

*`checkpoint.email_recipients_num`*::
+
--
Amount of recipients whom the mail was sent to.


type: integer

--

*`checkpoint.suppressed_logs`*::
+
--
Aggregated connections for five minutes on the same source, destination and port.


type: integer

--

*`checkpoint.blade_name`*::
+
--
Blade name.


type: keyword

--

*`checkpoint.status`*::
+
--
Ok/Warning/Error.


type: keyword

--

*`checkpoint.short_desc`*::
+
--
Short description of the process that was executed.


type: keyword

--

*`checkpoint.long_desc`*::
+
--
More information on the process (usually describing error reason in failure).


type: keyword

--

*`checkpoint.scan_hosts_hour`*::
+
--
Number of unique hosts during the last hour.


type: integer

--

*`checkpoint.scan_hosts_day`*::
+
--
Number of unique hosts during the last day.


type: integer

--

*`checkpoint.scan_hosts_week`*::
+
--
Number of unique hosts during the last week.


type: integer

--

*`checkpoint.unique_detected_hour`*::
+
--
Detected virus for a specific host during the last hour.


type: integer

--

*`checkpoint.unique_detected_day`*::
+
--
Detected virus for a specific host during the last day.


type: integer

--

*`checkpoint.unique_detected_week`*::
+
--
Detected virus for a specific host during the last week.


type: integer

--

*`checkpoint.scan_mail`*::
+
--
Number of emails that were scanned by "AB malicious activity" engine.


type: integer

--

*`checkpoint.additional_ip`*::
+
--
DNS host name.


type: keyword

--

*`checkpoint.description`*::
+
--
Additional explanation how the security gateway enforced the connection.


type: keyword

--

*`checkpoint.email_spam_category`*::
+
--
Email categories. Possible values: spam/not spam/phishing.


type: keyword

--

*`checkpoint.email_control_analysis`*::
+
--
Message classification, received from spam vendor engine.


type: keyword

--

*`checkpoint.scan_results`*::
+
--
"Infected"/description of a failure.


type: keyword

--

*`checkpoint.original_queue_id`*::
+
--
Original postfix email queue id.


type: keyword

--

*`checkpoint.risk`*::
+
--
Risk level we got from the engine.


type: keyword

--

*`checkpoint.observable_name`*::
+
--
IOC observable signature name.


type: keyword

--

*`checkpoint.observable_id`*::
+
--
IOC observable signature id.


type: keyword

--

*`checkpoint.observable_comment`*::
+
--
IOC observable signature description.


type: keyword

--

*`checkpoint.indicator_name`*::
+
--
IOC indicator name.


type: keyword

--

*`checkpoint.indicator_description`*::
+
--
IOC indicator description.


type: keyword

--

*`checkpoint.indicator_reference`*::
+
--
IOC indicator reference.


type: keyword

--

*`checkpoint.indicator_uuid`*::
+
--
IOC indicator uuid.


type: keyword

--

*`checkpoint.app_desc`*::
+
--
Application description.


type: keyword

--

*`checkpoint.app_id`*::
+
--
Application ID.


type: integer

--

*`checkpoint.app_sig_id`*::
+
--
IOC indicator description.


type: keyword

--

*`checkpoint.certificate_resource`*::
+
--
HTTPS resource Possible values: SNI or domain name (DN).


type: keyword

--

*`checkpoint.certificate_validation`*::
+
--
Precise error, describing HTTPS certificate failure under "HTTPS categorize websites" feature.


type: keyword

--

*`checkpoint.browse_time`*::
+
--
Application session browse time.


type: keyword

--

*`checkpoint.limit_requested`*::
+
--
Indicates whether data limit was requested for the session.


type: integer

--

*`checkpoint.limit_applied`*::
+
--
Indicates whether the session was actually date limited.


type: integer

--

*`checkpoint.dropped_total`*::
+
--
Amount of dropped packets (both incoming and outgoing).


type: integer

--

*`checkpoint.client_type_os`*::
+
--
Client OS detected in the HTTP request.


type: keyword

--

*`checkpoint.name`*::
+
--
Application name.


type: keyword

--

*`checkpoint.properties`*::
+
--
Application categories.


type: keyword

--

*`checkpoint.sig_id`*::
+
--
Application's signature ID which how it was detected by.


type: keyword

--

*`checkpoint.desc`*::
+
--
Override application description.


type: keyword

--

*`checkpoint.referrer_self_uid`*::
+
--
UUID of the current log.


type: keyword

--

*`checkpoint.referrer_parent_uid`*::
+
--
Log UUID of the referring application.


type: keyword

--

*`checkpoint.needs_browse_time`*::
+
--
Browse time required for the connection.


type: integer

--

*`checkpoint.cluster_info`*::
+
--
Cluster information. Possible options: Failover reason/cluster state changes/CP cluster or 3rd party.


type: keyword

--

*`checkpoint.sync`*::
+
--
Sync status and the reason (stable, at risk).


type: keyword

--

*`checkpoint.file_direction`*::
+
--
File direction. Possible options: upload/download.


type: keyword

--

*`checkpoint.invalid_file_size`*::
+
--
File_size field is valid only if this field is set to 0.


type: integer

--

*`checkpoint.top_archive_file_name`*::
+
--
In case of archive file: the file that was sent/received.


type: keyword

--

*`checkpoint.data_type_name`*::
+
--
Data type in rulebase that was matched.


type: keyword

--

*`checkpoint.specific_data_type_name`*::
+
--
Compound/Group scenario, data type that was matched.


type: keyword

--

*`checkpoint.word_list`*::
+
--
Words matched by data type.


type: keyword

--

*`checkpoint.info`*::
+
--
Special log message.


type: keyword

--

*`checkpoint.outgoing_url`*::
+
--
URL related to this log (for HTTP).


type: keyword

--

*`checkpoint.dlp_rule_name`*::
+
--
Matched rule name.


type: keyword

--

*`checkpoint.dlp_recipients`*::
+
--
Mail recipients.


type: keyword

--

*`checkpoint.dlp_subject`*::
+
--
Mail subject.


type: keyword

--

*`checkpoint.dlp_word_list`*::
+
--
Phrases matched by data type.


type: keyword

--

*`checkpoint.dlp_template_score`*::
+
--
Template data type match score.


type: keyword

--

*`checkpoint.message_size`*::
+
--
Mail/post size.


type: integer

--

*`checkpoint.dlp_incident_uid`*::
+
--
Unique ID of the matched rule.


type: keyword

--

*`checkpoint.dlp_related_incident_uid`*::
+
--
Other ID related to this one.


type: keyword

--

*`checkpoint.dlp_data_type_name`*::
+
--
Matched data type.


type: keyword

--

*`checkpoint.dlp_data_type_uid`*::
+
--
Unique ID of the matched data type.


type: keyword

--

*`checkpoint.dlp_violation_description`*::
+
--
Violation descriptions described in the rulebase.


type: keyword

--

*`checkpoint.dlp_relevant_data_types`*::
+
--
In case of Compound/Group: the inner data types that were matched.


type: keyword

--

*`checkpoint.dlp_action_reason`*::
+
--
Action chosen reason.


type: keyword

--

*`checkpoint.dlp_categories`*::
+
--
Data type category.


type: keyword

--

*`checkpoint.dlp_transint`*::
+
--
HTTP/SMTP/FTP.


type: keyword

--

*`checkpoint.duplicate`*::
+
--
Log marked as duplicated, when mail is split and the Security Gateway sees it twice.


type: keyword

--

*`checkpoint.incident_extension`*::
+
--
Matched data type.


type: keyword

--

*`checkpoint.matched_file`*::
+
--
Unique ID of the matched data type.


type: keyword

--

*`checkpoint.matched_file_text_segments`*::
+
--
Fingerprint: number of text segments matched by this traffic.


type: integer

--

*`checkpoint.matched_file_percentage`*::
+
--
Fingerprint: match percentage of the traffic.


type: integer

--

*`checkpoint.dlp_additional_action`*::
+
--
Watermark/None.


type: keyword

--

*`checkpoint.dlp_watermark_profile`*::
+
--
Watermark which was applied.


type: keyword

--

*`checkpoint.dlp_repository_id`*::
+
--
ID of scanned repository.


type: keyword

--

*`checkpoint.dlp_repository_root_path`*::
+
--
Repository path.


type: keyword

--

*`checkpoint.scan_id`*::
+
--
Sequential number of scan.


type: keyword

--

*`checkpoint.special_properties`*::
+
--
If this field is set to '1' the log will not be shown (in use for monitoring scan progress).


type: integer

--

*`checkpoint.dlp_repository_total_size`*::
+
--
Repository size.


type: integer

--

*`checkpoint.dlp_repository_files_number`*::
+
--
Number of files in repository.


type: integer

--

*`checkpoint.dlp_repository_scanned_files_number`*::
+
--
Number of scanned files in repository.


type: integer

--

*`checkpoint.duration`*::
+
--
Scan duration.      


type: keyword

--

*`checkpoint.dlp_fingerprint_long_status`*::
+
--
Scan status - long format.


type: keyword

--

*`checkpoint.dlp_fingerprint_short_status`*::
+
--
Scan status - short format.


type: keyword

--

*`checkpoint.dlp_repository_directories_number`*::
+
--
Number of directories in repository.


type: integer

--

*`checkpoint.dlp_repository_unreachable_directories_number`*::
+
--
Number of directories the Security Gateway was unable to read.


type: integer

--

*`checkpoint.dlp_fingerprint_files_number`*::
+
--
Number of successfully scanned files in repository.


type: integer

--

*`checkpoint.dlp_repository_skipped_files_number`*::
+
--
Skipped number of files because of configuration.


type: integer

--

*`checkpoint.dlp_repository_scanned_directories_number`*::
+
--
Amount of directories scanned.


type: integer

--

*`checkpoint.number_of_errors`*::
+
--
Number of files that were not  scanned due to an error.


type: integer

--

*`checkpoint.next_scheduled_scan_date`*::
+
--
Next scan scheduled time according to time object.     


type: keyword

--

*`checkpoint.dlp_repository_scanned_total_size`*::
+
--
Size scanned.


type: integer

--

*`checkpoint.dlp_repository_reached_directories_number`*::
+
--
Number of scanned directories in repository.


type: integer

--

*`checkpoint.dlp_repository_not_scanned_directories_percentage`*::
+
--
Percentage of directories the Security Gateway was unable to read.


type: integer

--

*`checkpoint.speed`*::
+
--
Current scan speed.


type: integer

--

*`checkpoint.dlp_repository_scan_progress`*::
+
--
Scan percentage.


type: integer

--

*`checkpoint.sub_policy_name`*::
+
--
Layer name.


type: keyword

--

*`checkpoint.sub_policy_uid`*::
+
--
Layer uid.


type: keyword

--

*`checkpoint.fw_message`*::
+
--
Used for various firewall errors.


type: keyword

--

*`checkpoint.message`*::
+
--
ISP link has failed.


type: keyword

--

*`checkpoint.isp_link`*::
+
--
Name of ISP link.


type: keyword

--

*`checkpoint.fw_subproduct`*::
+
--
Can be vpn/non vpn.


type: keyword

--

*`checkpoint.sctp_error`*::
+
--
Error information, what caused sctp to fail on out_of_state.


type: keyword

--

*`checkpoint.chunk_type`*::
+
--
Chunck of the sctp stream.


type: keyword

--

*`checkpoint.sctp_association_state`*::
+
--
The bad state you were trying to update to.


type: keyword

--

*`checkpoint.tcp_packet_out_of_state`*::
+
--
State violation.


type: keyword

--

*`checkpoint.tcp_flags`*::
+
--
TCP packet flags (SYN, ACK, etc.,).


type: keyword

--

*`checkpoint.connectivity_level`*::
+
--
Log for a new connection in wire mode.


type: keyword

--

*`checkpoint.ip_option`*::
+
--
IP option that was dropped.


type: integer

--

*`checkpoint.tcp_state`*::
+
--
Log reinting a tcp state change.


type: keyword

--

*`checkpoint.expire_time`*::
+
--
Connection closing time.


type: keyword

--

*`checkpoint.icmp_type`*::
+
--
In case a connection is ICMP, type info will be added to the log.


type: integer

--

*`checkpoint.icmp_code`*::
+
--
In case a connection is ICMP, code info will be added to the log.


type: integer

--

*`checkpoint.rpc_prog`*::
+
--
Log for new RPC state - prog values.


type: integer

--

*`checkpoint.dce-rpc_interface_uuid`*::
+
--
Log for new RPC state - UUID values


type: keyword

--

*`checkpoint.elapsed`*::
+
--
Time passed since start time.


type: keyword

--

*`checkpoint.icmp`*::
+
--
Number of packets, received by the client.


type: keyword

--

*`checkpoint.capture_uuid`*::
+
--
UUID generated for the capture. Used when enabling the capture when logging.


type: keyword

--

*`checkpoint.diameter_app_ID`*::
+
--
The ID of diameter application.


type: integer

--

*`checkpoint.diameter_cmd_code`*::
+
--
Diameter not allowed application command id.


type: integer

--

*`checkpoint.diameter_msg_type`*::
+
--
Diameter message type.


type: keyword

--

*`checkpoint.cp_message`*::
+
--
Used to log a general message.


type: integer

--

*`checkpoint.log_delay`*::
+
--
Time left before deleting template.


type: integer

--

*`checkpoint.attack_status`*::
+
--
In case of a malicious event on an endpoint computer, the status of the attack.


type: keyword

--

*`checkpoint.impacted_files`*::
+
--
In case of an infection on an endpoint computer, the list of files that the malware impacted.


type: keyword

--

*`checkpoint.remediated_files`*::
+
--
In case of an infection and a successful cleaning of that infection, this is a list of remediated files on the computer.


type: keyword

--

*`checkpoint.triggered_by`*::
+
--
The name of the mechanism that triggered the Software Blade to enforce a protection.


type: keyword

--

*`checkpoint.https_inspection_rule_id`*::
+
--
ID of the matched rule.


type: keyword

--

*`checkpoint.https_inspection_rule_name`*::
+
--
Name of the matched rule.


type: keyword

--

*`checkpoint.app_properties`*::
+
--
List of all found categories.


type: keyword

--

*`checkpoint.https_validation`*::
+
--
Precise error, describing HTTPS inspection failure.


type: keyword

--

*`checkpoint.https_inspection_action`*::
+
--
HTTPS inspection action (Inspect/Bypass/Error).


type: keyword

--

*`checkpoint.icap_service_id`*::
+
--
Service ID, can work with multiple servers, treated as services.


type: integer

--

*`checkpoint.icap_server_name`*::
+
--
Server name.


type: keyword

--

*`checkpoint.internal_error`*::
+
--
Internal error, for troubleshooting


type: keyword

--

*`checkpoint.icap_more_info`*::
+
--
Free text for verdict.


type: integer

--

*`checkpoint.reply_status`*::
+
--
ICAP reply status code, e.g. 200 or 204.


type: integer

--

*`checkpoint.icap_server_service`*::
+
--
Service name, as given in the ICAP URI


type: keyword

--

*`checkpoint.mirror_and_decrypt_type`*::
+
--
Information about decrypt and forward. Possible values: Mirror only, Decrypt and mirror, Partial mirroring (HTTPS inspection Bypass).


type: keyword

--

*`checkpoint.interface_name`*::
+
--
Designated interface for mirror And decrypt.


type: keyword

--

*`checkpoint.session_uid`*::
+
--
HTTP session-id.


type: keyword

--

*`checkpoint.broker_publisher`*::
+
--
IP address of the broker publisher who shared the session information.


type: ip

--

*`checkpoint.src_user_dn`*::
+
--
User distinguished name connected to source IP.


type: keyword

--

*`checkpoint.proxy_user_name`*::
+
--
User name connected to proxy IP.


type: keyword

--

*`checkpoint.proxy_machine_name`*::
+
--
Machine name connected to proxy IP.


type: integer

--

*`checkpoint.proxy_user_dn`*::
+
--
User distinguished name connected to proxy IP.


type: keyword

--

*`checkpoint.query`*::
+
--
DNS query.


type: keyword

--

*`checkpoint.dns_query`*::
+
--
DNS query.


type: keyword

--

*`checkpoint.inspection_item`*::
+
--
Blade element performed inspection.


type: keyword

--

*`checkpoint.performance_impact`*::
+
--
Protection performance impact.


type: integer

--

*`checkpoint.inspection_category`*::
+
--
Inspection category: protocol anomaly, signature etc.


type: keyword

--

*`checkpoint.inspection_profile`*::
+
--
Profile which the activated protection belongs to.


type: keyword

--

*`checkpoint.summary`*::
+
--
Summary message of a non-compliant DNS traffic drops or detects.


type: keyword

--

*`checkpoint.question_rdata`*::
+
--
List of question records domains.


type: keyword

--

*`checkpoint.answer_rdata`*::
+
--
List of answer resource records to the questioned domains.


type: keyword

--

*`checkpoint.authority_rdata`*::
+
--
List of authoritative servers.


type: keyword

--

*`checkpoint.additional_rdata`*::
+
--
List of additional resource records.


type: keyword

--

*`checkpoint.files_names`*::
+
--
List of files requested by FTP.


type: keyword

--

*`checkpoint.ftp_user`*::
+
--
FTP username.


type: keyword

--

*`checkpoint.mime_from`*::
+
--
Sender's address.


type: keyword

--

*`checkpoint.mime_to`*::
+
--
List of receiver address.


type: keyword

--

*`checkpoint.bcc`*::
+
--
List of BCC addresses.


type: keyword

--

*`checkpoint.content_type`*::
+
--
Mail content type. Possible values: application/msword, text/html, image/gif etc.


type: keyword

--

*`checkpoint.user_agent`*::
+
--
String identifying requesting software user agent.


type: keyword

--

*`checkpoint.referrer`*::
+
--
Referrer HTTP request header, previous web page address.


type: keyword

--

*`checkpoint.http_location`*::
+
--
Response header, indicates the URL to redirect a page to.


type: keyword

--

*`checkpoint.content_disposition`*::
+
--
Indicates how the content is expected to be displayed inline in the browser.


type: keyword

--

*`checkpoint.via`*::
+
--
Via header is added by proxies for tracking purposes to avoid sending reqests in loop.


type: keyword

--

*`checkpoint.http_server`*::
+
--
Server HTTP header value, contains information about the software used by the origin server, which handles the request.


type: keyword

--

*`checkpoint.content_length`*::
+
--
Indicates the size of the entity-body of the HTTP header.


type: keyword

--

*`checkpoint.authorization`*::
+
--
Authorization HTTP header value.


type: keyword

--

*`checkpoint.http_host`*::
+
--
Domain name of the server that the HTTP request is sent to.


type: keyword

--

*`checkpoint.inspection_settings_log`*::
+
--
Indicats that the log was released by inspection settings.


type: keyword

--

*`checkpoint.cvpn_resource`*::
+
--
Mobile Access application.


type: keyword

--

*`checkpoint.cvpn_category`*::
+
--
Mobile Access application type.


type: keyword

--

*`checkpoint.url`*::
+
--
Translated URL.


type: keyword

--

*`checkpoint.reject_id`*::
+
--
A reject ID that corresponds to the one presented in the Mobile Access error page.


type: keyword

--

*`checkpoint.fs-proto`*::
+
--
The file share protocol used in mobile acess file share application.


type: keyword

--

*`checkpoint.app_package`*::
+
--
Unique identifier of the application on the protected mobile device.


type: keyword

--

*`checkpoint.appi_name`*::
+
--
Name of application downloaded on the protected mobile device.


type: keyword

--

*`checkpoint.app_repackaged`*::
+
--
Indicates whether the original application was repackage not by the official developer.


type: keyword

--

*`checkpoint.app_sid_id`*::
+
--
Unique SHA identifier of a mobile application.


type: keyword

--

*`checkpoint.app_version`*::
+
--
Version of the application downloaded on the protected mobile device.


type: keyword

--

*`checkpoint.developer_certificate_name`*::
+
--
Name of the developer's certificate that was used to sign the mobile application.


type: keyword

--

*`checkpoint.email_control`*::
+
--
Engine name.


type: keyword

--

*`checkpoint.email_message_id`*::
+
--
Email session id (uniqe ID of the mail).


type: keyword

--

*`checkpoint.email_queue_id`*::
+
--
Postfix email queue id.


type: keyword

--

*`checkpoint.email_queue_name`*::
+
--
Postfix email queue name.


type: keyword

--

*`checkpoint.file_name`*::
+
--
Malicious file name.


type: keyword

--

*`checkpoint.failure_reason`*::
+
--
MTA failure description.


type: keyword

--

*`checkpoint.email_headers`*::
+
--
String containing all the email headers.


type: keyword

--

*`checkpoint.arrival_time`*::
+
--
Email arrival timestamp.


type: keyword

--

*`checkpoint.email_status`*::
+
--
Describes the email's state. Possible options: delivered, deferred, skipped, bounced, hold, new, scan_started, scan_ended


type: keyword

--

*`checkpoint.status_update`*::
+
--
Last time log was updated.


type: keyword

--

*`checkpoint.delivery_time`*::
+
--
Timestamp of when email was delivered (MTA finished handling the email.


type: keyword

--

*`checkpoint.links_num`*::
+
--
Number of links in the mail.


type: integer

--

*`checkpoint.attachments_num`*::
+
--
Number of attachments in the mail.


type: integer

--

*`checkpoint.email_content`*::
+
--
Mail contents. Possible options: attachments/links & attachments/links/text only.


type: keyword

--

*`checkpoint.allocated_ports`*::
+
--
Amount of allocated ports.


type: integer

--

*`checkpoint.capacity`*::
+
--
Capacity of the ports.


type: integer

--

*`checkpoint.ports_usage`*::
+
--
Percentage of allocated ports.


type: integer

--

*`checkpoint.nat_exhausted_pool`*::
+
--
4-tuple of an exhausted pool.


type: keyword

--

*`checkpoint.nat_rulenum`*::
+
--
NAT rulebase first matched rule.


type: integer

--

*`checkpoint.nat_addtnl_rulenum`*::
+
--
When matching 2 automatic rules , second rule match will be shown otherwise field will be 0.


type: integer

--

*`checkpoint.message_info`*::
+
--
Used for information messages, for example:NAT connection has ended.


type: keyword

--

*`checkpoint.nat46`*::
+
--
NAT 46 status, in most cases "enabled".


type: keyword

--

*`checkpoint.end_time`*::
+
--
TCP connection end time.


type: keyword

--

*`checkpoint.tcp_end_reason`*::
+
--
Reason for TCP connection closure.


type: keyword

--

*`checkpoint.cgnet`*::
+
--
Describes NAT allocation for specific subscriber.


type: keyword

--

*`checkpoint.subscriber`*::
+
--
Source IP before CGNAT.


type: ip

--

*`checkpoint.hide_ip`*::
+
--
Source IP which will be used after CGNAT.


type: ip

--

*`checkpoint.int_start`*::
+
--
Subscriber start int which will be used for NAT.


type: integer

--

*`checkpoint.int_end`*::
+
--
Subscriber end int which will be used for NAT.


type: integer

--

*`checkpoint.packet_amount`*::
+
--
Amount of packets dropped.


type: integer

--

*`checkpoint.monitor_reason`*::
+
--
Aggregated logs of monitored packets.


type: keyword

--

*`checkpoint.drops_amount`*::
+
--
Amount of multicast packets dropped.


type: integer

--

*`checkpoint.securexl_message`*::
+
--
Two options for a SecureXL message: 1. Missed accounting records after heavy load on logging system. 2. FW log message regarding a packet drop.


type: keyword

--

*`checkpoint.conns_amount`*::
+
--
Connections amount of aggregated log info.


type: integer

--

*`checkpoint.scope`*::
+
--
IP related to the attack.


type: keyword

--

*`checkpoint.analyzed_on`*::
+
--
Check Point ThreatCloud / emulator name.


type: keyword

--

*`checkpoint.detected_on`*::
+
--
System and applications version the file was emulated on.


type: keyword

--

*`checkpoint.dropped_file_name`*::
+
--
List of names dropped from the original file.


type: keyword

--

*`checkpoint.dropped_file_type`*::
+
--
List of file types dropped from the original file.


type: keyword

--

*`checkpoint.dropped_file_hash`*::
+
--
List of file hashes dropped from the original file.


type: keyword

--

*`checkpoint.dropped_file_verdict`*::
+
--
List of file verdics dropped from the original file.


type: keyword

--

*`checkpoint.emulated_on`*::
+
--
Images the files were emulated on.


type: keyword

--

*`checkpoint.extracted_file_type`*::
+
--
Types of extracted files in case of an archive.


type: keyword

--

*`checkpoint.extracted_file_names`*::
+
--
Names of extracted files in case of an archive.


type: keyword

--

*`checkpoint.extracted_file_hash`*::
+
--
Archive hash in case of extracted files.


type: keyword

--

*`checkpoint.extracted_file_verdict`*::
+
--
Verdict of extracted files in case of an archive.


type: keyword

--

*`checkpoint.extracted_file_uid`*::
+
--
UID of extracted files in case of an archive.


type: keyword

--

*`checkpoint.mitre_initial_access`*::
+
--
The adversary is trying to break into your network.


type: keyword

--

*`checkpoint.mitre_execution`*::
+
--
The adversary is trying to run malicious code.


type: keyword

--

*`checkpoint.mitre_persistence`*::
+
--
The adversary is trying to maintain his foothold.


type: keyword

--

*`checkpoint.mitre_privilege_escalation`*::
+
--
The adversary is trying to gain higher-level permissions.


type: keyword

--

*`checkpoint.mitre_defense_evasion`*::
+
--
The adversary is trying to avoid being detected.


type: keyword

--

*`checkpoint.mitre_credential_access`*::
+
--
The adversary is trying to steal account names and passwords.


type: keyword

--

*`checkpoint.mitre_discovery`*::
+
--
The adversary is trying to expose information about your environment.


type: keyword

--

*`checkpoint.mitre_lateral_movement`*::
+
--
The adversary is trying to explore your environment.


type: keyword

--

*`checkpoint.mitre_collection`*::
+
--
The adversary is trying to collect data of interest to achieve his goal.


type: keyword

--

*`checkpoint.mitre_command_and_control`*::
+
--
The adversary is trying to communicate with compromised systems in order to control them.


type: keyword

--

*`checkpoint.mitre_exfiltration`*::
+
--
The adversary is trying to steal data.


type: keyword

--

*`checkpoint.mitre_impact`*::
+
--
The adversary is trying to manipulate, interrupt, or destroy your systems and data.


type: keyword

--

*`checkpoint.parent_file_hash`*::
+
--
Archive's hash in case of extracted files.


type: keyword

--

*`checkpoint.parent_file_name`*::
+
--
Archive's name in case of extracted files.


type: keyword

--

*`checkpoint.parent_file_uid`*::
+
--
Archive's UID in case of extracted files.


type: keyword

--

*`checkpoint.similiar_iocs`*::
+
--
Other IoCs similar to the ones found, related to the malicious file.


type: keyword

--

*`checkpoint.similar_hashes`*::
+
--
Hashes found similar to the malicious file.


type: keyword

--

*`checkpoint.similar_strings`*::
+
--
Strings found similar to the malicious file.


type: keyword

--

*`checkpoint.similar_communication`*::
+
--
Network action found similar to the malicious file.


type: keyword

--

*`checkpoint.te_verdict_determined_by`*::
+
--
Emulators determined file verdict.


type: keyword

--

*`checkpoint.packet_capture_unique_id`*::
+
--
Identifier of the packet capture files.


type: keyword

--

*`checkpoint.total_attachments`*::
+
--
The number of attachments in an email.


type: integer

--

*`checkpoint.additional_info`*::
+
--
ID of original file/mail which are sent by admin.


type: keyword

--

*`checkpoint.content_risk`*::
+
--
File risk.


type: integer

--

*`checkpoint.operation`*::
+
--
Operation made by Threat Extraction.


type: keyword

--

*`checkpoint.scrubbed_content`*::
+
--
Active content that was found.


type: keyword

--

*`checkpoint.scrub_time`*::
+
--
Extraction process duration.


type: keyword

--

*`checkpoint.scrub_download_time`*::
+
--
File download time from resource.


type: keyword

--

*`checkpoint.scrub_total_time`*::
+
--
Threat extraction total file handling time.


type: keyword

--

*`checkpoint.scrub_activity`*::
+
--
The result of the extraction


type: keyword

--

*`checkpoint.watermark`*::
+
--
Reports whether watermark is added to the cleaned file.


type: keyword

--

*`checkpoint.source_object`*::
+
--
Matched object name on source column.


type: integer

--

*`checkpoint.destination_object`*::
+
--
Matched object name on destination column.


type: keyword

--

*`checkpoint.drop_reason`*::
+
--
Drop reason description.


type: keyword

--

*`checkpoint.hit`*::
+
--
Number of hits on a rule.


type: integer

--

*`checkpoint.rulebase_id`*::
+
--
Layer number.


type: integer

--

*`checkpoint.first_hit_time`*::
+
--
First hit time in current interval.


type: integer

--

*`checkpoint.last_hit_time`*::
+
--
Last hit time in current interval.


type: integer

--

*`checkpoint.rematch_info`*::
+
--
Information sent when old connections cannot be matched during policy installation.


type: keyword

--

*`checkpoint.last_rematch_time`*::
+
--
Connection rematched time.


type: keyword

--

*`checkpoint.action_reason`*::
+
--
Connection drop reason.


type: integer

--

*`checkpoint.c_bytes`*::
+
--
Boolean value indicates whether bytes sent from the client side are used.


type: integer

--

*`checkpoint.context_num`*::
+
--
Serial number of the log for a specific connection.


type: integer

--

*`checkpoint.match_id`*::
+
--
Private key of the rule


type: integer

--

*`checkpoint.alert`*::
+
--
Alert level of matched rule (for connection logs).


type: keyword

--

*`checkpoint.parent_rule`*::
+
--
Parent rule number, in case of inline layer.


type: integer

--

*`checkpoint.match_fk`*::
+
--
Rule number.


type: integer

--

*`checkpoint.dropped_outgoing`*::
+
--
Number of outgoing bytes dropped when using UP-limit feature.


type: integer

--

*`checkpoint.dropped_incoming`*::
+
--
Number of incoming bytes dropped when using UP-limit feature.


type: integer

--

*`checkpoint.media_type`*::
+
--
Media used (audio, video, etc.)


type: keyword

--

*`checkpoint.sip_reason`*::
+
--
Explains why 'source_ip' isn't allowed to redirect (handover).


type: keyword

--

*`checkpoint.voip_method`*::
+
--
Registration request.


type: keyword

--

*`checkpoint.registered_ip-phones`*::
+
--
Registered IP-Phones.


type: keyword

--

*`checkpoint.voip_reg_user_type`*::
+
--
Registered IP-Phone type.


type: keyword

--

*`checkpoint.voip_call_id`*::
+
--
Call-ID.


type: keyword

--

*`checkpoint.voip_reg_int`*::
+
--
Registration port.


type: integer

--

*`checkpoint.voip_reg_ipp`*::
+
--
Registration IP protocol.


type: integer

--

*`checkpoint.voip_reg_period`*::
+
--
Registration period.


type: integer

--

*`checkpoint.voip_log_type`*::
+
--
VoIP log types. Possible values: reject, call, registration.


type: keyword

--

*`checkpoint.src_phone_number`*::
+
--
Source IP-Phone.


type: keyword

--

*`checkpoint.voip_from_user_type`*::
+
--
Source IP-Phone type.


type: keyword

--

*`checkpoint.dst_phone_number`*::
+
--
Destination IP-Phone.


type: keyword

--

*`checkpoint.voip_to_user_type`*::
+
--
Destination IP-Phone type.


type: keyword

--

*`checkpoint.voip_call_dir`*::
+
--
Call direction: in/out.


type: keyword

--

*`checkpoint.voip_call_state`*::
+
--
Call state. Possible values: in/out.


type: keyword

--

*`checkpoint.voip_call_term_time`*::
+
--
Call termination time stamp.


type: keyword

--

*`checkpoint.voip_duration`*::
+
--
Call duration (seconds).


type: keyword

--

*`checkpoint.voip_media_port`*::
+
--
Media int.


type: keyword

--

*`checkpoint.voip_media_ipp`*::
+
--
Media IP protocol.


type: keyword

--

*`checkpoint.voip_est_codec`*::
+
--
Estimated codec.


type: keyword

--

*`checkpoint.voip_exp`*::
+
--
Expiration.


type: integer

--

*`checkpoint.voip_attach_sz`*::
+
--
Attachment size.


type: integer

--

*`checkpoint.voip_attach_action_info`*::
+
--
Attachment action Info.


type: keyword

--

*`checkpoint.voip_media_codec`*::
+
--
Estimated codec.


type: keyword

--

*`checkpoint.voip_reject_reason`*::
+
--
Reject reason.


type: keyword

--

*`checkpoint.voip_reason_info`*::
+
--
Information.


type: keyword

--

*`checkpoint.voip_config`*::
+
--
Configuration.


type: keyword

--

*`checkpoint.voip_reg_server`*::
+
--
Registrar server IP address.


type: ip

--

*`checkpoint.scv_user`*::
+
--
Username whose packets are dropped on SCV.


type: keyword

--

*`checkpoint.scv_message_info`*::
+
--
Drop reason.


type: keyword

--

*`checkpoint.ppp`*::
+
--
Authentication status.


type: keyword

--

*`checkpoint.scheme`*::
+
--
Describes the scheme used for the log.


type: keyword

--

*`checkpoint.auth_method`*::
+
--
Password authentication protocol used (PAP or EAP).


type: keyword

--

*`checkpoint.machine`*::
+
--
L2TP machine which triggered the log and the log refers to it.


type: keyword

--

*`checkpoint.vpn_feature_name`*::
+
--
L2TP /IKE / Link Selection.


type: keyword

--

*`checkpoint.reject_category`*::
+
--
Authentication failure reason.


type: keyword

--

*`checkpoint.peer_ip_probing_status_update`*::
+
--
IP address response status.


type: keyword

--

*`checkpoint.peer_ip`*::
+
--
IP address which the client connects to.


type: keyword

--

*`checkpoint.peer_gateway`*::
+
--
Main IP of the peer Security Gateway.


type: ip

--

*`checkpoint.link_probing_status_update`*::
+
--
IP address response status.


type: keyword

--

*`checkpoint.source_interface`*::
+
--
External Interface name for source interface or Null if not found.


type: keyword

--

*`checkpoint.next_hop_ip`*::
+
--
Next hop IP address.


type: keyword

--

*`checkpoint.srckeyid`*::
+
--
Initiator Spi ID.


type: keyword

--

*`checkpoint.dstkeyid`*::
+
--
Responder Spi ID.


type: keyword

--

*`checkpoint.encryption_failure`*::
+
--
Message indicating why the encryption failed.


type: keyword

--

*`checkpoint.ike_ids`*::
+
--
All QM ids.


type: keyword

--

*`checkpoint.community`*::
+
--
Community name for the IPSec key and the use of the IKEv.


type: keyword

--

*`checkpoint.ike`*::
+
--
IKEMode (PHASE1, PHASE2, etc..).


type: keyword

--

*`checkpoint.cookieI`*::
+
--
Initiator cookie.


type: keyword

--

*`checkpoint.cookieR`*::
+
--
Responder cookie.


type: keyword

--

*`checkpoint.msgid`*::
+
--
Message ID.


type: keyword

--

*`checkpoint.methods`*::
+
--
IPSEc methods.


type: keyword

--

*`checkpoint.connection_uid`*::
+
--
Calculation of md5 of the IP and user name as UID.


type: keyword

--

*`checkpoint.site_name`*::
+
--
Site name.


type: keyword

--

*`checkpoint.esod_rule_name`*::
+
--
Unknown rule name.


type: keyword

--

*`checkpoint.esod_rule_action`*::
+
--
Unknown rule action.


type: keyword

--

*`checkpoint.esod_rule_type`*::
+
--
Unknown rule type.


type: keyword

--

*`checkpoint.esod_noncompliance_reason`*::
+
--
Non-compliance reason.


type: keyword

--

*`checkpoint.esod_associated_policies`*::
+
--
Associated policies.


type: keyword

--

*`checkpoint.spyware_name`*::
+
--
Spyware name.


type: keyword

--

*`checkpoint.spyware_type`*::
+
--
Spyware type.


type: keyword

--

*`checkpoint.anti_virus_type`*::
+
--
Anti virus type.


type: keyword

--

*`checkpoint.end_user_firewall_type`*::
+
--
End user firewall type.


type: keyword

--

*`checkpoint.esod_scan_status`*::
+
--
Scan failed.


type: keyword

--

*`checkpoint.esod_access_status`*::
+
--
Access denied.


type: keyword

--

*`checkpoint.client_type`*::
+
--
Endpoint Connect.


type: keyword

--

*`checkpoint.precise_error`*::
+
--
HTTP parser error.


type: keyword

--

*`checkpoint.method`*::
+
--
HTTP method.


type: keyword

--

*`checkpoint.trusted_domain`*::
+
--
In case of phishing event, the domain, which the attacker was impersonating.


type: keyword

--

[[exported-fields-cisco]]
== Cisco fields

Module for handling Cisco network device logs.



[float]
=== cisco.asa

Fields for Cisco ASA Firewall.



*`cisco.asa.message_id`*::
+
--
The Cisco ASA message identifier.


type: keyword

--

*`cisco.asa.suffix`*::
+
--
Optional suffix after %ASA identifier.


type: keyword

example: session

--

*`cisco.asa.source_interface`*::
+
--
Source interface for the flow or event.


type: keyword

--

*`cisco.asa.destination_interface`*::
+
--
Destination interface for the flow or event.


type: keyword

--

*`cisco.asa.rule_name`*::
+
--
Name of the Access Control List rule that matched this event.


type: keyword

--

*`cisco.asa.source_username`*::
+
--
Name of the user that is the source for this event.


type: keyword

--

*`cisco.asa.destination_username`*::
+
--
Name of the user that is the destination for this event.


type: keyword

--

*`cisco.asa.mapped_source_ip`*::
+
--
The translated source IP address.


type: ip

--

*`cisco.asa.mapped_source_host`*::
+
--
The translated source host.


type: keyword

--

*`cisco.asa.mapped_source_port`*::
+
--
The translated source port.


type: long

--

*`cisco.asa.mapped_destination_ip`*::
+
--
The translated destination IP address.


type: ip

--

*`cisco.asa.mapped_destination_host`*::
+
--
The translated destination host.


type: keyword

--

*`cisco.asa.mapped_destination_port`*::
+
--
The translated destination port.


type: long

--

*`cisco.asa.threat_level`*::
+
--
Threat level for malware / botnet traffic. One of very-low, low, moderate, high or very-high.


type: keyword

--

*`cisco.asa.threat_category`*::
+
--
Category for the malware / botnet traffic. For example: virus, botnet, trojan, etc.


type: keyword

--

*`cisco.asa.connection_id`*::
+
--
Unique identifier for a flow.


type: keyword

--

*`cisco.asa.icmp_type`*::
+
--
ICMP type.


type: short

--

*`cisco.asa.icmp_code`*::
+
--
ICMP code.


type: short

--

*`cisco.asa.connection_type`*::
+
--
The VPN connection type


type: keyword

--

*`cisco.asa.dap_records`*::
+
--
The assigned DAP records


type: keyword

--

*`cisco.asa.command_line_arguments`*::
+
--
The command line arguments logged by the local audit log


type: keyword

--

*`cisco.asa.assigned_ip`*::
+
--
The IP address assigned to a VPN client successfully connecting


type: ip

--

*`cisco.asa.privilege.old`*::
+
--
When a users privilege is changed this is the old value


type: keyword

--

*`cisco.asa.privilege.new`*::
+
--
When a users privilege is changed this is the new value


type: keyword

--

*`cisco.asa.burst.object`*::
+
--
The related object for burst warnings


type: keyword

--

*`cisco.asa.burst.id`*::
+
--
The related rate ID for burst warnings


type: keyword

--

*`cisco.asa.burst.current_rate`*::
+
--
The current burst rate seen


type: keyword

--

*`cisco.asa.burst.configured_rate`*::
+
--
The current configured burst rate


type: keyword

--

*`cisco.asa.burst.avg_rate`*::
+
--
The current average burst rate seen


type: keyword

--

*`cisco.asa.burst.configured_avg_rate`*::
+
--
The current configured average burst rate allowed


type: keyword

--

*`cisco.asa.burst.cumulative_count`*::
+
--
The total count of burst rate hits since the object was created or cleared


type: keyword

--

[float]
=== cisco.ftd

Fields for Cisco Firepower Threat Defense Firewall.



*`cisco.ftd.message_id`*::
+
--
The Cisco FTD message identifier.


type: keyword

--

*`cisco.ftd.suffix`*::
+
--
Optional suffix after %FTD identifier.


type: keyword

example: session

--

*`cisco.ftd.source_interface`*::
+
--
Source interface for the flow or event.


type: keyword

--

*`cisco.ftd.destination_interface`*::
+
--
Destination interface for the flow or event.


type: keyword

--

*`cisco.ftd.rule_name`*::
+
--
Name of the Access Control List rule that matched this event.


type: keyword

--

*`cisco.ftd.source_username`*::
+
--
Name of the user that is the source for this event.


type: keyword

--

*`cisco.ftd.destination_username`*::
+
--
Name of the user that is the destination for this event.


type: keyword

--

*`cisco.ftd.mapped_source_ip`*::
+
--
The translated source IP address. Use ECS source.nat.ip.


type: ip

--

*`cisco.ftd.mapped_source_host`*::
+
--
The translated source host.


type: keyword

--

*`cisco.ftd.mapped_source_port`*::
+
--
The translated source port. Use ECS source.nat.port.


type: long

--

*`cisco.ftd.mapped_destination_ip`*::
+
--
The translated destination IP address. Use ECS destination.nat.ip.


type: ip

--

*`cisco.ftd.mapped_destination_host`*::
+
--
The translated destination host.


type: keyword

--

*`cisco.ftd.mapped_destination_port`*::
+
--
The translated destination port. Use ECS destination.nat.port.


type: long

--

*`cisco.ftd.threat_level`*::
+
--
Threat level for malware / botnet traffic. One of very-low, low, moderate, high or very-high.


type: keyword

--

*`cisco.ftd.threat_category`*::
+
--
Category for the malware / botnet traffic. For example: virus, botnet, trojan, etc.


type: keyword

--

*`cisco.ftd.connection_id`*::
+
--
Unique identifier for a flow.


type: keyword

--

*`cisco.ftd.icmp_type`*::
+
--
ICMP type.


type: short

--

*`cisco.ftd.icmp_code`*::
+
--
ICMP code.


type: short

--

*`cisco.ftd.security`*::
+
--
Raw fields for Security Events.

type: object

--

*`cisco.ftd.connection_type`*::
+
--
The VPN connection type


type: keyword

--

*`cisco.ftd.dap_records`*::
+
--
The assigned DAP records


type: keyword

--

[float]
=== cisco.ios

Fields for Cisco IOS logs.



*`cisco.ios.access_list`*::
+
--
Name of the IP access list.


type: keyword

--

*`cisco.ios.facility`*::
+
--
The facility to which the message refers (for example, SNMP, SYS, and so forth). A facility can be a hardware device, a protocol, or a module of the system software. It denotes the source or the cause of the system message.


type: keyword

example: SEC

--

*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[float]
=== cisco.umbrella

Fields for Cisco Umbrella.



*`cisco.umbrella.identities`*::
+
--
An array of the different identities related to the event.


type: keyword

--

*`cisco.umbrella.categories`*::
+
--
The security or content categories that the destination matches.


type: keyword

--

*`cisco.umbrella.policy_identity_type`*::
+
--
The first identity type matched with this request. Available in version 3 and above.


type: keyword

--

*`cisco.umbrella.identity_types`*::
+
--
The type of identity that made the request. For example, Roaming Computer or Network.


type: keyword

--

*`cisco.umbrella.blocked_categories`*::
+
--
The categories that resulted in the destination being blocked. Available in version 4 and above.


type: keyword

--

*`cisco.umbrella.content_type`*::
+
--
The type of web content, typically text/html.


type: keyword

--

*`cisco.umbrella.sha_sha256`*::
+
--
Hex digest of the response content.


type: keyword

--

*`cisco.umbrella.av_detections`*::
+
--
The detection name according to the antivirus engine used in file inspection.


type: keyword

--

*`cisco.umbrella.puas`*::
+
--
A list of all potentially unwanted application (PUA) results for the proxied file as returned by the antivirus scanner.


type: keyword

--

*`cisco.umbrella.amp_disposition`*::
+
--
The status of the files proxied and scanned by Cisco Advanced Malware Protection (AMP) as part of the Umbrella File Inspection feature; can be Clean, Malicious or Unknown.


type: keyword

--

*`cisco.umbrella.amp_malware_name`*::
+
--
If Malicious, the name of the malware according to AMP.


type: keyword

--

*`cisco.umbrella.amp_score`*::
+
--
The score of the malware from AMP. This field is not currently used and will be blank.


type: keyword

--

*`cisco.umbrella.datacenter`*::
+
--
The name of the Umbrella Data Center that processed the user-generated traffic.


type: keyword

--

*`cisco.umbrella.origin_id`*::
+
--
The unique identity of the network tunnel.


type: keyword

--

[[exported-fields-citrix]]
== Citrix NetScaler fields

citrix fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-cloud]]
== Cloud provider metadata fields

Metadata from cloud providers added by the add_cloud_metadata processor.



*`cloud.image.id`*::
+
--
Image ID for the cloud instance.


example: ami-abcd1234

--

*`meta.cloud.provider`*::
+
--
type: alias

alias to: cloud.provider

--

*`meta.cloud.instance_id`*::
+
--
type: alias

alias to: cloud.instance.id

--

*`meta.cloud.instance_name`*::
+
--
type: alias

alias to: cloud.instance.name

--

*`meta.cloud.machine_type`*::
+
--
type: alias

alias to: cloud.machine.type

--

*`meta.cloud.availability_zone`*::
+
--
type: alias

alias to: cloud.availability_zone

--

*`meta.cloud.project_id`*::
+
--
type: alias

alias to: cloud.project.id

--

*`meta.cloud.region`*::
+
--
type: alias

alias to: cloud.region

--

[[exported-fields-coredns]]
== Coredns fields

Module for handling logs produced by coredns



[float]
=== coredns

coredns fields after normalization



*`coredns.id`*::
+
--
id of the DNS transaction


type: keyword

--

*`coredns.query.size`*::
+
--
size of the DNS query


type: integer

format: bytes

--

*`coredns.query.class`*::
+
--
DNS query class


type: keyword

--

*`coredns.query.name`*::
+
--
DNS query name


type: keyword

--

*`coredns.query.type`*::
+
--
DNS query type


type: keyword

--

*`coredns.response.code`*::
+
--
DNS response code


type: keyword

--

*`coredns.response.flags`*::
+
--
DNS response flags


type: keyword

--

*`coredns.response.size`*::
+
--
size of the DNS response


type: integer

format: bytes

--

*`coredns.dnssec_ok`*::
+
--
dnssec flag


type: boolean

--

[[exported-fields-crowdstrike]]
== Crowdstrike fields

Module for collecting Crowdstrike events.



[float]
=== crowdstrike

Fields for Crowdstrike Falcon event and alert data.



[float]
=== metadata

Meta data fields for each event that include type and timestamp.



*`crowdstrike.metadata.eventType`*::
+
--
DetectionSummaryEvent, FirewallMatchEvent, IncidentSummaryEvent, RemoteResponseSessionStartEvent, RemoteResponseSessionEndEvent, AuthActivityAuditEvent, or UserActivityAuditEvent


type: keyword

--

*`crowdstrike.metadata.eventCreationTime`*::
+
--
The time this event occurred on the endpoint in UTC UNIX_MS format.


type: date

--

*`crowdstrike.metadata.offset`*::
+
--
Offset number that tracks the location of the event in stream. This is used to identify unique detection events.


type: integer

--

*`crowdstrike.metadata.customerIDString`*::
+
--
Customer identifier


type: keyword

--

*`crowdstrike.metadata.version`*::
+
--
Schema version


type: keyword

--

[float]
=== event

Event data fields for each event and alert.



*`crowdstrike.event.ProcessStartTime`*::
+
--
The process start time in UTC UNIX_MS format.


type: date

--

*`crowdstrike.event.ProcessEndTime`*::
+
--
The process termination time in UTC UNIX_MS format.


type: date

--

*`crowdstrike.event.ProcessId`*::
+
--
Process ID related to the detection.


type: integer

--

*`crowdstrike.event.ParentProcessId`*::
+
--
Parent process ID related to the detection.


type: integer

--

*`crowdstrike.event.ComputerName`*::
+
--
Name of the computer where the detection occurred.


type: keyword

--

*`crowdstrike.event.UserName`*::
+
--
User name associated with the detection.


type: keyword

--

*`crowdstrike.event.DetectName`*::
+
--
Name of the detection.


type: keyword

--

*`crowdstrike.event.DetectDescription`*::
+
--
Description of the detection.


type: keyword

--

*`crowdstrike.event.Severity`*::
+
--
Severity score of the detection.


type: integer

--

*`crowdstrike.event.SeverityName`*::
+
--
Severity score text.


type: keyword

--

*`crowdstrike.event.FileName`*::
+
--
File name of the associated process for the detection.


type: keyword

--

*`crowdstrike.event.FilePath`*::
+
--
Path of the executable associated with the detection.


type: keyword

--

*`crowdstrike.event.CommandLine`*::
+
--
Executable path with command line arguments.


type: keyword

--

*`crowdstrike.event.SHA1String`*::
+
--
SHA1 sum of the executable associated with the detection.


type: keyword

--

*`crowdstrike.event.SHA256String`*::
+
--
SHA256 sum of the executable associated with the detection.


type: keyword

--

*`crowdstrike.event.MD5String`*::
+
--
MD5 sum of the executable associated with the detection.


type: keyword

--

*`crowdstrike.event.MachineDomain`*::
+
--
Domain for the machine associated with the detection.


type: keyword

--

*`crowdstrike.event.FalconHostLink`*::
+
--
URL to view the detection in Falcon.


type: keyword

--

*`crowdstrike.event.SensorId`*::
+
--
Unique ID associated with the Falcon sensor.


type: keyword

--

*`crowdstrike.event.DetectId`*::
+
--
Unique ID associated with the detection.


type: keyword

--

*`crowdstrike.event.LocalIP`*::
+
--
IP address of the host associated with the detection.


type: keyword

--

*`crowdstrike.event.MACAddress`*::
+
--
MAC address of the host associated with the detection.


type: keyword

--

*`crowdstrike.event.Tactic`*::
+
--
MITRE tactic category of the detection.


type: keyword

--

*`crowdstrike.event.Technique`*::
+
--
MITRE technique category of the detection.


type: keyword

--

*`crowdstrike.event.Objective`*::
+
--
Method of detection.


type: keyword

--

*`crowdstrike.event.PatternDispositionDescription`*::
+
--
Action taken by Falcon.


type: keyword

--

*`crowdstrike.event.PatternDispositionValue`*::
+
--
Unique ID associated with action taken.


type: integer

--

*`crowdstrike.event.PatternDispositionFlags`*::
+
--
Flags indicating actions taken.


type: object

--

*`crowdstrike.event.State`*::
+
--
Whether the incident summary is open and ongoing or closed.


type: keyword

--

*`crowdstrike.event.IncidentStartTime`*::
+
--
Start time for the incident in UTC UNIX format.


type: date

--

*`crowdstrike.event.IncidentEndTime`*::
+
--
End time for the incident in UTC UNIX format.


type: date

--

*`crowdstrike.event.FineScore`*::
+
--
Score for incident.


type: float

--

*`crowdstrike.event.UserId`*::
+
--
Email address or user ID associated with the event.


type: keyword

--

*`crowdstrike.event.UserIp`*::
+
--
IP address associated with the user.


type: keyword

--

*`crowdstrike.event.OperationName`*::
+
--
Event subtype.


type: keyword

--

*`crowdstrike.event.ServiceName`*::
+
--
Service associated with this event.


type: keyword

--

*`crowdstrike.event.Success`*::
+
--
Indicator of whether or not this event was successful.


type: boolean

--

*`crowdstrike.event.UTCTimestamp`*::
+
--
Timestamp associated with this event in UTC UNIX format.


type: date

--

*`crowdstrike.event.AuditKeyValues`*::
+
--
Fields that were changed in this event.


type: nested

--

*`crowdstrike.event.ExecutablesWritten`*::
+
--
Detected executables written to disk by a process.


type: nested

--

*`crowdstrike.event.SessionId`*::
+
--
Session ID of the remote response session.


type: keyword

--

*`crowdstrike.event.HostnameField`*::
+
--
Host name of the machine for the remote session.


type: keyword

--

*`crowdstrike.event.StartTimestamp`*::
+
--
Start time for the remote session in UTC UNIX format.


type: date

--

*`crowdstrike.event.EndTimestamp`*::
+
--
End time for the remote session in UTC UNIX format.


type: date

--

*`crowdstrike.event.LateralMovement`*::
+
--
Lateral movement field for incident.


type: long

--

*`crowdstrike.event.ParentImageFileName`*::
+
--
Path to the parent process.


type: keyword

--

*`crowdstrike.event.ParentCommandLine`*::
+
--
Parent process command line arguments.


type: keyword

--

*`crowdstrike.event.GrandparentImageFileName`*::
+
--
Path to the grandparent process.


type: keyword

--

*`crowdstrike.event.GrandparentCommandLine`*::
+
--
Grandparent process command line arguments.


type: keyword

--

*`crowdstrike.event.IOCType`*::
+
--
CrowdStrike type for indicator of compromise.


type: keyword

--

*`crowdstrike.event.IOCValue`*::
+
--
CrowdStrike value for indicator of compromise.


type: keyword

--

*`crowdstrike.event.CustomerId`*::
+
--
Customer identifier.


type: keyword

--

*`crowdstrike.event.DeviceId`*::
+
--
Device on which the event occurred.


type: keyword

--

*`crowdstrike.event.Ipv`*::
+
--
Protocol for network request.


type: keyword

--

*`crowdstrike.event.ConnectionDirection`*::
+
--
Direction for network connection.


type: keyword

--

*`crowdstrike.event.EventType`*::
+
--
CrowdStrike provided event type.


type: keyword

--

*`crowdstrike.event.HostName`*::
+
--
Host name of the local machine.


type: keyword

--

*`crowdstrike.event.ICMPCode`*::
+
--
RFC2780 ICMP Code field.


type: keyword

--

*`crowdstrike.event.ICMPType`*::
+
--
RFC2780 ICMP Type field.


type: keyword

--

*`crowdstrike.event.ImageFileName`*::
+
--
File name of the associated process for the detection.


type: keyword

--

*`crowdstrike.event.PID`*::
+
--
Associated process id for the detection.


type: long

--

*`crowdstrike.event.LocalAddress`*::
+
--
IP address of local machine.


type: ip

--

*`crowdstrike.event.LocalPort`*::
+
--
Port of local machine.


type: long

--

*`crowdstrike.event.RemoteAddress`*::
+
--
IP address of remote machine.


type: ip

--

*`crowdstrike.event.RemotePort`*::
+
--
Port of remote machine.


type: long

--

*`crowdstrike.event.RuleAction`*::
+
--
Firewall rule action.


type: keyword

--

*`crowdstrike.event.RuleDescription`*::
+
--
Firewall rule description.


type: keyword

--

*`crowdstrike.event.RuleFamilyID`*::
+
--
Firewall rule family id.


type: keyword

--

*`crowdstrike.event.RuleGroupName`*::
+
--
Firewall rule group name.


type: keyword

--

*`crowdstrike.event.RuleName`*::
+
--
Firewall rule name.


type: keyword

--

*`crowdstrike.event.RuleId`*::
+
--
Firewall rule id.


type: keyword

--

*`crowdstrike.event.MatchCount`*::
+
--
Number of firewall rule matches.


type: long

--

*`crowdstrike.event.MatchCountSinceLastReport`*::
+
--
Number of firewall rule matches since the last report.


type: long

--

*`crowdstrike.event.Timestamp`*::
+
--
Firewall rule triggered timestamp.


type: date

--

*`crowdstrike.event.Flags.Audit`*::
+
--
CrowdStrike audit flag.


type: boolean

--

*`crowdstrike.event.Flags.Log`*::
+
--
CrowdStrike log flag.


type: boolean

--

*`crowdstrike.event.Flags.Monitor`*::
+
--
CrowdStrike monitor flag.


type: boolean

--

*`crowdstrike.event.Protocol`*::
+
--
CrowdStrike provided protocol.


type: keyword

--

*`crowdstrike.event.NetworkProfile`*::
+
--
CrowdStrike network profile.


type: keyword

--

*`crowdstrike.event.PolicyName`*::
+
--
CrowdStrike policy name.


type: keyword

--

*`crowdstrike.event.PolicyID`*::
+
--
CrowdStrike policy id.


type: keyword

--

*`crowdstrike.event.Status`*::
+
--
CrowdStrike status.


type: keyword

--

*`crowdstrike.event.TreeID`*::
+
--
CrowdStrike tree id.


type: keyword

--

*`crowdstrike.event.Commands`*::
+
--
Commands run in a remote session.


type: keyword

--

[[exported-fields-cyberark]]
== Cyber-Ark fields

cyberark fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-cylance]]
== CylanceProtect fields

cylance fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-docker-processor]]
== Docker fields

Docker stats collected from Docker.




*`docker.container.id`*::
+
--
type: alias

alias to: container.id

--

*`docker.container.image`*::
+
--
type: alias

alias to: container.image.name

--

*`docker.container.name`*::
+
--
type: alias

alias to: container.name

--

*`docker.container.labels`*::
+
--
Image labels.


type: object

--

[[exported-fields-ecs]]
== ECS fields


This section defines Elastic Common Schema (ECS) fields—a common set of fields
to be used when storing event data in {es}.

This is an exhaustive list, and fields listed here are not necessarily used by {beatname_uc}.
The goal of ECS is to enable and encourage users of {es} to normalize their event data,
so that they can better analyze, visualize, and correlate the data represented in their events.

See the {ecs-ref}[ECS reference] for more information.

*`@timestamp`*::
+
--
Date/time when the event originated.
This is the date/time extracted from the event, typically representing when the event was generated by the source.
If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
Required field for all events.

type: date

example: 2016-05-23T08:05:34.853Z

required: True

--

*`labels`*::
+
--
Custom key/value pairs.
Can be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.
Example: `docker` and `k8s` labels.

type: object

example: {"application": "foo-bar", "env": "production"}

--

*`message`*::
+
--
For log events the message field contains the log message, optimized for viewing in a log viewer.
For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
If multiple messages exist, they can be combined into one message.

type: text

example: Hello World

--

*`tags`*::
+
--
List of keywords used to tag each event.

type: keyword

example: ["production", "env2"]

--

[float]
=== agent

The agent fields contain the data about the software entity, if any, that collects, detects, or observes events on a host, or takes measurements on a host.
Examples include Beats. Agents may also run on observers. ECS agent.* fields shall be populated with details of the agent running on the host or observer where the event happened or the measurement was taken.


*`agent.build.original`*::
+
--
Extended build information for the agent.
This field is intended to contain any build information that a data source may provide, no specific formatting is required.

type: keyword

example: metricbeat version 7.6.0 (amd64), libbeat 7.6.0 [6a23e8f8f30f5001ba344e4e54d8d9cb82cb107c built 2020-02-05 23:10:10 +0000 UTC]

--

*`agent.ephemeral_id`*::
+
--
Ephemeral identifier of this agent (if one exists).
This id normally changes across restarts, but `agent.id` does not.

type: keyword

example: 8a4f500f

--

*`agent.id`*::
+
--
Unique identifier of this agent (if one exists).
Example: For Beats this would be beat.id.

type: keyword

example: 8a4f500d

--

*`agent.name`*::
+
--
Custom name of the agent.
This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.
If no name is given, the name is often left empty.

type: keyword

example: foo

--

*`agent.type`*::
+
--
Type of the agent.
The agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.

type: keyword

example: filebeat

--

*`agent.version`*::
+
--
Version of the agent.

type: keyword

example: 6.0.0-rc2

--

[float]
=== as

An autonomous system (AS) is a collection of connected Internet Protocol (IP) routing prefixes under the control of one or more network operators on behalf of a single administrative entity or domain that presents a common, clearly defined routing policy to the internet.


*`as.number`*::
+
--
Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.

type: long

example: 15169

--

*`as.organization.name`*::
+
--
Organization name.

type: keyword

example: Google LLC

--

*`as.organization.name.text`*::
+
--
type: text

--

[float]
=== client

A client is defined as the initiator of a network connection for events regarding sessions, connections, or bidirectional flow records.
For TCP events, the client is the initiator of the TCP connection that sends the SYN packet(s). For other protocols, the client is generally the initiator or requestor in the network transaction. Some systems use the term "originator" to refer the client in TCP connections. The client fields describe details about the system acting as the client in the network event. Client fields are usually populated in conjunction with server fields. Client fields are generally not populated for packet-level events.
Client / server representations can add semantic context to an exchange, which is helpful to visualize the data in certain situations. If your context falls in that category, you should still ensure that source and destination are filled appropriately.


*`client.address`*::
+
--
Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.

type: keyword

--

*`client.as.number`*::
+
--
Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.

type: long

example: 15169

--

*`client.as.organization.name`*::
+
--
Organization name.

type: keyword

example: Google LLC

--

*`client.as.organization.name.text`*::
+
--
type: text

--

*`client.bytes`*::
+
--
Bytes sent from the client to the server.

type: long

example: 184

format: bytes

--

*`client.domain`*::
+
--
Client domain.

type: keyword

--

*`client.geo.city_name`*::
+
--
City name.

type: keyword

example: Montreal

--

*`client.geo.continent_name`*::
+
--
Name of the continent.

type: keyword

example: North America

--

*`client.geo.country_iso_code`*::
+
--
Country ISO code.

type: keyword

example: CA

--

*`client.geo.country_name`*::
+
--
Country name.

type: keyword

example: Canada

--

*`client.geo.location`*::
+
--
Longitude and latitude.

type: geo_point

example: { "lon": -73.614830, "lat": 45.505918 }

--

*`client.geo.name`*::
+
--
User-defined description of a location, at the level of granularity they care about.
Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
Not typically used in automated geolocation.

type: keyword

example: boston-dc

--

*`client.geo.region_iso_code`*::
+
--
Region ISO code.

type: keyword

example: CA-QC

--

*`client.geo.region_name`*::
+
--
Region name.

type: keyword

example: Quebec

--

*`client.ip`*::
+
--
IP address of the client (IPv4 or IPv6).

type: ip

--

*`client.mac`*::
+
--
MAC address of the client.

type: keyword

--

*`client.nat.ip`*::
+
--
Translated IP of source based NAT sessions (e.g. internal client to internet).
Typically connections traversing load balancers, firewalls, or routers.

type: ip

--

*`client.nat.port`*::
+
--
Translated port of source based NAT sessions (e.g. internal client to internet).
Typically connections traversing load balancers, firewalls, or routers.

type: long

format: string

--

*`client.packets`*::
+
--
Packets sent from the client to the server.

type: long

example: 12

--

*`client.port`*::
+
--
Port of the client.

type: long

format: string

--

*`client.registered_domain`*::
+
--
The highest registered client domain, stripped of the subdomain.
For example, the registered domain for "foo.example.com" is "example.com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".

type: keyword

example: example.com

--

*`client.top_level_domain`*::
+
--
The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".

type: keyword

example: co.uk

--

*`client.user.domain`*::
+
--
Name of the directory the user is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`client.user.email`*::
+
--
User email address.

type: keyword

--

*`client.user.full_name`*::
+
--
User's full name, if available.

type: keyword

example: Albert Einstein

--

*`client.user.full_name.text`*::
+
--
type: text

--

*`client.user.group.domain`*::
+
--
Name of the directory the group is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`client.user.group.id`*::
+
--
Unique identifier for the group on the system/platform.

type: keyword

--

*`client.user.group.name`*::
+
--
Name of the group.

type: keyword

--

*`client.user.hash`*::
+
--
Unique user hash to correlate information for a user in anonymized form.
Useful if `user.id` or `user.name` contain confidential information and cannot be used.

type: keyword

--

*`client.user.id`*::
+
--
Unique identifier of the user.

type: keyword

--

*`client.user.name`*::
+
--
Short name or login of the user.

type: keyword

example: albert

--

*`client.user.name.text`*::
+
--
type: text

--

*`client.user.roles`*::
+
--
Array of user roles at the time of the event.

type: keyword

example: ["kibana_admin", "reporting_user"]

--

[float]
=== cloud

Fields related to the cloud or infrastructure the events are coming from.


*`cloud.account.id`*::
+
--
The cloud account or organization id used to identify different entities in a multi-tenant environment.
Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.

type: keyword

example: 666777888999

--

*`cloud.account.name`*::
+
--
The cloud account name or alias used to identify different entities in a multi-tenant environment.
Examples: AWS account name, Google Cloud ORG display name.

type: keyword

example: elastic-dev

--

*`cloud.availability_zone`*::
+
--
Availability zone in which this host is running.

type: keyword

example: us-east-1c

--

*`cloud.instance.id`*::
+
--
Instance ID of the host machine.

type: keyword

example: i-1234567890abcdef0

--

*`cloud.instance.name`*::
+
--
Instance name of the host machine.

type: keyword

--

*`cloud.machine.type`*::
+
--
Machine type of the host machine.

type: keyword

example: t2.medium

--

*`cloud.project.id`*::
+
--
The cloud project identifier.
Examples: Google Cloud Project id, Azure Project id.

type: keyword

example: my-project

--

*`cloud.project.name`*::
+
--
The cloud project name.
Examples: Google Cloud Project name, Azure Project name.

type: keyword

example: my project

--

*`cloud.provider`*::
+
--
Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.

type: keyword

example: aws

--

*`cloud.region`*::
+
--
Region in which this host is running.

type: keyword

example: us-east-1

--

[float]
=== code_signature

These fields contain information about binary code signatures.


*`code_signature.exists`*::
+
--
Boolean to capture if a signature is present.

type: boolean

example: true

--

*`code_signature.status`*::
+
--
Additional information about the certificate status.
This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.

type: keyword

example: ERROR_UNTRUSTED_ROOT

--

*`code_signature.subject_name`*::
+
--
Subject name of the code signer

type: keyword

example: Microsoft Corporation

--

*`code_signature.trusted`*::
+
--
Stores the trust status of the certificate chain.
Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.

type: boolean

example: true

--

*`code_signature.valid`*::
+
--
Boolean to capture if the digital signature is verified against the binary content.
Leave unpopulated if a certificate was unchecked.

type: boolean

example: true

--

[float]
=== container

Container fields are used for meta information about the specific container that is the source of information.
These fields help correlate data based containers from any runtime.


*`container.id`*::
+
--
Unique container id.

type: keyword

--

*`container.image.name`*::
+
--
Name of the image the container was built on.

type: keyword

--

*`container.image.tag`*::
+
--
Container image tags.

type: keyword

--

*`container.labels`*::
+
--
Image labels.

type: object

--

*`container.name`*::
+
--
Container name.

type: keyword

--

*`container.runtime`*::
+
--
Runtime managing this container.

type: keyword

example: docker

--

[float]
=== destination

Destination fields describe details about the destination of a packet/event.
Destination fields are usually populated in conjunction with source fields.


*`destination.address`*::
+
--
Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.

type: keyword

--

*`destination.as.number`*::
+
--
Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.

type: long

example: 15169

--

*`destination.as.organization.name`*::
+
--
Organization name.

type: keyword

example: Google LLC

--

*`destination.as.organization.name.text`*::
+
--
type: text

--

*`destination.bytes`*::
+
--
Bytes sent from the destination to the source.

type: long

example: 184

format: bytes

--

*`destination.domain`*::
+
--
Destination domain.

type: keyword

--

*`destination.geo.city_name`*::
+
--
City name.

type: keyword

example: Montreal

--

*`destination.geo.continent_name`*::
+
--
Name of the continent.

type: keyword

example: North America

--

*`destination.geo.country_iso_code`*::
+
--
Country ISO code.

type: keyword

example: CA

--

*`destination.geo.country_name`*::
+
--
Country name.

type: keyword

example: Canada

--

*`destination.geo.location`*::
+
--
Longitude and latitude.

type: geo_point

example: { "lon": -73.614830, "lat": 45.505918 }

--

*`destination.geo.name`*::
+
--
User-defined description of a location, at the level of granularity they care about.
Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
Not typically used in automated geolocation.

type: keyword

example: boston-dc

--

*`destination.geo.region_iso_code`*::
+
--
Region ISO code.

type: keyword

example: CA-QC

--

*`destination.geo.region_name`*::
+
--
Region name.

type: keyword

example: Quebec

--

*`destination.ip`*::
+
--
IP address of the destination (IPv4 or IPv6).

type: ip

--

*`destination.mac`*::
+
--
MAC address of the destination.

type: keyword

--

*`destination.nat.ip`*::
+
--
Translated ip of destination based NAT sessions (e.g. internet to private DMZ)
Typically used with load balancers, firewalls, or routers.

type: ip

--

*`destination.nat.port`*::
+
--
Port the source session is translated to by NAT Device.
Typically used with load balancers, firewalls, or routers.

type: long

format: string

--

*`destination.packets`*::
+
--
Packets sent from the destination to the source.

type: long

example: 12

--

*`destination.port`*::
+
--
Port of the destination.

type: long

format: string

--

*`destination.registered_domain`*::
+
--
The highest registered destination domain, stripped of the subdomain.
For example, the registered domain for "foo.example.com" is "example.com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".

type: keyword

example: example.com

--

*`destination.top_level_domain`*::
+
--
The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".

type: keyword

example: co.uk

--

*`destination.user.domain`*::
+
--
Name of the directory the user is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`destination.user.email`*::
+
--
User email address.

type: keyword

--

*`destination.user.full_name`*::
+
--
User's full name, if available.

type: keyword

example: Albert Einstein

--

*`destination.user.full_name.text`*::
+
--
type: text

--

*`destination.user.group.domain`*::
+
--
Name of the directory the group is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`destination.user.group.id`*::
+
--
Unique identifier for the group on the system/platform.

type: keyword

--

*`destination.user.group.name`*::
+
--
Name of the group.

type: keyword

--

*`destination.user.hash`*::
+
--
Unique user hash to correlate information for a user in anonymized form.
Useful if `user.id` or `user.name` contain confidential information and cannot be used.

type: keyword

--

*`destination.user.id`*::
+
--
Unique identifier of the user.

type: keyword

--

*`destination.user.name`*::
+
--
Short name or login of the user.

type: keyword

example: albert

--

*`destination.user.name.text`*::
+
--
type: text

--

*`destination.user.roles`*::
+
--
Array of user roles at the time of the event.

type: keyword

example: ["kibana_admin", "reporting_user"]

--

[float]
=== dll

These fields contain information about code libraries dynamically loaded into processes.

Many operating systems refer to "shared code libraries" with different names, but this field set refers to all of the following:
* Dynamic-link library (`.dll`) commonly used on Windows
* Shared Object (`.so`) commonly used on Unix-like operating systems
* Dynamic library (`.dylib`) commonly used on macOS


*`dll.code_signature.exists`*::
+
--
Boolean to capture if a signature is present.

type: boolean

example: true

--

*`dll.code_signature.status`*::
+
--
Additional information about the certificate status.
This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.

type: keyword

example: ERROR_UNTRUSTED_ROOT

--

*`dll.code_signature.subject_name`*::
+
--
Subject name of the code signer

type: keyword

example: Microsoft Corporation

--

*`dll.code_signature.trusted`*::
+
--
Stores the trust status of the certificate chain.
Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.

type: boolean

example: true

--

*`dll.code_signature.valid`*::
+
--
Boolean to capture if the digital signature is verified against the binary content.
Leave unpopulated if a certificate was unchecked.

type: boolean

example: true

--

*`dll.hash.md5`*::
+
--
MD5 hash.

type: keyword

--

*`dll.hash.sha1`*::
+
--
SHA1 hash.

type: keyword

--

*`dll.hash.sha256`*::
+
--
SHA256 hash.

type: keyword

--

*`dll.hash.sha512`*::
+
--
SHA512 hash.

type: keyword

--

*`dll.name`*::
+
--
Name of the library.
This generally maps to the name of the file on disk.

type: keyword

example: kernel32.dll

--

*`dll.path`*::
+
--
Full file path of the library.

type: keyword

example: C:\Windows\System32\kernel32.dll

--

*`dll.pe.architecture`*::
+
--
CPU architecture target for the file.

type: keyword

example: x64

--

*`dll.pe.company`*::
+
--
Internal company name of the file, provided at compile-time.

type: keyword

example: Microsoft Corporation

--

*`dll.pe.description`*::
+
--
Internal description of the file, provided at compile-time.

type: keyword

example: Paint

--

*`dll.pe.file_version`*::
+
--
Internal version of the file, provided at compile-time.

type: keyword

example: 6.3.9600.17415

--

*`dll.pe.imphash`*::
+
--
A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.

type: keyword

example: 0c6803c4e922103c4dca5963aad36ddf

--

*`dll.pe.original_file_name`*::
+
--
Internal name of the file, provided at compile-time.

type: keyword

example: MSPAINT.EXE

--

*`dll.pe.product`*::
+
--
Internal product name of the file, provided at compile-time.

type: keyword

example: Microsoft® Windows® Operating System

--

[float]
=== dns

Fields describing DNS queries and answers.
DNS events should either represent a single DNS query prior to getting answers (`dns.type:query`) or they should represent a full exchange and contain the query details as well as all of the answers that were provided for this query (`dns.type:answer`).


*`dns.answers`*::
+
--
An array containing an object for each answer section returned by the server.
The main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.
Not all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields.

type: object

--

*`dns.answers.class`*::
+
--
The class of DNS data contained in this resource record.

type: keyword

example: IN

--

*`dns.answers.data`*::
+
--
The data describing the resource.
The meaning of this data depends on the type and class of the resource record.

type: keyword

example: 10.10.10.10

--

*`dns.answers.name`*::
+
--
The domain name to which this resource record pertains.
If a chain of CNAME is being resolved, each answer's `name` should be the one that corresponds with the answer's `data`. It should not simply be the original `question.name` repeated.

type: keyword

example: www.example.com

--

*`dns.answers.ttl`*::
+
--
The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached.

type: long

example: 180

--

*`dns.answers.type`*::
+
--
The type of data contained in this resource record.

type: keyword

example: CNAME

--

*`dns.header_flags`*::
+
--
Array of 2 letter DNS header flags.
Expected values are: AA, TC, RD, RA, AD, CD, DO.

type: keyword

example: ['RD', 'RA']

--

*`dns.id`*::
+
--
The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response.

type: keyword

example: 62111

--

*`dns.op_code`*::
+
--
The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.

type: keyword

example: QUERY

--

*`dns.question.class`*::
+
--
The class of records being queried.

type: keyword

example: IN

--

*`dns.question.name`*::
+
--
The name being queried.
If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.

type: keyword

example: www.example.com

--

*`dns.question.registered_domain`*::
+
--
The highest registered domain, stripped of the subdomain.
For example, the registered domain for "foo.example.com" is "example.com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".

type: keyword

example: example.com

--

*`dns.question.subdomain`*::
+
--
The subdomain is all of the labels under the registered_domain.
If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.

type: keyword

example: www

--

*`dns.question.top_level_domain`*::
+
--
The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".

type: keyword

example: co.uk

--

*`dns.question.type`*::
+
--
The type of record being queried.

type: keyword

example: AAAA

--

*`dns.resolved_ip`*::
+
--
Array containing all IPs seen in `answers.data`.
The `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for.

type: ip

example: ['10.10.10.10', '10.10.10.11']

--

*`dns.response_code`*::
+
--
The DNS response code.

type: keyword

example: NOERROR

--

*`dns.type`*::
+
--
The type of DNS event captured, query or answer.
If your source of DNS events only gives you DNS queries, you should only create dns events of type `dns.type:query`.
If your source of DNS events gives you answers as well, you should create one event per query (optionally as soon as the query is seen). And a second event containing all query details as well as an array of answers.

type: keyword

example: answer

--

[float]
=== ecs

Meta-information specific to ECS.


*`ecs.version`*::
+
--
ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.

type: keyword

example: 1.0.0

required: True

--

[float]
=== error

These fields can represent errors of any kind.
Use them for errors that happen while fetching events or in cases where the event itself contains an error.


*`error.code`*::
+
--
Error code describing the error.

type: keyword

--

*`error.id`*::
+
--
Unique identifier for the error.

type: keyword

--

*`error.message`*::
+
--
Error message.

type: text

--

*`error.stack_trace`*::
+
--
The stack trace of this error in plain text.

type: keyword

Field is not indexed.

--

*`error.stack_trace.text`*::
+
--
type: text

--

*`error.type`*::
+
--
The type of the error, for example the class name of the exception.

type: keyword

example: java.lang.NullPointerException

--

[float]
=== event

The event fields are used for context information about the log or metric event itself.
A log is defined as an event containing details of something that happened. Log events must include the time at which the thing happened. Examples of log events include a process starting on a host, a network packet being sent from a source to a destination, or a network connection between a client and a server being initiated or closed. A metric is defined as an event containing one or more numerical measurements and the time at which the measurement was taken. Examples of metric events include memory pressure measured on a host and device temperature. See the `event.kind` definition in this section for additional details about metric and state events.


*`event.action`*::
+
--
The action captured by the event.
This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.

type: keyword

example: user-password-change

--

*`event.category`*::
+
--
This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
`event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
This field is an array. This will allow proper categorization of some events that fall in multiple categories.

type: keyword

example: authentication

--

*`event.code`*::
+
--
Identification code for this event, if one exists.
Some event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.

type: keyword

example: 4648

--

*`event.created`*::
+
--
event.created contains the date/time when the event was first read by an agent, or by your pipeline.
This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
In case the two timestamps are identical, @timestamp should be used.

type: date

example: 2016-05-23T08:05:34.857Z

--

*`event.dataset`*::
+
--
Name of the dataset.
If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.
It's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.

type: keyword

example: apache.access

--

*`event.duration`*::
+
--
Duration of the event in nanoseconds.
If event.start and event.end are known this value should be the difference between the end and start time.

type: long

format: duration

--

*`event.end`*::
+
--
event.end contains the date when the event ended or when the activity was last observed.

type: date

--

*`event.hash`*::
+
--
Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.

type: keyword

example: 123456789012345678901234567890ABCD

--

*`event.id`*::
+
--
Unique ID to describe the event.

type: keyword

example: 8a4f500d

--

*`event.ingested`*::
+
--
Timestamp when an event arrived in the central data store.
This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.

type: date

example: 2016-05-23T08:05:35.101Z

--

*`event.kind`*::
+
--
This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
`event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.

type: keyword

example: alert

--

*`event.module`*::
+
--
Name of the module this data is coming from.
If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.

type: keyword

example: apache

--

*`event.original`*::
+
--
Raw text message of entire event. Used to demonstrate log integrity.
This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`.

type: keyword

example: Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124; worm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232

Field is not indexed.

--

*`event.outcome`*::
+
--
This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.
`event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.
Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.
Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.
Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.

type: keyword

example: success

--

*`event.provider`*::
+
--
Source of the event.
Event transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).

type: keyword

example: kernel

--

*`event.reason`*::
+
--
Reason why this event happened, according to the source.
This describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`).

type: keyword

example: Terminated an unexpected process

--

*`event.reference`*::
+
--
Reference URL linking to additional information about this event.
This URL links to a static definition of the this event. Alert events, indicated by `event.kind:alert`, are a common use case for this field.

type: keyword

example: https://system.example.com/event/#0001234

--

*`event.risk_score`*::
+
--
Risk score or priority of the event (e.g. security solutions). Use your system's original value here.

type: float

--

*`event.risk_score_norm`*::
+
--
Normalized risk score or priority of the event, on a scale of 0 to 100.
This is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems.

type: float

--

*`event.sequence`*::
+
--
Sequence number of the event.
The sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.

type: long

format: string

--

*`event.severity`*::
+
--
The numeric severity of the event according to your event source.
What the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.
The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.

type: long

example: 7

format: string

--

*`event.start`*::
+
--
event.start contains the date when the event started or when the activity was first observed.

type: date

--

*`event.timezone`*::
+
--
This field should be populated when the event's timestamp does not include timezone information already (e.g. default Syslog timestamps). It's optional otherwise.
Acceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"), abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").

type: keyword

--

*`event.type`*::
+
--
This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
`event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
This field is an array. This will allow proper categorization of some events that fall in multiple event types.

type: keyword

--

*`event.url`*::
+
--
URL linking to an external system to continue investigation of this event.
This URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.

type: keyword

example: https://mysystem.example.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe

--

[float]
=== file

A file is defined as a set of information that has been created on, or has existed on a filesystem.
File objects can be associated with host events, network events, and/or file events (e.g., those produced by File Integrity Monitoring [FIM] products or services). File fields provide details about the affected file associated with the event or metric.


*`file.accessed`*::
+
--
Last time the file was accessed.
Note that not all filesystems keep track of access time.

type: date

--

*`file.attributes`*::
+
--
Array of file attributes.
Attributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.

type: keyword

example: ["readonly", "system"]

--

*`file.code_signature.exists`*::
+
--
Boolean to capture if a signature is present.

type: boolean

example: true

--

*`file.code_signature.status`*::
+
--
Additional information about the certificate status.
This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.

type: keyword

example: ERROR_UNTRUSTED_ROOT

--

*`file.code_signature.subject_name`*::
+
--
Subject name of the code signer

type: keyword

example: Microsoft Corporation

--

*`file.code_signature.trusted`*::
+
--
Stores the trust status of the certificate chain.
Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.

type: boolean

example: true

--

*`file.code_signature.valid`*::
+
--
Boolean to capture if the digital signature is verified against the binary content.
Leave unpopulated if a certificate was unchecked.

type: boolean

example: true

--

*`file.created`*::
+
--
File creation time.
Note that not all filesystems store the creation time.

type: date

--

*`file.ctime`*::
+
--
Last time the file attributes or metadata changed.
Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.

type: date

--

*`file.device`*::
+
--
Device that is the source of the file.

type: keyword

example: sda

--

*`file.directory`*::
+
--
Directory where the file is located. It should include the drive letter, when appropriate.

type: keyword

example: /home/alice

--

*`file.drive_letter`*::
+
--
Drive letter where the file is located. This field is only relevant on Windows.
The value should be uppercase, and not include the colon.

type: keyword

example: C

--

*`file.extension`*::
+
--
File extension.

type: keyword

example: png

--

*`file.gid`*::
+
--
Primary group ID (GID) of the file.

type: keyword

example: 1001

--

*`file.group`*::
+
--
Primary group name of the file.

type: keyword

example: alice

--

*`file.hash.md5`*::
+
--
MD5 hash.

type: keyword

--

*`file.hash.sha1`*::
+
--
SHA1 hash.

type: keyword

--

*`file.hash.sha256`*::
+
--
SHA256 hash.

type: keyword

--

*`file.hash.sha512`*::
+
--
SHA512 hash.

type: keyword

--

*`file.inode`*::
+
--
Inode representing the file in the filesystem.

type: keyword

example: 256383

--

*`file.mime_type`*::
+
--
MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.

type: keyword

--

*`file.mode`*::
+
--
Mode of the file in octal representation.

type: keyword

example: 0640

--

*`file.mtime`*::
+
--
Last time the file content was modified.

type: date

--

*`file.name`*::
+
--
Name of the file including the extension, without the directory.

type: keyword

example: example.png

--

*`file.owner`*::
+
--
File owner's username.

type: keyword

example: alice

--

*`file.path`*::
+
--
Full path to the file, including the file name. It should include the drive letter, when appropriate.

type: keyword

example: /home/alice/example.png

--

*`file.path.text`*::
+
--
type: text

--

*`file.pe.architecture`*::
+
--
CPU architecture target for the file.

type: keyword

example: x64

--

*`file.pe.company`*::
+
--
Internal company name of the file, provided at compile-time.

type: keyword

example: Microsoft Corporation

--

*`file.pe.description`*::
+
--
Internal description of the file, provided at compile-time.

type: keyword

example: Paint

--

*`file.pe.file_version`*::
+
--
Internal version of the file, provided at compile-time.

type: keyword

example: 6.3.9600.17415

--

*`file.pe.imphash`*::
+
--
A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.

type: keyword

example: 0c6803c4e922103c4dca5963aad36ddf

--

*`file.pe.original_file_name`*::
+
--
Internal name of the file, provided at compile-time.

type: keyword

example: MSPAINT.EXE

--

*`file.pe.product`*::
+
--
Internal product name of the file, provided at compile-time.

type: keyword

example: Microsoft® Windows® Operating System

--

*`file.size`*::
+
--
File size in bytes.
Only relevant when `file.type` is "file".

type: long

example: 16384

--

*`file.target_path`*::
+
--
Target path for symlinks.

type: keyword

--

*`file.target_path.text`*::
+
--
type: text

--

*`file.type`*::
+
--
File type (file, dir, or symlink).

type: keyword

example: file

--

*`file.uid`*::
+
--
The user ID (UID) or security identifier (SID) of the file owner.

type: keyword

example: 1001

--

*`file.x509.alternative_names`*::
+
--
List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.

type: keyword

example: *.elastic.co

--

*`file.x509.issuer.common_name`*::
+
--
List of common name (CN) of issuing certificate authority.

type: keyword

example: Example SHA2 High Assurance Server CA

--

*`file.x509.issuer.country`*::
+
--
List of country (C) codes

type: keyword

example: US

--

*`file.x509.issuer.distinguished_name`*::
+
--
Distinguished name (DN) of issuing certificate authority.

type: keyword

example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA

--

*`file.x509.issuer.locality`*::
+
--
List of locality names (L)

type: keyword

example: Mountain View

--

*`file.x509.issuer.organization`*::
+
--
List of organizations (O) of issuing certificate authority.

type: keyword

example: Example Inc

--

*`file.x509.issuer.organizational_unit`*::
+
--
List of organizational units (OU) of issuing certificate authority.

type: keyword

example: www.example.com

--

*`file.x509.issuer.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`file.x509.not_after`*::
+
--
Time at which the certificate is no longer considered valid.

type: date

example: 2020-07-16 03:15:39+00:00

--

*`file.x509.not_before`*::
+
--
Time at which the certificate is first considered valid.

type: date

example: 2019-08-16 01:40:25+00:00

--

*`file.x509.public_key_algorithm`*::
+
--
Algorithm used to generate the public key.

type: keyword

example: RSA

--

*`file.x509.public_key_curve`*::
+
--
The curve used by the elliptic curve public key algorithm. This is algorithm specific.

type: keyword

example: nistp521

--

*`file.x509.public_key_exponent`*::
+
--
Exponent used to derive the public key. This is algorithm specific.

type: long

example: 65537

Field is not indexed.

--

*`file.x509.public_key_size`*::
+
--
The size of the public key space in bits.

type: long

example: 2048

--

*`file.x509.serial_number`*::
+
--
Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.

type: keyword

example: 55FBB9C7DEBF09809D12CCAA

--

*`file.x509.signature_algorithm`*::
+
--
Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.

type: keyword

example: SHA256-RSA

--

*`file.x509.subject.common_name`*::
+
--
List of common names (CN) of subject.

type: keyword

example: shared.global.example.net

--

*`file.x509.subject.country`*::
+
--
List of country (C) code

type: keyword

example: US

--

*`file.x509.subject.distinguished_name`*::
+
--
Distinguished name (DN) of the certificate subject entity.

type: keyword

example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net

--

*`file.x509.subject.locality`*::
+
--
List of locality names (L)

type: keyword

example: San Francisco

--

*`file.x509.subject.organization`*::
+
--
List of organizations (O) of subject.

type: keyword

example: Example, Inc.

--

*`file.x509.subject.organizational_unit`*::
+
--
List of organizational units (OU) of subject.

type: keyword

--

*`file.x509.subject.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`file.x509.version_number`*::
+
--
Version of x509 format.

type: keyword

example: 3

--

[float]
=== geo

Geo fields can carry data about a specific location related to an event.
This geolocation information can be derived from techniques such as Geo IP, or be user-supplied.


*`geo.city_name`*::
+
--
City name.

type: keyword

example: Montreal

--

*`geo.continent_name`*::
+
--
Name of the continent.

type: keyword

example: North America

--

*`geo.country_iso_code`*::
+
--
Country ISO code.

type: keyword

example: CA

--

*`geo.country_name`*::
+
--
Country name.

type: keyword

example: Canada

--

*`geo.location`*::
+
--
Longitude and latitude.

type: geo_point

example: { "lon": -73.614830, "lat": 45.505918 }

--

*`geo.name`*::
+
--
User-defined description of a location, at the level of granularity they care about.
Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
Not typically used in automated geolocation.

type: keyword

example: boston-dc

--

*`geo.region_iso_code`*::
+
--
Region ISO code.

type: keyword

example: CA-QC

--

*`geo.region_name`*::
+
--
Region name.

type: keyword

example: Quebec

--

[float]
=== group

The group fields are meant to represent groups that are relevant to the event.


*`group.domain`*::
+
--
Name of the directory the group is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`group.id`*::
+
--
Unique identifier for the group on the system/platform.

type: keyword

--

*`group.name`*::
+
--
Name of the group.

type: keyword

--

[float]
=== hash

The hash fields represent different hash algorithms and their values.
Field names for common hashes (e.g. MD5, SHA1) are predefined. Add fields for other hashes by lowercasing the hash algorithm name and using underscore separators as appropriate (snake case, e.g. sha3_512).


*`hash.md5`*::
+
--
MD5 hash.

type: keyword

--

*`hash.sha1`*::
+
--
SHA1 hash.

type: keyword

--

*`hash.sha256`*::
+
--
SHA256 hash.

type: keyword

--

*`hash.sha512`*::
+
--
SHA512 hash.

type: keyword

--

[float]
=== host

A host is defined as a general computing instance.
ECS host.* fields should be populated with details about the host on which the event happened, or from which the measurement was taken. Host types include hardware, virtual machines, Docker containers, and Kubernetes nodes.


*`host.architecture`*::
+
--
Operating system architecture.

type: keyword

example: x86_64

--

*`host.domain`*::
+
--
Name of the domain of which the host is a member.
For example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider.

type: keyword

example: CONTOSO

--

*`host.geo.city_name`*::
+
--
City name.

type: keyword

example: Montreal

--

*`host.geo.continent_name`*::
+
--
Name of the continent.

type: keyword

example: North America

--

*`host.geo.country_iso_code`*::
+
--
Country ISO code.

type: keyword

example: CA

--

*`host.geo.country_name`*::
+
--
Country name.

type: keyword

example: Canada

--

*`host.geo.location`*::
+
--
Longitude and latitude.

type: geo_point

example: { "lon": -73.614830, "lat": 45.505918 }

--

*`host.geo.name`*::
+
--
User-defined description of a location, at the level of granularity they care about.
Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
Not typically used in automated geolocation.

type: keyword

example: boston-dc

--

*`host.geo.region_iso_code`*::
+
--
Region ISO code.

type: keyword

example: CA-QC

--

*`host.geo.region_name`*::
+
--
Region name.

type: keyword

example: Quebec

--

*`host.hostname`*::
+
--
Hostname of the host.
It normally contains what the `hostname` command returns on the host machine.

type: keyword

--

*`host.id`*::
+
--
Unique host id.
As hostname is not always unique, use values that are meaningful in your environment.
Example: The current usage of `beat.name`.

type: keyword

--

*`host.ip`*::
+
--
Host ip addresses.

type: ip

--

*`host.mac`*::
+
--
Host mac addresses.

type: keyword

--

*`host.name`*::
+
--
Name of the host.
It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.

type: keyword

--

*`host.os.family`*::
+
--
OS family (such as redhat, debian, freebsd, windows).

type: keyword

example: debian

--

*`host.os.full`*::
+
--
Operating system name, including the version or code name.

type: keyword

example: Mac OS Mojave

--

*`host.os.full.text`*::
+
--
type: text

--

*`host.os.kernel`*::
+
--
Operating system kernel version as a raw string.

type: keyword

example: 4.4.0-112-generic

--

*`host.os.name`*::
+
--
Operating system name, without the version.

type: keyword

example: Mac OS X

--

*`host.os.name.text`*::
+
--
type: text

--

*`host.os.platform`*::
+
--
Operating system platform (such centos, ubuntu, windows).

type: keyword

example: darwin

--

*`host.os.version`*::
+
--
Operating system version as a raw string.

type: keyword

example: 10.14.1

--

*`host.type`*::
+
--
Type of host.
For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.

type: keyword

--

*`host.uptime`*::
+
--
Seconds the host has been up.

type: long

example: 1325

--

*`host.user.domain`*::
+
--
Name of the directory the user is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`host.user.email`*::
+
--
User email address.

type: keyword

--

*`host.user.full_name`*::
+
--
User's full name, if available.

type: keyword

example: Albert Einstein

--

*`host.user.full_name.text`*::
+
--
type: text

--

*`host.user.group.domain`*::
+
--
Name of the directory the group is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`host.user.group.id`*::
+
--
Unique identifier for the group on the system/platform.

type: keyword

--

*`host.user.group.name`*::
+
--
Name of the group.

type: keyword

--

*`host.user.hash`*::
+
--
Unique user hash to correlate information for a user in anonymized form.
Useful if `user.id` or `user.name` contain confidential information and cannot be used.

type: keyword

--

*`host.user.id`*::
+
--
Unique identifier of the user.

type: keyword

--

*`host.user.name`*::
+
--
Short name or login of the user.

type: keyword

example: albert

--

*`host.user.name.text`*::
+
--
type: text

--

*`host.user.roles`*::
+
--
Array of user roles at the time of the event.

type: keyword

example: ["kibana_admin", "reporting_user"]

--

[float]
=== http

Fields related to HTTP activity. Use the `url` field set to store the url of the request.


*`http.request.body.bytes`*::
+
--
Size in bytes of the request body.

type: long

example: 887

format: bytes

--

*`http.request.body.content`*::
+
--
The full HTTP request body.

type: keyword

example: Hello world

--

*`http.request.body.content.text`*::
+
--
type: text

--

*`http.request.bytes`*::
+
--
Total size in bytes of the request (body and headers).

type: long

example: 1437

format: bytes

--

*`http.request.method`*::
+
--
HTTP request method.
Prior to ECS 1.6.0 the following guidance was provided:
"The field value must be normalized to lowercase for querying."
As of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0

type: keyword

example: GET, POST, PUT, PoST

--

*`http.request.referrer`*::
+
--
Referrer for this HTTP request.

type: keyword

example: https://blog.example.com/

--

*`http.response.body.bytes`*::
+
--
Size in bytes of the response body.

type: long

example: 887

format: bytes

--

*`http.response.body.content`*::
+
--
The full HTTP response body.

type: keyword

example: Hello world

--

*`http.response.body.content.text`*::
+
--
type: text

--

*`http.response.bytes`*::
+
--
Total size in bytes of the response (body and headers).

type: long

example: 1437

format: bytes

--

*`http.response.status_code`*::
+
--
HTTP response status code.

type: long

example: 404

format: string

--

*`http.version`*::
+
--
HTTP version.

type: keyword

example: 1.1

--

[float]
=== interface

The interface fields are used to record ingress and egress interface information when reported by an observer (e.g. firewall, router, load balancer) in the context of the observer handling a network connection.  In the case of a single observer interface (e.g. network sensor on a span port) only the observer.ingress information should be populated.


*`interface.alias`*::
+
--
Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.

type: keyword

example: outside

--

*`interface.id`*::
+
--
Interface ID as reported by an observer (typically SNMP interface ID).

type: keyword

example: 10

--

*`interface.name`*::
+
--
Interface name as reported by the system.

type: keyword

example: eth0

--

[float]
=== log

Details about the event's logging mechanism or logging transport.
The log.* fields are typically populated with details about the logging mechanism used to create and/or transport the event. For example, syslog details belong under `log.syslog.*`.
The details specific to your event source are typically not logged under `log.*`, but rather in `event.*` or in other ECS fields.


*`log.file.path`*::
+
--
Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate.
If the event wasn't read from a log file, do not populate this field.

type: keyword

example: /var/log/fun-times.log

--

*`log.level`*::
+
--
Original log level of the log event.
If the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).
Some examples are `warn`, `err`, `i`, `informational`.

type: keyword

example: error

--

*`log.logger`*::
+
--
The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.

type: keyword

example: org.elasticsearch.bootstrap.Bootstrap

--

*`log.origin.file.line`*::
+
--
The line number of the file containing the source code which originated the log event.

type: integer

example: 42

--

*`log.origin.file.name`*::
+
--
The name of the file containing the source code which originated the log event.
Note that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.

type: keyword

example: Bootstrap.java

--

*`log.origin.function`*::
+
--
The name of the function or method which originated the log event.

type: keyword

example: init

--

*`log.original`*::
+
--
This is the original log message and contains the full log message before splitting it up in multiple parts.
In contrast to the `message` field which can contain an extracted part of the log message, this field contains the original, full log message. It can have already some modifications applied like encoding or new lines removed to clean up the log message.
This field is not indexed and doc_values are disabled so it can't be queried but the value can be retrieved from `_source`.

type: keyword

example: Sep 19 08:26:10 localhost My log

Field is not indexed.

--

*`log.syslog`*::
+
--
The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.

type: object

--

*`log.syslog.facility.code`*::
+
--
The Syslog numeric facility of the log event, if available.
According to RFCs 5424 and 3164, this value should be an integer between 0 and 23.

type: long

example: 23

format: string

--

*`log.syslog.facility.name`*::
+
--
The Syslog text-based facility of the log event, if available.

type: keyword

example: local7

--

*`log.syslog.priority`*::
+
--
Syslog numeric priority of the event, if available.
According to RFCs 5424 and 3164, the priority is 8 * facility + severity. This number is therefore expected to contain a value between 0 and 191.

type: long

example: 135

format: string

--

*`log.syslog.severity.code`*::
+
--
The Syslog numeric severity of the log event, if available.
If the event source publishing via Syslog provides a different numeric severity value (e.g. firewall, IDS), your source's numeric severity should go to `event.severity`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `event.severity`.

type: long

example: 3

--

*`log.syslog.severity.name`*::
+
--
The Syslog numeric severity of the log event, if available.
If the event source publishing via Syslog provides a different severity value (e.g. firewall, IDS), your source's text severity should go to `log.level`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `log.level`.

type: keyword

example: Error

--

[float]
=== network

The network is defined as the communication path over which a host or network event happens.
The network.* fields should be populated with details about the network activity associated with an event.


*`network.application`*::
+
--
A name given to an application level protocol. This can be arbitrarily assigned for things like microservices, but also apply to things like skype, icq, facebook, twitter. This would be used in situations where the vendor or service can be decoded such as from the source/dest IP owners, ports, or wire format.
The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".

type: keyword

example: aim

--

*`network.bytes`*::
+
--
Total bytes transferred in both directions.
If `source.bytes` and `destination.bytes` are known, `network.bytes` is their sum.

type: long

example: 368

format: bytes

--

*`network.community_id`*::
+
--
A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows.
Learn more at https://github.com/corelight/community-id-spec.

type: keyword

example: 1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=

--

*`network.direction`*::
+
--
Direction of the network traffic.
Recommended values are:
  * inbound
  * outbound
  * internal
  * external
  * unknown

When mapping events from a host-based monitoring context, populate this field from the host's point of view.
When mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of your network perimeter.

type: keyword

example: inbound

--

*`network.forwarded_ip`*::
+
--
Host IP address when the source IP address is the proxy.

type: ip

example: 192.1.1.2

--

*`network.iana_number`*::
+
--
IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number.

type: keyword

example: 6

--

*`network.inner`*::
+
--
Network.inner fields are added in addition to network.vlan fields to describe  the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include  vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)

type: object

--

*`network.inner.vlan.id`*::
+
--
VLAN ID as reported by the observer.

type: keyword

example: 10

--

*`network.inner.vlan.name`*::
+
--
Optional VLAN name as reported by the observer.

type: keyword

example: outside

--

*`network.name`*::
+
--
Name given by operators to sections of their network.

type: keyword

example: Guest Wifi

--

*`network.packets`*::
+
--
Total packets transferred in both directions.
If `source.packets` and `destination.packets` are known, `network.packets` is their sum.

type: long

example: 24

--

*`network.protocol`*::
+
--
L7 Network protocol name. ex. http, lumberjack, transport protocol.
The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".

type: keyword

example: http

--

*`network.transport`*::
+
--
Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.)
The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".

type: keyword

example: tcp

--

*`network.type`*::
+
--
In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc
The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".

type: keyword

example: ipv4

--

*`network.vlan.id`*::
+
--
VLAN ID as reported by the observer.

type: keyword

example: 10

--

*`network.vlan.name`*::
+
--
Optional VLAN name as reported by the observer.

type: keyword

example: outside

--

[float]
=== observer

An observer is defined as a special network, security, or application device used to detect, observe, or create network, security, or application-related events and metrics.
This could be a custom hardware appliance or a server that has been configured to run special network, security, or application software. Examples include firewalls, web proxies, intrusion detection/prevention systems, network monitoring sensors, web application firewalls, data loss prevention systems, and APM servers. The observer.* fields shall be populated with details of the system, if any, that detects, observes and/or creates a network, security, or application event or metric. Message queues and ETL components used in processing events or metrics are not considered observers in ECS.


*`observer.egress`*::
+
--
Observer.egress holds information like interface number and name, vlan, and zone information to  classify egress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.

type: object

--

*`observer.egress.interface.alias`*::
+
--
Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.

type: keyword

example: outside

--

*`observer.egress.interface.id`*::
+
--
Interface ID as reported by an observer (typically SNMP interface ID).

type: keyword

example: 10

--

*`observer.egress.interface.name`*::
+
--
Interface name as reported by the system.

type: keyword

example: eth0

--

*`observer.egress.vlan.id`*::
+
--
VLAN ID as reported by the observer.

type: keyword

example: 10

--

*`observer.egress.vlan.name`*::
+
--
Optional VLAN name as reported by the observer.

type: keyword

example: outside

--

*`observer.egress.zone`*::
+
--
Network zone of outbound traffic as reported by the observer to categorize the destination area of egress  traffic, e.g. Internal, External, DMZ, HR, Legal, etc.

type: keyword

example: Public_Internet

--

*`observer.geo.city_name`*::
+
--
City name.

type: keyword

example: Montreal

--

*`observer.geo.continent_name`*::
+
--
Name of the continent.

type: keyword

example: North America

--

*`observer.geo.country_iso_code`*::
+
--
Country ISO code.

type: keyword

example: CA

--

*`observer.geo.country_name`*::
+
--
Country name.

type: keyword

example: Canada

--

*`observer.geo.location`*::
+
--
Longitude and latitude.

type: geo_point

example: { "lon": -73.614830, "lat": 45.505918 }

--

*`observer.geo.name`*::
+
--
User-defined description of a location, at the level of granularity they care about.
Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
Not typically used in automated geolocation.

type: keyword

example: boston-dc

--

*`observer.geo.region_iso_code`*::
+
--
Region ISO code.

type: keyword

example: CA-QC

--

*`observer.geo.region_name`*::
+
--
Region name.

type: keyword

example: Quebec

--

*`observer.hostname`*::
+
--
Hostname of the observer.

type: keyword

--

*`observer.ingress`*::
+
--
Observer.ingress holds information like interface number and name, vlan, and zone information to  classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.

type: object

--

*`observer.ingress.interface.alias`*::
+
--
Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.

type: keyword

example: outside

--

*`observer.ingress.interface.id`*::
+
--
Interface ID as reported by an observer (typically SNMP interface ID).

type: keyword

example: 10

--

*`observer.ingress.interface.name`*::
+
--
Interface name as reported by the system.

type: keyword

example: eth0

--

*`observer.ingress.vlan.id`*::
+
--
VLAN ID as reported by the observer.

type: keyword

example: 10

--

*`observer.ingress.vlan.name`*::
+
--
Optional VLAN name as reported by the observer.

type: keyword

example: outside

--

*`observer.ingress.zone`*::
+
--
Network zone of incoming traffic as reported by the observer to categorize the source area of ingress  traffic. e.g. internal, External, DMZ, HR, Legal, etc.

type: keyword

example: DMZ

--

*`observer.ip`*::
+
--
IP addresses of the observer.

type: ip

--

*`observer.mac`*::
+
--
MAC addresses of the observer

type: keyword

--

*`observer.name`*::
+
--
Custom name of the observer.
This is a name that can be given to an observer. This can be helpful for example if multiple firewalls of the same model are used in an organization.
If no custom name is needed, the field can be left empty.

type: keyword

example: 1_proxySG

--

*`observer.os.family`*::
+
--
OS family (such as redhat, debian, freebsd, windows).

type: keyword

example: debian

--

*`observer.os.full`*::
+
--
Operating system name, including the version or code name.

type: keyword

example: Mac OS Mojave

--

*`observer.os.full.text`*::
+
--
type: text

--

*`observer.os.kernel`*::
+
--
Operating system kernel version as a raw string.

type: keyword

example: 4.4.0-112-generic

--

*`observer.os.name`*::
+
--
Operating system name, without the version.

type: keyword

example: Mac OS X

--

*`observer.os.name.text`*::
+
--
type: text

--

*`observer.os.platform`*::
+
--
Operating system platform (such centos, ubuntu, windows).

type: keyword

example: darwin

--

*`observer.os.version`*::
+
--
Operating system version as a raw string.

type: keyword

example: 10.14.1

--

*`observer.product`*::
+
--
The product name of the observer.

type: keyword

example: s200

--

*`observer.serial_number`*::
+
--
Observer serial number.

type: keyword

--

*`observer.type`*::
+
--
The type of the observer the data is coming from.
There is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.

type: keyword

example: firewall

--

*`observer.vendor`*::
+
--
Vendor name of the observer.

type: keyword

example: Symantec

--

*`observer.version`*::
+
--
Observer version.

type: keyword

--

[float]
=== organization

The organization fields enrich data with information about the company or entity the data is associated with.
These fields help you arrange or filter data stored in an index by one or multiple organizations.


*`organization.id`*::
+
--
Unique identifier for the organization.

type: keyword

--

*`organization.name`*::
+
--
Organization name.

type: keyword

--

*`organization.name.text`*::
+
--
type: text

--

[float]
=== os

The OS fields contain information about the operating system.


*`os.family`*::
+
--
OS family (such as redhat, debian, freebsd, windows).

type: keyword

example: debian

--

*`os.full`*::
+
--
Operating system name, including the version or code name.

type: keyword

example: Mac OS Mojave

--

*`os.full.text`*::
+
--
type: text

--

*`os.kernel`*::
+
--
Operating system kernel version as a raw string.

type: keyword

example: 4.4.0-112-generic

--

*`os.name`*::
+
--
Operating system name, without the version.

type: keyword

example: Mac OS X

--

*`os.name.text`*::
+
--
type: text

--

*`os.platform`*::
+
--
Operating system platform (such centos, ubuntu, windows).

type: keyword

example: darwin

--

*`os.version`*::
+
--
Operating system version as a raw string.

type: keyword

example: 10.14.1

--

[float]
=== package

These fields contain information about an installed software package. It contains general information about a package, such as name, version or size. It also contains installation details, such as time or location.


*`package.architecture`*::
+
--
Package architecture.

type: keyword

example: x86_64

--

*`package.build_version`*::
+
--
Additional information about the build version of the installed package.
For example use the commit SHA of a non-released package.

type: keyword

example: 36f4f7e89dd61b0988b12ee000b98966867710cd

--

*`package.checksum`*::
+
--
Checksum of the installed package for verification.

type: keyword

example: 68b329da9893e34099c7d8ad5cb9c940

--

*`package.description`*::
+
--
Description of the package.

type: keyword

example: Open source programming language to build simple/reliable/efficient software.

--

*`package.install_scope`*::
+
--
Indicating how the package was installed, e.g. user-local, global.

type: keyword

example: global

--

*`package.installed`*::
+
--
Time when package was installed.

type: date

--

*`package.license`*::
+
--
License under which the package was released.
Use a short name, e.g. the license identifier from SPDX License List where possible (https://spdx.org/licenses/).

type: keyword

example: Apache License 2.0

--

*`package.name`*::
+
--
Package name

type: keyword

example: go

--

*`package.path`*::
+
--
Path where the package is installed.

type: keyword

example: /usr/local/Cellar/go/1.12.9/

--

*`package.reference`*::
+
--
Home page or reference URL of the software in this package, if available.

type: keyword

example: https://golang.org

--

*`package.size`*::
+
--
Package size in bytes.

type: long

example: 62231

format: string

--

*`package.type`*::
+
--
Type of package.
This should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.

type: keyword

example: rpm

--

*`package.version`*::
+
--
Package version

type: keyword

example: 1.12.9

--

[float]
=== pe

These fields contain Windows Portable Executable (PE) metadata.


*`pe.architecture`*::
+
--
CPU architecture target for the file.

type: keyword

example: x64

--

*`pe.company`*::
+
--
Internal company name of the file, provided at compile-time.

type: keyword

example: Microsoft Corporation

--

*`pe.description`*::
+
--
Internal description of the file, provided at compile-time.

type: keyword

example: Paint

--

*`pe.file_version`*::
+
--
Internal version of the file, provided at compile-time.

type: keyword

example: 6.3.9600.17415

--

*`pe.imphash`*::
+
--
A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.

type: keyword

example: 0c6803c4e922103c4dca5963aad36ddf

--

*`pe.original_file_name`*::
+
--
Internal name of the file, provided at compile-time.

type: keyword

example: MSPAINT.EXE

--

*`pe.product`*::
+
--
Internal product name of the file, provided at compile-time.

type: keyword

example: Microsoft® Windows® Operating System

--

[float]
=== process

These fields contain information about a process.
These fields can help you correlate metrics information with a process id/name from a log message.  The `process.pid` often stays in the metric itself and is copied to the global field for correlation.


*`process.args`*::
+
--
Array of process arguments, starting with the absolute path to the executable.
May be filtered to protect sensitive information.

type: keyword

example: ['/usr/bin/ssh', '-l', 'user', '10.0.0.16']

--

*`process.args_count`*::
+
--
Length of the process.args array.
This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.

type: long

example: 4

--

*`process.code_signature.exists`*::
+
--
Boolean to capture if a signature is present.

type: boolean

example: true

--

*`process.code_signature.status`*::
+
--
Additional information about the certificate status.
This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.

type: keyword

example: ERROR_UNTRUSTED_ROOT

--

*`process.code_signature.subject_name`*::
+
--
Subject name of the code signer

type: keyword

example: Microsoft Corporation

--

*`process.code_signature.trusted`*::
+
--
Stores the trust status of the certificate chain.
Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.

type: boolean

example: true

--

*`process.code_signature.valid`*::
+
--
Boolean to capture if the digital signature is verified against the binary content.
Leave unpopulated if a certificate was unchecked.

type: boolean

example: true

--

*`process.command_line`*::
+
--
Full command line that started the process, including the absolute path to the executable, and all arguments.
Some arguments may be filtered to protect sensitive information.

type: keyword

example: /usr/bin/ssh -l user 10.0.0.16

--

*`process.command_line.text`*::
+
--
type: text

--

*`process.entity_id`*::
+
--
Unique identifier for the process.
The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.

type: keyword

example: c2c455d9f99375d

--

*`process.executable`*::
+
--
Absolute path to the process executable.

type: keyword

example: /usr/bin/ssh

--

*`process.executable.text`*::
+
--
type: text

--

*`process.exit_code`*::
+
--
The exit code of the process, if this is a termination event.
The field should be absent if there is no exit code for the event (e.g. process start).

type: long

example: 137

--

*`process.hash.md5`*::
+
--
MD5 hash.

type: keyword

--

*`process.hash.sha1`*::
+
--
SHA1 hash.

type: keyword

--

*`process.hash.sha256`*::
+
--
SHA256 hash.

type: keyword

--

*`process.hash.sha512`*::
+
--
SHA512 hash.

type: keyword

--

*`process.name`*::
+
--
Process name.
Sometimes called program name or similar.

type: keyword

example: ssh

--

*`process.name.text`*::
+
--
type: text

--

*`process.parent.args`*::
+
--
Array of process arguments, starting with the absolute path to the executable.
May be filtered to protect sensitive information.

type: keyword

example: ['/usr/bin/ssh', '-l', 'user', '10.0.0.16']

--

*`process.parent.args_count`*::
+
--
Length of the process.args array.
This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.

type: long

example: 4

--

*`process.parent.code_signature.exists`*::
+
--
Boolean to capture if a signature is present.

type: boolean

example: true

--

*`process.parent.code_signature.status`*::
+
--
Additional information about the certificate status.
This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.

type: keyword

example: ERROR_UNTRUSTED_ROOT

--

*`process.parent.code_signature.subject_name`*::
+
--
Subject name of the code signer

type: keyword

example: Microsoft Corporation

--

*`process.parent.code_signature.trusted`*::
+
--
Stores the trust status of the certificate chain.
Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.

type: boolean

example: true

--

*`process.parent.code_signature.valid`*::
+
--
Boolean to capture if the digital signature is verified against the binary content.
Leave unpopulated if a certificate was unchecked.

type: boolean

example: true

--

*`process.parent.command_line`*::
+
--
Full command line that started the process, including the absolute path to the executable, and all arguments.
Some arguments may be filtered to protect sensitive information.

type: keyword

example: /usr/bin/ssh -l user 10.0.0.16

--

*`process.parent.command_line.text`*::
+
--
type: text

--

*`process.parent.entity_id`*::
+
--
Unique identifier for the process.
The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.

type: keyword

example: c2c455d9f99375d

--

*`process.parent.executable`*::
+
--
Absolute path to the process executable.

type: keyword

example: /usr/bin/ssh

--

*`process.parent.executable.text`*::
+
--
type: text

--

*`process.parent.exit_code`*::
+
--
The exit code of the process, if this is a termination event.
The field should be absent if there is no exit code for the event (e.g. process start).

type: long

example: 137

--

*`process.parent.hash.md5`*::
+
--
MD5 hash.

type: keyword

--

*`process.parent.hash.sha1`*::
+
--
SHA1 hash.

type: keyword

--

*`process.parent.hash.sha256`*::
+
--
SHA256 hash.

type: keyword

--

*`process.parent.hash.sha512`*::
+
--
SHA512 hash.

type: keyword

--

*`process.parent.name`*::
+
--
Process name.
Sometimes called program name or similar.

type: keyword

example: ssh

--

*`process.parent.name.text`*::
+
--
type: text

--

*`process.parent.pe.architecture`*::
+
--
CPU architecture target for the file.

type: keyword

example: x64

--

*`process.parent.pe.company`*::
+
--
Internal company name of the file, provided at compile-time.

type: keyword

example: Microsoft Corporation

--

*`process.parent.pe.description`*::
+
--
Internal description of the file, provided at compile-time.

type: keyword

example: Paint

--

*`process.parent.pe.file_version`*::
+
--
Internal version of the file, provided at compile-time.

type: keyword

example: 6.3.9600.17415

--

*`process.parent.pe.imphash`*::
+
--
A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.

type: keyword

example: 0c6803c4e922103c4dca5963aad36ddf

--

*`process.parent.pe.original_file_name`*::
+
--
Internal name of the file, provided at compile-time.

type: keyword

example: MSPAINT.EXE

--

*`process.parent.pe.product`*::
+
--
Internal product name of the file, provided at compile-time.

type: keyword

example: Microsoft® Windows® Operating System

--

*`process.parent.pgid`*::
+
--
Identifier of the group of processes the process belongs to.

type: long

format: string

--

*`process.parent.pid`*::
+
--
Process id.

type: long

example: 4242

format: string

--

*`process.parent.ppid`*::
+
--
Parent process' pid.

type: long

example: 4241

format: string

--

*`process.parent.start`*::
+
--
The time the process started.

type: date

example: 2016-05-23T08:05:34.853Z

--

*`process.parent.thread.id`*::
+
--
Thread ID.

type: long

example: 4242

format: string

--

*`process.parent.thread.name`*::
+
--
Thread name.

type: keyword

example: thread-0

--

*`process.parent.title`*::
+
--
Process title.
The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.

type: keyword

--

*`process.parent.title.text`*::
+
--
type: text

--

*`process.parent.uptime`*::
+
--
Seconds the process has been up.

type: long

example: 1325

--

*`process.parent.working_directory`*::
+
--
The working directory of the process.

type: keyword

example: /home/alice

--

*`process.parent.working_directory.text`*::
+
--
type: text

--

*`process.pe.architecture`*::
+
--
CPU architecture target for the file.

type: keyword

example: x64

--

*`process.pe.company`*::
+
--
Internal company name of the file, provided at compile-time.

type: keyword

example: Microsoft Corporation

--

*`process.pe.description`*::
+
--
Internal description of the file, provided at compile-time.

type: keyword

example: Paint

--

*`process.pe.file_version`*::
+
--
Internal version of the file, provided at compile-time.

type: keyword

example: 6.3.9600.17415

--

*`process.pe.imphash`*::
+
--
A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.

type: keyword

example: 0c6803c4e922103c4dca5963aad36ddf

--

*`process.pe.original_file_name`*::
+
--
Internal name of the file, provided at compile-time.

type: keyword

example: MSPAINT.EXE

--

*`process.pe.product`*::
+
--
Internal product name of the file, provided at compile-time.

type: keyword

example: Microsoft® Windows® Operating System

--

*`process.pgid`*::
+
--
Identifier of the group of processes the process belongs to.

type: long

format: string

--

*`process.pid`*::
+
--
Process id.

type: long

example: 4242

format: string

--

*`process.ppid`*::
+
--
Parent process' pid.

type: long

example: 4241

format: string

--

*`process.start`*::
+
--
The time the process started.

type: date

example: 2016-05-23T08:05:34.853Z

--

*`process.thread.id`*::
+
--
Thread ID.

type: long

example: 4242

format: string

--

*`process.thread.name`*::
+
--
Thread name.

type: keyword

example: thread-0

--

*`process.title`*::
+
--
Process title.
The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.

type: keyword

--

*`process.title.text`*::
+
--
type: text

--

*`process.uptime`*::
+
--
Seconds the process has been up.

type: long

example: 1325

--

*`process.working_directory`*::
+
--
The working directory of the process.

type: keyword

example: /home/alice

--

*`process.working_directory.text`*::
+
--
type: text

--

[float]
=== registry

Fields related to Windows Registry operations.


*`registry.data.bytes`*::
+
--
Original bytes written with base64 encoding.
For Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.

type: keyword

example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=

--

*`registry.data.strings`*::
+
--
Content when writing string types.
Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).

type: keyword

example: ["C:\rta\red_ttp\bin\myapp.exe"]

--

*`registry.data.type`*::
+
--
Standard registry type for encoding contents

type: keyword

example: REG_SZ

--

*`registry.hive`*::
+
--
Abbreviated name for the hive.

type: keyword

example: HKLM

--

*`registry.key`*::
+
--
Hive-relative path of keys.

type: keyword

example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe

--

*`registry.path`*::
+
--
Full path, including hive, key and value

type: keyword

example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe\Debugger

--

*`registry.value`*::
+
--
Name of the value written.

type: keyword

example: Debugger

--

[float]
=== related

This field set is meant to facilitate pivoting around a piece of data.
Some pieces of information can be seen in many places in an ECS event. To facilitate searching for them, store an array of all seen values to their corresponding field in `related.`.
A concrete example is IP addresses, which can be under host, observer, source, destination, client, server, and network.forwarded_ip. If you append all IPs to `related.ip`, you can then search for a given IP trivially, no matter where it appeared, by querying `related.ip:192.0.2.15`.


*`related.hash`*::
+
--
All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).

type: keyword

--

*`related.hosts`*::
+
--
All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.

type: keyword

--

*`related.ip`*::
+
--
All of the IPs seen on your event.

type: ip

--

*`related.user`*::
+
--
All the user names seen on your event.

type: keyword

--

[float]
=== rule

Rule fields are used to capture the specifics of any observer or agent rules that generate alerts or other notable events.
Examples of data sources that would populate the rule fields include: network admission control platforms, network or host IDS/IPS, network firewalls, web application firewalls, url filters, endpoint detection and response (EDR) systems, etc.


*`rule.author`*::
+
--
Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.

type: keyword

example: ['Star-Lord']

--

*`rule.category`*::
+
--
A categorization value keyword used by the entity using the rule for detection of this event.

type: keyword

example: Attempted Information Leak

--

*`rule.description`*::
+
--
The description of the rule generating the event.

type: keyword

example: Block requests to public DNS over HTTPS / TLS protocols

--

*`rule.id`*::
+
--
A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.

type: keyword

example: 101

--

*`rule.license`*::
+
--
Name of the license under which the rule used to generate this event is made available.

type: keyword

example: Apache 2.0

--

*`rule.name`*::
+
--
The name of the rule or signature generating the event.

type: keyword

example: BLOCK_DNS_over_TLS

--

*`rule.reference`*::
+
--
Reference URL to additional information about the rule used to generate this event.
The URL can point to the vendor's documentation about the rule. If that's not available, it can also be a link to a more general page describing this type of alert.

type: keyword

example: https://en.wikipedia.org/wiki/DNS_over_TLS

--

*`rule.ruleset`*::
+
--
Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.

type: keyword

example: Standard_Protocol_Filters

--

*`rule.uuid`*::
+
--
A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.

type: keyword

example: 1100110011

--

*`rule.version`*::
+
--
The version / revision of the rule being used for analysis.

type: keyword

example: 1.1

--

[float]
=== server

A Server is defined as the responder in a network connection for events regarding sessions, connections, or bidirectional flow records.
For TCP events, the server is the receiver of the initial SYN packet(s) of the TCP connection. For other protocols, the server is generally the responder in the network transaction. Some systems actually use the term "responder" to refer the server in TCP connections. The server fields describe details about the system acting as the server in the network event. Server fields are usually populated in conjunction with client fields. Server fields are generally not populated for packet-level events.
Client / server representations can add semantic context to an exchange, which is helpful to visualize the data in certain situations. If your context falls in that category, you should still ensure that source and destination are filled appropriately.


*`server.address`*::
+
--
Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.

type: keyword

--

*`server.as.number`*::
+
--
Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.

type: long

example: 15169

--

*`server.as.organization.name`*::
+
--
Organization name.

type: keyword

example: Google LLC

--

*`server.as.organization.name.text`*::
+
--
type: text

--

*`server.bytes`*::
+
--
Bytes sent from the server to the client.

type: long

example: 184

format: bytes

--

*`server.domain`*::
+
--
Server domain.

type: keyword

--

*`server.geo.city_name`*::
+
--
City name.

type: keyword

example: Montreal

--

*`server.geo.continent_name`*::
+
--
Name of the continent.

type: keyword

example: North America

--

*`server.geo.country_iso_code`*::
+
--
Country ISO code.

type: keyword

example: CA

--

*`server.geo.country_name`*::
+
--
Country name.

type: keyword

example: Canada

--

*`server.geo.location`*::
+
--
Longitude and latitude.

type: geo_point

example: { "lon": -73.614830, "lat": 45.505918 }

--

*`server.geo.name`*::
+
--
User-defined description of a location, at the level of granularity they care about.
Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
Not typically used in automated geolocation.

type: keyword

example: boston-dc

--

*`server.geo.region_iso_code`*::
+
--
Region ISO code.

type: keyword

example: CA-QC

--

*`server.geo.region_name`*::
+
--
Region name.

type: keyword

example: Quebec

--

*`server.ip`*::
+
--
IP address of the server (IPv4 or IPv6).

type: ip

--

*`server.mac`*::
+
--
MAC address of the server.

type: keyword

--

*`server.nat.ip`*::
+
--
Translated ip of destination based NAT sessions (e.g. internet to private DMZ)
Typically used with load balancers, firewalls, or routers.

type: ip

--

*`server.nat.port`*::
+
--
Translated port of destination based NAT sessions (e.g. internet to private DMZ)
Typically used with load balancers, firewalls, or routers.

type: long

format: string

--

*`server.packets`*::
+
--
Packets sent from the server to the client.

type: long

example: 12

--

*`server.port`*::
+
--
Port of the server.

type: long

format: string

--

*`server.registered_domain`*::
+
--
The highest registered server domain, stripped of the subdomain.
For example, the registered domain for "foo.example.com" is "example.com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".

type: keyword

example: example.com

--

*`server.top_level_domain`*::
+
--
The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".

type: keyword

example: co.uk

--

*`server.user.domain`*::
+
--
Name of the directory the user is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`server.user.email`*::
+
--
User email address.

type: keyword

--

*`server.user.full_name`*::
+
--
User's full name, if available.

type: keyword

example: Albert Einstein

--

*`server.user.full_name.text`*::
+
--
type: text

--

*`server.user.group.domain`*::
+
--
Name of the directory the group is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`server.user.group.id`*::
+
--
Unique identifier for the group on the system/platform.

type: keyword

--

*`server.user.group.name`*::
+
--
Name of the group.

type: keyword

--

*`server.user.hash`*::
+
--
Unique user hash to correlate information for a user in anonymized form.
Useful if `user.id` or `user.name` contain confidential information and cannot be used.

type: keyword

--

*`server.user.id`*::
+
--
Unique identifier of the user.

type: keyword

--

*`server.user.name`*::
+
--
Short name or login of the user.

type: keyword

example: albert

--

*`server.user.name.text`*::
+
--
type: text

--

*`server.user.roles`*::
+
--
Array of user roles at the time of the event.

type: keyword

example: ["kibana_admin", "reporting_user"]

--

[float]
=== service

The service fields describe the service for or from which the data was collected.
These fields help you find and correlate logs for a specific service and version.


*`service.ephemeral_id`*::
+
--
Ephemeral identifier of this service (if one exists).
This id normally changes across restarts, but `service.id` does not.

type: keyword

example: 8a4f500f

--

*`service.id`*::
+
--
Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.
This id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.
Note that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.

type: keyword

example: d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6

--

*`service.name`*::
+
--
Name of the service data is collected from.
The name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.
In the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.

type: keyword

example: elasticsearch-metrics

--

*`service.node.name`*::
+
--
Name of a service node.
This allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.
In the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.

type: keyword

example: instance-0000000016

--

*`service.state`*::
+
--
Current state of the service.

type: keyword

--

*`service.type`*::
+
--
The type of the service data is collected from.
The type can be used to group and correlate logs and metrics from one service type.
Example: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.

type: keyword

example: elasticsearch

--

*`service.version`*::
+
--
Version of the service the data was collected from.
This allows to look at a data set only for a specific version of a service.

type: keyword

example: 3.2.4

--

[float]
=== source

Source fields describe details about the source of a packet/event.
Source fields are usually populated in conjunction with destination fields.


*`source.address`*::
+
--
Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.

type: keyword

--

*`source.as.number`*::
+
--
Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.

type: long

example: 15169

--

*`source.as.organization.name`*::
+
--
Organization name.

type: keyword

example: Google LLC

--

*`source.as.organization.name.text`*::
+
--
type: text

--

*`source.bytes`*::
+
--
Bytes sent from the source to the destination.

type: long

example: 184

format: bytes

--

*`source.domain`*::
+
--
Source domain.

type: keyword

--

*`source.geo.city_name`*::
+
--
City name.

type: keyword

example: Montreal

--

*`source.geo.continent_name`*::
+
--
Name of the continent.

type: keyword

example: North America

--

*`source.geo.country_iso_code`*::
+
--
Country ISO code.

type: keyword

example: CA

--

*`source.geo.country_name`*::
+
--
Country name.

type: keyword

example: Canada

--

*`source.geo.location`*::
+
--
Longitude and latitude.

type: geo_point

example: { "lon": -73.614830, "lat": 45.505918 }

--

*`source.geo.name`*::
+
--
User-defined description of a location, at the level of granularity they care about.
Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
Not typically used in automated geolocation.

type: keyword

example: boston-dc

--

*`source.geo.region_iso_code`*::
+
--
Region ISO code.

type: keyword

example: CA-QC

--

*`source.geo.region_name`*::
+
--
Region name.

type: keyword

example: Quebec

--

*`source.ip`*::
+
--
IP address of the source (IPv4 or IPv6).

type: ip

--

*`source.mac`*::
+
--
MAC address of the source.

type: keyword

--

*`source.nat.ip`*::
+
--
Translated ip of source based NAT sessions (e.g. internal client to internet)
Typically connections traversing load balancers, firewalls, or routers.

type: ip

--

*`source.nat.port`*::
+
--
Translated port of source based NAT sessions. (e.g. internal client to internet)
Typically used with load balancers, firewalls, or routers.

type: long

format: string

--

*`source.packets`*::
+
--
Packets sent from the source to the destination.

type: long

example: 12

--

*`source.port`*::
+
--
Port of the source.

type: long

format: string

--

*`source.registered_domain`*::
+
--
The highest registered source domain, stripped of the subdomain.
For example, the registered domain for "foo.example.com" is "example.com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".

type: keyword

example: example.com

--

*`source.top_level_domain`*::
+
--
The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".

type: keyword

example: co.uk

--

*`source.user.domain`*::
+
--
Name of the directory the user is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`source.user.email`*::
+
--
User email address.

type: keyword

--

*`source.user.full_name`*::
+
--
User's full name, if available.

type: keyword

example: Albert Einstein

--

*`source.user.full_name.text`*::
+
--
type: text

--

*`source.user.group.domain`*::
+
--
Name of the directory the group is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`source.user.group.id`*::
+
--
Unique identifier for the group on the system/platform.

type: keyword

--

*`source.user.group.name`*::
+
--
Name of the group.

type: keyword

--

*`source.user.hash`*::
+
--
Unique user hash to correlate information for a user in anonymized form.
Useful if `user.id` or `user.name` contain confidential information and cannot be used.

type: keyword

--

*`source.user.id`*::
+
--
Unique identifier of the user.

type: keyword

--

*`source.user.name`*::
+
--
Short name or login of the user.

type: keyword

example: albert

--

*`source.user.name.text`*::
+
--
type: text

--

*`source.user.roles`*::
+
--
Array of user roles at the time of the event.

type: keyword

example: ["kibana_admin", "reporting_user"]

--

[float]
=== threat

Fields to classify events and alerts according to a threat taxonomy such as the MITRE ATT&CK® framework.
These fields are for users to classify alerts from all of their sources (e.g. IDS, NGFW, etc.) within a common taxonomy. The threat.tactic.* are meant to capture the high level category of the threat (e.g. "impact"). The threat.technique.* fields are meant to capture which kind of approach is used by this detected threat, to accomplish the goal (e.g. "endpoint denial of service").


*`threat.framework`*::
+
--
Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.

type: keyword

example: MITRE ATT&CK

--

*`threat.tactic.id`*::
+
--
The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )

type: keyword

example: TA0040

--

*`threat.tactic.name`*::
+
--
Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0040/)

type: keyword

example: impact

--

*`threat.tactic.reference`*::
+
--
The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0040/ )

type: keyword

example: https://attack.mitre.org/tactics/TA0040/

--

*`threat.technique.id`*::
+
--
The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1499/)

type: keyword

example: T1499

--

*`threat.technique.name`*::
+
--
The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1499/)

type: keyword

example: Endpoint Denial of Service

--

*`threat.technique.name.text`*::
+
--
type: text

--

*`threat.technique.reference`*::
+
--
The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1499/ )

type: keyword

example: https://attack.mitre.org/techniques/T1499/

--

[float]
=== tls

Fields related to a TLS connection. These fields focus on the TLS protocol itself and intentionally avoids in-depth analysis of the related x.509 certificate files.


*`tls.cipher`*::
+
--
String indicating the cipher used during the current connection.

type: keyword

example: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256

--

*`tls.client.certificate`*::
+
--
PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.

type: keyword

example: MII...

--

*`tls.client.certificate_chain`*::
+
--
Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.

type: keyword

example: ['MII...', 'MII...']

--

*`tls.client.hash.md5`*::
+
--
Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.

type: keyword

example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC

--

*`tls.client.hash.sha1`*::
+
--
Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.

type: keyword

example: 9E393D93138888D288266C2D915214D1D1CCEB2A

--

*`tls.client.hash.sha256`*::
+
--
Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.

type: keyword

example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0

--

*`tls.client.issuer`*::
+
--
Distinguished name of subject of the issuer of the x.509 certificate presented by the client.

type: keyword

example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com

--

*`tls.client.ja3`*::
+
--
A hash that identifies clients based on how they perform an SSL/TLS handshake.

type: keyword

example: d4e5b18d6b55c71272893221c96ba240

--

*`tls.client.not_after`*::
+
--
Date/Time indicating when client certificate is no longer considered valid.

type: date

example: 2021-01-01T00:00:00.000Z

--

*`tls.client.not_before`*::
+
--
Date/Time indicating when client certificate is first considered valid.

type: date

example: 1970-01-01T00:00:00.000Z

--

*`tls.client.server_name`*::
+
--
Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.

type: keyword

example: www.elastic.co

--

*`tls.client.subject`*::
+
--
Distinguished name of subject of the x.509 certificate presented by the client.

type: keyword

example: CN=myclient, OU=Documentation Team, DC=example, DC=com

--

*`tls.client.supported_ciphers`*::
+
--
Array of ciphers offered by the client during the client hello.

type: keyword

example: ['TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384', 'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384', '...']

--

*`tls.client.x509.alternative_names`*::
+
--
List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.

type: keyword

example: *.elastic.co

--

*`tls.client.x509.issuer.common_name`*::
+
--
List of common name (CN) of issuing certificate authority.

type: keyword

example: Example SHA2 High Assurance Server CA

--

*`tls.client.x509.issuer.country`*::
+
--
List of country (C) codes

type: keyword

example: US

--

*`tls.client.x509.issuer.distinguished_name`*::
+
--
Distinguished name (DN) of issuing certificate authority.

type: keyword

example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA

--

*`tls.client.x509.issuer.locality`*::
+
--
List of locality names (L)

type: keyword

example: Mountain View

--

*`tls.client.x509.issuer.organization`*::
+
--
List of organizations (O) of issuing certificate authority.

type: keyword

example: Example Inc

--

*`tls.client.x509.issuer.organizational_unit`*::
+
--
List of organizational units (OU) of issuing certificate authority.

type: keyword

example: www.example.com

--

*`tls.client.x509.issuer.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`tls.client.x509.not_after`*::
+
--
Time at which the certificate is no longer considered valid.

type: date

example: 2020-07-16 03:15:39+00:00

--

*`tls.client.x509.not_before`*::
+
--
Time at which the certificate is first considered valid.

type: date

example: 2019-08-16 01:40:25+00:00

--

*`tls.client.x509.public_key_algorithm`*::
+
--
Algorithm used to generate the public key.

type: keyword

example: RSA

--

*`tls.client.x509.public_key_curve`*::
+
--
The curve used by the elliptic curve public key algorithm. This is algorithm specific.

type: keyword

example: nistp521

--

*`tls.client.x509.public_key_exponent`*::
+
--
Exponent used to derive the public key. This is algorithm specific.

type: long

example: 65537

Field is not indexed.

--

*`tls.client.x509.public_key_size`*::
+
--
The size of the public key space in bits.

type: long

example: 2048

--

*`tls.client.x509.serial_number`*::
+
--
Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.

type: keyword

example: 55FBB9C7DEBF09809D12CCAA

--

*`tls.client.x509.signature_algorithm`*::
+
--
Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.

type: keyword

example: SHA256-RSA

--

*`tls.client.x509.subject.common_name`*::
+
--
List of common names (CN) of subject.

type: keyword

example: shared.global.example.net

--

*`tls.client.x509.subject.country`*::
+
--
List of country (C) code

type: keyword

example: US

--

*`tls.client.x509.subject.distinguished_name`*::
+
--
Distinguished name (DN) of the certificate subject entity.

type: keyword

example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net

--

*`tls.client.x509.subject.locality`*::
+
--
List of locality names (L)

type: keyword

example: San Francisco

--

*`tls.client.x509.subject.organization`*::
+
--
List of organizations (O) of subject.

type: keyword

example: Example, Inc.

--

*`tls.client.x509.subject.organizational_unit`*::
+
--
List of organizational units (OU) of subject.

type: keyword

--

*`tls.client.x509.subject.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`tls.client.x509.version_number`*::
+
--
Version of x509 format.

type: keyword

example: 3

--

*`tls.curve`*::
+
--
String indicating the curve used for the given cipher, when applicable.

type: keyword

example: secp256r1

--

*`tls.established`*::
+
--
Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.

type: boolean

--

*`tls.next_protocol`*::
+
--
String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.

type: keyword

example: http/1.1

--

*`tls.resumed`*::
+
--
Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.

type: boolean

--

*`tls.server.certificate`*::
+
--
PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.

type: keyword

example: MII...

--

*`tls.server.certificate_chain`*::
+
--
Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.

type: keyword

example: ['MII...', 'MII...']

--

*`tls.server.hash.md5`*::
+
--
Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.

type: keyword

example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC

--

*`tls.server.hash.sha1`*::
+
--
Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.

type: keyword

example: 9E393D93138888D288266C2D915214D1D1CCEB2A

--

*`tls.server.hash.sha256`*::
+
--
Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.

type: keyword

example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0

--

*`tls.server.issuer`*::
+
--
Subject of the issuer of the x.509 certificate presented by the server.

type: keyword

example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com

--

*`tls.server.ja3s`*::
+
--
A hash that identifies servers based on how they perform an SSL/TLS handshake.

type: keyword

example: 394441ab65754e2207b1e1b457b3641d

--

*`tls.server.not_after`*::
+
--
Timestamp indicating when server certificate is no longer considered valid.

type: date

example: 2021-01-01T00:00:00.000Z

--

*`tls.server.not_before`*::
+
--
Timestamp indicating when server certificate is first considered valid.

type: date

example: 1970-01-01T00:00:00.000Z

--

*`tls.server.subject`*::
+
--
Subject of the x.509 certificate presented by the server.

type: keyword

example: CN=www.example.com, OU=Infrastructure Team, DC=example, DC=com

--

*`tls.server.x509.alternative_names`*::
+
--
List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.

type: keyword

example: *.elastic.co

--

*`tls.server.x509.issuer.common_name`*::
+
--
List of common name (CN) of issuing certificate authority.

type: keyword

example: Example SHA2 High Assurance Server CA

--

*`tls.server.x509.issuer.country`*::
+
--
List of country (C) codes

type: keyword

example: US

--

*`tls.server.x509.issuer.distinguished_name`*::
+
--
Distinguished name (DN) of issuing certificate authority.

type: keyword

example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA

--

*`tls.server.x509.issuer.locality`*::
+
--
List of locality names (L)

type: keyword

example: Mountain View

--

*`tls.server.x509.issuer.organization`*::
+
--
List of organizations (O) of issuing certificate authority.

type: keyword

example: Example Inc

--

*`tls.server.x509.issuer.organizational_unit`*::
+
--
List of organizational units (OU) of issuing certificate authority.

type: keyword

example: www.example.com

--

*`tls.server.x509.issuer.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`tls.server.x509.not_after`*::
+
--
Time at which the certificate is no longer considered valid.

type: date

example: 2020-07-16 03:15:39+00:00

--

*`tls.server.x509.not_before`*::
+
--
Time at which the certificate is first considered valid.

type: date

example: 2019-08-16 01:40:25+00:00

--

*`tls.server.x509.public_key_algorithm`*::
+
--
Algorithm used to generate the public key.

type: keyword

example: RSA

--

*`tls.server.x509.public_key_curve`*::
+
--
The curve used by the elliptic curve public key algorithm. This is algorithm specific.

type: keyword

example: nistp521

--

*`tls.server.x509.public_key_exponent`*::
+
--
Exponent used to derive the public key. This is algorithm specific.

type: long

example: 65537

Field is not indexed.

--

*`tls.server.x509.public_key_size`*::
+
--
The size of the public key space in bits.

type: long

example: 2048

--

*`tls.server.x509.serial_number`*::
+
--
Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.

type: keyword

example: 55FBB9C7DEBF09809D12CCAA

--

*`tls.server.x509.signature_algorithm`*::
+
--
Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.

type: keyword

example: SHA256-RSA

--

*`tls.server.x509.subject.common_name`*::
+
--
List of common names (CN) of subject.

type: keyword

example: shared.global.example.net

--

*`tls.server.x509.subject.country`*::
+
--
List of country (C) code

type: keyword

example: US

--

*`tls.server.x509.subject.distinguished_name`*::
+
--
Distinguished name (DN) of the certificate subject entity.

type: keyword

example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net

--

*`tls.server.x509.subject.locality`*::
+
--
List of locality names (L)

type: keyword

example: San Francisco

--

*`tls.server.x509.subject.organization`*::
+
--
List of organizations (O) of subject.

type: keyword

example: Example, Inc.

--

*`tls.server.x509.subject.organizational_unit`*::
+
--
List of organizational units (OU) of subject.

type: keyword

--

*`tls.server.x509.subject.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`tls.server.x509.version_number`*::
+
--
Version of x509 format.

type: keyword

example: 3

--

*`tls.version`*::
+
--
Numeric part of the version parsed from the original string.

type: keyword

example: 1.2

--

*`tls.version_protocol`*::
+
--
Normalized lowercase protocol name parsed from original string.

type: keyword

example: tls

--

[float]
=== tracing

Distributed tracing makes it possible to analyze performance throughout a microservice architecture all in one view. This is accomplished by tracing all of the requests - from the initial web request in the front-end service - to queries made through multiple back-end services.


*`tracing.span.id`*::
+
--
Unique identifier of the span within the scope of its trace.
A span represents an operation within a transaction, such as a request to another service, or a database query.

type: keyword

example: 3ff9a8981b7ccd5a

--

*`tracing.trace.id`*::
+
--
Unique identifier of the trace.
A trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services.

type: keyword

example: 4bf92f3577b34da6a3ce929d0e0e4736

--

*`tracing.transaction.id`*::
+
--
Unique identifier of the transaction within the scope of its trace.
A transaction is the highest level of work measured within a service, such as a request to a server.

type: keyword

example: 00f067aa0ba902b7

--

[float]
=== url

URL fields provide support for complete or partial URLs, and supports the breaking down into scheme, domain, path, and so on.


*`url.domain`*::
+
--
Domain of the url, such as "www.elastic.co".
In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.

type: keyword

example: www.elastic.co

--

*`url.extension`*::
+
--
The field contains the file extension from the original request url.
The file extension is only set if it exists, as not every url has a file extension.
The leading period must not be included. For example, the value must be "png", not ".png".

type: keyword

example: png

--

*`url.fragment`*::
+
--
Portion of the url after the `#`, such as "top".
The `#` is not part of the fragment.

type: keyword

--

*`url.full`*::
+
--
If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.

type: keyword

example: https://www.elastic.co:443/search?q=elasticsearch#top

--

*`url.full.text`*::
+
--
type: text

--

*`url.original`*::
+
--
Unmodified original url as seen in the event source.
Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
This field is meant to represent the URL as it was observed, complete or not.

type: keyword

example: https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch

--

*`url.original.text`*::
+
--
type: text

--

*`url.password`*::
+
--
Password of the request.

type: keyword

--

*`url.path`*::
+
--
Path of the request, such as "/search".

type: keyword

--

*`url.port`*::
+
--
Port of the request, such as 443.

type: long

example: 443

format: string

--

*`url.query`*::
+
--
The query field describes the query string of the request, such as "q=elasticsearch".
The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.

type: keyword

--

*`url.registered_domain`*::
+
--
The highest registered url domain, stripped of the subdomain.
For example, the registered domain for "foo.example.com" is "example.com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".

type: keyword

example: example.com

--

*`url.scheme`*::
+
--
Scheme of the request, such as "https".
Note: The `:` is not part of the scheme.

type: keyword

example: https

--

*`url.top_level_domain`*::
+
--
The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".

type: keyword

example: co.uk

--

*`url.username`*::
+
--
Username of the request.

type: keyword

--

[float]
=== user

The user fields describe information about the user that is relevant to the event.
Fields can have one entry or multiple entries. If a user has more than one id, provide an array that includes all of them.


*`user.domain`*::
+
--
Name of the directory the user is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`user.email`*::
+
--
User email address.

type: keyword

--

*`user.full_name`*::
+
--
User's full name, if available.

type: keyword

example: Albert Einstein

--

*`user.full_name.text`*::
+
--
type: text

--

*`user.group.domain`*::
+
--
Name of the directory the group is a member of.
For example, an LDAP or Active Directory domain name.

type: keyword

--

*`user.group.id`*::
+
--
Unique identifier for the group on the system/platform.

type: keyword

--

*`user.group.name`*::
+
--
Name of the group.

type: keyword

--

*`user.hash`*::
+
--
Unique user hash to correlate information for a user in anonymized form.
Useful if `user.id` or `user.name` contain confidential information and cannot be used.

type: keyword

--

*`user.id`*::
+
--
Unique identifier of the user.

type: keyword

--

*`user.name`*::
+
--
Short name or login of the user.

type: keyword

example: albert

--

*`user.name.text`*::
+
--
type: text

--

*`user.roles`*::
+
--
Array of user roles at the time of the event.

type: keyword

example: ["kibana_admin", "reporting_user"]

--

[float]
=== user_agent

The user_agent fields normally come from a browser request.
They often show up in web service logs coming from the parsed user agent string.


*`user_agent.device.name`*::
+
--
Name of the device.

type: keyword

example: iPhone

--

*`user_agent.name`*::
+
--
Name of the user agent.

type: keyword

example: Safari

--

*`user_agent.original`*::
+
--
Unparsed user_agent string.

type: keyword

example: Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1

--

*`user_agent.original.text`*::
+
--
type: text

--

*`user_agent.os.family`*::
+
--
OS family (such as redhat, debian, freebsd, windows).

type: keyword

example: debian

--

*`user_agent.os.full`*::
+
--
Operating system name, including the version or code name.

type: keyword

example: Mac OS Mojave

--

*`user_agent.os.full.text`*::
+
--
type: text

--

*`user_agent.os.kernel`*::
+
--
Operating system kernel version as a raw string.

type: keyword

example: 4.4.0-112-generic

--

*`user_agent.os.name`*::
+
--
Operating system name, without the version.

type: keyword

example: Mac OS X

--

*`user_agent.os.name.text`*::
+
--
type: text

--

*`user_agent.os.platform`*::
+
--
Operating system platform (such centos, ubuntu, windows).

type: keyword

example: darwin

--

*`user_agent.os.version`*::
+
--
Operating system version as a raw string.

type: keyword

example: 10.14.1

--

*`user_agent.version`*::
+
--
Version of the user agent.

type: keyword

example: 12.0

--

[float]
=== vlan

The VLAN fields are used to identify 802.1q tag(s) of a packet, as well as ingress and egress VLAN associations of an observer in relation to a specific packet or connection.
Network.vlan fields are used to record a single VLAN tag, or the outer tag in the case of q-in-q encapsulations, for a packet or connection as observed, typically provided by a network sensor (e.g. Zeek, Wireshark) passively reporting on traffic.
Network.inner VLAN fields are used to report inner q-in-q 802.1q tags (multiple 802.1q encapsulations) as observed, typically provided by a network sensor  (e.g. Zeek, Wireshark) passively reporting on traffic. Network.inner VLAN fields should only be used in addition to network.vlan fields to indicate q-in-q tagging.
Observer.ingress and observer.egress VLAN values are used to record observer specific information when observer events contain discrete ingress and egress VLAN information, typically provided by firewalls, routers, or load balancers.


*`vlan.id`*::
+
--
VLAN ID as reported by the observer.

type: keyword

example: 10

--

*`vlan.name`*::
+
--
Optional VLAN name as reported by the observer.

type: keyword

example: outside

--

[float]
=== vulnerability

The vulnerability fields describe information about a vulnerability that is relevant to an event.


*`vulnerability.category`*::
+
--
The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories])
This field must be an array.

type: keyword

example: ["Firewall"]

--

*`vulnerability.classification`*::
+
--
The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)

type: keyword

example: CVSS

--

*`vulnerability.description`*::
+
--
The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])

type: keyword

example: In macOS before 2.12.6, there is a vulnerability in the RPC...

--

*`vulnerability.description.text`*::
+
--
type: text

--

*`vulnerability.enumeration`*::
+
--
The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)

type: keyword

example: CVE

--

*`vulnerability.id`*::
+
--
The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]

type: keyword

example: CVE-2019-00001

--

*`vulnerability.reference`*::
+
--
A resource that provides additional information, context, and mitigations for the identified vulnerability.

type: keyword

example: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111

--

*`vulnerability.report_id`*::
+
--
The report or scan identification number.

type: keyword

example: 20191018.0001

--

*`vulnerability.scanner.vendor`*::
+
--
The name of the vulnerability scanner vendor.

type: keyword

example: Tenable

--

*`vulnerability.score.base`*::
+
--
Scores can range from 0.0 to 10.0, with 10.0 being the most severe.
Base scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)

type: float

example: 5.5

--

*`vulnerability.score.environmental`*::
+
--
Scores can range from 0.0 to 10.0, with 10.0 being the most severe.
Environmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)

type: float

example: 5.5

--

*`vulnerability.score.temporal`*::
+
--
Scores can range from 0.0 to 10.0, with 10.0 being the most severe.
Temporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)

type: float

--

*`vulnerability.score.version`*::
+
--
The National Vulnerability Database (NVD) provides qualitative severity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification.
CVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)

type: keyword

example: 2.0

--

*`vulnerability.severity`*::
+
--
The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)

type: keyword

example: Critical

--

[float]
=== x509

This implements the common core fields for x509 certificates. This information is likely logged with TLS sessions, digital signatures found in executable binaries, S/MIME information in email bodies, or analysis of files on disk. When only a single certificate is logged in an event, it should be nested under `file`. When hashes of the DER-encoded certificate are available, the `hash` data set should be populated as well (e.g. `file.hash.sha256`). For events that contain certificate information for both sides of the connection, the x509 object could be nested under the respective side of the connection information (e.g. `tls.server.x509`).


*`x509.alternative_names`*::
+
--
List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.

type: keyword

example: *.elastic.co

--

*`x509.issuer.common_name`*::
+
--
List of common name (CN) of issuing certificate authority.

type: keyword

example: Example SHA2 High Assurance Server CA

--

*`x509.issuer.country`*::
+
--
List of country (C) codes

type: keyword

example: US

--

*`x509.issuer.distinguished_name`*::
+
--
Distinguished name (DN) of issuing certificate authority.

type: keyword

example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA

--

*`x509.issuer.locality`*::
+
--
List of locality names (L)

type: keyword

example: Mountain View

--

*`x509.issuer.organization`*::
+
--
List of organizations (O) of issuing certificate authority.

type: keyword

example: Example Inc

--

*`x509.issuer.organizational_unit`*::
+
--
List of organizational units (OU) of issuing certificate authority.

type: keyword

example: www.example.com

--

*`x509.issuer.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`x509.not_after`*::
+
--
Time at which the certificate is no longer considered valid.

type: date

example: 2020-07-16 03:15:39+00:00

--

*`x509.not_before`*::
+
--
Time at which the certificate is first considered valid.

type: date

example: 2019-08-16 01:40:25+00:00

--

*`x509.public_key_algorithm`*::
+
--
Algorithm used to generate the public key.

type: keyword

example: RSA

--

*`x509.public_key_curve`*::
+
--
The curve used by the elliptic curve public key algorithm. This is algorithm specific.

type: keyword

example: nistp521

--

*`x509.public_key_exponent`*::
+
--
Exponent used to derive the public key. This is algorithm specific.

type: long

example: 65537

Field is not indexed.

--

*`x509.public_key_size`*::
+
--
The size of the public key space in bits.

type: long

example: 2048

--

*`x509.serial_number`*::
+
--
Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.

type: keyword

example: 55FBB9C7DEBF09809D12CCAA

--

*`x509.signature_algorithm`*::
+
--
Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.

type: keyword

example: SHA256-RSA

--

*`x509.subject.common_name`*::
+
--
List of common names (CN) of subject.

type: keyword

example: shared.global.example.net

--

*`x509.subject.country`*::
+
--
List of country (C) code

type: keyword

example: US

--

*`x509.subject.distinguished_name`*::
+
--
Distinguished name (DN) of the certificate subject entity.

type: keyword

example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net

--

*`x509.subject.locality`*::
+
--
List of locality names (L)

type: keyword

example: San Francisco

--

*`x509.subject.organization`*::
+
--
List of organizations (O) of subject.

type: keyword

example: Example, Inc.

--

*`x509.subject.organizational_unit`*::
+
--
List of organizational units (OU) of subject.

type: keyword

--

*`x509.subject.state_or_province`*::
+
--
List of state or province names (ST, S, or P)

type: keyword

example: California

--

*`x509.version_number`*::
+
--
Version of x509 format.

type: keyword

example: 3

--

[[exported-fields-elasticsearch]]
== Elasticsearch fields

elasticsearch Module



[float]
=== elasticsearch




*`elasticsearch.component`*::
+
--
Elasticsearch component from where the log event originated

type: keyword

example: o.e.c.m.MetaDataCreateIndexService

--

*`elasticsearch.cluster.uuid`*::
+
--
UUID of the cluster

type: keyword

example: GmvrbHlNTiSVYiPf8kxg9g

--

*`elasticsearch.cluster.name`*::
+
--
Name of the cluster

type: keyword

example: docker-cluster

--

*`elasticsearch.node.id`*::
+
--
ID of the node

type: keyword

example: DSiWcTyeThWtUXLB9J0BMw

--

*`elasticsearch.node.name`*::
+
--
Name of the node

type: keyword

example: vWNJsZ3

--

*`elasticsearch.index.name`*::
+
--
Index name

type: keyword

example: filebeat-test-input

--

*`elasticsearch.index.id`*::
+
--
Index id

type: keyword

example: aOGgDwbURfCV57AScqbCgw

--

*`elasticsearch.shard.id`*::
+
--
Id of the shard

type: keyword

example: 0

--

[float]
=== audit




*`elasticsearch.audit.layer`*::
+
--
The layer from which this event originated: rest, transport or ip_filter

type: keyword

example: rest

--

*`elasticsearch.audit.event_type`*::
+
--
The type of event that occurred: anonymous_access_denied, authentication_failed, access_denied, access_granted, connection_granted, connection_denied, tampered_request, run_as_granted, run_as_denied

type: keyword

example: access_granted

--

*`elasticsearch.audit.origin.type`*::
+
--
Where the request originated: rest (request originated from a REST API request), transport (request was received on the transport channel), local_node (the local node issued the request)

type: keyword

example: local_node

--

*`elasticsearch.audit.realm`*::
+
--
The authentication realm the authentication was validated against

type: keyword

--

*`elasticsearch.audit.user.realm`*::
+
--
The user's authentication realm, if authenticated

type: keyword

--

*`elasticsearch.audit.user.roles`*::
+
--
Roles to which the principal belongs

type: keyword

example: ['kibana_admin', 'beats_admin']

--

*`elasticsearch.audit.action`*::
+
--
The name of the action that was executed

type: keyword

example: cluster:monitor/main

--

*`elasticsearch.audit.url.params`*::
+
--
REST URI parameters

example: {username=jacknich2}

--

*`elasticsearch.audit.indices`*::
+
--
Indices accessed by action

type: keyword

example: ['foo-2019.01.04', 'foo-2019.01.03', 'foo-2019.01.06']

--

*`elasticsearch.audit.request.id`*::
+
--
Unique ID of request

type: keyword

example: WzL_kb6VSvOhAq0twPvHOQ

--

*`elasticsearch.audit.request.name`*::
+
--
The type of request that was executed

type: keyword

example: ClearScrollRequest

--

*`elasticsearch.audit.request_body`*::
+
--
type: alias

alias to: http.request.body.content

--

*`elasticsearch.audit.origin_address`*::
+
--
type: alias

alias to: source.ip

--

*`elasticsearch.audit.uri`*::
+
--
type: alias

alias to: url.original

--

*`elasticsearch.audit.principal`*::
+
--
type: alias

alias to: user.name

--

*`elasticsearch.audit.message`*::
+
--
type: text

--

[float]
=== deprecation



[float]
=== gc

GC fileset fields.



[float]
=== phase

Fields specific to GC phase.



*`elasticsearch.gc.phase.name`*::
+
--
Name of the GC collection phase.


type: keyword

--

*`elasticsearch.gc.phase.duration_sec`*::
+
--
Collection phase duration according to the Java virtual machine.


type: float

--

*`elasticsearch.gc.phase.scrub_symbol_table_time_sec`*::
+
--
Pause time in seconds cleaning up symbol tables.


type: float

--

*`elasticsearch.gc.phase.scrub_string_table_time_sec`*::
+
--
Pause time in seconds cleaning up string tables.


type: float

--

*`elasticsearch.gc.phase.weak_refs_processing_time_sec`*::
+
--
Time spent processing weak references in seconds.


type: float

--

*`elasticsearch.gc.phase.parallel_rescan_time_sec`*::
+
--
Time spent in seconds marking live objects while application is stopped.


type: float

--

*`elasticsearch.gc.phase.class_unload_time_sec`*::
+
--
Time spent unloading unused classes in seconds.


type: float

--

[float]
=== cpu_time

Process CPU time spent performing collections.



*`elasticsearch.gc.phase.cpu_time.user_sec`*::
+
--
CPU time spent outside the kernel.


type: float

--

*`elasticsearch.gc.phase.cpu_time.sys_sec`*::
+
--
CPU time spent inside the kernel. 


type: float

--

*`elasticsearch.gc.phase.cpu_time.real_sec`*::
+
--
Total elapsed CPU time spent to complete the collection from start to finish.


type: float

--

*`elasticsearch.gc.jvm_runtime_sec`*::
+
--
The time from JVM start up in seconds, as a floating point number.


type: float

--

*`elasticsearch.gc.threads_total_stop_time_sec`*::
+
--
Garbage collection threads total stop time seconds.


type: float

--

*`elasticsearch.gc.stopping_threads_time_sec`*::
+
--
Time took to stop threads seconds.


type: float

--

*`elasticsearch.gc.tags`*::
+
--
GC logging tags.


type: keyword

--

[float]
=== heap

Heap allocation and total size.



*`elasticsearch.gc.heap.size_kb`*::
+
--
Total heap size in kilobytes.


type: integer

--

*`elasticsearch.gc.heap.used_kb`*::
+
--
Used heap in kilobytes.


type: integer

--

[float]
=== old_gen

Old generation occupancy and total size.



*`elasticsearch.gc.old_gen.size_kb`*::
+
--
Total size of old generation in kilobytes.


type: integer

--

*`elasticsearch.gc.old_gen.used_kb`*::
+
--
Old generation occupancy in kilobytes.


type: integer

--

[float]
=== young_gen

Young generation occupancy and total size.



*`elasticsearch.gc.young_gen.size_kb`*::
+
--
Total size of young generation in kilobytes.


type: integer

--

*`elasticsearch.gc.young_gen.used_kb`*::
+
--
Young generation occupancy in kilobytes.


type: integer

--

[float]
=== server

Server log file


*`elasticsearch.server.stacktrace`*::
+
--
Field is not indexed.

--

[float]
=== gc

GC log


[float]
=== young

Young GC


*`elasticsearch.server.gc.young.one`*::
+
--


type: long

example: 

--

*`elasticsearch.server.gc.young.two`*::
+
--


type: long

example: 

--

*`elasticsearch.server.gc.overhead_seq`*::
+
--
Sequence number

type: long

example: 3449992

--

*`elasticsearch.server.gc.collection_duration.ms`*::
+
--
Time spent in GC, in milliseconds

type: float

example: 1600

--

*`elasticsearch.server.gc.observation_duration.ms`*::
+
--
Total time over which collection was observed, in milliseconds

type: float

example: 1800

--

[float]
=== slowlog

Slowlog events from Elasticsearch


*`elasticsearch.slowlog.logger`*::
+
--
Logger name

type: keyword

example: index.search.slowlog.fetch

--

*`elasticsearch.slowlog.took`*::
+
--
Time it took to execute the query

type: keyword

example: 300ms

--

*`elasticsearch.slowlog.types`*::
+
--
Types

type: keyword

example: 

--

*`elasticsearch.slowlog.stats`*::
+
--
Stats groups

type: keyword

example: group1

--

*`elasticsearch.slowlog.search_type`*::
+
--
Search type

type: keyword

example: QUERY_THEN_FETCH

--

*`elasticsearch.slowlog.source_query`*::
+
--
Slow query

type: keyword

example: {"query":{"match_all":{"boost":1.0}}}

--

*`elasticsearch.slowlog.extra_source`*::
+
--
Extra source information

type: keyword

example: 

--

*`elasticsearch.slowlog.total_hits`*::
+
--
Total hits

type: keyword

example: 42

--

*`elasticsearch.slowlog.total_shards`*::
+
--
Total queried shards

type: keyword

example: 22

--

*`elasticsearch.slowlog.routing`*::
+
--
Routing

type: keyword

example: s01HZ2QBk9jw4gtgaFtn

--

*`elasticsearch.slowlog.id`*::
+
--
Id

type: keyword

example: 

--

*`elasticsearch.slowlog.type`*::
+
--
Type

type: keyword

example: doc

--

*`elasticsearch.slowlog.source`*::
+
--
Source of document that was indexed

type: keyword

--

[[exported-fields-envoyproxy]]
== Envoyproxy fields

Module for handling logs produced by envoy



[float]
=== envoyproxy

Fields from envoy proxy logs after normalization



*`envoyproxy.log_type`*::
+
--
Envoy log type, normally ACCESS


type: keyword

--

*`envoyproxy.response_flags`*::
+
--
Response flags


type: keyword

--

*`envoyproxy.upstream_service_time`*::
+
--
Upstream service time in nanoseconds


type: long

format: duration

--

*`envoyproxy.request_id`*::
+
--
ID of the request


type: keyword

--

*`envoyproxy.authority`*::
+
--
Envoy proxy authority field


type: keyword

--

*`envoyproxy.proxy_type`*::
+
--
Envoy proxy type, tcp or http


type: keyword

--

[[exported-fields-f5]]
== Big-IP Access Policy Manager fields

f5 fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-fortinet]]
== Fortinet fields

fortinet Module



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[float]
=== fortinet

Fields from fortinet FortiOS



*`fortinet.file.hash.crc32`*::
+
--
CRC32 Hash of file


type: keyword

--

[float]
=== firewall

Module for parsing Fortinet syslog.



*`fortinet.firewall.acct_stat`*::
+
--
Accounting state (RADIUS)


type: keyword

--

*`fortinet.firewall.acktime`*::
+
--
Alarm Acknowledge Time


type: keyword

--

*`fortinet.firewall.act`*::
+
--
Action


type: keyword

--

*`fortinet.firewall.action`*::
+
--
Status of the session


type: keyword

--

*`fortinet.firewall.activity`*::
+
--
HA activity message


type: keyword

--

*`fortinet.firewall.addr`*::
+
--
IP Address


type: ip

--

*`fortinet.firewall.addr_type`*::
+
--
Address Type


type: keyword

--

*`fortinet.firewall.addrgrp`*::
+
--
Address Group


type: keyword

--

*`fortinet.firewall.adgroup`*::
+
--
AD Group Name


type: keyword

--

*`fortinet.firewall.admin`*::
+
--
Admin User


type: keyword

--

*`fortinet.firewall.age`*::
+
--
Time in seconds - time passed since last seen


type: integer

--

*`fortinet.firewall.agent`*::
+
--
User agent - eg. agent="Mozilla/5.0"


type: keyword

--

*`fortinet.firewall.alarmid`*::
+
--
Alarm ID


type: integer

--

*`fortinet.firewall.alert`*::
+
--
Alert


type: keyword

--

*`fortinet.firewall.analyticscksum`*::
+
--
The checksum of the file submitted for analytics


type: keyword

--

*`fortinet.firewall.analyticssubmit`*::
+
--
The flag for analytics submission


type: keyword

--

*`fortinet.firewall.ap`*::
+
--
Access Point


type: keyword

--

*`fortinet.firewall.app-type`*::
+
--
Address Type


type: keyword

--

*`fortinet.firewall.appact`*::
+
--
The security action from app control


type: keyword

--

*`fortinet.firewall.appid`*::
+
--
Application ID


type: integer

--

*`fortinet.firewall.applist`*::
+
--
Application Control profile


type: keyword

--

*`fortinet.firewall.apprisk`*::
+
--
Application Risk Level


type: keyword

--

*`fortinet.firewall.apscan`*::
+
--
The name of the AP, which scanned and detected the rogue AP


type: keyword

--

*`fortinet.firewall.apsn`*::
+
--
Access Point


type: keyword

--

*`fortinet.firewall.apstatus`*::
+
--
Access Point status


type: keyword

--

*`fortinet.firewall.aptype`*::
+
--
Access Point type


type: keyword

--

*`fortinet.firewall.assigned`*::
+
--
Assigned IP Address


type: ip

--

*`fortinet.firewall.assignip`*::
+
--
Assigned IP Address


type: ip

--

*`fortinet.firewall.attachment`*::
+
--
The flag for email attachement


type: keyword

--

*`fortinet.firewall.attack`*::
+
--
Attack Name


type: keyword

--

*`fortinet.firewall.attackcontext`*::
+
--
The trigger patterns and the packetdata with base64 encoding


type: keyword

--

*`fortinet.firewall.attackcontextid`*::
+
--
Attack context id / total


type: keyword

--

*`fortinet.firewall.attackid`*::
+
--
Attack ID


type: integer

--

*`fortinet.firewall.auditid`*::
+
--
Audit ID


type: long

--

*`fortinet.firewall.auditscore`*::
+
--
The Audit Score


type: keyword

--

*`fortinet.firewall.audittime`*::
+
--
The time of the audit


type: long

--

*`fortinet.firewall.authgrp`*::
+
--
Authorization Group


type: keyword

--

*`fortinet.firewall.authid`*::
+
--
Authentication ID


type: keyword

--

*`fortinet.firewall.authproto`*::
+
--
The protocol that initiated the authentication


type: keyword

--

*`fortinet.firewall.authserver`*::
+
--
Authentication server


type: keyword

--

*`fortinet.firewall.bandwidth`*::
+
--
Bandwidth


type: keyword

--

*`fortinet.firewall.banned_rule`*::
+
--
NAC quarantine Banned Rule Name


type: keyword

--

*`fortinet.firewall.banned_src`*::
+
--
NAC quarantine Banned Source IP


type: keyword

--

*`fortinet.firewall.banword`*::
+
--
Banned word


type: keyword

--

*`fortinet.firewall.botnetdomain`*::
+
--
Botnet Domain Name


type: keyword

--

*`fortinet.firewall.botnetip`*::
+
--
Botnet IP Address


type: ip

--

*`fortinet.firewall.bssid`*::
+
--
Service Set ID


type: keyword

--

*`fortinet.firewall.call_id`*::
+
--
Caller ID


type: keyword

--

*`fortinet.firewall.carrier_ep`*::
+
--
The FortiOS Carrier end-point identification


type: keyword

--

*`fortinet.firewall.cat`*::
+
--
DNS category ID


type: integer

--

*`fortinet.firewall.category`*::
+
--
Authentication category


type: keyword

--

*`fortinet.firewall.cc`*::
+
--
CC Email Address


type: keyword

--

*`fortinet.firewall.cdrcontent`*::
+
--
Cdrcontent


type: keyword

--

*`fortinet.firewall.centralnatid`*::
+
--
Central NAT ID


type: integer

--

*`fortinet.firewall.cert`*::
+
--
Certificate


type: keyword

--

*`fortinet.firewall.cert-type`*::
+
--
Certificate type


type: keyword

--

*`fortinet.firewall.certhash`*::
+
--
Certificate hash


type: keyword

--

*`fortinet.firewall.cfgattr`*::
+
--
Configuration attribute


type: keyword

--

*`fortinet.firewall.cfgobj`*::
+
--
Configuration object


type: keyword

--

*`fortinet.firewall.cfgpath`*::
+
--
Configuration path


type: keyword

--

*`fortinet.firewall.cfgtid`*::
+
--
Configuration transaction ID


type: keyword

--

*`fortinet.firewall.cfgtxpower`*::
+
--
Configuration TX power


type: integer

--

*`fortinet.firewall.channel`*::
+
--
Wireless Channel


type: integer

--

*`fortinet.firewall.channeltype`*::
+
--
SSH channel type


type: keyword

--

*`fortinet.firewall.chassisid`*::
+
--
Chassis ID


type: integer

--

*`fortinet.firewall.checksum`*::
+
--
The checksum of the scanned file


type: keyword

--

*`fortinet.firewall.chgheaders`*::
+
--
HTTP Headers


type: keyword

--

*`fortinet.firewall.cldobjid`*::
+
--
Connector object ID


type: keyword

--

*`fortinet.firewall.client_addr`*::
+
--
Wifi client address


type: keyword

--

*`fortinet.firewall.cloudaction`*::
+
--
Cloud Action


type: keyword

--

*`fortinet.firewall.clouduser`*::
+
--
Cloud User


type: keyword

--

*`fortinet.firewall.column`*::
+
--
VOIP Column


type: integer

--

*`fortinet.firewall.command`*::
+
--
CLI Command


type: keyword

--

*`fortinet.firewall.community`*::
+
--
SNMP Community


type: keyword

--

*`fortinet.firewall.configcountry`*::
+
--
Configuration country


type: keyword

--

*`fortinet.firewall.connection_type`*::
+
--
FortiClient Connection Type


type: keyword

--

*`fortinet.firewall.conserve`*::
+
--
Flag for conserve mode


type: keyword

--

*`fortinet.firewall.constraint`*::
+
--
WAF http protocol restrictions


type: keyword

--

*`fortinet.firewall.contentdisarmed`*::
+
--
Email scanned content


type: keyword

--

*`fortinet.firewall.contenttype`*::
+
--
Content Type from HTTP header


type: keyword

--

*`fortinet.firewall.cookies`*::
+
--
VPN Cookie


type: keyword

--

*`fortinet.firewall.count`*::
+
--
Counts of action type


type: integer

--

*`fortinet.firewall.countapp`*::
+
--
Number of App Ctrl logs associated with the session


type: integer

--

*`fortinet.firewall.countav`*::
+
--
Number of AV logs associated with the session


type: integer

--

*`fortinet.firewall.countcifs`*::
+
--
Number of CIFS logs associated with the session


type: integer

--

*`fortinet.firewall.countdlp`*::
+
--
Number of DLP logs associated with the session


type: integer

--

*`fortinet.firewall.countdns`*::
+
--
Number of DNS logs associated with the session


type: integer

--

*`fortinet.firewall.countemail`*::
+
--
Number of email logs associated with the session


type: integer

--

*`fortinet.firewall.countff`*::
+
--
Number of ff logs associated with the session


type: integer

--

*`fortinet.firewall.countips`*::
+
--
Number of IPS logs associated with the session


type: integer

--

*`fortinet.firewall.countssh`*::
+
--
Number of SSH logs associated with the session


type: integer

--

*`fortinet.firewall.countssl`*::
+
--
Number of SSL logs associated with the session


type: integer

--

*`fortinet.firewall.countwaf`*::
+
--
Number of WAF logs associated with the session


type: integer

--

*`fortinet.firewall.countweb`*::
+
--
Number of Web filter logs associated with the session


type: integer

--

*`fortinet.firewall.cpu`*::
+
--
CPU Usage


type: integer

--

*`fortinet.firewall.craction`*::
+
--
Client Reputation Action


type: integer

--

*`fortinet.firewall.criticalcount`*::
+
--
Number of critical ratings


type: integer

--

*`fortinet.firewall.crl`*::
+
--
Client Reputation Level


type: keyword

--

*`fortinet.firewall.crlevel`*::
+
--
Client Reputation Level


type: keyword

--

*`fortinet.firewall.crscore`*::
+
--
Some description


type: integer

--

*`fortinet.firewall.cveid`*::
+
--
CVE ID


type: keyword

--

*`fortinet.firewall.daemon`*::
+
--
Daemon name


type: keyword

--

*`fortinet.firewall.datarange`*::
+
--
Data range for reports


type: keyword

--

*`fortinet.firewall.date`*::
+
--
Date


type: keyword

--

*`fortinet.firewall.ddnsserver`*::
+
--
DDNS server


type: ip

--

*`fortinet.firewall.desc`*::
+
--
Description


type: keyword

--

*`fortinet.firewall.detectionmethod`*::
+
--
Detection method


type: keyword

--

*`fortinet.firewall.devcategory`*::
+
--
Device category


type: keyword

--

*`fortinet.firewall.devintfname`*::
+
--
HA device Interface Name


type: keyword

--

*`fortinet.firewall.devtype`*::
+
--
Device type


type: keyword

--

*`fortinet.firewall.dhcp_msg`*::
+
--
DHCP Message


type: keyword

--

*`fortinet.firewall.dintf`*::
+
--
Destination interface


type: keyword

--

*`fortinet.firewall.disk`*::
+
--
Assosciated disk


type: keyword

--

*`fortinet.firewall.disklograte`*::
+
--
Disk logging rate


type: long

--

*`fortinet.firewall.dlpextra`*::
+
--
DLP extra information


type: keyword

--

*`fortinet.firewall.docsource`*::
+
--
DLP fingerprint document source


type: keyword

--

*`fortinet.firewall.domainctrlauthstate`*::
+
--
CIFS domain auth state


type: integer

--

*`fortinet.firewall.domainctrlauthtype`*::
+
--
CIFS domain auth type


type: integer

--

*`fortinet.firewall.domainctrldomain`*::
+
--
CIFS domain auth domain


type: keyword

--

*`fortinet.firewall.domainctrlip`*::
+
--
CIFS Domain IP


type: ip

--

*`fortinet.firewall.domainctrlname`*::
+
--
CIFS Domain name


type: keyword

--

*`fortinet.firewall.domainctrlprotocoltype`*::
+
--
CIFS Domain connection protocol


type: integer

--

*`fortinet.firewall.domainctrlusername`*::
+
--
CIFS Domain username


type: keyword

--

*`fortinet.firewall.domainfilteridx`*::
+
--
Domain filter ID


type: integer

--

*`fortinet.firewall.domainfilterlist`*::
+
--
Domain filter name


type: keyword

--

*`fortinet.firewall.ds`*::
+
--
Direction with distribution system


type: keyword

--

*`fortinet.firewall.dst_int`*::
+
--
Destination interface


type: keyword

--

*`fortinet.firewall.dstintfrole`*::
+
--
Destination interface role


type: keyword

--

*`fortinet.firewall.dstcountry`*::
+
--
Destination country


type: keyword

--

*`fortinet.firewall.dstdevcategory`*::
+
--
Destination device category


type: keyword

--

*`fortinet.firewall.dstdevtype`*::
+
--
Destination device type


type: keyword

--

*`fortinet.firewall.dstfamily`*::
+
--
Destination OS family


type: keyword

--

*`fortinet.firewall.dsthwvendor`*::
+
--
Destination HW vendor


type: keyword

--

*`fortinet.firewall.dsthwversion`*::
+
--
Destination HW version


type: keyword

--

*`fortinet.firewall.dstinetsvc`*::
+
--
Destination interface service


type: keyword

--

*`fortinet.firewall.dstosname`*::
+
--
Destination OS name


type: keyword

--

*`fortinet.firewall.dstosversion`*::
+
--
Destination OS version


type: keyword

--

*`fortinet.firewall.dstserver`*::
+
--
Destination server


type: integer

--

*`fortinet.firewall.dstssid`*::
+
--
Destination SSID


type: keyword

--

*`fortinet.firewall.dstswversion`*::
+
--
Destination software version


type: keyword

--

*`fortinet.firewall.dstunauthusersource`*::
+
--
Destination unauthenticated source


type: keyword

--

*`fortinet.firewall.dstuuid`*::
+
--
UUID of the Destination IP address


type: keyword

--

*`fortinet.firewall.duid`*::
+
--
DHCP UID


type: keyword

--

*`fortinet.firewall.eapolcnt`*::
+
--
EAPOL packet count


type: integer

--

*`fortinet.firewall.eapoltype`*::
+
--
EAPOL packet type


type: keyword

--

*`fortinet.firewall.encrypt`*::
+
--
Whether the packet is encrypted or not


type: integer

--

*`fortinet.firewall.encryption`*::
+
--
Encryption method


type: keyword

--

*`fortinet.firewall.epoch`*::
+
--
Epoch used for locating file


type: integer

--

*`fortinet.firewall.espauth`*::
+
--
ESP Authentication


type: keyword

--

*`fortinet.firewall.esptransform`*::
+
--
ESP Transform


type: keyword

--

*`fortinet.firewall.exch`*::
+
--
Mail Exchanges from DNS response answer section


type: keyword

--

*`fortinet.firewall.exchange`*::
+
--
Mail Exchanges from DNS response answer section


type: keyword

--

*`fortinet.firewall.expectedsignature`*::
+
--
Expected SSL signature


type: keyword

--

*`fortinet.firewall.expiry`*::
+
--
FortiGuard override expiry timestamp


type: keyword

--

*`fortinet.firewall.fams_pause`*::
+
--
Fortinet Analysis and Management Service Pause


type: integer

--

*`fortinet.firewall.fazlograte`*::
+
--
FortiAnalyzer Logging Rate


type: long

--

*`fortinet.firewall.fctemssn`*::
+
--
FortiClient Endpoint SSN


type: keyword

--

*`fortinet.firewall.fctuid`*::
+
--
FortiClient UID


type: keyword

--

*`fortinet.firewall.field`*::
+
--
NTP status field


type: keyword

--

*`fortinet.firewall.filefilter`*::
+
--
The filter used to identify the affected file


type: keyword

--

*`fortinet.firewall.filehashsrc`*::
+
--
Filehash source


type: keyword

--

*`fortinet.firewall.filtercat`*::
+
--
DLP filter category


type: keyword

--

*`fortinet.firewall.filteridx`*::
+
--
DLP filter ID


type: integer

--

*`fortinet.firewall.filtername`*::
+
--
DLP rule name


type: keyword

--

*`fortinet.firewall.filtertype`*::
+
--
DLP filter type


type: keyword

--

*`fortinet.firewall.fortiguardresp`*::
+
--
Antispam ESP value


type: keyword

--

*`fortinet.firewall.forwardedfor`*::
+
--
Email address forwarded


type: keyword

--

*`fortinet.firewall.fqdn`*::
+
--
FQDN


type: keyword

--

*`fortinet.firewall.frametype`*::
+
--
Wireless frametype


type: keyword

--

*`fortinet.firewall.freediskstorage`*::
+
--
Free disk integer


type: integer

--

*`fortinet.firewall.from`*::
+
--
From email address


type: keyword

--

*`fortinet.firewall.from_vcluster`*::
+
--
Source virtual cluster number


type: integer

--

*`fortinet.firewall.fsaverdict`*::
+
--
FSA verdict


type: keyword

--

*`fortinet.firewall.fwserver_name`*::
+
--
Web proxy server name


type: keyword

--

*`fortinet.firewall.gateway`*::
+
--
Gateway ip address for PPPoE status report


type: ip

--

*`fortinet.firewall.green`*::
+
--
Memory status


type: keyword

--

*`fortinet.firewall.groupid`*::
+
--
User Group ID


type: integer

--

*`fortinet.firewall.ha-prio`*::
+
--
HA Priority


type: integer

--

*`fortinet.firewall.ha_group`*::
+
--
HA Group


type: keyword

--

*`fortinet.firewall.ha_role`*::
+
--
HA Role


type: keyword

--

*`fortinet.firewall.handshake`*::
+
--
SSL Handshake


type: keyword

--

*`fortinet.firewall.hash`*::
+
--
Hash value of downloaded file


type: keyword

--

*`fortinet.firewall.hbdn_reason`*::
+
--
Heartbeat down reason


type: keyword

--

*`fortinet.firewall.highcount`*::
+
--
Highcount fabric summary


type: integer

--

*`fortinet.firewall.host`*::
+
--
Hostname


type: keyword

--

*`fortinet.firewall.iaid`*::
+
--
DHCPv6 id


type: keyword

--

*`fortinet.firewall.icmpcode`*::
+
--
Destination Port of the ICMP message


type: keyword

--

*`fortinet.firewall.icmpid`*::
+
--
Source port of the ICMP message


type: keyword

--

*`fortinet.firewall.icmptype`*::
+
--
The type of ICMP message


type: keyword

--

*`fortinet.firewall.identifier`*::
+
--
Network traffic identifier


type: integer

--

*`fortinet.firewall.in_spi`*::
+
--
IPSEC inbound SPI


type: keyword

--

*`fortinet.firewall.incidentserialno`*::
+
--
Incident serial number


type: integer

--

*`fortinet.firewall.infected`*::
+
--
Infected MMS


type: integer

--

*`fortinet.firewall.infectedfilelevel`*::
+
--
DLP infected file level


type: integer

--

*`fortinet.firewall.informationsource`*::
+
--
Information source


type: keyword

--

*`fortinet.firewall.init`*::
+
--
IPSEC init stage


type: keyword

--

*`fortinet.firewall.initiator`*::
+
--
Original login user name for Fortiguard override


type: keyword

--

*`fortinet.firewall.interface`*::
+
--
Related interface


type: keyword

--

*`fortinet.firewall.intf`*::
+
--
Related interface


type: keyword

--

*`fortinet.firewall.invalidmac`*::
+
--
The MAC address with invalid OUI


type: keyword

--

*`fortinet.firewall.ip`*::
+
--
Related IP


type: ip

--

*`fortinet.firewall.iptype`*::
+
--
Related IP type


type: keyword

--

*`fortinet.firewall.keyword`*::
+
--
Keyword used for search


type: keyword

--

*`fortinet.firewall.kind`*::
+
--
VOIP kind


type: keyword

--

*`fortinet.firewall.lanin`*::
+
--
LAN incoming traffic in bytes


type: long

--

*`fortinet.firewall.lanout`*::
+
--
LAN outbound traffic in bytes


type: long

--

*`fortinet.firewall.lease`*::
+
--
DHCP lease


type: integer

--

*`fortinet.firewall.license_limit`*::
+
--
Maximum Number of FortiClients for the License


type: keyword

--

*`fortinet.firewall.limit`*::
+
--
Virtual Domain Resource Limit


type: integer

--

*`fortinet.firewall.line`*::
+
--
VOIP line


type: keyword

--

*`fortinet.firewall.live`*::
+
--
Time in seconds


type: integer

--

*`fortinet.firewall.local`*::
+
--
Local IP for a PPPD Connection


type: ip

--

*`fortinet.firewall.log`*::
+
--
Log message


type: keyword

--

*`fortinet.firewall.login`*::
+
--
SSH login


type: keyword

--

*`fortinet.firewall.lowcount`*::
+
--
Fabric lowcount


type: integer

--

*`fortinet.firewall.mac`*::
+
--
DHCP mac address


type: keyword

--

*`fortinet.firewall.malform_data`*::
+
--
VOIP malformed data


type: integer

--

*`fortinet.firewall.malform_desc`*::
+
--
VOIP malformed data description


type: keyword

--

*`fortinet.firewall.manuf`*::
+
--
Manufacturer name


type: keyword

--

*`fortinet.firewall.masterdstmac`*::
+
--
Master mac address for a host with multiple network interfaces


type: keyword

--

*`fortinet.firewall.mastersrcmac`*::
+
--
The master MAC address for a host that has multiple network interfaces


type: keyword

--

*`fortinet.firewall.mediumcount`*::
+
--
Fabric medium count


type: integer

--

*`fortinet.firewall.mem`*::
+
--
Memory usage system statistics


type: integer

--

*`fortinet.firewall.meshmode`*::
+
--
Wireless mesh mode


type: keyword

--

*`fortinet.firewall.message_type`*::
+
--
VOIP message type


type: keyword

--

*`fortinet.firewall.method`*::
+
--
HTTP method


type: keyword

--

*`fortinet.firewall.mgmtcnt`*::
+
--
The number of unauthorized client flooding managemet frames


type: integer

--

*`fortinet.firewall.mode`*::
+
--
IPSEC mode


type: keyword

--

*`fortinet.firewall.module`*::
+
--
PCI-DSS module


type: keyword

--

*`fortinet.firewall.monitor-name`*::
+
--
Health Monitor Name


type: keyword

--

*`fortinet.firewall.monitor-type`*::
+
--
Health Monitor Type


type: keyword

--

*`fortinet.firewall.mpsk`*::
+
--
Wireless MPSK


type: keyword

--

*`fortinet.firewall.msgproto`*::
+
--
Message Protocol Number


type: keyword

--

*`fortinet.firewall.mtu`*::
+
--
Max Transmission Unit Value


type: integer

--

*`fortinet.firewall.name`*::
+
--
Name


type: keyword

--

*`fortinet.firewall.nat`*::
+
--
NAT IP Address


type: keyword

--

*`fortinet.firewall.netid`*::
+
--
Connector NetID


type: keyword

--

*`fortinet.firewall.new_status`*::
+
--
New status on user change


type: keyword

--

*`fortinet.firewall.new_value`*::
+
--
New Virtual Domain Name


type: keyword

--

*`fortinet.firewall.newchannel`*::
+
--
New Channel Number


type: integer

--

*`fortinet.firewall.newchassisid`*::
+
--
New Chassis ID


type: integer

--

*`fortinet.firewall.newslot`*::
+
--
New Slot Number


type: integer

--

*`fortinet.firewall.nextstat`*::
+
--
Time interval in seconds for the next statistics.


type: integer

--

*`fortinet.firewall.nf_type`*::
+
--
Notification Type


type: keyword

--

*`fortinet.firewall.noise`*::
+
--
Wifi Noise


type: integer

--

*`fortinet.firewall.old_status`*::
+
--
Original Status


type: keyword

--

*`fortinet.firewall.old_value`*::
+
--
Original Virtual Domain name


type: keyword

--

*`fortinet.firewall.oldchannel`*::
+
--
Original channel


type: integer

--

*`fortinet.firewall.oldchassisid`*::
+
--
Original Chassis Number


type: integer

--

*`fortinet.firewall.oldslot`*::
+
--
Original Slot Number


type: integer

--

*`fortinet.firewall.oldsn`*::
+
--
Old Serial number


type: keyword

--

*`fortinet.firewall.oldwprof`*::
+
--
Old Web Filter Profile


type: keyword

--

*`fortinet.firewall.onwire`*::
+
--
A flag to indicate if the AP is onwire or not


type: keyword

--

*`fortinet.firewall.opercountry`*::
+
--
Operating Country


type: keyword

--

*`fortinet.firewall.opertxpower`*::
+
--
Operating TX power


type: integer

--

*`fortinet.firewall.osname`*::
+
--
Operating System name


type: keyword

--

*`fortinet.firewall.osversion`*::
+
--
Operating System version


type: keyword

--

*`fortinet.firewall.out_spi`*::
+
--
Out SPI


type: keyword

--

*`fortinet.firewall.outintf`*::
+
--
Out interface


type: keyword

--

*`fortinet.firewall.passedcount`*::
+
--
Fabric passed count


type: integer

--

*`fortinet.firewall.passwd`*::
+
--
Changed user password information


type: keyword

--

*`fortinet.firewall.path`*::
+
--
Path of looped configuration for security fabric


type: keyword

--

*`fortinet.firewall.peer`*::
+
--
WAN optimization peer


type: keyword

--

*`fortinet.firewall.peer_notif`*::
+
--
VPN peer notification


type: keyword

--

*`fortinet.firewall.phase2_name`*::
+
--
VPN phase2 name


type: keyword

--

*`fortinet.firewall.phone`*::
+
--
VOIP Phone


type: keyword

--

*`fortinet.firewall.pid`*::
+
--
Process ID


type: integer

--

*`fortinet.firewall.policytype`*::
+
--
Policy Type


type: keyword

--

*`fortinet.firewall.poolname`*::
+
--
IP Pool name


type: keyword

--

*`fortinet.firewall.port`*::
+
--
Log upload error port


type: integer

--

*`fortinet.firewall.portbegin`*::
+
--
IP Pool port number to begin


type: integer

--

*`fortinet.firewall.portend`*::
+
--
IP Pool port number to end


type: integer

--

*`fortinet.firewall.probeproto`*::
+
--
Link Monitor Probe Protocol


type: keyword

--

*`fortinet.firewall.process`*::
+
--
URL Filter process


type: keyword

--

*`fortinet.firewall.processtime`*::
+
--
Process time for reports


type: integer

--

*`fortinet.firewall.profile`*::
+
--
Profile Name


type: keyword

--

*`fortinet.firewall.profile_vd`*::
+
--
Virtual Domain Name


type: keyword

--

*`fortinet.firewall.profilegroup`*::
+
--
Profile Group Name


type: keyword

--

*`fortinet.firewall.profiletype`*::
+
--
Profile Type


type: keyword

--

*`fortinet.firewall.qtypeval`*::
+
--
DNS question type value


type: integer

--

*`fortinet.firewall.quarskip`*::
+
--
Quarantine skip explanation


type: keyword

--

*`fortinet.firewall.quotaexceeded`*::
+
--
If quota has been exceeded


type: keyword

--

*`fortinet.firewall.quotamax`*::
+
--
Maximum quota allowed - in seconds if time-based - in bytes if traffic-based


type: long

--

*`fortinet.firewall.quotatype`*::
+
--
Quota type


type: keyword

--

*`fortinet.firewall.quotaused`*::
+
--
Quota used - in seconds if time-based - in bytes if trafficbased)


type: long

--

*`fortinet.firewall.radioband`*::
+
--
Radio band


type: keyword

--

*`fortinet.firewall.radioid`*::
+
--
Radio ID


type: integer

--

*`fortinet.firewall.radioidclosest`*::
+
--
Radio ID on the AP closest the rogue AP


type: integer

--

*`fortinet.firewall.radioiddetected`*::
+
--
Radio ID on the AP which detected the rogue AP


type: integer

--

*`fortinet.firewall.rate`*::
+
--
Wireless rogue rate value


type: keyword

--

*`fortinet.firewall.rawdata`*::
+
--
Raw data value


type: keyword

--

*`fortinet.firewall.rawdataid`*::
+
--
Raw data ID


type: keyword

--

*`fortinet.firewall.rcvddelta`*::
+
--
Received bytes delta


type: keyword

--

*`fortinet.firewall.reason`*::
+
--
Alert reason


type: keyword

--

*`fortinet.firewall.received`*::
+
--
Server key exchange received


type: integer

--

*`fortinet.firewall.receivedsignature`*::
+
--
Server key exchange received signature


type: keyword

--

*`fortinet.firewall.red`*::
+
--
Memory information in red


type: keyword

--

*`fortinet.firewall.referralurl`*::
+
--
Web filter referralurl


type: keyword

--

*`fortinet.firewall.remote`*::
+
--
Remote PPP IP address


type: ip

--

*`fortinet.firewall.remotewtptime`*::
+
--
Remote Wifi Radius authentication time


type: keyword

--

*`fortinet.firewall.reporttype`*::
+
--
Report type


type: keyword

--

*`fortinet.firewall.reqtype`*::
+
--
Request type


type: keyword

--

*`fortinet.firewall.request_name`*::
+
--
VOIP request name


type: keyword

--

*`fortinet.firewall.result`*::
+
--
VPN phase result


type: keyword

--

*`fortinet.firewall.role`*::
+
--
VPN Phase 2 role


type: keyword

--

*`fortinet.firewall.rssi`*::
+
--
Received signal strength indicator


type: integer

--

*`fortinet.firewall.rsso_key`*::
+
--
RADIUS SSO attribute value


type: keyword

--

*`fortinet.firewall.ruledata`*::
+
--
Rule data


type: keyword

--

*`fortinet.firewall.ruletype`*::
+
--
Rule type


type: keyword

--

*`fortinet.firewall.scanned`*::
+
--
Number of Scanned MMSs


type: integer

--

*`fortinet.firewall.scantime`*::
+
--
Scanned time


type: long

--

*`fortinet.firewall.scope`*::
+
--
FortiGuard Override Scope


type: keyword

--

*`fortinet.firewall.security`*::
+
--
Wireless rogue security


type: keyword

--

*`fortinet.firewall.sensitivity`*::
+
--
Sensitivity for document fingerprint


type: keyword

--

*`fortinet.firewall.sensor`*::
+
--
NAC Sensor Name


type: keyword

--

*`fortinet.firewall.sentdelta`*::
+
--
Sent bytes delta


type: keyword

--

*`fortinet.firewall.seq`*::
+
--
Sequence number


type: keyword

--

*`fortinet.firewall.serial`*::
+
--
WAN optimisation serial


type: keyword

--

*`fortinet.firewall.serialno`*::
+
--
Serial number


type: keyword

--

*`fortinet.firewall.server`*::
+
--
AD server FQDN or IP


type: keyword

--

*`fortinet.firewall.session_id`*::
+
--
Session ID


type: keyword

--

*`fortinet.firewall.sessionid`*::
+
--
WAD Session ID


type: integer

--

*`fortinet.firewall.setuprate`*::
+
--
Session Setup Rate


type: long

--

*`fortinet.firewall.severity`*::
+
--
Severity


type: keyword

--

*`fortinet.firewall.shaperdroprcvdbyte`*::
+
--
Received bytes dropped by shaper


type: integer

--

*`fortinet.firewall.shaperdropsentbyte`*::
+
--
Sent bytes dropped by shaper


type: integer

--

*`fortinet.firewall.shaperperipdropbyte`*::
+
--
Dropped bytes per IP by shaper


type: integer

--

*`fortinet.firewall.shaperperipname`*::
+
--
Traffic shaper name (per IP)


type: keyword

--

*`fortinet.firewall.shaperrcvdname`*::
+
--
Traffic shaper name for received traffic


type: keyword

--

*`fortinet.firewall.shapersentname`*::
+
--
Traffic shaper name for sent traffic


type: keyword

--

*`fortinet.firewall.shapingpolicyid`*::
+
--
Traffic shaper policy ID


type: integer

--

*`fortinet.firewall.signal`*::
+
--
Wireless rogue API signal


type: integer

--

*`fortinet.firewall.size`*::
+
--
Email size in bytes


type: long

--

*`fortinet.firewall.slot`*::
+
--
Slot number


type: integer

--

*`fortinet.firewall.sn`*::
+
--
Security fabric serial number


type: keyword

--

*`fortinet.firewall.snclosest`*::
+
--
SN of the AP closest to the rogue AP


type: keyword

--

*`fortinet.firewall.sndetected`*::
+
--
SN of the AP which detected the rogue AP


type: keyword

--

*`fortinet.firewall.snmeshparent`*::
+
--
SN of the mesh parent


type: keyword

--

*`fortinet.firewall.spi`*::
+
--
IPSEC SPI


type: keyword

--

*`fortinet.firewall.src_int`*::
+
--
Source interface


type: keyword

--

*`fortinet.firewall.srcintfrole`*::
+
--
Source interface role


type: keyword

--

*`fortinet.firewall.srccountry`*::
+
--
Source country


type: keyword

--

*`fortinet.firewall.srcfamily`*::
+
--
Source family


type: keyword

--

*`fortinet.firewall.srchwvendor`*::
+
--
Source hardware vendor


type: keyword

--

*`fortinet.firewall.srchwversion`*::
+
--
Source hardware version


type: keyword

--

*`fortinet.firewall.srcinetsvc`*::
+
--
Source interface service


type: keyword

--

*`fortinet.firewall.srcname`*::
+
--
Source name


type: keyword

--

*`fortinet.firewall.srcserver`*::
+
--
Source server


type: integer

--

*`fortinet.firewall.srcssid`*::
+
--
Source SSID


type: keyword

--

*`fortinet.firewall.srcswversion`*::
+
--
Source software version


type: keyword

--

*`fortinet.firewall.srcuuid`*::
+
--
Source UUID


type: keyword

--

*`fortinet.firewall.sscname`*::
+
--
SSC name


type: keyword

--

*`fortinet.firewall.ssid`*::
+
--
Base Service Set ID


type: keyword

--

*`fortinet.firewall.sslaction`*::
+
--
SSL Action


type: keyword

--

*`fortinet.firewall.ssllocal`*::
+
--
WAD SSL local


type: keyword

--

*`fortinet.firewall.sslremote`*::
+
--
WAD SSL remote


type: keyword

--

*`fortinet.firewall.stacount`*::
+
--
Number of stations/clients


type: integer

--

*`fortinet.firewall.stage`*::
+
--
IPSEC stage


type: keyword

--

*`fortinet.firewall.stamac`*::
+
--
802.1x station mac


type: keyword

--

*`fortinet.firewall.state`*::
+
--
Admin login state


type: keyword

--

*`fortinet.firewall.status`*::
+
--
Status


type: keyword

--

*`fortinet.firewall.stitch`*::
+
--
Automation stitch triggered


type: keyword

--

*`fortinet.firewall.subject`*::
+
--
Email subject


type: keyword

--

*`fortinet.firewall.submodule`*::
+
--
Configuration Sub-Module Name


type: keyword

--

*`fortinet.firewall.subservice`*::
+
--
AV subservice


type: keyword

--

*`fortinet.firewall.subtype`*::
+
--
Log subtype


type: keyword

--

*`fortinet.firewall.suspicious`*::
+
--
Number of Suspicious MMSs


type: integer

--

*`fortinet.firewall.switchproto`*::
+
--
Protocol change information


type: keyword

--

*`fortinet.firewall.sync_status`*::
+
--
The sync status with the master


type: keyword

--

*`fortinet.firewall.sync_type`*::
+
--
The sync type with the master


type: keyword

--

*`fortinet.firewall.sysuptime`*::
+
--
System uptime


type: keyword

--

*`fortinet.firewall.tamac`*::
+
--
the MAC address of Transmitter, if none, then Receiver


type: keyword

--

*`fortinet.firewall.threattype`*::
+
--
WIDS threat type


type: keyword

--

*`fortinet.firewall.time`*::
+
--
Time of the event


type: keyword

--

*`fortinet.firewall.to`*::
+
--
Email to field


type: keyword

--

*`fortinet.firewall.to_vcluster`*::
+
--
destination virtual cluster number


type: integer

--

*`fortinet.firewall.total`*::
+
--
Total memory


type: integer

--

*`fortinet.firewall.totalsession`*::
+
--
Total Number of Sessions


type: integer

--

*`fortinet.firewall.trace_id`*::
+
--
Session clash trace ID


type: keyword

--

*`fortinet.firewall.trandisp`*::
+
--
NAT translation type


type: keyword

--

*`fortinet.firewall.transid`*::
+
--
HTTP transaction ID


type: integer

--

*`fortinet.firewall.translationid`*::
+
--
DNS filter transaltion ID


type: keyword

--

*`fortinet.firewall.trigger`*::
+
--
Automation stitch trigger


type: keyword

--

*`fortinet.firewall.trueclntip`*::
+
--
File filter true client IP


type: ip

--

*`fortinet.firewall.tunnelid`*::
+
--
IPSEC tunnel ID


type: integer

--

*`fortinet.firewall.tunnelip`*::
+
--
IPSEC tunnel IP


type: ip

--

*`fortinet.firewall.tunneltype`*::
+
--
IPSEC tunnel type


type: keyword

--

*`fortinet.firewall.type`*::
+
--
Module type


type: keyword

--

*`fortinet.firewall.ui`*::
+
--
Admin authentication UI type


type: keyword

--

*`fortinet.firewall.unauthusersource`*::
+
--
Unauthenticated user source


type: keyword

--

*`fortinet.firewall.unit`*::
+
--
Power supply unit


type: integer

--

*`fortinet.firewall.urlfilteridx`*::
+
--
URL filter ID


type: integer

--

*`fortinet.firewall.urlfilterlist`*::
+
--
URL filter list


type: keyword

--

*`fortinet.firewall.urlsource`*::
+
--
URL filter source


type: keyword

--

*`fortinet.firewall.urltype`*::
+
--
URL filter type


type: keyword

--

*`fortinet.firewall.used`*::
+
--
Number of Used IPs


type: integer

--

*`fortinet.firewall.used_for_type`*::
+
--
Connection for the type


type: integer

--

*`fortinet.firewall.utmaction`*::
+
--
Security action performed by UTM


type: keyword

--

*`fortinet.firewall.vap`*::
+
--
Virtual AP


type: keyword

--

*`fortinet.firewall.vapmode`*::
+
--
Virtual AP mode


type: keyword

--

*`fortinet.firewall.vcluster`*::
+
--
virtual cluster id


type: integer

--

*`fortinet.firewall.vcluster_member`*::
+
--
Virtual cluster member


type: integer

--

*`fortinet.firewall.vcluster_state`*::
+
--
Virtual cluster state


type: keyword

--

*`fortinet.firewall.vd`*::
+
--
Virtual Domain Name


type: keyword

--

*`fortinet.firewall.vdname`*::
+
--
Virtual Domain Name


type: keyword

--

*`fortinet.firewall.vendorurl`*::
+
--
Vulnerability scan vendor name


type: keyword

--

*`fortinet.firewall.version`*::
+
--
Version


type: keyword

--

*`fortinet.firewall.vip`*::
+
--
Virtual IP


type: keyword

--

*`fortinet.firewall.virus`*::
+
--
Virus name


type: keyword

--

*`fortinet.firewall.virusid`*::
+
--
Virus ID (unique virus identifier)


type: integer

--

*`fortinet.firewall.voip_proto`*::
+
--
VOIP protocol


type: keyword

--

*`fortinet.firewall.vpn`*::
+
--
VPN description


type: keyword

--

*`fortinet.firewall.vpntunnel`*::
+
--
IPsec Vpn Tunnel Name


type: keyword

--

*`fortinet.firewall.vpntype`*::
+
--
The type of the VPN tunnel


type: keyword

--

*`fortinet.firewall.vrf`*::
+
--
VRF number


type: integer

--

*`fortinet.firewall.vulncat`*::
+
--
Vulnerability Category


type: keyword

--

*`fortinet.firewall.vulnid`*::
+
--
Vulnerability ID


type: integer

--

*`fortinet.firewall.vulnname`*::
+
--
Vulnerability name


type: keyword

--

*`fortinet.firewall.vwlid`*::
+
--
VWL ID


type: integer

--

*`fortinet.firewall.vwlquality`*::
+
--
VWL quality


type: keyword

--

*`fortinet.firewall.vwlservice`*::
+
--
VWL service


type: keyword

--

*`fortinet.firewall.vwpvlanid`*::
+
--
VWP VLAN ID


type: integer

--

*`fortinet.firewall.wanin`*::
+
--
WAN incoming traffic in bytes


type: long

--

*`fortinet.firewall.wanoptapptype`*::
+
--
WAN Optimization Application type


type: keyword

--

*`fortinet.firewall.wanout`*::
+
--
WAN outgoing traffic in bytes


type: long

--

*`fortinet.firewall.weakwepiv`*::
+
--
Weak Wep Initiation Vector


type: keyword

--

*`fortinet.firewall.xauthgroup`*::
+
--
XAuth Group Name


type: keyword

--

*`fortinet.firewall.xauthuser`*::
+
--
XAuth User Name


type: keyword

--

*`fortinet.firewall.xid`*::
+
--
Wireless X ID


type: integer

--

[[exported-fields-googlecloud]]
== Google Cloud fields

Module for handling logs from Google Cloud.



[float]
=== googlecloud

Fields from Google Cloud logs.



[float]
=== destination.instance

If the destination of the connection was a VM located on the same VPC, this field is populated with VM instance details. In a Shared VPC configuration, project_id corresponds to the project that owns the instance, usually the service project.



*`googlecloud.destination.instance.project_id`*::
+
--
ID of the project containing the VM.


type: keyword

--

*`googlecloud.destination.instance.region`*::
+
--
Region of the VM.


type: keyword

--

*`googlecloud.destination.instance.zone`*::
+
--
Zone of the VM.


type: keyword

--

[float]
=== destination.vpc

If the destination of the connection was a VM located on the same VPC, this field is populated with VPC network details. In a Shared VPC configuration, project_id corresponds to that of the host project.



*`googlecloud.destination.vpc.project_id`*::
+
--
ID of the project containing the VM.


type: keyword

--

*`googlecloud.destination.vpc.vpc_name`*::
+
--
VPC on which the VM is operating.


type: keyword

--

*`googlecloud.destination.vpc.subnetwork_name`*::
+
--
Subnetwork on which the VM is operating.


type: keyword

--

[float]
=== source.instance

If the source of the connection was a VM located on the same VPC, this field is populated with VM instance details. In a Shared VPC configuration, project_id corresponds to the project that owns the instance, usually the service project.



*`googlecloud.source.instance.project_id`*::
+
--
ID of the project containing the VM.


type: keyword

--

*`googlecloud.source.instance.region`*::
+
--
Region of the VM.


type: keyword

--

*`googlecloud.source.instance.zone`*::
+
--
Zone of the VM.


type: keyword

--

[float]
=== source.vpc

If the source of the connection was a VM located on the same VPC, this field is populated with VPC network details. In a Shared VPC configuration, project_id corresponds to that of the host project.



*`googlecloud.source.vpc.project_id`*::
+
--
ID of the project containing the VM.


type: keyword

--

*`googlecloud.source.vpc.vpc_name`*::
+
--
VPC on which the VM is operating.


type: keyword

--

*`googlecloud.source.vpc.subnetwork_name`*::
+
--
Subnetwork on which the VM is operating.


type: keyword

--

[float]
=== audit

Fields for Google Cloud audit logs.



*`googlecloud.audit.type`*::
+
--
Type property.


type: keyword

--

[float]
=== authentication_info

Authentication information. 



*`googlecloud.audit.authentication_info.principal_email`*::
+
--
The email address of the authenticated user making the request. 


type: keyword

--

*`googlecloud.audit.authentication_info.authority_selector`*::
+
--
The authority selector specified by the requestor, if any. It is not guaranteed  that the principal was allowed to use this authority. 


type: keyword

--

*`googlecloud.audit.authorization_info`*::
+
--
Authorization information for the operation.


type: array

--

*`googlecloud.audit.method_name`*::
+
--
The name of the service method or operation. For API calls, this  should be the name of the API method.  For example, 'google.datastore.v1.Datastore.RunQuery'.


type: keyword

--

*`googlecloud.audit.num_response_items`*::
+
--
The number of items returned from a List or Query API method, if applicable.


type: long

--

[float]
=== request

The operation request.



*`googlecloud.audit.request.proto_name`*::
+
--
Type property of the request.


type: keyword

--

*`googlecloud.audit.request.filter`*::
+
--
Filter of the request.


type: keyword

--

*`googlecloud.audit.request.name`*::
+
--
Name of the request. 


type: keyword

--

*`googlecloud.audit.request.resource_name`*::
+
--
Name of the request resource. 


type: keyword

--

[float]
=== request_metadata

Metadata about the request.



*`googlecloud.audit.request_metadata.caller_ip`*::
+
--
The IP address of the caller. 


type: ip

--

*`googlecloud.audit.request_metadata.caller_supplied_user_agent`*::
+
--
The user agent of the caller. This information is not authenticated and  should be treated accordingly.


type: keyword

--

[float]
=== response

The operation response.



*`googlecloud.audit.response.proto_name`*::
+
--
Type property of the response.


type: keyword

--

[float]
=== details

The details of the response.



*`googlecloud.audit.response.details.group`*::
+
--
The name of the group.


type: keyword

--

*`googlecloud.audit.response.details.kind`*::
+
--
The kind of the response details.


type: keyword

--

*`googlecloud.audit.response.details.name`*::
+
--
The name of the response details.


type: keyword

--

*`googlecloud.audit.response.details.uid`*::
+
--
The uid of the response details.


type: keyword

--

*`googlecloud.audit.response.status`*::
+
--
Status of the response. 


type: keyword

--

*`googlecloud.audit.resource_name`*::
+
--
The resource or collection that is the target of the operation.  The name is a scheme-less URI, not including the API service name.  For example, 'shelves/SHELF_ID/books'.


type: keyword

--

[float]
=== resource_location

The location of the resource.



*`googlecloud.audit.resource_location.current_locations`*::
+
--
Current locations of the resource.


type: keyword

--

*`googlecloud.audit.service_name`*::
+
--
The name of the API service performing the operation.  For example, datastore.googleapis.com.


type: keyword

--

[float]
=== status

The status of the overall operation. 



*`googlecloud.audit.status.code`*::
+
--
The status code, which should be an enum value of google.rpc.Code. 


type: integer

--

*`googlecloud.audit.status.message`*::
+
--
A developer-facing error message, which should be in English. Any user-facing  error message should be localized and sent in the google.rpc.Status.details  field, or localized by the client. 


type: keyword

--

[float]
=== firewall

Fields for Google Cloud Firewall logs.



[float]
=== rule_details

Description of the firewall rule that matched this connection.



*`googlecloud.firewall.rule_details.priority`*::
+
--
The priority for the firewall rule.

type: long

--

*`googlecloud.firewall.rule_details.action`*::
+
--
Action that the rule performs on match.

type: keyword

--

*`googlecloud.firewall.rule_details.direction`*::
+
--
Direction of traffic that matches this rule.

type: keyword

--

*`googlecloud.firewall.rule_details.reference`*::
+
--
Reference to the firewall rule.

type: keyword

--

*`googlecloud.firewall.rule_details.source_range`*::
+
--
List of source ranges that the firewall rule applies to.

type: keyword

--

*`googlecloud.firewall.rule_details.destination_range`*::
+
--
List of destination ranges that the firewall applies to.

type: keyword

--

*`googlecloud.firewall.rule_details.source_tag`*::
+
--
List of all the source tags that the firewall rule applies to.


type: keyword

--

*`googlecloud.firewall.rule_details.target_tag`*::
+
--
List of all the target tags that the firewall rule applies to.


type: keyword

--

*`googlecloud.firewall.rule_details.ip_port_info`*::
+
--
List of ip protocols and applicable port ranges for rules.


type: array

--

*`googlecloud.firewall.rule_details.source_service_account`*::
+
--
List of all the source service accounts that the firewall rule applies to.


type: keyword

--

*`googlecloud.firewall.rule_details.target_service_account`*::
+
--
List of all the target service accounts that the firewall rule applies to.


type: keyword

--

[float]
=== vpcflow

Fields for Google Cloud VPC flow logs.



*`googlecloud.vpcflow.reporter`*::
+
--
The side which reported the flow. Can be either 'SRC' or 'DEST'.


type: keyword

--

*`googlecloud.vpcflow.rtt.ms`*::
+
--
Latency as measured (for TCP flows only) during the time interval. This is the time elapsed between sending a SEQ and receiving a corresponding ACK and it contains the network RTT as well as the application related delay.


type: long

--

[[exported-fields-gsuite]]
== gsuite fields

gsuite Module



[float]
=== gsuite

Gsuite specific fields.
More information about specific fields can be found at https://developers.google.com/admin-sdk/reports/v1/reference/activities/list



*`gsuite.actor.type`*::
+
--
The type of actor.
Values can be:
  *USER*: Another user in the same domain.
  *EXTERNAL_USER*: A user outside the domain.
  *KEY*: A non-human actor.


type: keyword

--

*`gsuite.actor.key`*::
+
--
Only present when `actor.type` is `KEY`. Can be the `consumer_key` of the requestor for OAuth 2LO API requests or an identifier for robot accounts.


type: keyword

--

*`gsuite.event.type`*::
+
--
The type of GSuite event, mapped from `items[].events[].type` in the original payload. Each fileset can have a different set of values for it, more details can be found at https://developers.google.com/admin-sdk/reports/v1/reference/activities/list


type: keyword

example: audit#activity

--

*`gsuite.kind`*::
+
--
The type of API resource, mapped from `kind` in the original payload. More details can be found at https://developers.google.com/admin-sdk/reports/v1/reference/activities/list


type: keyword

example: audit#activity

--

*`gsuite.organization.domain`*::
+
--
The domain that is affected by the report's event.


type: keyword

--


*`gsuite.admin.application.edition`*::
+
--
The GSuite edition.

type: keyword

--

*`gsuite.admin.application.name`*::
+
--
The application's name.

type: keyword

--

*`gsuite.admin.application.enabled`*::
+
--
The enabled application.

type: keyword

--

*`gsuite.admin.application.licences_order_number`*::
+
--
Order number used to redeem licenses.

type: keyword

--

*`gsuite.admin.application.licences_purchased`*::
+
--
Number of licences purchased.

type: keyword

--

*`gsuite.admin.application.id`*::
+
--
The application ID.

type: keyword

--

*`gsuite.admin.application.asp_id`*::
+
--
The application specific password ID.

type: keyword

--

*`gsuite.admin.application.package_id`*::
+
--
The mobile application package ID.

type: keyword

--

*`gsuite.admin.group.email`*::
+
--
The group's primary email address.

type: keyword

--

*`gsuite.admin.new_value`*::
+
--
The new value for the setting.

type: keyword

--

*`gsuite.admin.old_value`*::
+
--
The old value for the setting.

type: keyword

--

*`gsuite.admin.org_unit.name`*::
+
--
The organizational unit name.

type: keyword

--

*`gsuite.admin.org_unit.full`*::
+
--
The org unit full path including the root org unit name.

type: keyword

--

*`gsuite.admin.setting.name`*::
+
--
The setting name.

type: keyword

--

*`gsuite.admin.user_defined_setting.name`*::
+
--
The name of the user-defined setting.

type: keyword

--

*`gsuite.admin.setting.description`*::
+
--
The setting name.

type: keyword

--

*`gsuite.admin.group.priorities`*::
+
--
Group priorities.

type: keyword

--

*`gsuite.admin.domain.alias`*::
+
--
The domain alias.

type: keyword

--

*`gsuite.admin.domain.name`*::
+
--
The primary domain name.

type: keyword

--

*`gsuite.admin.domain.secondary_name`*::
+
--
The secondary domain name.

type: keyword

--

*`gsuite.admin.managed_configuration`*::
+
--
The name of the managed configuration.

type: keyword

--

*`gsuite.admin.non_featured_services_selection`*::
+
--
Non-featured services selection. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-application-settings#FLASHLIGHT_EDU_NON_FEATURED_SERVICES_SELECTED


type: keyword

--

*`gsuite.admin.field`*::
+
--
The name of the field.

type: keyword

--

*`gsuite.admin.resource.id`*::
+
--
The name of the resource identifier.

type: keyword

--

*`gsuite.admin.user.email`*::
+
--
The user's primary email address.

type: keyword

--

*`gsuite.admin.user.nickname`*::
+
--
The user's nickname.

type: keyword

--

*`gsuite.admin.user.birthdate`*::
+
--
The user's birth date.

type: date

--

*`gsuite.admin.gateway.name`*::
+
--
Gateway name. Present on some chat settings.

type: keyword

--

*`gsuite.admin.chrome_os.session_type`*::
+
--
Chrome OS session type.

type: keyword

--

*`gsuite.admin.device.serial_number`*::
+
--
Device serial number.

type: keyword

--

*`gsuite.admin.device.id`*::
+
--
type: keyword

--

*`gsuite.admin.device.type`*::
+
--
Device type.

type: keyword

--

*`gsuite.admin.print_server.name`*::
+
--
The name of the print server.

type: keyword

--

*`gsuite.admin.printer.name`*::
+
--
The name of the printer.

type: keyword

--

*`gsuite.admin.device.command_details`*::
+
--
Command details.

type: keyword

--

*`gsuite.admin.role.id`*::
+
--
Unique identifier for this role privilege.

type: keyword

--

*`gsuite.admin.role.name`*::
+
--
The role name. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-delegated-admin-settings


type: keyword

--

*`gsuite.admin.privilege.name`*::
+
--
Privilege name.

type: keyword

--

*`gsuite.admin.service.name`*::
+
--
The service name.

type: keyword

--

*`gsuite.admin.url.name`*::
+
--
The website name.

type: keyword

--

*`gsuite.admin.product.name`*::
+
--
The product name.

type: keyword

--

*`gsuite.admin.product.sku`*::
+
--
The product SKU.

type: keyword

--

*`gsuite.admin.bulk_upload.failed`*::
+
--
Number of failed records in bulk upload operation.

type: long

--

*`gsuite.admin.bulk_upload.total`*::
+
--
Number of total records in bulk upload operation.

type: long

--

*`gsuite.admin.group.allowed_list`*::
+
--
Names of allow-listed groups.

type: keyword

--

*`gsuite.admin.email.quarantine_name`*::
+
--
The name of the quarantine.

type: keyword

--

*`gsuite.admin.email.log_search_filter.message_id`*::
+
--
The log search filter's email message ID.

type: keyword

--

*`gsuite.admin.email.log_search_filter.start_date`*::
+
--
The log search filter's start date.

type: date

--

*`gsuite.admin.email.log_search_filter.end_date`*::
+
--
The log search filter's ending date.

type: date

--

*`gsuite.admin.email.log_search_filter.recipient.value`*::
+
--
The log search filter's email recipient.

type: keyword

--

*`gsuite.admin.email.log_search_filter.sender.value`*::
+
--
The log search filter's email sender.

type: keyword

--

*`gsuite.admin.email.log_search_filter.recipient.ip`*::
+
--
The log search filter's email recipient's IP address.

type: ip

--

*`gsuite.admin.email.log_search_filter.sender.ip`*::
+
--
The log search filter's email sender's IP address.

type: ip

--

*`gsuite.admin.chrome_licenses.enabled`*::
+
--
Licences enabled. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-org-settings


type: keyword

--

*`gsuite.admin.chrome_licenses.allowed`*::
+
--
Licences enabled. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-org-settings


type: keyword

--

*`gsuite.admin.oauth2.service.name`*::
+
--
OAuth2 service name. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-security-settings


type: keyword

--

*`gsuite.admin.oauth2.application.id`*::
+
--
OAuth2 application ID.

type: keyword

--

*`gsuite.admin.oauth2.application.name`*::
+
--
OAuth2 application name.

type: keyword

--

*`gsuite.admin.oauth2.application.type`*::
+
--
OAuth2 application type. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-security-settings


type: keyword

--

*`gsuite.admin.verification_method`*::
+
--
Related verification method. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-security-settings and https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-domain-settings


type: keyword

--

*`gsuite.admin.alert.name`*::
+
--
The alert name.

type: keyword

--

*`gsuite.admin.rule.name`*::
+
--
The rule name.

type: keyword

--

*`gsuite.admin.api.client.name`*::
+
--
The API client name.

type: keyword

--

*`gsuite.admin.api.scopes`*::
+
--
The API scopes.

type: keyword

--

*`gsuite.admin.mdm.token`*::
+
--
The MDM vendor enrollment token.

type: keyword

--

*`gsuite.admin.mdm.vendor`*::
+
--
The MDM vendor's name.

type: keyword

--

*`gsuite.admin.info_type`*::
+
--
This will be used to state what kind of information was changed. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-domain-settings


type: keyword

--

*`gsuite.admin.email_monitor.dest_email`*::
+
--
The destination address of the email monitor.

type: keyword

--

*`gsuite.admin.email_monitor.level.chat`*::
+
--
The chat email monitor level.

type: keyword

--

*`gsuite.admin.email_monitor.level.draft`*::
+
--
The draft email monitor level.

type: keyword

--

*`gsuite.admin.email_monitor.level.incoming`*::
+
--
The incoming email monitor level.

type: keyword

--

*`gsuite.admin.email_monitor.level.outgoing`*::
+
--
The outgoing email monitor level.

type: keyword

--

*`gsuite.admin.email_dump.include_deleted`*::
+
--
Indicates if deleted emails are included in the export.

type: boolean

--

*`gsuite.admin.email_dump.package_content`*::
+
--
The contents of the mailbox package.

type: keyword

--

*`gsuite.admin.email_dump.query`*::
+
--
The search query used for the dump.

type: keyword

--

*`gsuite.admin.request.id`*::
+
--
The request ID.

type: keyword

--

*`gsuite.admin.mobile.action.id`*::
+
--
The mobile device action's ID.

type: keyword

--

*`gsuite.admin.mobile.action.type`*::
+
--
The mobile device action's type. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-mobile-settings


type: keyword

--

*`gsuite.admin.mobile.certificate.name`*::
+
--
The mobile certificate common name.

type: keyword

--

*`gsuite.admin.mobile.company_owned_devices`*::
+
--
The number of devices a company owns.

type: long

--

*`gsuite.admin.distribution.entity.name`*::
+
--
The distribution entity value, which can be a group name or an org-unit name. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-mobile-settings


type: keyword

--

*`gsuite.admin.distribution.entity.type`*::
+
--
The distribution entity type, which can be a group or an org-unit. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/admin-mobile-settings


type: keyword

--


*`gsuite.drive.billable`*::
+
--
Whether this activity is billable.

type: boolean

--

*`gsuite.drive.source_folder_id`*::
+
--
type: keyword

--

*`gsuite.drive.source_folder_title`*::
+
--
type: keyword

--

*`gsuite.drive.destination_folder_id`*::
+
--
type: keyword

--

*`gsuite.drive.destination_folder_title`*::
+
--
type: keyword

--

*`gsuite.drive.file.id`*::
+
--
type: keyword

--

*`gsuite.drive.file.type`*::
+
--
Document Drive type. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/drive


type: keyword

--

*`gsuite.drive.originating_app_id`*::
+
--
The Google Cloud Project ID of the application that performed the action.


type: keyword

--

*`gsuite.drive.file.owner.email`*::
+
--
type: keyword

--

*`gsuite.drive.file.owner.is_shared_drive`*::
+
--
Boolean flag denoting whether owner is a shared drive.


type: boolean

--

*`gsuite.drive.primary_event`*::
+
--
Whether this is a primary event. A single user action in Drive may generate several events.


type: boolean

--

*`gsuite.drive.shared_drive_id`*::
+
--
The unique identifier of the Team Drive. Only populated for for events relating to a Team Drive or item contained inside a Team Drive.


type: keyword

--

*`gsuite.drive.visibility`*::
+
--
Visibility of target file. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/drive


type: keyword

--

*`gsuite.drive.new_value`*::
+
--
When a setting or property of the file changes, the new value for it will appear here.


type: keyword

--

*`gsuite.drive.old_value`*::
+
--
When a setting or property of the file changes, the old value for it will appear here.


type: keyword

--

*`gsuite.drive.sheets_import_range_recipient_doc`*::
+
--
Doc ID of the recipient of a sheets import range.

type: keyword

--

*`gsuite.drive.old_visibility`*::
+
--
When visibility changes, this holds the old value.


type: keyword

--

*`gsuite.drive.visibility_change`*::
+
--
When visibility changes, this holds the new overall visibility of the file.


type: keyword

--

*`gsuite.drive.target_domain`*::
+
--
The domain for which the acccess scope was changed. This can also be the alias all to indicate the access scope was changed for all domains that have visibility for this document.


type: keyword

--

*`gsuite.drive.added_role`*::
+
--
Added membership role of a user/group in a Team Drive. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/drive


type: keyword

--

*`gsuite.drive.membership_change_type`*::
+
--
Type of change in Team Drive membership of a user/group. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/drive


type: keyword

--

*`gsuite.drive.shared_drive_settings_change_type`*::
+
--
Type of change in Team Drive settings. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/drive


type: keyword

--

*`gsuite.drive.removed_role`*::
+
--
Removed membership role of a user/group in a Team Drive. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/drive


type: keyword

--

*`gsuite.drive.target`*::
+
--
Target user or group.

type: keyword

--


*`gsuite.groups.acl_permission`*::
+
--
Group permission setting updated. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/groups


type: keyword

--

*`gsuite.groups.email`*::
+
--
Group email.


type: keyword

--

*`gsuite.groups.member.email`*::
+
--
Member email.


type: keyword

--

*`gsuite.groups.member.role`*::
+
--
Member role. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/groups


type: keyword

--

*`gsuite.groups.setting`*::
+
--
Group setting updated. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/groups


type: keyword

--

*`gsuite.groups.new_value`*::
+
--
New value(s) of the group setting. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/groups


type: keyword

--

*`gsuite.groups.old_value`*::
+
--
Old value(s) of the group setting. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/groups

type: keyword

--

*`gsuite.groups.value`*::
+
--
Value of the group setting. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/groups


type: keyword

--

*`gsuite.groups.message.id`*::
+
--
SMTP message Id of an email message. Present for moderation events.


type: keyword

--

*`gsuite.groups.message.moderation_action`*::
+
--
Message moderation action. Possible values are `approved` and `rejected`.


type: keyword

--

*`gsuite.groups.status`*::
+
--
A status describing the output of an operation. Possible values are `failed` and `succeeded`.


type: keyword

--


*`gsuite.login.affected_email_address`*::
+
--
type: keyword

--

*`gsuite.login.challenge_method`*::
+
--
Login challenge method. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login.


type: keyword

--

*`gsuite.login.failure_type`*::
+
--
Login failure type. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login.


type: keyword

--

*`gsuite.login.type`*::
+
--
Login credentials type. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login.


type: keyword

--

*`gsuite.login.is_second_factor`*::
+
--
type: boolean

--

*`gsuite.login.is_suspicious`*::
+
--
type: boolean

--


*`gsuite.saml.application_name`*::
+
--
Saml SP application name.


type: keyword

--

*`gsuite.saml.failure_type`*::
+
--
Login failure type. For a list of possible values refer to https://developers.google.com/admin-sdk/reports/v1/appendix/activity/saml.


type: keyword

--

*`gsuite.saml.initiated_by`*::
+
--
Requester of SAML authentication.


type: keyword

--

*`gsuite.saml.orgunit_path`*::
+
--
User orgunit.


type: keyword

--

*`gsuite.saml.status_code`*::
+
--
SAML status code.


type: long

--

*`gsuite.saml.second_level_status_code`*::
+
--
SAML second level status code.


type: long

--

[[exported-fields-haproxy]]
== HAProxy fields

haproxy Module



[float]
=== haproxy




*`haproxy.frontend_name`*::
+
--
Name of the frontend (or listener) which received and processed the connection.

--

*`haproxy.backend_name`*::
+
--
Name of the backend (or listener) which was selected to manage the connection to the server.

--

*`haproxy.server_name`*::
+
--
Name of the last server to which the connection was sent.

--

*`haproxy.total_waiting_time_ms`*::
+
--
Total time in milliseconds spent waiting in the various queues

type: long

--

*`haproxy.connection_wait_time_ms`*::
+
--
Total time in milliseconds spent waiting for the connection to establish to the final server

type: long

--

*`haproxy.bytes_read`*::
+
--
Total number of bytes transmitted to the client when the log is emitted.

type: long

--

*`haproxy.time_queue`*::
+
--
Total time in milliseconds spent waiting in the various queues.

type: long

--

*`haproxy.time_backend_connect`*::
+
--
Total time in milliseconds spent waiting for the connection to establish to the final server, including retries.

type: long

--

*`haproxy.server_queue`*::
+
--
Total number of requests which were processed before this one in the server queue.

type: long

--

*`haproxy.backend_queue`*::
+
--
Total number of requests which were processed before this one in the backend's global queue.

type: long

--

*`haproxy.bind_name`*::
+
--
Name of the listening address which received the connection.

--

*`haproxy.error_message`*::
+
--
Error message logged by HAProxy in case of error.

type: text

--

*`haproxy.source`*::
+
--
The HAProxy source of the log

type: keyword

--

*`haproxy.termination_state`*::
+
--
Condition the session was in when the session ended.

--

*`haproxy.mode`*::
+
--
mode that the frontend is operating (TCP or HTTP)

type: keyword

--

[float]
=== connections

Contains various counts of connections active in the process.


*`haproxy.connections.active`*::
+
--
Total number of concurrent connections on the process when the session was logged.

type: long

--

*`haproxy.connections.frontend`*::
+
--
Total number of concurrent connections on the frontend when the session was logged.

type: long

--

*`haproxy.connections.backend`*::
+
--
Total number of concurrent connections handled by the backend when the session was logged.

type: long

--

*`haproxy.connections.server`*::
+
--
Total number of concurrent connections still active on the server when the session was logged.

type: long

--

*`haproxy.connections.retries`*::
+
--
Number of connection retries experienced by this session when trying to connect to the server.

type: long

--

[float]
=== client

Information about the client doing the request


*`haproxy.client.ip`*::
+
--
type: alias

alias to: source.address

--

*`haproxy.client.port`*::
+
--
type: alias

alias to: source.port

--

*`haproxy.process_name`*::
+
--
type: alias

alias to: process.name

--

*`haproxy.pid`*::
+
--
type: alias

alias to: process.pid

--

[float]
=== destination

Destination information


*`haproxy.destination.port`*::
+
--
type: alias

alias to: destination.port

--

*`haproxy.destination.ip`*::
+
--
type: alias

alias to: destination.ip

--

[float]
=== geoip

Contains GeoIP information gathered based on the client.ip field. Only present if the GeoIP Elasticsearch plugin is available and used.



*`haproxy.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`haproxy.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`haproxy.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`haproxy.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`haproxy.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`haproxy.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

[float]
=== http

Please add description


[float]
=== response

Fields related to the HTTP response


*`haproxy.http.response.captured_cookie`*::
+
--
Optional "name=value" entry indicating that the client had this cookie in the response.


--

*`haproxy.http.response.captured_headers`*::
+
--
List of headers captured in the response due to the presence of the "capture response header" statement in the frontend.


type: keyword

--

*`haproxy.http.response.status_code`*::
+
--
type: alias

alias to: http.response.status_code

--

[float]
=== request

Fields related to the HTTP request


*`haproxy.http.request.captured_cookie`*::
+
--
Optional "name=value" entry indicating that the server has returned a cookie with its request.


--

*`haproxy.http.request.captured_headers`*::
+
--
List of headers captured in the request due to the presence of the "capture request header" statement in the frontend.


type: keyword

--

*`haproxy.http.request.raw_request_line`*::
+
--
Complete HTTP request line, including the method, request and HTTP version string.

type: keyword

--

*`haproxy.http.request.time_wait_without_data_ms`*::
+
--
Total time in milliseconds spent waiting for the server to send a full HTTP response, not counting data.

type: long

--

*`haproxy.http.request.time_wait_ms`*::
+
--
Total time in milliseconds spent waiting for a full HTTP request from the client (not counting body) after the first byte was received.

type: long

--

[float]
=== tcp

TCP log format


*`haproxy.tcp.connection_waiting_time_ms`*::
+
--
Total time in milliseconds elapsed between the accept and the last close

type: long

--

[[exported-fields-host-processor]]
== Host fields

Info collected for the host machine.




*`host.containerized`*::
+
--
If the host is a container.


type: boolean

--

*`host.os.build`*::
+
--
OS build information.


type: keyword

example: 18D109

--

*`host.os.codename`*::
+
--
OS codename, if any.


type: keyword

example: stretch

--

[[exported-fields-ibmmq]]
== ibmmq fields

ibmmq Module



[float]
=== ibmmq




[float]
=== errorlog

IBM MQ error logs


*`ibmmq.errorlog.installation`*::
+
--
This is the installation name which can be given at installation time.
Each installation of IBM MQ on UNIX, Linux, and Windows, has a unique identifier known as an installation name. The installation name is used to associate things such as queue managers and configuration files with an installation.


type: keyword

--

*`ibmmq.errorlog.qmgr`*::
+
--
Name of the queue manager. Queue managers provide queuing services to applications, and manages the queues that belong to them.


type: keyword

--

*`ibmmq.errorlog.arithinsert`*::
+
--
Changing content based on error.id

type: keyword

--

*`ibmmq.errorlog.commentinsert`*::
+
--
Changing content based on error.id

type: keyword

--

*`ibmmq.errorlog.errordescription`*::
+
--
Please add description

type: text

example: Please add example

--

*`ibmmq.errorlog.explanation`*::
+
--
Explaines the error in more detail

type: keyword

--

*`ibmmq.errorlog.action`*::
+
--
Defines what to do when the error occurs

type: keyword

--

*`ibmmq.errorlog.code`*::
+
--
Error code.

type: keyword

--

[[exported-fields-icinga]]
== Icinga fields

Icinga Module



[float]
=== icinga




[float]
=== debug

Contains fields for the Icinga debug logs.



*`icinga.debug.facility`*::
+
--
Specifies what component of Icinga logged the message.


type: keyword

--

*`icinga.debug.severity`*::
+
--
type: alias

alias to: log.level

--

*`icinga.debug.message`*::
+
--
type: alias

alias to: message

--

[float]
=== main

Contains fields for the Icinga main logs.



*`icinga.main.facility`*::
+
--
Specifies what component of Icinga logged the message.


type: keyword

--

*`icinga.main.severity`*::
+
--
type: alias

alias to: log.level

--

*`icinga.main.message`*::
+
--
type: alias

alias to: message

--

[float]
=== startup

Contains fields for the Icinga startup logs.



*`icinga.startup.facility`*::
+
--
Specifies what component of Icinga logged the message.


type: keyword

--

*`icinga.startup.severity`*::
+
--
type: alias

alias to: log.level

--

*`icinga.startup.message`*::
+
--
type: alias

alias to: message

--

[[exported-fields-iis]]
== IIS fields

Module for parsing IIS log files.



[float]
=== iis

Fields from IIS log files.



[float]
=== access

Contains fields for IIS access logs.



*`iis.access.sub_status`*::
+
--
The HTTP substatus code.


type: long

--

*`iis.access.win32_status`*::
+
--
The Windows status code.


type: long

--

*`iis.access.site_name`*::
+
--
The site name and instance number.


type: keyword

--

*`iis.access.server_name`*::
+
--
The name of the server on which the log file entry was generated.


type: keyword

--

*`iis.access.cookie`*::
+
--
The content of the cookie sent or received, if any.


type: keyword

--

*`iis.access.body_received.bytes`*::
+
--
type: alias

alias to: http.request.body.bytes

--

*`iis.access.body_sent.bytes`*::
+
--
type: alias

alias to: http.response.body.bytes

--

*`iis.access.server_ip`*::
+
--
type: alias

alias to: destination.address

--

*`iis.access.method`*::
+
--
type: alias

alias to: http.request.method

--

*`iis.access.url`*::
+
--
type: alias

alias to: url.path

--

*`iis.access.query_string`*::
+
--
type: alias

alias to: url.query

--

*`iis.access.port`*::
+
--
type: alias

alias to: destination.port

--

*`iis.access.user_name`*::
+
--
type: alias

alias to: user.name

--

*`iis.access.remote_ip`*::
+
--
type: alias

alias to: source.address

--

*`iis.access.referrer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`iis.access.response_code`*::
+
--
type: alias

alias to: http.response.status_code

--

*`iis.access.http_version`*::
+
--
type: alias

alias to: http.version

--

*`iis.access.hostname`*::
+
--
type: alias

alias to: host.hostname

--


*`iis.access.user_agent.device`*::
+
--
type: alias

alias to: user_agent.device.name

--

*`iis.access.user_agent.name`*::
+
--
type: alias

alias to: user_agent.name

--

*`iis.access.user_agent.os`*::
+
--
type: alias

alias to: user_agent.os.full_name

--

*`iis.access.user_agent.os_name`*::
+
--
type: alias

alias to: user_agent.os.name

--

*`iis.access.user_agent.original`*::
+
--
type: alias

alias to: user_agent.original

--


*`iis.access.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`iis.access.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`iis.access.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`iis.access.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`iis.access.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`iis.access.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

[float]
=== error

Contains fields for IIS error logs.



*`iis.error.reason_phrase`*::
+
--
The HTTP reason phrase.


type: keyword

--

*`iis.error.queue_name`*::
+
--
The IIS application pool name.


type: keyword

--

*`iis.error.remote_ip`*::
+
--
type: alias

alias to: source.address

--

*`iis.error.remote_port`*::
+
--
type: alias

alias to: source.port

--

*`iis.error.server_ip`*::
+
--
type: alias

alias to: destination.address

--

*`iis.error.server_port`*::
+
--
type: alias

alias to: destination.port

--

*`iis.error.http_version`*::
+
--
type: alias

alias to: http.version

--

*`iis.error.method`*::
+
--
type: alias

alias to: http.request.method

--

*`iis.error.url`*::
+
--
type: alias

alias to: url.original

--

*`iis.error.response_code`*::
+
--
type: alias

alias to: http.response.status_code

--


*`iis.error.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`iis.error.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`iis.error.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`iis.error.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`iis.error.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`iis.error.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

[[exported-fields-imperva]]
== Imperva SecureSphere fields

imperva fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-infoblox]]
== Infoblox NIOS fields

infoblox fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-iptables]]
== iptables fields

Module for handling the iptables logs.



[float]
=== iptables

Fields from the iptables logs.



*`iptables.ether_type`*::
+
--
Value of the ethernet type field identifying the network layer protocol.


type: long

--

*`iptables.flow_label`*::
+
--
IPv6 flow label.


type: integer

--

*`iptables.fragment_flags`*::
+
--
IP fragment flags. A combination of CE, DF and MF.


type: keyword

--

*`iptables.fragment_offset`*::
+
--
Offset of the current IP fragment.


type: long

--

[float]
=== icmp

ICMP fields.



*`iptables.icmp.code`*::
+
--
ICMP code.


type: long

--

*`iptables.icmp.id`*::
+
--
ICMP ID.


type: long

--

*`iptables.icmp.parameter`*::
+
--
ICMP parameter.


type: long

--

*`iptables.icmp.redirect`*::
+
--
ICMP redirect address.


type: ip

--

*`iptables.icmp.seq`*::
+
--
ICMP sequence number.


type: long

--

*`iptables.icmp.type`*::
+
--
ICMP type.


type: long

--

*`iptables.id`*::
+
--
Packet identifier.


type: long

--

*`iptables.incomplete_bytes`*::
+
--
Number of incomplete bytes.


type: long

--

*`iptables.input_device`*::
+
--
Device that received the packet.


type: keyword

--

*`iptables.precedence_bits`*::
+
--
IP precedence bits.


type: short

--

*`iptables.tos`*::
+
--
IP Type of Service field.


type: long

--

*`iptables.length`*::
+
--
Packet length.


type: long

--

*`iptables.output_device`*::
+
--
Device that output the packet.


type: keyword

--

[float]
=== tcp

TCP fields.



*`iptables.tcp.flags`*::
+
--
TCP flags.


type: keyword

--

*`iptables.tcp.reserved_bits`*::
+
--
TCP reserved bits.


type: short

--

*`iptables.tcp.seq`*::
+
--
TCP sequence number.


type: long

--

*`iptables.tcp.ack`*::
+
--
TCP Acknowledgment number.


type: long

--

*`iptables.tcp.window`*::
+
--
Advertised TCP window size.


type: long

--

*`iptables.ttl`*::
+
--
Time To Live field.


type: integer

--

[float]
=== udp

UDP fields.



*`iptables.udp.length`*::
+
--
Length of the UDP header and payload.


type: long

--

[float]
=== ubiquiti

Fields for Ubiquiti network devices.



*`iptables.ubiquiti.input_zone`*::
+
--
Input zone.


type: keyword

--

*`iptables.ubiquiti.output_zone`*::
+
--
Output zone.


type: keyword

--

*`iptables.ubiquiti.rule_number`*::
+
--
The rule number within the rule set.

type: keyword

--

*`iptables.ubiquiti.rule_set`*::
+
--
The rule set name.

type: keyword

--

[[exported-fields-jolokia-autodiscover]]
== Jolokia Discovery autodiscover provider fields

Metadata from Jolokia Discovery added by the jolokia provider.



*`jolokia.agent.version`*::
+
--
Version number of jolokia agent.


type: keyword

--

*`jolokia.agent.id`*::
+
--
Each agent has a unique id which can be either provided during startup of the agent in form of a configuration parameter or being autodetected. If autodected, the id has several parts: The IP, the process id, hashcode of the agent and its type.


type: keyword

--

*`jolokia.server.product`*::
+
--
The container product if detected.


type: keyword

--

*`jolokia.server.version`*::
+
--
The container's version (if detected).


type: keyword

--

*`jolokia.server.vendor`*::
+
--
The vendor of the container the agent is running in.


type: keyword

--

*`jolokia.url`*::
+
--
The URL how this agent can be contacted.


type: keyword

--

*`jolokia.secured`*::
+
--
Whether the agent was configured for authentication or not.


type: boolean

--

[[exported-fields-juniper]]
== Juniper JUNOS fields

juniper fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[float]
=== juniper.srx

Module for parsing junipersrx syslog.



*`juniper.srx.reason`*::
+
--
reason


type: keyword

--

*`juniper.srx.connection_tag`*::
+
--
connection tag


type: keyword

--

*`juniper.srx.service_name`*::
+
--
service name


type: keyword

--

*`juniper.srx.nat_connection_tag`*::
+
--
nat connection tag


type: keyword

--

*`juniper.srx.src_nat_rule_type`*::
+
--
src nat rule type


type: keyword

--

*`juniper.srx.src_nat_rule_name`*::
+
--
src nat rule name


type: keyword

--

*`juniper.srx.dst_nat_rule_type`*::
+
--
dst nat rule type


type: keyword

--

*`juniper.srx.dst_nat_rule_name`*::
+
--
dst nat rule name


type: keyword

--

*`juniper.srx.protocol_id`*::
+
--
protocol id


type: keyword

--

*`juniper.srx.policy_name`*::
+
--
policy name


type: keyword

--

*`juniper.srx.session_id_32`*::
+
--
session id 32


type: keyword

--

*`juniper.srx.session_id`*::
+
--
session id


type: keyword

--

*`juniper.srx.outbound_packets`*::
+
--
packets from client


type: integer

--

*`juniper.srx.outbound_bytes`*::
+
--
bytes from client


type: integer

--

*`juniper.srx.inbound_packets`*::
+
--
packets from server


type: integer

--

*`juniper.srx.inbound_bytes`*::
+
--
bytes from server


type: integer

--

*`juniper.srx.elapsed_time`*::
+
--
elapsed time


type: date

--

*`juniper.srx.application`*::
+
--
application


type: keyword

--

*`juniper.srx.nested_application`*::
+
--
nested application


type: keyword

--

*`juniper.srx.username`*::
+
--
username


type: keyword

--

*`juniper.srx.roles`*::
+
--
roles


type: keyword

--

*`juniper.srx.encrypted`*::
+
--
encrypted


type: keyword

--

*`juniper.srx.application_category`*::
+
--
application category


type: keyword

--

*`juniper.srx.application_sub_category`*::
+
--
application sub category


type: keyword

--

*`juniper.srx.application_characteristics`*::
+
--
application characteristics


type: keyword

--

*`juniper.srx.secure_web_proxy_session_type`*::
+
--
secure web proxy session type


type: keyword

--

*`juniper.srx.peer_session_id`*::
+
--
peer session id


type: keyword

--

*`juniper.srx.peer_source_address`*::
+
--
peer source address


type: ip

--

*`juniper.srx.peer_source_port`*::
+
--
peer source port


type: integer

--

*`juniper.srx.peer_destination_address`*::
+
--
peer destination address


type: ip

--

*`juniper.srx.peer_destination_port`*::
+
--
peer destination port


type: integer

--

*`juniper.srx.hostname`*::
+
--
hostname


type: keyword

--

*`juniper.srx.src_vrf_grp`*::
+
--
src_vrf_grp


type: keyword

--

*`juniper.srx.dst_vrf_grp`*::
+
--
dst_vrf_grp


type: keyword

--

*`juniper.srx.icmp_type`*::
+
--
icmp type


type: integer

--

*`juniper.srx.process`*::
+
--
process that generated the message


type: keyword

--

*`juniper.srx.apbr_rule_type`*::
+
--
apbr rule type


type: keyword

--

*`juniper.srx.dscp_value`*::
+
--
apbr rule type


type: integer

--

*`juniper.srx.logical_system_name`*::
+
--
logical system name


type: keyword

--

*`juniper.srx.profile_name`*::
+
--
profile name


type: keyword

--

*`juniper.srx.routing_instance`*::
+
--
routing instance


type: keyword

--

*`juniper.srx.rule_name`*::
+
--
rule name


type: keyword

--

*`juniper.srx.uplink_tx_bytes`*::
+
--
uplink tx bytes


type: integer

--

*`juniper.srx.uplink_rx_bytes`*::
+
--
uplink rx bytes


type: integer

--

*`juniper.srx.obj`*::
+
--
url path


type: keyword

--

*`juniper.srx.url`*::
+
--
url domain


type: keyword

--

*`juniper.srx.profile`*::
+
--
filter profile


type: keyword

--

*`juniper.srx.category`*::
+
--
filter category


type: keyword

--

*`juniper.srx.filename`*::
+
--
filename


type: keyword

--

*`juniper.srx.temporary_filename`*::
+
--
temporary_filename


type: keyword

--

*`juniper.srx.name`*::
+
--
name


type: keyword

--

*`juniper.srx.error_message`*::
+
--
error_message


type: keyword

--

*`juniper.srx.error_code`*::
+
--
error_code


type: keyword

--

*`juniper.srx.action`*::
+
--
action


type: keyword

--

*`juniper.srx.protocol`*::
+
--
protocol


type: keyword

--

*`juniper.srx.protocol_name`*::
+
--
protocol name


type: keyword

--

*`juniper.srx.type`*::
+
--
type


type: keyword

--

*`juniper.srx.repeat_count`*::
+
--
repeat count


type: integer

--

*`juniper.srx.alert`*::
+
--
repeat alert


type: keyword

--

*`juniper.srx.message_type`*::
+
--
message type


type: keyword

--

*`juniper.srx.threat_severity`*::
+
--
threat severity


type: keyword

--

*`juniper.srx.application_name`*::
+
--
application name


type: keyword

--

*`juniper.srx.attack_name`*::
+
--
attack name


type: keyword

--

*`juniper.srx.index`*::
+
--
index


type: keyword

--

*`juniper.srx.message`*::
+
--
mesagge


type: keyword

--

*`juniper.srx.epoch_time`*::
+
--
epoch time


type: date

--

*`juniper.srx.packet_log_id`*::
+
--
packet log id


type: integer

--

*`juniper.srx.export_id`*::
+
--
packet log id


type: integer

--

*`juniper.srx.ddos_application_name`*::
+
--
ddos application name


type: keyword

--

*`juniper.srx.connection_hit_rate`*::
+
--
connection hit rate


type: integer

--

*`juniper.srx.time_scope`*::
+
--
time scope


type: keyword

--

*`juniper.srx.context_hit_rate`*::
+
--
context hit rate


type: integer

--

*`juniper.srx.context_value_hit_rate`*::
+
--
context value hit rate


type: integer

--

*`juniper.srx.time_count`*::
+
--
time count


type: integer

--

*`juniper.srx.time_period`*::
+
--
time period


type: integer

--

*`juniper.srx.context_value`*::
+
--
context value


type: keyword

--

*`juniper.srx.context_name`*::
+
--
context name


type: keyword

--

*`juniper.srx.ruleebase_name`*::
+
--
ruleebase name


type: keyword

--

*`juniper.srx.verdict_source`*::
+
--
verdict source


type: keyword

--

*`juniper.srx.verdict_number`*::
+
--
verdict number


type: integer

--

*`juniper.srx.file_category`*::
+
--
file category


type: keyword

--

*`juniper.srx.sample_sha256`*::
+
--
sample sha256


type: keyword

--

*`juniper.srx.malware_info`*::
+
--
malware info


type: keyword

--

*`juniper.srx.client_ip`*::
+
--
client ip


type: ip

--

*`juniper.srx.tenant_id`*::
+
--
tenant id


type: keyword

--

*`juniper.srx.timestamp`*::
+
--
timestamp


type: date

--

*`juniper.srx.th`*::
+
--
th


type: keyword

--

*`juniper.srx.status`*::
+
--
status


type: keyword

--

*`juniper.srx.state`*::
+
--
state


type: keyword

--

*`juniper.srx.file_hash_lookup`*::
+
--
file hash lookup


type: keyword

--

*`juniper.srx.file_name`*::
+
--
file name


type: keyword

--

*`juniper.srx.action_detail`*::
+
--
action detail


type: keyword

--

*`juniper.srx.sub_category`*::
+
--
sub category


type: keyword

--

*`juniper.srx.feed_name`*::
+
--
feed name


type: keyword

--

*`juniper.srx.occur_count`*::
+
--
occur count


type: integer

--

*`juniper.srx.tag`*::
+
--
system log message tag, which uniquely identifies the message.


type: keyword

--

[[exported-fields-kafka]]
== Kafka fields

Kafka module



[float]
=== kafka




[float]
=== log

Kafka log lines.



*`kafka.log.level`*::
+
--
type: alias

alias to: log.level

--

*`kafka.log.message`*::
+
--
type: alias

alias to: message

--

*`kafka.log.component`*::
+
--
Component the log is coming from.


type: keyword

--

*`kafka.log.class`*::
+
--
Java class the log is coming from.


type: keyword

--

*`kafka.log.thread`*::
+
--
Thread name the log is coming from.


type: keyword

--

[float]
=== trace

Trace in the log line.



*`kafka.log.trace.class`*::
+
--
Java class the trace is coming from.


type: keyword

--

*`kafka.log.trace.message`*::
+
--
Message part of the trace.


type: text

--

[[exported-fields-kibana]]
== kibana fields

kibana Module



[float]
=== kibana




[float]
=== log

Kafka log lines.



*`kibana.log.tags`*::
+
--
Kibana logging tags.


type: keyword

--

*`kibana.log.state`*::
+
--
Current state of Kibana.


type: keyword

--

*`kibana.log.meta`*::
+
--
type: object

--

*`kibana.log.kibana.log.meta.req.headers.referer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`kibana.log.kibana.log.meta.req.referer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`kibana.log.kibana.log.meta.req.headers.user-agent`*::
+
--
type: alias

alias to: user_agent.original

--

*`kibana.log.kibana.log.meta.req.remoteAddress`*::
+
--
type: alias

alias to: source.address

--

*`kibana.log.kibana.log.meta.req.url`*::
+
--
type: alias

alias to: url.original

--

*`kibana.log.kibana.log.meta.statusCode`*::
+
--
type: alias

alias to: http.response.status_code

--

*`kibana.log.kibana.log.meta.method`*::
+
--
type: alias

alias to: http.request.method

--

[[exported-fields-kubernetes-processor]]
== Kubernetes fields

Kubernetes metadata added by the kubernetes processor




*`kubernetes.pod.name`*::
+
--
Kubernetes pod name


type: keyword

--

*`kubernetes.pod.uid`*::
+
--
Kubernetes Pod UID


type: keyword

--

*`kubernetes.namespace`*::
+
--
Kubernetes namespace


type: keyword

--

*`kubernetes.node.name`*::
+
--
Kubernetes node name


type: keyword

--

*`kubernetes.node.hostname`*::
+
--
Kubernetes hostname as reported by the node’s kernel


type: keyword

--

*`kubernetes.labels.*`*::
+
--
Kubernetes labels map


type: object

--

*`kubernetes.annotations.*`*::
+
--
Kubernetes annotations map


type: object

--

*`kubernetes.replicaset.name`*::
+
--
Kubernetes replicaset name


type: keyword

--

*`kubernetes.deployment.name`*::
+
--
Kubernetes deployment name


type: keyword

--

*`kubernetes.statefulset.name`*::
+
--
Kubernetes statefulset name


type: keyword

--

*`kubernetes.container.name`*::
+
--
Kubernetes container name


type: keyword

--

*`kubernetes.container.image`*::
+
--
Kubernetes container image


type: keyword

--

[[exported-fields-log]]
== Log file content fields

Contains log file lines.



*`log.source.address`*::
+
--
Source address from which the log event was read / sent from.


type: keyword

required: False

--

*`log.offset`*::
+
--
The file offset the reported line starts at.


type: long

required: False

--

*`stream`*::
+
--
Log stream when reading container logs, can be 'stdout' or 'stderr'


type: keyword

required: False

--

*`input.type`*::
+
--
The input type from which the event was generated. This field is set to the value specified for the `type` option in the input section of the Filebeat config file.


required: True

--

*`syslog.facility`*::
+
--
The facility extracted from the priority.


type: long

required: False

--

*`syslog.priority`*::
+
--
The priority of the syslog event.


type: long

required: False

--

*`syslog.severity_label`*::
+
--
The human readable severity.


type: keyword

required: False

--

*`syslog.facility_label`*::
+
--
The human readable facility.


type: keyword

required: False

--

*`process.program`*::
+
--
The name of the program.


type: keyword

required: False

--

*`log.flags`*::
+
--
This field contains the flags of the event.


--

*`http.response.content_length`*::
+
--
type: alias

alias to: http.response.body.bytes

--



*`user_agent.os.full_name`*::
+
--
type: keyword

--

*`fileset.name`*::
+
--
The Filebeat fileset that generated this event.


type: keyword

--

*`fileset.module`*::
+
--
type: alias

alias to: event.module

--

*`read_timestamp`*::
+
--
type: alias

alias to: event.created

--

*`docker.attrs`*::
+
--
docker.attrs contains labels and environment variables written by docker's JSON File logging driver. These fields are only available when they are configured in the logging driver options.


type: object

--

*`icmp.code`*::
+
--
ICMP code.


type: keyword

--

*`icmp.type`*::
+
--
ICMP type.


type: keyword

--

*`igmp.type`*::
+
--
IGMP type.


type: keyword

--


*`azure.eventhub`*::
+
--
Name of the eventhub.


type: keyword

--

*`azure.offset`*::
+
--
The offset.


type: long

--

*`azure.enqueued_time`*::
+
--
The enqueued time.


type: date

--

*`azure.partition_id`*::
+
--
The partition id.


type: long

--

*`azure.consumer_group`*::
+
--
The consumer group.


type: keyword

--

*`azure.sequence_number`*::
+
--
The sequence number.


type: long

--


*`kafka.topic`*::
+
--
Kafka topic


type: keyword

--

*`kafka.partition`*::
+
--
Kafka partition number


type: long

--

*`kafka.offset`*::
+
--
Kafka offset of this message


type: long

--

*`kafka.key`*::
+
--
Kafka key, corresponding to the Kafka value stored in the message


type: keyword

--

*`kafka.block_timestamp`*::
+
--
Kafka outer (compressed) block timestamp


type: date

--

*`kafka.headers`*::
+
--
An array of Kafka header strings for this message, in the form "<key>: <value>".


type: array

--

[[exported-fields-logstash]]
== logstash fields

logstash Module



[float]
=== logstash




[float]
=== log

Fields from the Logstash logs.



*`logstash.log.module`*::
+
--
The module or class where the event originate.


type: keyword

--

*`logstash.log.thread`*::
+
--
Information about the running thread where the log originate.


type: keyword

--

*`logstash.log.thread.text`*::
+
--
type: text

--

*`logstash.log.log_event`*::
+
--
key and value debugging information.


type: object

--

*`logstash.log.pipeline_id`*::
+
--
The ID of the pipeline.


type: keyword

example: main

--

*`logstash.log.message`*::
+
--
type: alias

alias to: message

--

*`logstash.log.level`*::
+
--
type: alias

alias to: log.level

--

[float]
=== slowlog

slowlog



*`logstash.slowlog.module`*::
+
--
The module or class where the event originate.


type: keyword

--

*`logstash.slowlog.thread`*::
+
--
Information about the running thread where the log originate.


type: keyword

--

*`logstash.slowlog.thread.text`*::
+
--
type: text

--

*`logstash.slowlog.event`*::
+
--
Raw dump of the original event


type: keyword

--

*`logstash.slowlog.event.text`*::
+
--
type: text

--

*`logstash.slowlog.plugin_name`*::
+
--
Name of the plugin


type: keyword

--

*`logstash.slowlog.plugin_type`*::
+
--
Type of the plugin: Inputs, Filters, Outputs or Codecs.


type: keyword

--

*`logstash.slowlog.took_in_millis`*::
+
--
Execution time for the plugin in milliseconds.


type: long

--

*`logstash.slowlog.plugin_params`*::
+
--
String value of the plugin configuration


type: keyword

--

*`logstash.slowlog.plugin_params.text`*::
+
--
type: text

--

*`logstash.slowlog.plugin_params_object`*::
+
--
key -> value of the configuration used by the plugin.


type: object

--

*`logstash.slowlog.level`*::
+
--
type: alias

alias to: log.level

--

*`logstash.slowlog.took_in_nanos`*::
+
--
type: alias

alias to: event.duration

--

[[exported-fields-microsoft]]
== Microsoft fields

Microsoft Module



[float]
=== microsoft.defender_atp

Module for ingesting Microsoft Defender ATP.



*`microsoft.defender_atp.lastUpdateTime`*::
+
--
The date and time (in UTC) the alert was last updated.


type: date

--

*`microsoft.defender_atp.resolvedTime`*::
+
--
The date and time in which the status of the alert was changed to 'Resolved'.


type: date

--

*`microsoft.defender_atp.incidentId`*::
+
--
The Incident ID of the Alert.


type: keyword

--

*`microsoft.defender_atp.investigationId`*::
+
--
The Investigation ID related to the Alert.


type: keyword

--

*`microsoft.defender_atp.investigationState`*::
+
--
The current state of the Investigation.


type: keyword

--

*`microsoft.defender_atp.assignedTo`*::
+
--
Owner of the alert.


type: keyword

--

*`microsoft.defender_atp.status`*::
+
--
Specifies the current status of the alert. Possible values are: 'Unknown', 'New', 'InProgress' and 'Resolved'.


type: keyword

--

*`microsoft.defender_atp.classification`*::
+
--
Specification of the alert. Possible values are: 'Unknown', 'FalsePositive', 'TruePositive'.


type: keyword

--

*`microsoft.defender_atp.determination`*::
+
--
Specifies the determination of the alert. Possible values are: 'NotAvailable', 'Apt', 'Malware', 'SecurityPersonnel', 'SecurityTesting', 'UnwantedSoftware', 'Other'.


type: keyword

--

*`microsoft.defender_atp.threatFamilyName`*::
+
--
Threat family.


type: keyword

--

*`microsoft.defender_atp.rbacGroupName`*::
+
--
User group related to the alert


type: keyword

--

*`microsoft.defender_atp.evidence.domainName`*::
+
--
Domain name related to the alert


type: keyword

--

*`microsoft.defender_atp.evidence.ipAddress`*::
+
--
IP address involved in the alert


type: ip

--

*`microsoft.defender_atp.evidence.aadUserId`*::
+
--
ID of the user involved in the alert


type: keyword

--

*`microsoft.defender_atp.evidence.accountName`*::
+
--
Username of the user involved in the alert


type: keyword

--

*`microsoft.defender_atp.evidence.entityType`*::
+
--
The type of evidence


type: keyword

--

*`microsoft.defender_atp.evidence.userPrincipalName`*::
+
--
Principal name of the user involved in the alert


type: keyword

--

*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[float]
=== microsoft.m365_defender

Module for ingesting Microsoft Defender ATP.



*`microsoft.m365_defender.incidentId`*::
+
--
Unique identifier to represent the incident.


type: keyword

--

*`microsoft.m365_defender.redirectIncidentId`*::
+
--
Only populated in case an incident is being grouped together with another incident, as part of the incident processing logic.


type: keyword

--

*`microsoft.m365_defender.incidentName`*::
+
--
Name of the Incident.


type: keyword

--

*`microsoft.m365_defender.determination`*::
+
--
Specifies the determination of the incident. The property values are: NotAvailable, Apt, Malware, SecurityPersonnel, SecurityTesting, UnwantedSoftware, Other.


type: keyword

--

*`microsoft.m365_defender.investigationState`*::
+
--
The current state of the Investigation.


type: keyword

--

*`microsoft.m365_defender.assignedTo`*::
+
--
Owner of the alert.


type: keyword

--

*`microsoft.m365_defender.tags`*::
+
--
Array of custom tags associated with an incident, for example to flag a group of incidents with a common characteristic.


type: keyword

--

*`microsoft.m365_defender.status`*::
+
--
Specifies the current status of the alert. Possible values are: 'Unknown', 'New', 'InProgress' and 'Resolved'.


type: keyword

--

*`microsoft.m365_defender.classification`*::
+
--
Specification of the alert. Possible values are: 'Unknown', 'FalsePositive', 'TruePositive'.


type: keyword

--

*`microsoft.m365_defender.alerts.incidentId`*::
+
--
Unique identifier to represent the incident this alert is associated with.


type: keyword

--

*`microsoft.m365_defender.alerts.resolvedTime`*::
+
--
Time when alert was resolved.


type: date

--

*`microsoft.m365_defender.alerts.status`*::
+
--
Categorize alerts (as New, Active, or Resolved).


type: keyword

--

*`microsoft.m365_defender.alerts.severity`*::
+
--
The severity of the related alert.


type: keyword

--

*`microsoft.m365_defender.alerts.creationTime`*::
+
--
Time when alert was first created.


type: date

--

*`microsoft.m365_defender.alerts.lastUpdatedTime`*::
+
--
Time when alert was last updated.


type: date

--

*`microsoft.m365_defender.alerts.investigationId`*::
+
--
The automated investigation id triggered by this alert.


type: keyword

--

*`microsoft.m365_defender.alerts.userSid`*::
+
--
The SID of the related user


type: keyword

--

*`microsoft.m365_defender.alerts.detectionSource`*::
+
--
The service that initially detected the threat.


type: keyword

--

*`microsoft.m365_defender.alerts.classification`*::
+
--
The specification for the incident. The property values are: Unknown, FalsePositive, TruePositive or null.


type: keyword

--

*`microsoft.m365_defender.alerts.investigationState`*::
+
--
Information on the investigation's current status.


type: keyword

--

*`microsoft.m365_defender.alerts.determination`*::
+
--
Specifies the determination of the incident. The property values are: NotAvailable, Apt, Malware, SecurityPersonnel, SecurityTesting, UnwantedSoftware, Other or null


type: keyword

--

*`microsoft.m365_defender.alerts.assignedTo`*::
+
--
Owner of the incident, or null if no owner is assigned.


type: keyword

--

*`microsoft.m365_defender.alerts.actorName`*::
+
--
The activity group, if any, the associated with this alert.


type: keyword

--

*`microsoft.m365_defender.alerts.threatFamilyName`*::
+
--
Threat family associated with this alert.


type: keyword

--

*`microsoft.m365_defender.alerts.mitreTechniques`*::
+
--
The attack techniques, as aligned with the MITRE ATT&CK™ framework.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.entityType`*::
+
--
Entities that have been identified to be part of, or related to, a given alert. The properties values are: User, Ip, Url, File, Process, MailBox, MailMessage, MailCluster, Registry.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.accountName`*::
+
--
Account name of the related user.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.mailboxDisplayName`*::
+
--
The display name of the related mailbox.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.mailboxAddress`*::
+
--
The mail address of the related mailbox.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.clusterBy`*::
+
--
A list of metadata if the entityType is MailCluster.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.sender`*::
+
--
The sender for the related email message.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.recipient`*::
+
--
The recipient for the related email message.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.subject`*::
+
--
The subject for the related email message.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.deliveryAction`*::
+
--
The delivery status for the related email message.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.securityGroupId`*::
+
--
The Security Group ID for the user related to the email message.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.securityGroupName`*::
+
--
The Security Group Name for the user related to the email message.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.registryHive`*::
+
--
Reference to which Hive in registry the event is related to, if eventType is registry. Example: HKEY_LOCAL_MACHINE.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.registryKey`*::
+
--
Reference to the related registry key to the event.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.registryValueType`*::
+
--
Value type of the registry key/value pair related to the event.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.deviceId`*::
+
--
The unique ID of the device related to the event.


type: keyword

--

*`microsoft.m365_defender.alerts.entities.ipAddress`*::
+
--
The related IP address to the event.


type: keyword

--

*`microsoft.m365_defender.alerts.devices`*::
+
--
The devices related to the investigation.


type: flattened

--

[[exported-fields-misp]]
== MISP fields

Module for handling threat information from MISP.



[float]
=== misp

Fields from MISP threat information.



[float]
=== attack_pattern

Fields provide support for specifying information about attack patterns.



*`misp.attack_pattern.id`*::
+
--
Identifier of the threat indicator.


type: keyword

--

*`misp.attack_pattern.name`*::
+
--
Name of the attack pattern.


type: keyword

--

*`misp.attack_pattern.description`*::
+
--
Description of the attack pattern.


type: text

--

*`misp.attack_pattern.kill_chain_phases`*::
+
--
The kill chain phase(s) to which this attack pattern corresponds.


type: keyword

--

[float]
=== campaign

Fields provide support for specifying information about campaigns.



*`misp.campaign.id`*::
+
--
Identifier of the campaign.


type: keyword

--

*`misp.campaign.name`*::
+
--
Name of the campaign.


type: keyword

--

*`misp.campaign.description`*::
+
--
Description of the campaign.


type: text

--

*`misp.campaign.aliases`*::
+
--
Alternative names used to identify this campaign.


type: text

--

*`misp.campaign.first_seen`*::
+
--
The time that this Campaign was first seen, in RFC3339 format.


type: date

--

*`misp.campaign.last_seen`*::
+
--
The time that this Campaign was last seen, in RFC3339 format.


type: date

--

*`misp.campaign.objective`*::
+
--
This field defines the Campaign's primary goal, objective, desired outcome, or intended effect.


type: keyword

--

[float]
=== course_of_action

A Course of Action is an action taken either to prevent an attack or to respond to an attack that is in progress.



*`misp.course_of_action.id`*::
+
--
Identifier of the Course of Action.


type: keyword

--

*`misp.course_of_action.name`*::
+
--
The name used to identify the Course of Action.


type: keyword

--

*`misp.course_of_action.description`*::
+
--
Description of the Course of Action.


type: text

--

[float]
=== identity

Identity can represent actual individuals, organizations, or groups, as well as classes of individuals, organizations, or groups.



*`misp.identity.id`*::
+
--
Identifier of the Identity.


type: keyword

--

*`misp.identity.name`*::
+
--
The name used to identify the Identity.


type: keyword

--

*`misp.identity.description`*::
+
--
Description of the Identity.


type: text

--

*`misp.identity.identity_class`*::
+
--
The type of entity that this Identity describes, e.g., an individual or organization. Open Vocab - identity-class-ov 


type: keyword

--

*`misp.identity.labels`*::
+
--
The list of roles that this Identity performs.  


type: keyword

example: CEO


--

*`misp.identity.sectors`*::
+
--
The list of sectors that this Identity belongs to. Open Vocab - industry-sector-ov 


type: keyword

--

*`misp.identity.contact_information`*::
+
--
The contact information (e-mail, phone number, etc.) for this Identity.


type: text

--

[float]
=== intrusion_set

An Intrusion Set is a grouped set of adversary behavior and resources with common properties that is believed to be orchestrated by a single organization.



*`misp.intrusion_set.id`*::
+
--
Identifier of the Intrusion Set.


type: keyword

--

*`misp.intrusion_set.name`*::
+
--
The name used to identify the Intrusion Set.


type: keyword

--

*`misp.intrusion_set.description`*::
+
--
Description of the Intrusion Set.


type: text

--

*`misp.intrusion_set.aliases`*::
+
--
Alternative names used to identify the Intrusion Set.


type: text

--

*`misp.intrusion_set.first_seen`*::
+
--
The time that this Intrusion Set was first seen, in RFC3339 format.


type: date

--

*`misp.intrusion_set.last_seen`*::
+
--
The time that this Intrusion Set was last seen, in RFC3339 format.


type: date

--

*`misp.intrusion_set.goals`*::
+
--
The high level goals of this Intrusion Set, namely, what are they trying to do.


type: text

--

*`misp.intrusion_set.resource_level`*::
+
--
This defines the organizational level at which this Intrusion Set typically works. Open Vocab - attack-resource-level-ov


type: text

--

*`misp.intrusion_set.primary_motivation`*::
+
--
The primary reason, motivation, or purpose behind this Intrusion Set. Open Vocab - attack-motivation-ov


type: text

--

*`misp.intrusion_set.secondary_motivations`*::
+
--
The secondary reasons, motivations, or purposes behind this Intrusion Set. Open Vocab - attack-motivation-ov


type: text

--

[float]
=== malware

Malware is a type of TTP that is also known as malicious code and malicious software, refers to a program that is inserted into a system, usually covertly, with the intent of compromising the confidentiality, integrity, or availability of the victim's data, applications, or operating system (OS) or of otherwise annoying or disrupting the victim.



*`misp.malware.id`*::
+
--
Identifier of the Malware.


type: keyword

--

*`misp.malware.name`*::
+
--
The name used to identify the Malware.


type: keyword

--

*`misp.malware.description`*::
+
--
Description of the Malware.


type: text

--

*`misp.malware.labels`*::
+
--
The type of malware being described.  Open Vocab - malware-label-ov.  adware,backdoor,bot,ddos,dropper,exploit-kit,keylogger,ransomware, remote-access-trojan,resource-exploitation,rogue-security-software,rootkit, screen-capture,spyware,trojan,virus,worm


type: keyword

--

*`misp.malware.kill_chain_phases`*::
+
--
The list of kill chain phases for which this Malware instance can be used.


type: keyword

format: string

--

[float]
=== note

A Note is a comment or note containing informative text to help explain the context of one or more STIX Objects (SDOs or SROs) or to provide additional analysis that is not contained in the original object.



*`misp.note.id`*::
+
--
Identifier of the Note.


type: keyword

--

*`misp.note.summary`*::
+
--
A brief description used as a summary of the Note.


type: keyword

--

*`misp.note.description`*::
+
--
The content of the Note.


type: text

--

*`misp.note.authors`*::
+
--
The name of the author(s) of this Note.


type: keyword

--

*`misp.note.object_refs`*::
+
--
The STIX Objects (SDOs and SROs) that the note is being applied to.


type: keyword

--

[float]
=== threat_indicator

Fields provide support for specifying information about threat indicators, and related matching patterns.



*`misp.threat_indicator.labels`*::
+
--
list of type open-vocab that specifies the type of indicator.  


type: keyword

example: Domain Watchlist


--

*`misp.threat_indicator.id`*::
+
--
Identifier of the threat indicator.


type: keyword

--

*`misp.threat_indicator.version`*::
+
--
Version of the threat indicator.


type: keyword

--

*`misp.threat_indicator.type`*::
+
--
Type of the threat indicator.


type: keyword

--

*`misp.threat_indicator.description`*::
+
--
Description of the threat indicator.


type: text

--

*`misp.threat_indicator.feed`*::
+
--
Name of the threat feed.


type: text

--

*`misp.threat_indicator.valid_from`*::
+
--
The time from which this Indicator should be considered valuable  intelligence, in RFC3339 format.


type: date

--

*`misp.threat_indicator.valid_until`*::
+
--
The time at which this Indicator should no longer be considered valuable intelligence. If the valid_until property is omitted, then there is no constraint on the latest time for which the indicator should be used, in RFC3339 format.


type: date

--

*`misp.threat_indicator.severity`*::
+
--
Threat severity to which this indicator corresponds.


type: keyword

example: high

format: string

--

*`misp.threat_indicator.confidence`*::
+
--
Confidence level to which this indicator corresponds.


type: keyword

example: high

--

*`misp.threat_indicator.kill_chain_phases`*::
+
--
The kill chain phase(s) to which this indicator corresponds.


type: keyword

format: string

--

*`misp.threat_indicator.mitre_tactic`*::
+
--
MITRE tactics to which this indicator corresponds.


type: keyword

example: Initial Access

format: string

--

*`misp.threat_indicator.mitre_technique`*::
+
--
MITRE techniques to which this indicator corresponds.


type: keyword

example: Drive-by Compromise

format: string

--

*`misp.threat_indicator.attack_pattern`*::
+
--
The attack_pattern for this indicator is a STIX Pattern as specified in STIX Version 2.0 Part 5 - STIX Patterning. 


type: keyword

example: [destination:ip = '91.219.29.188/32']


--

*`misp.threat_indicator.attack_pattern_kql`*::
+
--
The attack_pattern for this indicator is KQL query that matches the attack_pattern specified in the STIX Pattern format. 


type: keyword

example: destination.ip: "91.219.29.188/32"


--

*`misp.threat_indicator.negate`*::
+
--
When set to true, it specifies the absence of the attack_pattern.


type: boolean

--

*`misp.threat_indicator.intrusion_set`*::
+
--
Name of the intrusion set if known.


type: keyword

--

*`misp.threat_indicator.campaign`*::
+
--
Name of the attack campaign if known.


type: keyword

--

*`misp.threat_indicator.threat_actor`*::
+
--
Name of the threat actor if known.


type: keyword

--

[float]
=== observed_data

Observed data conveys information that was observed on systems and networks, such as log data or network traffic, using the Cyber Observable specification.



*`misp.observed_data.id`*::
+
--
Identifier of the Observed Data.


type: keyword

--

*`misp.observed_data.first_observed`*::
+
--
The beginning of the time window that the data was observed, in RFC3339 format.


type: date

--

*`misp.observed_data.last_observed`*::
+
--
The end of the time window that the data was observed, in RFC3339 format.


type: date

--

*`misp.observed_data.number_observed`*::
+
--
The number of times the data represented in the objects property was observed. This MUST be an integer between 1 and 999,999,999 inclusive.


type: integer

--

*`misp.observed_data.objects`*::
+
--
A dictionary of Cyber Observable Objects that describes the single fact that was observed.


type: keyword

--

[float]
=== report

Reports are collections of threat intelligence focused on one or more topics, such as a description of a threat actor, malware, or attack technique, including context and related details.



*`misp.report.id`*::
+
--
Identifier of the Report.


type: keyword

--

*`misp.report.labels`*::
+
--
This field is an Open Vocabulary that specifies the primary subject of this report.  Open Vocab - report-label-ov. threat-report,attack-pattern,campaign,identity,indicator,malware,observed-data,threat-actor,tool,vulnerability


type: keyword

--

*`misp.report.name`*::
+
--
The name used to identify the Report.


type: keyword

--

*`misp.report.description`*::
+
--
A description that provides more details and context about Report.


type: text

--

*`misp.report.published`*::
+
--
The date that this report object was officially published by the creator of this report, in RFC3339 format.


type: date

--

*`misp.report.object_refs`*::
+
--
Specifies the STIX Objects that are referred to by this Report.


type: text

--

[float]
=== threat_actor

Threat Actors are actual individuals, groups, or organizations believed to be operating with malicious intent.



*`misp.threat_actor.id`*::
+
--
Identifier of the Threat Actor.


type: keyword

--

*`misp.threat_actor.labels`*::
+
--
This field specifies the type of threat actor.  Open Vocab - threat-actor-label-ov. activist,competitor,crime-syndicate,criminal,hacker,insider-accidental,insider-disgruntled,nation-state,sensationalist,spy,terrorist


type: keyword

--

*`misp.threat_actor.name`*::
+
--
The name used to identify this Threat Actor or Threat Actor group.


type: keyword

--

*`misp.threat_actor.description`*::
+
--
A description that provides more details and context about the Threat Actor.


type: text

--

*`misp.threat_actor.aliases`*::
+
--
A list of other names that this Threat Actor is believed to use.


type: text

--

*`misp.threat_actor.roles`*::
+
--
This is a list of roles the Threat Actor plays.  Open Vocab - threat-actor-role-ov. agent,director,independent,sponsor,infrastructure-operator,infrastructure-architect,malware-author


type: text

--

*`misp.threat_actor.goals`*::
+
--
The high level goals of this Threat Actor, namely, what are they trying to do.


type: text

--

*`misp.threat_actor.sophistication`*::
+
--
The skill, specific knowledge, special training, or expertise a Threat Actor  must have to perform the attack.  Open Vocab - threat-actor-sophistication-ov. none,minimal,intermediate,advanced,strategic,expert,innovator


type: text

--

*`misp.threat_actor.resource_level`*::
+
--
This defines the organizational level at which this Threat Actor typically works.  Open Vocab - attack-resource-level-ov. individual,club,contest,team,organization,government


type: text

--

*`misp.threat_actor.primary_motivation`*::
+
--
The primary reason, motivation, or purpose behind this Threat Actor.  Open Vocab - attack-motivation-ov. accidental,coercion,dominance,ideology,notoriety,organizational-gain,personal-gain,personal-satisfaction,revenge,unpredictable


type: text

--

*`misp.threat_actor.secondary_motivations`*::
+
--
The secondary reasons, motivations, or purposes behind this Threat Actor.  Open Vocab - attack-motivation-ov. accidental,coercion,dominance,ideology,notoriety,organizational-gain,personal-gain,personal-satisfaction,revenge,unpredictable


type: text

--

*`misp.threat_actor.personal_motivations`*::
+
--
The personal reasons, motivations, or purposes of the Threat Actor regardless of  organizational goals. Open Vocab - attack-motivation-ov. accidental,coercion,dominance,ideology,notoriety,organizational-gain,personal-gain,personal-satisfaction,revenge,unpredictable


type: text

--

[float]
=== tool

Tools are legitimate software that can be used by threat actors to perform attacks.



*`misp.tool.id`*::
+
--
Identifier of the Tool.


type: keyword

--

*`misp.tool.labels`*::
+
--
The kind(s) of tool(s) being described.  Open Vocab - tool-label-ov. denial-of-service,exploitation,information-gathering,network-capture,credential-exploitation,remote-access,vulnerability-scanning


type: keyword

--

*`misp.tool.name`*::
+
--
The name used to identify the Tool.


type: keyword

--

*`misp.tool.description`*::
+
--
A description that provides more details and context about the Tool.


type: text

--

*`misp.tool.tool_version`*::
+
--
The version identifier associated with the Tool.


type: keyword

--

*`misp.tool.kill_chain_phases`*::
+
--
The list of kill chain phases for which this Tool instance can be used.


type: text

--

[float]
=== vulnerability

A Vulnerability is a mistake in software that can be directly used by a hacker to gain access to a system or network.



*`misp.vulnerability.id`*::
+
--
Identifier of the Vulnerability.


type: keyword

--

*`misp.vulnerability.name`*::
+
--
The name used to identify the Vulnerability.


type: keyword

--

*`misp.vulnerability.description`*::
+
--
A description that provides more details and context about the Vulnerability.


type: text

--

[[exported-fields-mongodb]]
== mongodb fields

Module for parsing MongoDB log files.



[float]
=== mongodb

Fields from MongoDB logs.



[float]
=== log

Contains fields from MongoDB logs.



*`mongodb.log.component`*::
+
--
Functional categorization of message


type: keyword

example: COMMAND

--

*`mongodb.log.context`*::
+
--
Context of message


type: keyword

example: initandlisten

--

*`mongodb.log.severity`*::
+
--
type: alias

alias to: log.level

--

*`mongodb.log.message`*::
+
--
type: alias

alias to: message

--

[[exported-fields-mssql]]
== mssql fields

MS SQL Filebeat Module


[float]
=== mssql

Fields from the MSSQL log files


[float]
=== log

Common log fields


*`mssql.log.origin`*::
+
--
Origin of the message, usually the server but it can also be a recovery process

type: keyword

--

[[exported-fields-mysql]]
== MySQL fields

Module for parsing the MySQL log files.



[float]
=== mysql

Fields from the MySQL log files.



*`mysql.thread_id`*::
+
--
The connection or thread ID for the query.


type: long

--

[float]
=== error

Contains fields from the MySQL error logs.



*`mysql.error.thread_id`*::
+
--
type: alias

alias to: mysql.thread_id

--

*`mysql.error.level`*::
+
--
type: alias

alias to: log.level

--

*`mysql.error.message`*::
+
--
type: alias

alias to: message

--

[float]
=== slowlog

Contains fields from the MySQL slow logs.



*`mysql.slowlog.lock_time.sec`*::
+
--
The amount of time the query waited for the lock to be available. The value is in seconds, as a floating point number.


type: float

--

*`mysql.slowlog.rows_sent`*::
+
--
The number of rows returned by the query.


type: long

--

*`mysql.slowlog.rows_examined`*::
+
--
The number of rows scanned by the query.


type: long

--

*`mysql.slowlog.rows_affected`*::
+
--
The number of rows modified by the query.


type: long

--

*`mysql.slowlog.bytes_sent`*::
+
--
The number of bytes sent to client.


type: long

format: bytes

--

*`mysql.slowlog.bytes_received`*::
+
--
The number of bytes received from client.


type: long

format: bytes

--

*`mysql.slowlog.query`*::
+
--
The slow query.


--

*`mysql.slowlog.id`*::
+
--
type: alias

alias to: mysql.thread_id

--

*`mysql.slowlog.schema`*::
+
--
The schema where the slow query was executed.


type: keyword

--

*`mysql.slowlog.current_user`*::
+
--
Current authenticated user, used to determine access privileges. Can differ from the value for user.


type: keyword

--

*`mysql.slowlog.last_errno`*::
+
--
Last SQL error seen.


type: keyword

--

*`mysql.slowlog.killed`*::
+
--
Code of the reason if the query was killed.


type: keyword

--

*`mysql.slowlog.query_cache_hit`*::
+
--
Whether the query cache was hit.


type: boolean

--

*`mysql.slowlog.tmp_table`*::
+
--
Whether a temporary table was used to resolve the query.


type: boolean

--

*`mysql.slowlog.tmp_table_on_disk`*::
+
--
Whether the query needed temporary tables on disk.


type: boolean

--

*`mysql.slowlog.tmp_tables`*::
+
--
Number of temporary tables created for this query


type: long

--

*`mysql.slowlog.tmp_disk_tables`*::
+
--
Number of temporary tables created on disk for this query.


type: long

--

*`mysql.slowlog.tmp_table_sizes`*::
+
--
Size of temporary tables created for this query.

type: long

format: bytes

--

*`mysql.slowlog.filesort`*::
+
--
Whether filesort optimization was used.


type: boolean

--

*`mysql.slowlog.filesort_on_disk`*::
+
--
Whether filesort optimization was used and it needed temporary tables on disk.


type: boolean

--

*`mysql.slowlog.priority_queue`*::
+
--
Whether a priority queue was used for filesort.


type: boolean

--

*`mysql.slowlog.full_scan`*::
+
--
Whether a full table scan was needed for the slow query.


type: boolean

--

*`mysql.slowlog.full_join`*::
+
--
Whether a full join was needed for the slow query (no indexes were used for joins).


type: boolean

--

*`mysql.slowlog.merge_passes`*::
+
--
Number of merge passes executed for the query.


type: long

--

*`mysql.slowlog.sort_merge_passes`*::
+
--
Number of merge passes that the sort algorithm has had to do.


type: long

--

*`mysql.slowlog.sort_range_count`*::
+
--
Number of sorts that were done using ranges. 


type: long

--

*`mysql.slowlog.sort_rows`*::
+
--
Number of sorted rows.


type: long

--

*`mysql.slowlog.sort_scan_count`*::
+
--
Number of sorts that were done by scanning the table.


type: long

--

*`mysql.slowlog.log_slow_rate_type`*::
+
--
Type of slow log rate limit, it can be `session` if the rate limit is applied per session, or `query` if it applies per query.


type: keyword

--

*`mysql.slowlog.log_slow_rate_limit`*::
+
--
Slow log rate limit, a value of 100 means that one in a hundred queries or sessions are being logged.


type: keyword

--

*`mysql.slowlog.read_first`*::
+
--
The number of times the first entry in an index was read.


type: long

--

*`mysql.slowlog.read_last`*::
+
--
The number of times the last key in an index was read.


type: long

--

*`mysql.slowlog.read_key`*::
+
--
The number of requests to read a row based on a key.


type: long

--

*`mysql.slowlog.read_next`*::
+
--
The number of requests to read the next row in key order.


type: long

--

*`mysql.slowlog.read_prev`*::
+
--
The number of requests to read the previous row in key order.


type: long

--

*`mysql.slowlog.read_rnd`*::
+
--
The number of requests to read a row based on a fixed position. 


type: long

--

*`mysql.slowlog.read_rnd_next`*::
+
--
The number of requests to read the next row in the data file.


type: long

--

[float]
=== innodb

Contains fields relative to InnoDB engine



*`mysql.slowlog.innodb.trx_id`*::
+
--
Transaction ID


type: keyword

--

*`mysql.slowlog.innodb.io_r_ops`*::
+
--
Number of page read operations.


type: long

--

*`mysql.slowlog.innodb.io_r_bytes`*::
+
--
Bytes read during page read operations.


type: long

format: bytes

--

*`mysql.slowlog.innodb.io_r_wait.sec`*::
+
--
How long it took to read all needed data from storage.


type: long

--

*`mysql.slowlog.innodb.rec_lock_wait.sec`*::
+
--
How long the query waited for locks.


type: long

--

*`mysql.slowlog.innodb.queue_wait.sec`*::
+
--
How long the query waited to enter the InnoDB queue and to be executed once in the queue.


type: long

--

*`mysql.slowlog.innodb.pages_distinct`*::
+
--
Approximated count of pages accessed to execute the query.


type: long

--

*`mysql.slowlog.user`*::
+
--
type: alias

alias to: user.name

--

*`mysql.slowlog.host`*::
+
--
type: alias

alias to: source.domain

--

*`mysql.slowlog.ip`*::
+
--
type: alias

alias to: source.ip

--

[[exported-fields-nats]]
== NATS fields

Module for parsing NATS log files.



[float]
=== nats

Fields from NATS logs.



[float]
=== log

Nats log files



[float]
=== client

Fields from NATS logs client.



*`nats.log.client.id`*::
+
--
The id of the client


type: integer

--

[float]
=== msg

Fields from NATS logs message.



*`nats.log.msg.bytes`*::
+
--
Size of the payload in bytes


type: long

format: bytes

--

*`nats.log.msg.type`*::
+
--
The protocol message type


type: keyword

--

*`nats.log.msg.subject`*::
+
--
Subject name this message was received on


type: keyword

--

*`nats.log.msg.sid`*::
+
--
The unique alphanumeric subscription ID of the subject


type: integer

--

*`nats.log.msg.reply_to`*::
+
--
The inbox subject on which the publisher is listening for responses


type: keyword

--

*`nats.log.msg.max_messages`*::
+
--
An optional number of messages to wait for before automatically unsubscribing


type: integer

--

*`nats.log.msg.error.message`*::
+
--
Details about the error occurred


type: text

--

*`nats.log.msg.queue_group`*::
+
--
The queue group which subscriber will join


type: text

--

[[exported-fields-netflow]]
== NetFlow fields

Fields from NetFlow and IPFIX flows.



[float]
=== netflow

Fields from NetFlow and IPFIX.



*`netflow.type`*::
+
--
The type of NetFlow record described by this event.


type: keyword

--

[float]
=== exporter

Metadata related to the exporter device that generated this record.



*`netflow.exporter.address`*::
+
--
Exporter's network address in IP:port format.


type: keyword

--

*`netflow.exporter.source_id`*::
+
--
Observation domain ID to which this record belongs.


type: long

--

*`netflow.exporter.timestamp`*::
+
--
Time and date of export.


type: date

--

*`netflow.exporter.uptime_millis`*::
+
--
How long the exporter process has been running, in milliseconds.


type: long

--

*`netflow.exporter.version`*::
+
--
NetFlow version used.


type: integer

--

*`netflow.octet_delta_count`*::
+
--
type: long

--

*`netflow.packet_delta_count`*::
+
--
type: long

--

*`netflow.delta_flow_count`*::
+
--
type: long

--

*`netflow.protocol_identifier`*::
+
--
type: short

--

*`netflow.ip_class_of_service`*::
+
--
type: short

--

*`netflow.tcp_control_bits`*::
+
--
type: integer

--

*`netflow.source_transport_port`*::
+
--
type: integer

--

*`netflow.source_ipv4_address`*::
+
--
type: ip

--

*`netflow.source_ipv4_prefix_length`*::
+
--
type: short

--

*`netflow.ingress_interface`*::
+
--
type: long

--

*`netflow.destination_transport_port`*::
+
--
type: integer

--

*`netflow.destination_ipv4_address`*::
+
--
type: ip

--

*`netflow.destination_ipv4_prefix_length`*::
+
--
type: short

--

*`netflow.egress_interface`*::
+
--
type: long

--

*`netflow.ip_next_hop_ipv4_address`*::
+
--
type: ip

--

*`netflow.bgp_source_as_number`*::
+
--
type: long

--

*`netflow.bgp_destination_as_number`*::
+
--
type: long

--

*`netflow.bgp_next_hop_ipv4_address`*::
+
--
type: ip

--

*`netflow.post_mcast_packet_delta_count`*::
+
--
type: long

--

*`netflow.post_mcast_octet_delta_count`*::
+
--
type: long

--

*`netflow.flow_end_sys_up_time`*::
+
--
type: long

--

*`netflow.flow_start_sys_up_time`*::
+
--
type: long

--

*`netflow.post_octet_delta_count`*::
+
--
type: long

--

*`netflow.post_packet_delta_count`*::
+
--
type: long

--

*`netflow.minimum_ip_total_length`*::
+
--
type: long

--

*`netflow.maximum_ip_total_length`*::
+
--
type: long

--

*`netflow.source_ipv6_address`*::
+
--
type: ip

--

*`netflow.destination_ipv6_address`*::
+
--
type: ip

--

*`netflow.source_ipv6_prefix_length`*::
+
--
type: short

--

*`netflow.destination_ipv6_prefix_length`*::
+
--
type: short

--

*`netflow.flow_label_ipv6`*::
+
--
type: long

--

*`netflow.icmp_type_code_ipv4`*::
+
--
type: integer

--

*`netflow.igmp_type`*::
+
--
type: short

--

*`netflow.sampling_interval`*::
+
--
type: long

--

*`netflow.sampling_algorithm`*::
+
--
type: short

--

*`netflow.flow_active_timeout`*::
+
--
type: integer

--

*`netflow.flow_idle_timeout`*::
+
--
type: integer

--

*`netflow.engine_type`*::
+
--
type: short

--

*`netflow.engine_id`*::
+
--
type: short

--

*`netflow.exported_octet_total_count`*::
+
--
type: long

--

*`netflow.exported_message_total_count`*::
+
--
type: long

--

*`netflow.exported_flow_record_total_count`*::
+
--
type: long

--

*`netflow.ipv4_router_sc`*::
+
--
type: ip

--

*`netflow.source_ipv4_prefix`*::
+
--
type: ip

--

*`netflow.destination_ipv4_prefix`*::
+
--
type: ip

--

*`netflow.mpls_top_label_type`*::
+
--
type: short

--

*`netflow.mpls_top_label_ipv4_address`*::
+
--
type: ip

--

*`netflow.sampler_id`*::
+
--
type: short

--

*`netflow.sampler_mode`*::
+
--
type: short

--

*`netflow.sampler_random_interval`*::
+
--
type: long

--

*`netflow.class_id`*::
+
--
type: long

--

*`netflow.minimum_ttl`*::
+
--
type: short

--

*`netflow.maximum_ttl`*::
+
--
type: short

--

*`netflow.fragment_identification`*::
+
--
type: long

--

*`netflow.post_ip_class_of_service`*::
+
--
type: short

--

*`netflow.source_mac_address`*::
+
--
type: keyword

--

*`netflow.post_destination_mac_address`*::
+
--
type: keyword

--

*`netflow.vlan_id`*::
+
--
type: integer

--

*`netflow.post_vlan_id`*::
+
--
type: integer

--

*`netflow.ip_version`*::
+
--
type: short

--

*`netflow.flow_direction`*::
+
--
type: short

--

*`netflow.ip_next_hop_ipv6_address`*::
+
--
type: ip

--

*`netflow.bgp_next_hop_ipv6_address`*::
+
--
type: ip

--

*`netflow.ipv6_extension_headers`*::
+
--
type: long

--

*`netflow.mpls_top_label_stack_section`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section2`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section3`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section4`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section5`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section6`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section7`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section8`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section9`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section10`*::
+
--
type: short

--

*`netflow.destination_mac_address`*::
+
--
type: keyword

--

*`netflow.post_source_mac_address`*::
+
--
type: keyword

--

*`netflow.interface_name`*::
+
--
type: keyword

--

*`netflow.interface_description`*::
+
--
type: keyword

--

*`netflow.sampler_name`*::
+
--
type: keyword

--

*`netflow.octet_total_count`*::
+
--
type: long

--

*`netflow.packet_total_count`*::
+
--
type: long

--

*`netflow.flags_and_sampler_id`*::
+
--
type: long

--

*`netflow.fragment_offset`*::
+
--
type: integer

--

*`netflow.forwarding_status`*::
+
--
type: short

--

*`netflow.mpls_vpn_route_distinguisher`*::
+
--
type: short

--

*`netflow.mpls_top_label_prefix_length`*::
+
--
type: short

--

*`netflow.src_traffic_index`*::
+
--
type: long

--

*`netflow.dst_traffic_index`*::
+
--
type: long

--

*`netflow.application_description`*::
+
--
type: keyword

--

*`netflow.application_id`*::
+
--
type: short

--

*`netflow.application_name`*::
+
--
type: keyword

--

*`netflow.post_ip_diff_serv_code_point`*::
+
--
type: short

--

*`netflow.multicast_replication_factor`*::
+
--
type: long

--

*`netflow.class_name`*::
+
--
type: keyword

--

*`netflow.classification_engine_id`*::
+
--
type: short

--

*`netflow.layer2packet_section_offset`*::
+
--
type: integer

--

*`netflow.layer2packet_section_size`*::
+
--
type: integer

--

*`netflow.layer2packet_section_data`*::
+
--
type: short

--

*`netflow.bgp_next_adjacent_as_number`*::
+
--
type: long

--

*`netflow.bgp_prev_adjacent_as_number`*::
+
--
type: long

--

*`netflow.exporter_ipv4_address`*::
+
--
type: ip

--

*`netflow.exporter_ipv6_address`*::
+
--
type: ip

--

*`netflow.dropped_octet_delta_count`*::
+
--
type: long

--

*`netflow.dropped_packet_delta_count`*::
+
--
type: long

--

*`netflow.dropped_octet_total_count`*::
+
--
type: long

--

*`netflow.dropped_packet_total_count`*::
+
--
type: long

--

*`netflow.flow_end_reason`*::
+
--
type: short

--

*`netflow.common_properties_id`*::
+
--
type: long

--

*`netflow.observation_point_id`*::
+
--
type: long

--

*`netflow.icmp_type_code_ipv6`*::
+
--
type: integer

--

*`netflow.mpls_top_label_ipv6_address`*::
+
--
type: ip

--

*`netflow.line_card_id`*::
+
--
type: long

--

*`netflow.port_id`*::
+
--
type: long

--

*`netflow.metering_process_id`*::
+
--
type: long

--

*`netflow.exporting_process_id`*::
+
--
type: long

--

*`netflow.template_id`*::
+
--
type: integer

--

*`netflow.wlan_channel_id`*::
+
--
type: short

--

*`netflow.wlan_ssid`*::
+
--
type: keyword

--

*`netflow.flow_id`*::
+
--
type: long

--

*`netflow.observation_domain_id`*::
+
--
type: long

--

*`netflow.flow_start_seconds`*::
+
--
type: date

--

*`netflow.flow_end_seconds`*::
+
--
type: date

--

*`netflow.flow_start_milliseconds`*::
+
--
type: date

--

*`netflow.flow_end_milliseconds`*::
+
--
type: date

--

*`netflow.flow_start_microseconds`*::
+
--
type: date

--

*`netflow.flow_end_microseconds`*::
+
--
type: date

--

*`netflow.flow_start_nanoseconds`*::
+
--
type: date

--

*`netflow.flow_end_nanoseconds`*::
+
--
type: date

--

*`netflow.flow_start_delta_microseconds`*::
+
--
type: long

--

*`netflow.flow_end_delta_microseconds`*::
+
--
type: long

--

*`netflow.system_init_time_milliseconds`*::
+
--
type: date

--

*`netflow.flow_duration_milliseconds`*::
+
--
type: long

--

*`netflow.flow_duration_microseconds`*::
+
--
type: long

--

*`netflow.observed_flow_total_count`*::
+
--
type: long

--

*`netflow.ignored_packet_total_count`*::
+
--
type: long

--

*`netflow.ignored_octet_total_count`*::
+
--
type: long

--

*`netflow.not_sent_flow_total_count`*::
+
--
type: long

--

*`netflow.not_sent_packet_total_count`*::
+
--
type: long

--

*`netflow.not_sent_octet_total_count`*::
+
--
type: long

--

*`netflow.destination_ipv6_prefix`*::
+
--
type: ip

--

*`netflow.source_ipv6_prefix`*::
+
--
type: ip

--

*`netflow.post_octet_total_count`*::
+
--
type: long

--

*`netflow.post_packet_total_count`*::
+
--
type: long

--

*`netflow.flow_key_indicator`*::
+
--
type: long

--

*`netflow.post_mcast_packet_total_count`*::
+
--
type: long

--

*`netflow.post_mcast_octet_total_count`*::
+
--
type: long

--

*`netflow.icmp_type_ipv4`*::
+
--
type: short

--

*`netflow.icmp_code_ipv4`*::
+
--
type: short

--

*`netflow.icmp_type_ipv6`*::
+
--
type: short

--

*`netflow.icmp_code_ipv6`*::
+
--
type: short

--

*`netflow.udp_source_port`*::
+
--
type: integer

--

*`netflow.udp_destination_port`*::
+
--
type: integer

--

*`netflow.tcp_source_port`*::
+
--
type: integer

--

*`netflow.tcp_destination_port`*::
+
--
type: integer

--

*`netflow.tcp_sequence_number`*::
+
--
type: long

--

*`netflow.tcp_acknowledgement_number`*::
+
--
type: long

--

*`netflow.tcp_window_size`*::
+
--
type: integer

--

*`netflow.tcp_urgent_pointer`*::
+
--
type: integer

--

*`netflow.tcp_header_length`*::
+
--
type: short

--

*`netflow.ip_header_length`*::
+
--
type: short

--

*`netflow.total_length_ipv4`*::
+
--
type: integer

--

*`netflow.payload_length_ipv6`*::
+
--
type: integer

--

*`netflow.ip_ttl`*::
+
--
type: short

--

*`netflow.next_header_ipv6`*::
+
--
type: short

--

*`netflow.mpls_payload_length`*::
+
--
type: long

--

*`netflow.ip_diff_serv_code_point`*::
+
--
type: short

--

*`netflow.ip_precedence`*::
+
--
type: short

--

*`netflow.fragment_flags`*::
+
--
type: short

--

*`netflow.octet_delta_sum_of_squares`*::
+
--
type: long

--

*`netflow.octet_total_sum_of_squares`*::
+
--
type: long

--

*`netflow.mpls_top_label_ttl`*::
+
--
type: short

--

*`netflow.mpls_label_stack_length`*::
+
--
type: long

--

*`netflow.mpls_label_stack_depth`*::
+
--
type: long

--

*`netflow.mpls_top_label_exp`*::
+
--
type: short

--

*`netflow.ip_payload_length`*::
+
--
type: long

--

*`netflow.udp_message_length`*::
+
--
type: integer

--

*`netflow.is_multicast`*::
+
--
type: short

--

*`netflow.ipv4_ihl`*::
+
--
type: short

--

*`netflow.ipv4_options`*::
+
--
type: long

--

*`netflow.tcp_options`*::
+
--
type: long

--

*`netflow.padding_octets`*::
+
--
type: short

--

*`netflow.collector_ipv4_address`*::
+
--
type: ip

--

*`netflow.collector_ipv6_address`*::
+
--
type: ip

--

*`netflow.export_interface`*::
+
--
type: long

--

*`netflow.export_protocol_version`*::
+
--
type: short

--

*`netflow.export_transport_protocol`*::
+
--
type: short

--

*`netflow.collector_transport_port`*::
+
--
type: integer

--

*`netflow.exporter_transport_port`*::
+
--
type: integer

--

*`netflow.tcp_syn_total_count`*::
+
--
type: long

--

*`netflow.tcp_fin_total_count`*::
+
--
type: long

--

*`netflow.tcp_rst_total_count`*::
+
--
type: long

--

*`netflow.tcp_psh_total_count`*::
+
--
type: long

--

*`netflow.tcp_ack_total_count`*::
+
--
type: long

--

*`netflow.tcp_urg_total_count`*::
+
--
type: long

--

*`netflow.ip_total_length`*::
+
--
type: long

--

*`netflow.post_nat_source_ipv4_address`*::
+
--
type: ip

--

*`netflow.post_nat_destination_ipv4_address`*::
+
--
type: ip

--

*`netflow.post_napt_source_transport_port`*::
+
--
type: integer

--

*`netflow.post_napt_destination_transport_port`*::
+
--
type: integer

--

*`netflow.nat_originating_address_realm`*::
+
--
type: short

--

*`netflow.nat_event`*::
+
--
type: short

--

*`netflow.initiator_octets`*::
+
--
type: long

--

*`netflow.responder_octets`*::
+
--
type: long

--

*`netflow.firewall_event`*::
+
--
type: short

--

*`netflow.ingress_vrfid`*::
+
--
type: long

--

*`netflow.egress_vrfid`*::
+
--
type: long

--

*`netflow.vr_fname`*::
+
--
type: keyword

--

*`netflow.post_mpls_top_label_exp`*::
+
--
type: short

--

*`netflow.tcp_window_scale`*::
+
--
type: integer

--

*`netflow.biflow_direction`*::
+
--
type: short

--

*`netflow.ethernet_header_length`*::
+
--
type: short

--

*`netflow.ethernet_payload_length`*::
+
--
type: integer

--

*`netflow.ethernet_total_length`*::
+
--
type: integer

--

*`netflow.dot1q_vlan_id`*::
+
--
type: integer

--

*`netflow.dot1q_priority`*::
+
--
type: short

--

*`netflow.dot1q_customer_vlan_id`*::
+
--
type: integer

--

*`netflow.dot1q_customer_priority`*::
+
--
type: short

--

*`netflow.metro_evc_id`*::
+
--
type: keyword

--

*`netflow.metro_evc_type`*::
+
--
type: short

--

*`netflow.pseudo_wire_id`*::
+
--
type: long

--

*`netflow.pseudo_wire_type`*::
+
--
type: integer

--

*`netflow.pseudo_wire_control_word`*::
+
--
type: long

--

*`netflow.ingress_physical_interface`*::
+
--
type: long

--

*`netflow.egress_physical_interface`*::
+
--
type: long

--

*`netflow.post_dot1q_vlan_id`*::
+
--
type: integer

--

*`netflow.post_dot1q_customer_vlan_id`*::
+
--
type: integer

--

*`netflow.ethernet_type`*::
+
--
type: integer

--

*`netflow.post_ip_precedence`*::
+
--
type: short

--

*`netflow.collection_time_milliseconds`*::
+
--
type: date

--

*`netflow.export_sctp_stream_id`*::
+
--
type: integer

--

*`netflow.max_export_seconds`*::
+
--
type: date

--

*`netflow.max_flow_end_seconds`*::
+
--
type: date

--

*`netflow.message_md5_checksum`*::
+
--
type: short

--

*`netflow.message_scope`*::
+
--
type: short

--

*`netflow.min_export_seconds`*::
+
--
type: date

--

*`netflow.min_flow_start_seconds`*::
+
--
type: date

--

*`netflow.opaque_octets`*::
+
--
type: short

--

*`netflow.session_scope`*::
+
--
type: short

--

*`netflow.max_flow_end_microseconds`*::
+
--
type: date

--

*`netflow.max_flow_end_milliseconds`*::
+
--
type: date

--

*`netflow.max_flow_end_nanoseconds`*::
+
--
type: date

--

*`netflow.min_flow_start_microseconds`*::
+
--
type: date

--

*`netflow.min_flow_start_milliseconds`*::
+
--
type: date

--

*`netflow.min_flow_start_nanoseconds`*::
+
--
type: date

--

*`netflow.collector_certificate`*::
+
--
type: short

--

*`netflow.exporter_certificate`*::
+
--
type: short

--

*`netflow.data_records_reliability`*::
+
--
type: boolean

--

*`netflow.observation_point_type`*::
+
--
type: short

--

*`netflow.new_connection_delta_count`*::
+
--
type: long

--

*`netflow.connection_sum_duration_seconds`*::
+
--
type: long

--

*`netflow.connection_transaction_id`*::
+
--
type: long

--

*`netflow.post_nat_source_ipv6_address`*::
+
--
type: ip

--

*`netflow.post_nat_destination_ipv6_address`*::
+
--
type: ip

--

*`netflow.nat_pool_id`*::
+
--
type: long

--

*`netflow.nat_pool_name`*::
+
--
type: keyword

--

*`netflow.anonymization_flags`*::
+
--
type: integer

--

*`netflow.anonymization_technique`*::
+
--
type: integer

--

*`netflow.information_element_index`*::
+
--
type: integer

--

*`netflow.p2p_technology`*::
+
--
type: keyword

--

*`netflow.tunnel_technology`*::
+
--
type: keyword

--

*`netflow.encrypted_technology`*::
+
--
type: keyword

--

*`netflow.bgp_validity_state`*::
+
--
type: short

--

*`netflow.ip_sec_spi`*::
+
--
type: long

--

*`netflow.gre_key`*::
+
--
type: long

--

*`netflow.nat_type`*::
+
--
type: short

--

*`netflow.initiator_packets`*::
+
--
type: long

--

*`netflow.responder_packets`*::
+
--
type: long

--

*`netflow.observation_domain_name`*::
+
--
type: keyword

--

*`netflow.selection_sequence_id`*::
+
--
type: long

--

*`netflow.selector_id`*::
+
--
type: long

--

*`netflow.information_element_id`*::
+
--
type: integer

--

*`netflow.selector_algorithm`*::
+
--
type: integer

--

*`netflow.sampling_packet_interval`*::
+
--
type: long

--

*`netflow.sampling_packet_space`*::
+
--
type: long

--

*`netflow.sampling_time_interval`*::
+
--
type: long

--

*`netflow.sampling_time_space`*::
+
--
type: long

--

*`netflow.sampling_size`*::
+
--
type: long

--

*`netflow.sampling_population`*::
+
--
type: long

--

*`netflow.sampling_probability`*::
+
--
type: double

--

*`netflow.data_link_frame_size`*::
+
--
type: integer

--

*`netflow.ip_header_packet_section`*::
+
--
type: short

--

*`netflow.ip_payload_packet_section`*::
+
--
type: short

--

*`netflow.data_link_frame_section`*::
+
--
type: short

--

*`netflow.mpls_label_stack_section`*::
+
--
type: short

--

*`netflow.mpls_payload_packet_section`*::
+
--
type: short

--

*`netflow.selector_id_total_pkts_observed`*::
+
--
type: long

--

*`netflow.selector_id_total_pkts_selected`*::
+
--
type: long

--

*`netflow.absolute_error`*::
+
--
type: double

--

*`netflow.relative_error`*::
+
--
type: double

--

*`netflow.observation_time_seconds`*::
+
--
type: date

--

*`netflow.observation_time_milliseconds`*::
+
--
type: date

--

*`netflow.observation_time_microseconds`*::
+
--
type: date

--

*`netflow.observation_time_nanoseconds`*::
+
--
type: date

--

*`netflow.digest_hash_value`*::
+
--
type: long

--

*`netflow.hash_ip_payload_offset`*::
+
--
type: long

--

*`netflow.hash_ip_payload_size`*::
+
--
type: long

--

*`netflow.hash_output_range_min`*::
+
--
type: long

--

*`netflow.hash_output_range_max`*::
+
--
type: long

--

*`netflow.hash_selected_range_min`*::
+
--
type: long

--

*`netflow.hash_selected_range_max`*::
+
--
type: long

--

*`netflow.hash_digest_output`*::
+
--
type: boolean

--

*`netflow.hash_initialiser_value`*::
+
--
type: long

--

*`netflow.selector_name`*::
+
--
type: keyword

--

*`netflow.upper_ci_limit`*::
+
--
type: double

--

*`netflow.lower_ci_limit`*::
+
--
type: double

--

*`netflow.confidence_level`*::
+
--
type: double

--

*`netflow.information_element_data_type`*::
+
--
type: short

--

*`netflow.information_element_description`*::
+
--
type: keyword

--

*`netflow.information_element_name`*::
+
--
type: keyword

--

*`netflow.information_element_range_begin`*::
+
--
type: long

--

*`netflow.information_element_range_end`*::
+
--
type: long

--

*`netflow.information_element_semantics`*::
+
--
type: short

--

*`netflow.information_element_units`*::
+
--
type: integer

--

*`netflow.private_enterprise_number`*::
+
--
type: long

--

*`netflow.virtual_station_interface_id`*::
+
--
type: short

--

*`netflow.virtual_station_interface_name`*::
+
--
type: keyword

--

*`netflow.virtual_station_uuid`*::
+
--
type: short

--

*`netflow.virtual_station_name`*::
+
--
type: keyword

--

*`netflow.layer2_segment_id`*::
+
--
type: long

--

*`netflow.layer2_octet_delta_count`*::
+
--
type: long

--

*`netflow.layer2_octet_total_count`*::
+
--
type: long

--

*`netflow.ingress_unicast_packet_total_count`*::
+
--
type: long

--

*`netflow.ingress_multicast_packet_total_count`*::
+
--
type: long

--

*`netflow.ingress_broadcast_packet_total_count`*::
+
--
type: long

--

*`netflow.egress_unicast_packet_total_count`*::
+
--
type: long

--

*`netflow.egress_broadcast_packet_total_count`*::
+
--
type: long

--

*`netflow.monitoring_interval_start_milli_seconds`*::
+
--
type: date

--

*`netflow.monitoring_interval_end_milli_seconds`*::
+
--
type: date

--

*`netflow.port_range_start`*::
+
--
type: integer

--

*`netflow.port_range_end`*::
+
--
type: integer

--

*`netflow.port_range_step_size`*::
+
--
type: integer

--

*`netflow.port_range_num_ports`*::
+
--
type: integer

--

*`netflow.sta_mac_address`*::
+
--
type: keyword

--

*`netflow.sta_ipv4_address`*::
+
--
type: ip

--

*`netflow.wtp_mac_address`*::
+
--
type: keyword

--

*`netflow.ingress_interface_type`*::
+
--
type: long

--

*`netflow.egress_interface_type`*::
+
--
type: long

--

*`netflow.rtp_sequence_number`*::
+
--
type: integer

--

*`netflow.user_name`*::
+
--
type: keyword

--

*`netflow.application_category_name`*::
+
--
type: keyword

--

*`netflow.application_sub_category_name`*::
+
--
type: keyword

--

*`netflow.application_group_name`*::
+
--
type: keyword

--

*`netflow.original_flows_present`*::
+
--
type: long

--

*`netflow.original_flows_initiated`*::
+
--
type: long

--

*`netflow.original_flows_completed`*::
+
--
type: long

--

*`netflow.distinct_count_of_source_ip_address`*::
+
--
type: long

--

*`netflow.distinct_count_of_destination_ip_address`*::
+
--
type: long

--

*`netflow.distinct_count_of_source_ipv4_address`*::
+
--
type: long

--

*`netflow.distinct_count_of_destination_ipv4_address`*::
+
--
type: long

--

*`netflow.distinct_count_of_source_ipv6_address`*::
+
--
type: long

--

*`netflow.distinct_count_of_destination_ipv6_address`*::
+
--
type: long

--

*`netflow.value_distribution_method`*::
+
--
type: short

--

*`netflow.rfc3550_jitter_milliseconds`*::
+
--
type: long

--

*`netflow.rfc3550_jitter_microseconds`*::
+
--
type: long

--

*`netflow.rfc3550_jitter_nanoseconds`*::
+
--
type: long

--

*`netflow.dot1q_dei`*::
+
--
type: boolean

--

*`netflow.dot1q_customer_dei`*::
+
--
type: boolean

--

*`netflow.flow_selector_algorithm`*::
+
--
type: integer

--

*`netflow.flow_selected_octet_delta_count`*::
+
--
type: long

--

*`netflow.flow_selected_packet_delta_count`*::
+
--
type: long

--

*`netflow.flow_selected_flow_delta_count`*::
+
--
type: long

--

*`netflow.selector_id_total_flows_observed`*::
+
--
type: long

--

*`netflow.selector_id_total_flows_selected`*::
+
--
type: long

--

*`netflow.sampling_flow_interval`*::
+
--
type: long

--

*`netflow.sampling_flow_spacing`*::
+
--
type: long

--

*`netflow.flow_sampling_time_interval`*::
+
--
type: long

--

*`netflow.flow_sampling_time_spacing`*::
+
--
type: long

--

*`netflow.hash_flow_domain`*::
+
--
type: integer

--

*`netflow.transport_octet_delta_count`*::
+
--
type: long

--

*`netflow.transport_packet_delta_count`*::
+
--
type: long

--

*`netflow.original_exporter_ipv4_address`*::
+
--
type: ip

--

*`netflow.original_exporter_ipv6_address`*::
+
--
type: ip

--

*`netflow.original_observation_domain_id`*::
+
--
type: long

--

*`netflow.intermediate_process_id`*::
+
--
type: long

--

*`netflow.ignored_data_record_total_count`*::
+
--
type: long

--

*`netflow.data_link_frame_type`*::
+
--
type: integer

--

*`netflow.section_offset`*::
+
--
type: integer

--

*`netflow.section_exported_octets`*::
+
--
type: integer

--

*`netflow.dot1q_service_instance_tag`*::
+
--
type: short

--

*`netflow.dot1q_service_instance_id`*::
+
--
type: long

--

*`netflow.dot1q_service_instance_priority`*::
+
--
type: short

--

*`netflow.dot1q_customer_source_mac_address`*::
+
--
type: keyword

--

*`netflow.dot1q_customer_destination_mac_address`*::
+
--
type: keyword

--

*`netflow.post_layer2_octet_delta_count`*::
+
--
type: long

--

*`netflow.post_mcast_layer2_octet_delta_count`*::
+
--
type: long

--

*`netflow.post_layer2_octet_total_count`*::
+
--
type: long

--

*`netflow.post_mcast_layer2_octet_total_count`*::
+
--
type: long

--

*`netflow.minimum_layer2_total_length`*::
+
--
type: long

--

*`netflow.maximum_layer2_total_length`*::
+
--
type: long

--

*`netflow.dropped_layer2_octet_delta_count`*::
+
--
type: long

--

*`netflow.dropped_layer2_octet_total_count`*::
+
--
type: long

--

*`netflow.ignored_layer2_octet_total_count`*::
+
--
type: long

--

*`netflow.not_sent_layer2_octet_total_count`*::
+
--
type: long

--

*`netflow.layer2_octet_delta_sum_of_squares`*::
+
--
type: long

--

*`netflow.layer2_octet_total_sum_of_squares`*::
+
--
type: long

--

*`netflow.layer2_frame_delta_count`*::
+
--
type: long

--

*`netflow.layer2_frame_total_count`*::
+
--
type: long

--

*`netflow.pseudo_wire_destination_ipv4_address`*::
+
--
type: ip

--

*`netflow.ignored_layer2_frame_total_count`*::
+
--
type: long

--

*`netflow.mib_object_value_integer`*::
+
--
type: integer

--

*`netflow.mib_object_value_octet_string`*::
+
--
type: short

--

*`netflow.mib_object_value_oid`*::
+
--
type: short

--

*`netflow.mib_object_value_bits`*::
+
--
type: short

--

*`netflow.mib_object_value_ip_address`*::
+
--
type: ip

--

*`netflow.mib_object_value_counter`*::
+
--
type: long

--

*`netflow.mib_object_value_gauge`*::
+
--
type: long

--

*`netflow.mib_object_value_time_ticks`*::
+
--
type: long

--

*`netflow.mib_object_value_unsigned`*::
+
--
type: long

--

*`netflow.mib_object_identifier`*::
+
--
type: short

--

*`netflow.mib_sub_identifier`*::
+
--
type: long

--

*`netflow.mib_index_indicator`*::
+
--
type: long

--

*`netflow.mib_capture_time_semantics`*::
+
--
type: short

--

*`netflow.mib_context_engine_id`*::
+
--
type: short

--

*`netflow.mib_context_name`*::
+
--
type: keyword

--

*`netflow.mib_object_name`*::
+
--
type: keyword

--

*`netflow.mib_object_description`*::
+
--
type: keyword

--

*`netflow.mib_object_syntax`*::
+
--
type: keyword

--

*`netflow.mib_module_name`*::
+
--
type: keyword

--

*`netflow.mobile_imsi`*::
+
--
type: keyword

--

*`netflow.mobile_msisdn`*::
+
--
type: keyword

--

*`netflow.http_status_code`*::
+
--
type: integer

--

*`netflow.source_transport_ports_limit`*::
+
--
type: integer

--

*`netflow.http_request_method`*::
+
--
type: keyword

--

*`netflow.http_request_host`*::
+
--
type: keyword

--

*`netflow.http_request_target`*::
+
--
type: keyword

--

*`netflow.http_message_version`*::
+
--
type: keyword

--

*`netflow.nat_instance_id`*::
+
--
type: long

--

*`netflow.internal_address_realm`*::
+
--
type: short

--

*`netflow.external_address_realm`*::
+
--
type: short

--

*`netflow.nat_quota_exceeded_event`*::
+
--
type: long

--

*`netflow.nat_threshold_event`*::
+
--
type: long

--

*`netflow.http_user_agent`*::
+
--
type: keyword

--

*`netflow.http_content_type`*::
+
--
type: keyword

--

*`netflow.http_reason_phrase`*::
+
--
type: keyword

--

*`netflow.max_session_entries`*::
+
--
type: long

--

*`netflow.max_bib_entries`*::
+
--
type: long

--

*`netflow.max_entries_per_user`*::
+
--
type: long

--

*`netflow.max_subscribers`*::
+
--
type: long

--

*`netflow.max_fragments_pending_reassembly`*::
+
--
type: long

--

*`netflow.address_pool_high_threshold`*::
+
--
type: long

--

*`netflow.address_pool_low_threshold`*::
+
--
type: long

--

*`netflow.address_port_mapping_high_threshold`*::
+
--
type: long

--

*`netflow.address_port_mapping_low_threshold`*::
+
--
type: long

--

*`netflow.address_port_mapping_per_user_high_threshold`*::
+
--
type: long

--

*`netflow.global_address_mapping_high_threshold`*::
+
--
type: long

--

*`netflow.vpn_identifier`*::
+
--
type: short

--

[[exported-fields-netscout]]
== Arbor Peakflow SP fields

netscout fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-nginx]]
== Nginx fields

Module for parsing the Nginx log files.



[float]
=== nginx

Fields from the Nginx log files.



[float]
=== access

Contains fields for the Nginx access logs.



*`nginx.access.remote_ip_list`*::
+
--
An array of remote IP addresses. It is a list because it is common to include, besides the client IP address, IP addresses from headers like `X-Forwarded-For`. Real source IP is restored to `source.ip`.


type: array

--

*`nginx.access.body_sent.bytes`*::
+
--
type: alias

alias to: http.response.body.bytes

--

*`nginx.access.user_name`*::
+
--
type: alias

alias to: user.name

--

*`nginx.access.method`*::
+
--
type: alias

alias to: http.request.method

--

*`nginx.access.url`*::
+
--
type: alias

alias to: url.original

--

*`nginx.access.http_version`*::
+
--
type: alias

alias to: http.version

--

*`nginx.access.response_code`*::
+
--
type: alias

alias to: http.response.status_code

--

*`nginx.access.referrer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`nginx.access.agent`*::
+
--
type: alias

alias to: user_agent.original

--


*`nginx.access.user_agent.device`*::
+
--
type: alias

alias to: user_agent.device.name

--

*`nginx.access.user_agent.name`*::
+
--
type: alias

alias to: user_agent.name

--

*`nginx.access.user_agent.os`*::
+
--
type: alias

alias to: user_agent.os.full_name

--

*`nginx.access.user_agent.os_name`*::
+
--
type: alias

alias to: user_agent.os.name

--

*`nginx.access.user_agent.original`*::
+
--
type: alias

alias to: user_agent.original

--


*`nginx.access.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`nginx.access.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`nginx.access.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`nginx.access.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`nginx.access.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`nginx.access.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

[float]
=== error

Contains fields for the Nginx error logs.



*`nginx.error.connection_id`*::
+
--
Connection identifier.


type: long

--

*`nginx.error.level`*::
+
--
type: alias

alias to: log.level

--

*`nginx.error.pid`*::
+
--
type: alias

alias to: process.pid

--

*`nginx.error.tid`*::
+
--
type: alias

alias to: process.thread.id

--

*`nginx.error.message`*::
+
--
type: alias

alias to: message

--

[float]
=== ingress_controller

Contains fields for the Ingress Nginx controller access logs.



*`nginx.ingress_controller.remote_ip_list`*::
+
--
An array of remote IP addresses. It is a list because it is common to include, besides the client IP address, IP addresses from headers like `X-Forwarded-For`. Real source IP is restored to `source.ip`.


type: array

--

*`nginx.ingress_controller.upstream_address_list`*::
+
--
An array of the upstream addresses. It is a list because it is common that several upstream servers were contacted during request processing.


type: keyword

--

*`nginx.ingress_controller.upstream.response.length_list`*::
+
--
An array of upstream response lengths. It is a list because it is common that several upstream servers were contacted during request processing.


type: keyword

--

*`nginx.ingress_controller.upstream.response.time_list`*::
+
--
An array of upstream response durations. It is a list because it is common that several upstream servers were contacted during request processing.


type: keyword

--

*`nginx.ingress_controller.upstream.response.status_code_list`*::
+
--
An array of upstream response status codes. It is a list because it is common that several upstream servers were contacted during request processing.


type: keyword

--

*`nginx.ingress_controller.http.request.length`*::
+
--
The request length (including request line, header, and request body)


type: long

format: bytes

--

*`nginx.ingress_controller.http.request.time`*::
+
--
Time elapsed since the first bytes were read from the client


type: double

format: duration

--

*`nginx.ingress_controller.upstream.name`*::
+
--
The name of the upstream.


type: keyword

--

*`nginx.ingress_controller.upstream.alternative_name`*::
+
--
The name of the alternative upstream.


type: keyword

--

*`nginx.ingress_controller.upstream.response.length`*::
+
--
The length of the response obtained from the upstream server. If several servers were contacted during request process, the summary of the multiple response lengths is stored.


type: long

format: bytes

--

*`nginx.ingress_controller.upstream.response.time`*::
+
--
The time spent on receiving the response from the upstream as seconds with millisecond resolution. If several servers were contacted during request process, the summary of the multiple response times is stored.


type: double

format: duration

--

*`nginx.ingress_controller.upstream.response.status_code`*::
+
--
The status code of the response obtained from the upstream server. If several servers were contacted during request process, only the status code of the response from the last one is stored in this field.


type: long

--

*`nginx.ingress_controller.upstream.ip`*::
+
--
The IP address of the upstream server. If several servers were contacted during request process, only the last one is stored in this field.


type: ip

--

*`nginx.ingress_controller.upstream.port`*::
+
--
The port of the upstream server. If several servers were contacted during request process, only the last one is stored in this field.


type: long

--

*`nginx.ingress_controller.http.request.id`*::
+
--
The randomly generated ID of the request


type: keyword

--

*`nginx.ingress_controller.body_sent.bytes`*::
+
--
type: alias

alias to: http.response.body.bytes

--

*`nginx.ingress_controller.user_name`*::
+
--
type: alias

alias to: user.name

--

*`nginx.ingress_controller.method`*::
+
--
type: alias

alias to: http.request.method

--

*`nginx.ingress_controller.url`*::
+
--
type: alias

alias to: url.original

--

*`nginx.ingress_controller.http_version`*::
+
--
type: alias

alias to: http.version

--

*`nginx.ingress_controller.response_code`*::
+
--
type: alias

alias to: http.response.status_code

--

*`nginx.ingress_controller.referrer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`nginx.ingress_controller.agent`*::
+
--
type: alias

alias to: user_agent.original

--


*`nginx.ingress_controller.user_agent.device`*::
+
--
type: alias

alias to: user_agent.device.name

--

*`nginx.ingress_controller.user_agent.name`*::
+
--
type: alias

alias to: user_agent.name

--

*`nginx.ingress_controller.user_agent.os`*::
+
--
type: alias

alias to: user_agent.os.full_name

--

*`nginx.ingress_controller.user_agent.os_name`*::
+
--
type: alias

alias to: user_agent.os.name

--

*`nginx.ingress_controller.user_agent.original`*::
+
--
type: alias

alias to: user_agent.original

--


*`nginx.ingress_controller.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`nginx.ingress_controller.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`nginx.ingress_controller.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`nginx.ingress_controller.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`nginx.ingress_controller.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`nginx.ingress_controller.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

[[exported-fields-o365]]
== Office 365 fields

Module for handling logs from Office 365.



[float]
=== o365.audit

Fields from Office 365 Management API audit logs.



*`o365.audit.Actor`*::
+
--
type: array

--

*`o365.audit.ActorContextId`*::
+
--
type: keyword

--

*`o365.audit.ActorIpAddress`*::
+
--
type: keyword

--

*`o365.audit.ActorUserId`*::
+
--
type: keyword

--

*`o365.audit.ActorYammerUserId`*::
+
--
type: keyword

--

*`o365.audit.AlertEntityId`*::
+
--
type: keyword

--

*`o365.audit.AlertId`*::
+
--
type: keyword

--

*`o365.audit.AlertLinks`*::
+
--
type: array

--

*`o365.audit.AlertType`*::
+
--
type: keyword

--

*`o365.audit.AppId`*::
+
--
type: keyword

--

*`o365.audit.ApplicationDisplayName`*::
+
--
type: keyword

--

*`o365.audit.ApplicationId`*::
+
--
type: keyword

--

*`o365.audit.AzureActiveDirectoryEventType`*::
+
--
type: keyword

--

*`o365.audit.ExchangeMetaData.*`*::
+
--
type: object

--

*`o365.audit.Category`*::
+
--
type: keyword

--

*`o365.audit.ClientAppId`*::
+
--
type: keyword

--

*`o365.audit.ClientInfoString`*::
+
--
type: keyword

--

*`o365.audit.ClientIP`*::
+
--
type: keyword

--

*`o365.audit.ClientIPAddress`*::
+
--
type: keyword

--

*`o365.audit.Comments`*::
+
--
type: text

--

*`o365.audit.CorrelationId`*::
+
--
type: keyword

--

*`o365.audit.CreationTime`*::
+
--
type: keyword

--

*`o365.audit.CustomUniqueId`*::
+
--
type: keyword

--

*`o365.audit.Data`*::
+
--
type: keyword

--

*`o365.audit.DataType`*::
+
--
type: keyword

--

*`o365.audit.EntityType`*::
+
--
type: keyword

--

*`o365.audit.EventData`*::
+
--
type: keyword

--

*`o365.audit.EventSource`*::
+
--
type: keyword

--

*`o365.audit.ExceptionInfo.*`*::
+
--
type: object

--

*`o365.audit.ExtendedProperties.*`*::
+
--
type: object

--

*`o365.audit.ExternalAccess`*::
+
--
type: keyword

--

*`o365.audit.GroupName`*::
+
--
type: keyword

--

*`o365.audit.Id`*::
+
--
type: keyword

--

*`o365.audit.ImplicitShare`*::
+
--
type: keyword

--

*`o365.audit.IncidentId`*::
+
--
type: keyword

--

*`o365.audit.InternalLogonType`*::
+
--
type: keyword

--

*`o365.audit.InterSystemsId`*::
+
--
type: keyword

--

*`o365.audit.IntraSystemId`*::
+
--
type: keyword

--

*`o365.audit.Item.*`*::
+
--
type: object

--

*`o365.audit.Item.*.*`*::
+
--
type: object

--

*`o365.audit.ItemName`*::
+
--
type: keyword

--

*`o365.audit.ItemType`*::
+
--
type: keyword

--

*`o365.audit.ListId`*::
+
--
type: keyword

--

*`o365.audit.ListItemUniqueId`*::
+
--
type: keyword

--

*`o365.audit.LogonError`*::
+
--
type: keyword

--

*`o365.audit.LogonType`*::
+
--
type: keyword

--

*`o365.audit.LogonUserSid`*::
+
--
type: keyword

--

*`o365.audit.MailboxGuid`*::
+
--
type: keyword

--

*`o365.audit.MailboxOwnerMasterAccountSid`*::
+
--
type: keyword

--

*`o365.audit.MailboxOwnerSid`*::
+
--
type: keyword

--

*`o365.audit.MailboxOwnerUPN`*::
+
--
type: keyword

--

*`o365.audit.Members`*::
+
--
type: array

--

*`o365.audit.Members.*`*::
+
--
type: object

--

*`o365.audit.ModifiedProperties.*.*`*::
+
--
type: object

--

*`o365.audit.Name`*::
+
--
type: keyword

--

*`o365.audit.ObjectId`*::
+
--
type: keyword

--

*`o365.audit.Operation`*::
+
--
type: keyword

--

*`o365.audit.OrganizationId`*::
+
--
type: keyword

--

*`o365.audit.OrganizationName`*::
+
--
type: keyword

--

*`o365.audit.OriginatingServer`*::
+
--
type: keyword

--

*`o365.audit.Parameters.*`*::
+
--
type: object

--

*`o365.audit.PolicyDetails`*::
+
--
type: array

--

*`o365.audit.PolicyId`*::
+
--
type: keyword

--

*`o365.audit.RecordType`*::
+
--
type: keyword

--

*`o365.audit.ResultStatus`*::
+
--
type: keyword

--

*`o365.audit.SensitiveInfoDetectionIsIncluded`*::
+
--
type: keyword

--

*`o365.audit.SharePointMetaData.*`*::
+
--
type: object

--

*`o365.audit.SessionId`*::
+
--
type: keyword

--

*`o365.audit.Severity`*::
+
--
type: keyword

--

*`o365.audit.Site`*::
+
--
type: keyword

--

*`o365.audit.SiteUrl`*::
+
--
type: keyword

--

*`o365.audit.Source`*::
+
--
type: keyword

--

*`o365.audit.SourceFileExtension`*::
+
--
type: keyword

--

*`o365.audit.SourceFileName`*::
+
--
type: keyword

--

*`o365.audit.SourceRelativeUrl`*::
+
--
type: keyword

--

*`o365.audit.Status`*::
+
--
type: keyword

--

*`o365.audit.SupportTicketId`*::
+
--
type: keyword

--

*`o365.audit.Target`*::
+
--
type: array

--

*`o365.audit.TargetContextId`*::
+
--
type: keyword

--

*`o365.audit.TargetUserOrGroupName`*::
+
--
type: keyword

--

*`o365.audit.TargetUserOrGroupType`*::
+
--
type: keyword

--

*`o365.audit.TeamName`*::
+
--
type: keyword

--

*`o365.audit.TeamGuid`*::
+
--
type: keyword

--

*`o365.audit.UniqueSharingId`*::
+
--
type: keyword

--

*`o365.audit.UserAgent`*::
+
--
type: keyword

--

*`o365.audit.UserId`*::
+
--
type: keyword

--

*`o365.audit.UserKey`*::
+
--
type: keyword

--

*`o365.audit.UserType`*::
+
--
type: keyword

--

*`o365.audit.Version`*::
+
--
type: keyword

--

*`o365.audit.WebId`*::
+
--
type: keyword

--

*`o365.audit.Workload`*::
+
--
type: keyword

--

*`o365.audit.YammerNetworkId`*::
+
--
type: keyword

--

[[exported-fields-okta]]
== Okta fields

Module for handling system logs from Okta.



[float]
=== okta

Fields from Okta.



*`okta.uuid`*::
+
--
The unique identifier of the Okta LogEvent.


type: keyword

--

*`okta.event_type`*::
+
--
The type of the LogEvent.


type: keyword

--

*`okta.version`*::
+
--
The version of the LogEvent.


type: keyword

--

*`okta.severity`*::
+
--
The severity of the LogEvent. Must be one of DEBUG, INFO, WARN, or ERROR.


type: keyword

--

*`okta.display_message`*::
+
--
The display message of the LogEvent.


type: keyword

--

[float]
=== actor

Fields that let you store information of the actor for the LogEvent.



*`okta.actor.id`*::
+
--
Identifier of the actor.


type: keyword

--

*`okta.actor.type`*::
+
--
Type of the actor.


type: keyword

--

*`okta.actor.alternate_id`*::
+
--
Alternate identifier of the actor.


type: keyword

--

*`okta.actor.display_name`*::
+
--
Display name of the actor.


type: keyword

--

[float]
=== client

Fields that let you store information about the client of the actor.



*`okta.client.ip`*::
+
--
The IP address of the client.


type: ip

--

[float]
=== user_agent

Fields about the user agent information of the client.



*`okta.client.user_agent.raw_user_agent`*::
+
--
The raw informaton of the user agent.


type: keyword

--

*`okta.client.user_agent.os`*::
+
--
The OS informaton.


type: keyword

--

*`okta.client.user_agent.browser`*::
+
--
The browser informaton of the client.


type: keyword

--

*`okta.client.zone`*::
+
--
The zone information of the client.


type: keyword

--

*`okta.client.device`*::
+
--
The information of the client device.


type: keyword

--

*`okta.client.id`*::
+
--
The identifier of the client.


type: keyword

--

[float]
=== outcome

Fields that let you store information about the outcome.



*`okta.outcome.reason`*::
+
--
The reason of the outcome.


type: keyword

--

*`okta.outcome.result`*::
+
--
The result of the outcome. Must be one of: SUCCESS, FAILURE, SKIPPED, ALLOW, DENY, CHALLENGE, UNKNOWN.


type: keyword

--

*`okta.target`*::
+
--
The list of targets.


type: array

--

[float]
=== transaction

Fields that let you store information about related transaction.



*`okta.transaction.id`*::
+
--
Identifier of the transaction.


type: keyword

--

*`okta.transaction.type`*::
+
--
The type of transaction. Must be one of "WEB", "JOB".


type: keyword

--

[float]
=== debug_context

Fields that let you store information about the debug context.



[float]
=== debug_data

The debug data.



*`okta.debug_context.debug_data.device_fingerprint`*::
+
--
The fingerprint of the device.


type: keyword

--

*`okta.debug_context.debug_data.request_id`*::
+
--
The identifier of the request.


type: keyword

--

*`okta.debug_context.debug_data.request_uri`*::
+
--
The request URI.


type: keyword

--

*`okta.debug_context.debug_data.threat_suspected`*::
+
--
Threat suspected.


type: keyword

--

*`okta.debug_context.debug_data.url`*::
+
--
The URL.


type: keyword

--

[float]
=== authentication_context

Fields that let you store information about authentication context.



*`okta.authentication_context.authentication_provider`*::
+
--
The information about the authentication provider. Must be one of OKTA_AUTHENTICATION_PROVIDER, ACTIVE_DIRECTORY, LDAP, FEDERATION, SOCIAL, FACTOR_PROVIDER.


type: keyword

--

*`okta.authentication_context.authentication_step`*::
+
--
The authentication step.


type: integer

--

*`okta.authentication_context.credential_provider`*::
+
--
The information about credential provider. Must be one of OKTA_CREDENTIAL_PROVIDER, RSA, SYMANTEC, GOOGLE, DUO, YUBIKEY.


type: keyword

--

*`okta.authentication_context.credential_type`*::
+
--
The information about credential type. Must be one of OTP, SMS, PASSWORD, ASSERTION, IWA, EMAIL, OAUTH2, JWT, CERTIFICATE, PRE_SHARED_SYMMETRIC_KEY, OKTA_CLIENT_SESSION, DEVICE_UDID.


type: keyword

--

*`okta.authentication_context.issuer`*::
+
--
The information about the issuer.


type: array

--

*`okta.authentication_context.external_session_id`*::
+
--
The session identifer of the external session if any.


type: keyword

--

*`okta.authentication_context.interface`*::
+
--
The interface used. e.g., Outlook, Office365, wsTrust


type: keyword

--

[float]
=== security_context

Fields that let you store information about security context.



[float]
=== as

The autonomous system.



*`okta.security_context.as.number`*::
+
--
The AS number.


type: integer

--

[float]
=== organization

The organization that owns the AS number.



*`okta.security_context.as.organization.name`*::
+
--
The organization name.


type: keyword

--

*`okta.security_context.isp`*::
+
--
The Internet Service Provider.


type: keyword

--

*`okta.security_context.domain`*::
+
--
The domain name.


type: keyword

--

*`okta.security_context.is_proxy`*::
+
--
Whether it is a proxy or not.


type: boolean

--

[float]
=== request

Fields that let you store information about the request, in the form of list of ip_chain.



[float]
=== ip_chain

List of ip_chain objects.



*`okta.request.ip_chain.ip`*::
+
--
IP address.


type: ip

--

*`okta.request.ip_chain.version`*::
+
--
IP version. Must be one of V4, V6.


type: keyword

--

*`okta.request.ip_chain.source`*::
+
--
Source information.


type: keyword

--

[float]
=== geographical_context

Geographical information.



*`okta.request.ip_chain.geographical_context.city`*::
+
--
The city.

type: keyword

--

*`okta.request.ip_chain.geographical_context.state`*::
+
--
The state.

type: keyword

--

*`okta.request.ip_chain.geographical_context.postal_code`*::
+
--
The postal code.

type: keyword

--

*`okta.request.ip_chain.geographical_context.country`*::
+
--
The country.

type: keyword

--

*`okta.request.ip_chain.geographical_context.geolocation`*::
+
--
Geolocation information.


type: geo_point

--

[[exported-fields-oracle]]
== Oracle fields

Oracle Module



[float]
=== oracle

Fields from Oracle logs.



[float]
=== database_audit

Module for parsing Oracle Database audit logs



*`oracle.database_audit.status`*::
+
--
Database Audit Status.


type: keyword

--

*`oracle.database_audit.session_id`*::
+
--
Indicates the audit session ID number.


type: keyword

--

*`oracle.database_audit.client.terminal`*::
+
--
If available, the client terminal type, for example "pty".


type: keyword

--

*`oracle.database_audit.client.address`*::
+
--
The IP Address or Domain used by the client.


type: keyword

--

*`oracle.database_audit.client.user`*::
+
--
The user running the client or connection to the database.


type: keyword

--

*`oracle.database_audit.database.user`*::
+
--
The database user used to authenticate.


type: keyword

--

*`oracle.database_audit.privilege`*::
+
--
The privilege group related to the database user.


type: keyword

--

*`oracle.database_audit.entry.id`*::
+
--
Indicates the current audit entry number, assigned to each audit trail record. The audit entry.id sequence number is shared between fine-grained audit records and regular audit records.


type: keyword

--

*`oracle.database_audit.database.host`*::
+
--
Client host machine name.


type: keyword

--

*`oracle.database_audit.action`*::
+
--
The action performed during the audit event. This could for example be the raw query.


type: keyword

--

*`oracle.database_audit.action_number`*::
+
--
Action is a numeric value representing the action the user performed. The corresponding name of the action type is in the AUDIT_ACTIONS table. For example, action 100 refers to LOGON.


type: keyword

--

*`oracle.database_audit.database.id`*::
+
--
Database identifier calculated when the database is created. It corresponds to the DBID column of the V$DATABASE data dictionary view.


type: keyword

--

*`oracle.database_audit.length`*::
+
--
Refers to the total number of bytes used in this audit record. This number includes the trailing newline bytes (\n), if any, at the end of the audit record.


type: long

--

[[exported-fields-osquery]]
== Osquery fields

Fields exported by the `osquery` module



[float]
=== osquery




[float]
=== result

Common fields exported by the result metricset.



*`osquery.result.name`*::
+
--
The name of the query that generated this event.


type: keyword

--

*`osquery.result.action`*::
+
--
For incremental data, marks whether the entry was added or removed. It can be one of "added", "removed", or "snapshot".


type: keyword

--

*`osquery.result.host_identifier`*::
+
--
The identifier for the host on which the osquery agent is running. Normally the hostname.


type: keyword

--

*`osquery.result.unix_time`*::
+
--
Unix timestamp of the event, in seconds since the epoch. Used for computing the `@timestamp` column.


type: long

--

*`osquery.result.calendar_time`*::
+
--
String representation of the collection time, as formatted by osquery.


type: keyword

--

[[exported-fields-panw]]
== panw fields

Module for Palo Alto Networks (PAN-OS)



[float]
=== panw

Fields from the panw module.



[float]
=== panos

Fields for the Palo Alto Networks PAN-OS logs.



*`panw.panos.ruleset`*::
+
--
Name of the rule that matched this session.


type: keyword

--

[float]
=== source

Fields to extend the top-level source object.



*`panw.panos.source.zone`*::
+
--
Source zone for this session.


type: keyword

--

*`panw.panos.source.interface`*::
+
--
Source interface for this session.


type: keyword

--

[float]
=== nat

Post-NAT source address, if source NAT is performed.



*`panw.panos.source.nat.ip`*::
+
--
Post-NAT source IP.


type: ip

--

*`panw.panos.source.nat.port`*::
+
--
Post-NAT source port.


type: long

--

[float]
=== destination

Fields to extend the top-level destination object.



*`panw.panos.destination.zone`*::
+
--
Destination zone for this session.


type: keyword

--

*`panw.panos.destination.interface`*::
+
--
Destination interface for this session.


type: keyword

--

[float]
=== nat

Post-NAT destination address, if destination NAT is performed.



*`panw.panos.destination.nat.ip`*::
+
--
Post-NAT destination IP.


type: ip

--

*`panw.panos.destination.nat.port`*::
+
--
Post-NAT destination port.


type: long

--

*`panw.panos.endreason`*::
+
--
The reason a session terminated.


type: keyword

--

[float]
=== network

Fields to extend the top-level network object.



*`panw.panos.network.pcap_id`*::
+
--
Packet capture ID for a threat.


type: keyword

--


*`panw.panos.network.nat.community_id`*::
+
--
Community ID flow-hash for the NAT 5-tuple.


type: keyword

--

[float]
=== file

Fields to extend the top-level file object.



*`panw.panos.file.hash`*::
+
--
Binary hash for a threat file sent to be analyzed by the WildFire service.


type: keyword

--

[float]
=== url

Fields to extend the top-level url object.



*`panw.panos.url.category`*::
+
--
For threat URLs, it's the URL category. For WildFire, the verdict on the file and is either 'malicious', 'grayware', or 'benign'.


type: keyword

--

*`panw.panos.flow_id`*::
+
--
Internal numeric identifier for each session.


type: keyword

--

*`panw.panos.sequence_number`*::
+
--
Log entry identifier that is incremented sequentially. Unique for each log type.


type: long

--

*`panw.panos.threat.resource`*::
+
--
URL or file name for a threat.


type: keyword

--

*`panw.panos.threat.id`*::
+
--
Palo Alto Networks identifier for the threat.


type: keyword

--

*`panw.panos.threat.name`*::
+
--
Palo Alto Networks name for the threat.


type: keyword

--

*`panw.panos.action`*::
+
--
Action taken for the session.

type: keyword

--

*`panw.panos.type`*::
+
--
Specifies the type of the log

--

*`panw.panos.sub_type`*::
+
--
Specifies the sub type of the log

--

[[exported-fields-postgresql]]
== PostgreSQL fields

Module for parsing the PostgreSQL log files.



[float]
=== postgresql

Fields from PostgreSQL logs.



[float]
=== log

Fields from the PostgreSQL log files.



*`postgresql.log.timestamp`*::
+
--

deprecated:[7.3.0]

The timestamp from the log line.


--

*`postgresql.log.core_id`*::
+
--
Core id


type: long

--

*`postgresql.log.database`*::
+
--
Name of database


example: mydb

--

*`postgresql.log.query`*::
+
--
Query statement.


example: SELECT * FROM users;

--

*`postgresql.log.query_step`*::
+
--
Statement step when using extended query protocol (one of statement, parse, bind or execute)


example: parse

--

*`postgresql.log.query_name`*::
+
--
Name given to a query when using extended query protocol. If it is "<unnamed>", or not present, this field is ignored.


example: pdo_stmt_00000001

--

*`postgresql.log.error.code`*::
+
--
Error code returned by Postgres (if any)

type: long

--

*`postgresql.log.timezone`*::
+
--
type: alias

alias to: event.timezone

--

*`postgresql.log.thread_id`*::
+
--
type: alias

alias to: process.pid

--

*`postgresql.log.user`*::
+
--
type: alias

alias to: user.name

--

*`postgresql.log.level`*::
+
--
type: alias

alias to: log.level

--

*`postgresql.log.message`*::
+
--
type: alias

alias to: message

--

[[exported-fields-process]]
== Process fields

Process metadata fields




*`process.exe`*::
+
--
type: alias

alias to: process.executable

--

[[exported-fields-proofpoint]]
== Proofpoint Email Security fields

proofpoint fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-rabbitmq]]
== RabbitMQ fields

RabbitMQ Module



[float]
=== rabbitmq




[float]
=== log

RabbitMQ log files



*`rabbitmq.log.pid`*::
+
--
The Erlang process id

type: keyword

example: <0.222.0>

--

[[exported-fields-radware]]
== Radware DefensePro fields

radware fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-redis]]
== Redis fields

Redis Module



[float]
=== redis




[float]
=== log

Redis log files



*`redis.log.role`*::
+
--
The role of the Redis instance. Can be one of `master`, `slave`, `child` (for RDF/AOF writing child), or `sentinel`.


type: keyword

--

*`redis.log.pid`*::
+
--
type: alias

alias to: process.pid

--

*`redis.log.level`*::
+
--
type: alias

alias to: log.level

--

*`redis.log.message`*::
+
--
type: alias

alias to: message

--

[float]
=== slowlog

Slow logs are retrieved from Redis via a network connection.



*`redis.slowlog.cmd`*::
+
--
The command executed.


type: keyword

--

*`redis.slowlog.duration.us`*::
+
--
How long it took to execute the command in microseconds.


type: long

--

*`redis.slowlog.id`*::
+
--
The ID of the query.


type: long

--

*`redis.slowlog.key`*::
+
--
The key on which the command was executed.


type: keyword

--

*`redis.slowlog.args`*::
+
--
The arguments with which the command was called.


type: keyword

--

[[exported-fields-s3]]
== s3 fields

S3 fields from s3 input.



*`bucket_name`*::
+
--
Name of the S3 bucket that this log retrieved from.


type: keyword

--

*`object_key`*::
+
--
Name of the S3 object that this log retrieved from.


type: keyword

--

[[exported-fields-santa]]
== Google Santa fields

Santa Module



[float]
=== santa




*`santa.action`*::
+
--
Action

type: keyword

example: EXEC

--

*`santa.decision`*::
+
--
Decision that santad took.

type: keyword

example: ALLOW

--

*`santa.reason`*::
+
--
Reason for the decsision.

type: keyword

example: CERT

--

*`santa.mode`*::
+
--
Operating mode of Santa.

type: keyword

example: M

--

[float]
=== disk

Fields for DISKAPPEAR actions.


*`santa.disk.volume`*::
+
--
The volume name.

--

*`santa.disk.bus`*::
+
--
The disk bus protocol.

--

*`santa.disk.serial`*::
+
--
The disk serial number.

--

*`santa.disk.bsdname`*::
+
--
The disk BSD name.

example: disk1s3

--

*`santa.disk.model`*::
+
--
The disk model.

example: APPLE SSD SM0512L

--

*`santa.disk.fs`*::
+
--
The disk volume kind (filesystem type).

example: apfs

--

*`santa.disk.mount`*::
+
--
The disk volume path.

--

*`santa.certificate.common_name`*::
+
--
Common name from code signing certificate.

type: keyword

--

*`santa.certificate.sha256`*::
+
--
SHA256 hash of code signing certificate.

type: keyword

--

[[exported-fields-snort]]
== Snort/Sourcefire fields

snort fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-sonicwall]]
== Sonicwall-FW fields

sonicwall fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-sophos]]
== sophos fields

sophos Module



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[float]
=== sophos




[float]
=== xg

Module for parsing sophosxg syslog.



*`sophos.xg.device`*::
+
--
device


type: keyword

--

*`sophos.xg.date`*::
+
--
Date (yyyy-mm-dd) when the event occurred


type: date

--

*`sophos.xg.timezone`*::
+
--
Time (hh:mm:ss) when the event occurred


type: keyword

--

*`sophos.xg.device_name`*::
+
--
Model number of the device


type: keyword

--

*`sophos.xg.device_id`*::
+
--
Serial number of the device


type: keyword

--

*`sophos.xg.log_id`*::
+
--
Unique 12 characters code (0101011)


type: keyword

--

*`sophos.xg.log_type`*::
+
--
Type of event e.g. firewall event


type: keyword

--

*`sophos.xg.log_component`*::
+
--
Component responsible for logging e.g. Firewall rule


type: keyword

--

*`sophos.xg.log_subtype`*::
+
--
Sub type of event


type: keyword

--

*`sophos.xg.hb_health`*::
+
--
Heartbeat status


type: keyword

--

*`sophos.xg.priority`*::
+
--
Severity level of traffic


type: keyword

--

*`sophos.xg.status`*::
+
--
Ultimate status of traffic – Allowed or Denied


type: keyword

--

*`sophos.xg.duration`*::
+
--
Durability of traffic (seconds)


type: long

--

*`sophos.xg.fw_rule_id`*::
+
--
Firewall Rule ID which is applied on the traffic


type: integer

--

*`sophos.xg.user_name`*::
+
--
user_name


type: keyword

--

*`sophos.xg.user_group`*::
+
--
Group name to which the user belongs


type: keyword

--

*`sophos.xg.iap`*::
+
--
Internet Access policy ID applied on the traffic


type: keyword

--

*`sophos.xg.ips_policy_id`*::
+
--
IPS policy ID applied on the traffic


type: integer

--

*`sophos.xg.policy_type`*::
+
--
Policy type applied to the traffic


type: keyword

--

*`sophos.xg.appfilter_policy_id`*::
+
--
Application Filter policy applied on the traffic


type: integer

--

*`sophos.xg.application_filter_policy`*::
+
--
Application Filter policy applied on the traffic


type: integer

--

*`sophos.xg.application`*::
+
--
Application name


type: keyword

--

*`sophos.xg.application_name`*::
+
--
Application name


type: keyword

--

*`sophos.xg.application_risk`*::
+
--
Risk level assigned to the application


type: keyword

--

*`sophos.xg.application_technology`*::
+
--
Technology of the application


type: keyword

--

*`sophos.xg.application_category`*::
+
--
Application is resolved by signature or synchronized application


type: keyword

--

*`sophos.xg.appresolvedby`*::
+
--
Technology of the application


type: keyword

--

*`sophos.xg.app_is_cloud`*::
+
--
Application is Cloud


type: keyword

--

*`sophos.xg.in_interface`*::
+
--
Interface for incoming traffic, e.g., Port A


type: keyword

--

*`sophos.xg.out_interface`*::
+
--
Interface for outgoing traffic, e.g., Port B


type: keyword

--

*`sophos.xg.src_ip`*::
+
--
Original source IP address of traffic


type: ip

--

*`sophos.xg.src_mac`*::
+
--
Original source MAC address of traffic


type: keyword

--

*`sophos.xg.src_country_code`*::
+
--
Code of the country to which the source IP belongs


type: keyword

--

*`sophos.xg.dst_ip`*::
+
--
Original destination IP address of traffic


type: ip

--

*`sophos.xg.dst_country_code`*::
+
--
Code of the country to which the destination IP belongs


type: keyword

--

*`sophos.xg.protocol`*::
+
--
Protocol number of traffic


type: keyword

--

*`sophos.xg.src_port`*::
+
--
Original source port of TCP and UDP traffic


type: integer

--

*`sophos.xg.dst_port`*::
+
--
Original destination port of TCP and UDP traffic


type: integer

--

*`sophos.xg.icmp_type`*::
+
--
ICMP type of ICMP traffic


type: keyword

--

*`sophos.xg.icmp_code`*::
+
--
ICMP code of ICMP traffic


type: keyword

--

*`sophos.xg.sent_pkts`*::
+
--
Total number of packets sent


type: long

--

*`sophos.xg.received_pkts`*::
+
--
Total number of packets received


type: long

--

*`sophos.xg.sent_bytes`*::
+
--
Total number of bytes sent


type: long

--

*`sophos.xg.recv_bytes`*::
+
--
Total number of bytes received


type: long

--

*`sophos.xg.trans_src_ ip`*::
+
--
Translated source IP address for outgoing traffic


type: ip

--

*`sophos.xg.trans_src_port`*::
+
--
Translated source port for outgoing traffic


type: integer

--

*`sophos.xg.trans_dst_ip`*::
+
--
Translated destination IP address for outgoing traffic


type: ip

--

*`sophos.xg.trans_dst_port`*::
+
--
Translated destination port for outgoing traffic


type: integer

--

*`sophos.xg.srczonetype`*::
+
--
Type of source zone, e.g., LAN


type: keyword

--

*`sophos.xg.srczone`*::
+
--
Name of source zone


type: keyword

--

*`sophos.xg.dstzonetype`*::
+
--
Type of destination zone, e.g., WAN


type: keyword

--

*`sophos.xg.dstzone`*::
+
--
Name of destination zone


type: keyword

--

*`sophos.xg.dir_disp`*::
+
--
TPacket direction. Possible values:“org”, “reply”, “”


type: keyword

--

*`sophos.xg.connevent`*::
+
--
Event on which this log is generated


type: keyword

--

*`sophos.xg.conn_id`*::
+
--
Unique identifier of connection


type: integer

--

*`sophos.xg.vconn_id`*::
+
--
Connection ID of the master connection


type: integer

--

*`sophos.xg.idp_policy_id`*::
+
--
IPS policy ID which is applied on the traffic


type: integer

--

*`sophos.xg.idp_policy_name`*::
+
--
IPS policy name i.e. IPS policy name which is applied on the traffic


type: keyword

--

*`sophos.xg.signature_id`*::
+
--
Signature ID


type: keyword

--

*`sophos.xg.signature_msg`*::
+
--
Signature messsage


type: keyword

--

*`sophos.xg.classification`*::
+
--
Signature classification


type: keyword

--

*`sophos.xg.rule_priority`*::
+
--
Priority of IPS policy


type: keyword

--

*`sophos.xg.platform`*::
+
--
Platform of the traffic.


type: keyword

--

*`sophos.xg.category`*::
+
--
IPS signature category.


type: keyword

--

*`sophos.xg.target`*::
+
--
Platform of the traffic.


type: keyword

--

*`sophos.xg.eventid`*::
+
--
ATP Evenet ID


type: keyword

--

*`sophos.xg.ep_uuid`*::
+
--
Endpoint UUID


type: keyword

--

*`sophos.xg.threatname`*::
+
--
ATP threatname


type: keyword

--

*`sophos.xg.sourceip`*::
+
--
Original source IP address of traffic


type: ip

--

*`sophos.xg.destinationip`*::
+
--
Original destination IP address of traffic


type: ip

--

*`sophos.xg.login_user`*::
+
--
ATP login user


type: keyword

--

*`sophos.xg.eventtype`*::
+
--
ATP event type


type: keyword

--

*`sophos.xg.execution_path`*::
+
--
ATP execution path


type: keyword

--

*`sophos.xg.av_policy_name`*::
+
--
Malware scanning policy name which is applied on the traffic


type: keyword

--

*`sophos.xg.from_email_address`*::
+
--
Sender email address


type: keyword

--

*`sophos.xg.to_email_address`*::
+
--
Receipeint email address


type: keyword

--

*`sophos.xg.subject`*::
+
--
Email subject


type: keyword

--

*`sophos.xg.mailsize`*::
+
--
mailsize


type: integer

--

*`sophos.xg.virus`*::
+
--
virus name


type: keyword

--

*`sophos.xg.FTP_url`*::
+
--
FTP URL from which virus was downloaded


type: keyword

--

*`sophos.xg.FTP_direction`*::
+
--
Direction of FTP transfer: Upload or Download


type: keyword

--

*`sophos.xg.filesize`*::
+
--
Size of the file that contained virus


type: integer

--

*`sophos.xg.filepath`*::
+
--
Path of the file containing virus


type: keyword

--

*`sophos.xg.filename`*::
+
--
File name associated with the event


type: keyword

--

*`sophos.xg.ftpcommand`*::
+
--
FTP command used when virus was found


type: keyword

--

*`sophos.xg.url`*::
+
--
URL from which virus was downloaded


type: keyword

--

*`sophos.xg.domainname`*::
+
--
Domain from which virus was downloaded


type: keyword

--

*`sophos.xg.quarantine`*::
+
--
Path and filename of the file quarantined


type: keyword

--

*`sophos.xg.src_domainname`*::
+
--
Sender domain name


type: keyword

--

*`sophos.xg.dst_domainname`*::
+
--
Receiver domain name


type: keyword

--

*`sophos.xg.reason`*::
+
--
Reason why the record was detected as spam/malicious


type: keyword

--

*`sophos.xg.referer`*::
+
--
Referer


type: keyword

--

*`sophos.xg.spamaction`*::
+
--
Spam Action


type: keyword

--

*`sophos.xg.mailid`*::
+
--
mailid


type: keyword

--

*`sophos.xg.quarantine_reason`*::
+
--
Quarantine reason


type: keyword

--

*`sophos.xg.status_code`*::
+
--
Status code


type: keyword

--

*`sophos.xg.override_token`*::
+
--
Override token


type: keyword

--

*`sophos.xg.con_id`*::
+
--
Unique identifier of connection


type: integer

--

*`sophos.xg.override_authorizer`*::
+
--
Override authorizer


type: keyword

--

*`sophos.xg.transactionid`*::
+
--
Transaction ID of the AV scan.


type: keyword

--

*`sophos.xg.upload_file_type`*::
+
--
Upload file type


type: keyword

--

*`sophos.xg.upload_file_name`*::
+
--
Upload file name


type: keyword

--

*`sophos.xg.httpresponsecode`*::
+
--
code of HTTP response


type: long

--

*`sophos.xg.user_gp`*::
+
--
Group name to which the user belongs.


type: keyword

--

*`sophos.xg.category_type`*::
+
--
Type of category under which website falls


type: keyword

--

*`sophos.xg.download_file_type`*::
+
--
Download file type


type: keyword

--

*`sophos.xg.exceptions`*::
+
--
List of the checks excluded by web exceptions.


type: keyword

--

*`sophos.xg.contenttype`*::
+
--
Type of the content


type: keyword

--

*`sophos.xg.override_name`*::
+
--
Override name


type: keyword

--

*`sophos.xg.activityname`*::
+
--
Web policy activity that matched and caused the policy result.


type: keyword

--

*`sophos.xg.download_file_name`*::
+
--
Download file name


type: keyword

--

*`sophos.xg.sha1sum`*::
+
--
SHA1 checksum of the item being analyzed


type: keyword

--

*`sophos.xg.message_id`*::
+
--
Message ID


type: keyword

--

*`sophos.xg.connid`*::
+
--
Connection ID


type: keyword

--

*`sophos.xg.message`*::
+
--
Message


type: keyword

--

*`sophos.xg.email_subject`*::
+
--
Email Subject


type: keyword

--

*`sophos.xg.file_path`*::
+
--
File path


type: keyword

--

*`sophos.xg.dstdomain`*::
+
--
Destination Domain


type: keyword

--

*`sophos.xg.file_size`*::
+
--
File Size


type: integer

--

*`sophos.xg.transaction_id`*::
+
--
Transaction ID


type: keyword

--

*`sophos.xg.website`*::
+
--
Website


type: keyword

--

*`sophos.xg.file_name`*::
+
--
Filename


type: keyword

--

*`sophos.xg.context_prefix`*::
+
--
Content Prefix


type: keyword

--

*`sophos.xg.site_category`*::
+
--
Site Category


type: keyword

--

*`sophos.xg.context_suffix`*::
+
--
Context Suffix


type: keyword

--

*`sophos.xg.dictionary_name`*::
+
--
Dictionary Name


type: keyword

--

*`sophos.xg.action`*::
+
--
Event Action


type: keyword

--

*`sophos.xg.user`*::
+
--
User


type: keyword

--

*`sophos.xg.context_match`*::
+
--
Context Match


type: keyword

--

*`sophos.xg.direction`*::
+
--
Direction


type: keyword

--

*`sophos.xg.auth_client`*::
+
--
Auth Client


type: keyword

--

*`sophos.xg.auth_mechanism`*::
+
--
Auth mechanism


type: keyword

--

*`sophos.xg.connectionname`*::
+
--
Connectionname


type: keyword

--

*`sophos.xg.remotenetwork`*::
+
--
remotenetwork


type: keyword

--

*`sophos.xg.localgateway`*::
+
--
Localgateway


type: keyword

--

*`sophos.xg.localnetwork`*::
+
--
Localnetwork


type: keyword

--

*`sophos.xg.connectiontype`*::
+
--
Connectiontype


type: keyword

--

*`sophos.xg.oldversion`*::
+
--
Oldversion


type: keyword

--

*`sophos.xg.newversion`*::
+
--
Newversion


type: keyword

--

*`sophos.xg.ipaddress`*::
+
--
Ipaddress


type: keyword

--

*`sophos.xg.client_physical_address`*::
+
--
Client physical address


type: keyword

--

*`sophos.xg.client_host_name`*::
+
--
Client host name


type: keyword

--

*`sophos.xg.raw_data`*::
+
--
Raw data


type: keyword

--

*`sophos.xg.Mode`*::
+
--
Mode


type: keyword

--

*`sophos.xg.sessionid`*::
+
--
Sessionid


type: keyword

--

*`sophos.xg.starttime`*::
+
--
Starttime


type: date

--

*`sophos.xg.remote_ip`*::
+
--
Remote IP


type: ip

--

*`sophos.xg.timestamp`*::
+
--
timestamp


type: date

--

*`sophos.xg.SysLog_SERVER_NAME`*::
+
--
SysLog SERVER NAME


type: keyword

--

*`sophos.xg.backup_mode`*::
+
--
Backup mode


type: keyword

--

*`sophos.xg.source`*::
+
--
Source


type: keyword

--

*`sophos.xg.server`*::
+
--
Server


type: keyword

--

*`sophos.xg.host`*::
+
--
Host


type: keyword

--

*`sophos.xg.responsetime`*::
+
--
Responsetime


type: long

--

*`sophos.xg.cookie`*::
+
--
cookie


type: keyword

--

*`sophos.xg.querystring`*::
+
--
querystring


type: keyword

--

*`sophos.xg.extra`*::
+
--
extra


type: keyword

--

*`sophos.xg.PHPSESSID`*::
+
--
PHPSESSID


type: keyword

--

*`sophos.xg.start_time`*::
+
--
Start time


type: date

--

*`sophos.xg.eventtime`*::
+
--
Event time


type: date

--

*`sophos.xg.red_id`*::
+
--
RED ID


type: keyword

--

*`sophos.xg.branch_name`*::
+
--
Branch Name


type: keyword

--

*`sophos.xg.updatedip`*::
+
--
updatedip


type: ip

--

*`sophos.xg.idle_cpu`*::
+
--
idle ##


type: float

--

*`sophos.xg.system_cpu`*::
+
--
system


type: float

--

*`sophos.xg.user_cpu`*::
+
--
system


type: float

--

*`sophos.xg.used`*::
+
--
used


type: integer

--

*`sophos.xg.unit`*::
+
--
unit


type: keyword

--

*`sophos.xg.total_memory`*::
+
--
Total Memory


type: integer

--

*`sophos.xg.free`*::
+
--
free


type: integer

--

*`sophos.xg.transmittederrors`*::
+
--
transmitted errors


type: keyword

--

*`sophos.xg.receivederrors`*::
+
--
received errors


type: keyword

--

*`sophos.xg.receivedkbits`*::
+
--
received kbits


type: long

--

*`sophos.xg.transmittedkbits`*::
+
--
transmitted kbits


type: long

--

*`sophos.xg.transmitteddrops`*::
+
--
transmitted drops


type: long

--

*`sophos.xg.receiveddrops`*::
+
--
received drops


type: long

--

*`sophos.xg.collisions`*::
+
--
collisions


type: long

--

*`sophos.xg.interface`*::
+
--
interface


type: keyword

--

*`sophos.xg.Configuration`*::
+
--
Configuration


type: float

--

*`sophos.xg.Reports`*::
+
--
Reports


type: float

--

*`sophos.xg.Signature`*::
+
--
Signature


type: float

--

*`sophos.xg.Temp`*::
+
--
Temp


type: float

--

*`sophos.xg.users`*::
+
--
users


type: keyword

--

*`sophos.xg.ssid`*::
+
--
ssid


type: keyword

--

*`sophos.xg.ap`*::
+
--
ap


type: keyword

--

*`sophos.xg.clients_conn_ssid`*::
+
--
clients connection ssid


type: keyword

--

[[exported-fields-squid]]
== Squid fields

squid fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-suricata]]
== Suricata fields

Module for handling the EVE JSON logs produced by Suricata.



[float]
=== suricata

Fields from the Suricata EVE log file.



[float]
=== eve

Fields exported by the EVE JSON logs



*`suricata.eve.event_type`*::
+
--
type: keyword

--

*`suricata.eve.app_proto_orig`*::
+
--
type: keyword

--


*`suricata.eve.tcp.tcp_flags`*::
+
--
type: keyword

--

*`suricata.eve.tcp.psh`*::
+
--
type: boolean

--

*`suricata.eve.tcp.tcp_flags_tc`*::
+
--
type: keyword

--

*`suricata.eve.tcp.ack`*::
+
--
type: boolean

--

*`suricata.eve.tcp.syn`*::
+
--
type: boolean

--

*`suricata.eve.tcp.state`*::
+
--
type: keyword

--

*`suricata.eve.tcp.tcp_flags_ts`*::
+
--
type: keyword

--

*`suricata.eve.tcp.rst`*::
+
--
type: boolean

--

*`suricata.eve.tcp.fin`*::
+
--
type: boolean

--


*`suricata.eve.fileinfo.sha1`*::
+
--
type: keyword

--

*`suricata.eve.fileinfo.filename`*::
+
--
type: alias

alias to: file.path

--

*`suricata.eve.fileinfo.tx_id`*::
+
--
type: long

--

*`suricata.eve.fileinfo.state`*::
+
--
type: keyword

--

*`suricata.eve.fileinfo.stored`*::
+
--
type: boolean

--

*`suricata.eve.fileinfo.gaps`*::
+
--
type: boolean

--

*`suricata.eve.fileinfo.sha256`*::
+
--
type: keyword

--

*`suricata.eve.fileinfo.md5`*::
+
--
type: keyword

--

*`suricata.eve.fileinfo.size`*::
+
--
type: alias

alias to: file.size

--

*`suricata.eve.icmp_type`*::
+
--
type: long

--

*`suricata.eve.dest_port`*::
+
--
type: alias

alias to: destination.port

--

*`suricata.eve.src_port`*::
+
--
type: alias

alias to: source.port

--

*`suricata.eve.proto`*::
+
--
type: alias

alias to: network.transport

--

*`suricata.eve.pcap_cnt`*::
+
--
type: long

--

*`suricata.eve.src_ip`*::
+
--
type: alias

alias to: source.ip

--


*`suricata.eve.dns.type`*::
+
--
type: keyword

--

*`suricata.eve.dns.rrtype`*::
+
--
type: keyword

--

*`suricata.eve.dns.rrname`*::
+
--
type: keyword

--

*`suricata.eve.dns.rdata`*::
+
--
type: keyword

--

*`suricata.eve.dns.tx_id`*::
+
--
type: long

--

*`suricata.eve.dns.ttl`*::
+
--
type: long

--

*`suricata.eve.dns.rcode`*::
+
--
type: keyword

--

*`suricata.eve.dns.id`*::
+
--
type: long

--

*`suricata.eve.flow_id`*::
+
--
type: keyword

--


*`suricata.eve.email.status`*::
+
--
type: keyword

--

*`suricata.eve.dest_ip`*::
+
--
type: alias

alias to: destination.ip

--

*`suricata.eve.icmp_code`*::
+
--
type: long

--


*`suricata.eve.http.status`*::
+
--
type: alias

alias to: http.response.status_code

--

*`suricata.eve.http.redirect`*::
+
--
type: keyword

--

*`suricata.eve.http.http_user_agent`*::
+
--
type: alias

alias to: user_agent.original

--

*`suricata.eve.http.protocol`*::
+
--
type: keyword

--

*`suricata.eve.http.http_refer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`suricata.eve.http.url`*::
+
--
type: alias

alias to: url.original

--

*`suricata.eve.http.hostname`*::
+
--
type: alias

alias to: url.domain

--

*`suricata.eve.http.length`*::
+
--
type: alias

alias to: http.response.body.bytes

--

*`suricata.eve.http.http_method`*::
+
--
type: alias

alias to: http.request.method

--

*`suricata.eve.http.http_content_type`*::
+
--
type: keyword

--

*`suricata.eve.in_iface`*::
+
--
type: keyword

--


*`suricata.eve.alert.category`*::
+
--
type: keyword

--

*`suricata.eve.alert.severity`*::
+
--
type: alias

alias to: event.severity

--

*`suricata.eve.alert.rev`*::
+
--
type: long

--

*`suricata.eve.alert.gid`*::
+
--
type: long

--

*`suricata.eve.alert.signature`*::
+
--
type: keyword

--

*`suricata.eve.alert.action`*::
+
--
type: alias

alias to: event.outcome

--

*`suricata.eve.alert.signature_id`*::
+
--
type: long

--



*`suricata.eve.ssh.client.proto_version`*::
+
--
type: keyword

--

*`suricata.eve.ssh.client.software_version`*::
+
--
type: keyword

--


*`suricata.eve.ssh.server.proto_version`*::
+
--
type: keyword

--

*`suricata.eve.ssh.server.software_version`*::
+
--
type: keyword

--



*`suricata.eve.stats.capture.kernel_packets`*::
+
--
type: long

--

*`suricata.eve.stats.capture.kernel_drops`*::
+
--
type: long

--

*`suricata.eve.stats.capture.kernel_ifdrops`*::
+
--
type: long

--

*`suricata.eve.stats.uptime`*::
+
--
type: long

--


*`suricata.eve.stats.detect.alert`*::
+
--
type: long

--


*`suricata.eve.stats.http.memcap`*::
+
--
type: long

--

*`suricata.eve.stats.http.memuse`*::
+
--
type: long

--


*`suricata.eve.stats.file_store.open_files`*::
+
--
type: long

--


*`suricata.eve.stats.defrag.max_frag_hits`*::
+
--
type: long

--


*`suricata.eve.stats.defrag.ipv4.timeouts`*::
+
--
type: long

--

*`suricata.eve.stats.defrag.ipv4.fragments`*::
+
--
type: long

--

*`suricata.eve.stats.defrag.ipv4.reassembled`*::
+
--
type: long

--


*`suricata.eve.stats.defrag.ipv6.timeouts`*::
+
--
type: long

--

*`suricata.eve.stats.defrag.ipv6.fragments`*::
+
--
type: long

--

*`suricata.eve.stats.defrag.ipv6.reassembled`*::
+
--
type: long

--


*`suricata.eve.stats.flow.tcp_reuse`*::
+
--
type: long

--

*`suricata.eve.stats.flow.udp`*::
+
--
type: long

--

*`suricata.eve.stats.flow.memcap`*::
+
--
type: long

--

*`suricata.eve.stats.flow.emerg_mode_entered`*::
+
--
type: long

--

*`suricata.eve.stats.flow.emerg_mode_over`*::
+
--
type: long

--

*`suricata.eve.stats.flow.tcp`*::
+
--
type: long

--

*`suricata.eve.stats.flow.icmpv6`*::
+
--
type: long

--

*`suricata.eve.stats.flow.icmpv4`*::
+
--
type: long

--

*`suricata.eve.stats.flow.spare`*::
+
--
type: long

--

*`suricata.eve.stats.flow.memuse`*::
+
--
type: long

--


*`suricata.eve.stats.tcp.pseudo_failed`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.ssn_memcap_drop`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.insert_data_overlap_fail`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.sessions`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.pseudo`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.synack`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.insert_data_normal_fail`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.syn`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.memuse`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.invalid_checksum`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.segment_memcap_drop`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.overlap`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.insert_list_fail`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.rst`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.stream_depth_reached`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.reassembly_memuse`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.reassembly_gap`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.overlap_diff_data`*::
+
--
type: long

--

*`suricata.eve.stats.tcp.no_flow`*::
+
--
type: long

--


*`suricata.eve.stats.decoder.avg_pkt_size`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.bytes`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.tcp`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.raw`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ppp`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.vlan_qinq`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.null`*::
+
--
type: long

--


*`suricata.eve.stats.decoder.ltnull.unsupported_type`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ltnull.pkt_too_small`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.invalid`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.gre`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ipv4`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ipv6`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.pkts`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ipv6_in_ipv6`*::
+
--
type: long

--


*`suricata.eve.stats.decoder.ipraw.invalid_ip_version`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.pppoe`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.udp`*::
+
--
type: long

--


*`suricata.eve.stats.decoder.dce.pkt_too_small`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.vlan`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.sctp`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.max_pkt_size`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.teredo`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.mpls`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.sll`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.icmpv6`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.icmpv4`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.erspan`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ethernet`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ipv4_in_ipv6`*::
+
--
type: long

--

*`suricata.eve.stats.decoder.ieee8021ah`*::
+
--
type: long

--


*`suricata.eve.stats.dns.memcap_global`*::
+
--
type: long

--

*`suricata.eve.stats.dns.memcap_state`*::
+
--
type: long

--

*`suricata.eve.stats.dns.memuse`*::
+
--
type: long

--


*`suricata.eve.stats.flow_mgr.rows_busy`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.flows_timeout`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.flows_notimeout`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.rows_skipped`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.closed_pruned`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.new_pruned`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.flows_removed`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.bypassed_pruned`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.est_pruned`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.flows_timeout_inuse`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.flows_checked`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.rows_maxlen`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.rows_checked`*::
+
--
type: long

--

*`suricata.eve.stats.flow_mgr.rows_empty`*::
+
--
type: long

--



*`suricata.eve.stats.app_layer.flow.tls`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.ftp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.http`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.failed_udp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.dns_udp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.dns_tcp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.smtp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.failed_tcp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.msn`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.ssh`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.imap`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.dcerpc_udp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.dcerpc_tcp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.flow.smb`*::
+
--
type: long

--


*`suricata.eve.stats.app_layer.tx.tls`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.ftp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.http`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.dns_udp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.dns_tcp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.smtp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.ssh`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.dcerpc_udp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.dcerpc_tcp`*::
+
--
type: long

--

*`suricata.eve.stats.app_layer.tx.smb`*::
+
--
type: long

--


*`suricata.eve.tls.notbefore`*::
+
--
type: date

--

*`suricata.eve.tls.issuerdn`*::
+
--
type: keyword

--

*`suricata.eve.tls.sni`*::
+
--
type: keyword

--

*`suricata.eve.tls.version`*::
+
--
type: keyword

--

*`suricata.eve.tls.session_resumed`*::
+
--
type: boolean

--

*`suricata.eve.tls.fingerprint`*::
+
--
type: keyword

--

*`suricata.eve.tls.serial`*::
+
--
type: keyword

--

*`suricata.eve.tls.notafter`*::
+
--
type: date

--

*`suricata.eve.tls.subject`*::
+
--
type: keyword

--


*`suricata.eve.tls.ja3s.string`*::
+
--
type: keyword

--

*`suricata.eve.tls.ja3s.hash`*::
+
--
type: keyword

--


*`suricata.eve.tls.ja3.string`*::
+
--
type: keyword

--

*`suricata.eve.tls.ja3.hash`*::
+
--
type: keyword

--

*`suricata.eve.app_proto_ts`*::
+
--
type: keyword

--


*`suricata.eve.flow.bytes_toclient`*::
+
--
type: alias

alias to: destination.bytes

--

*`suricata.eve.flow.start`*::
+
--
type: alias

alias to: event.start

--

*`suricata.eve.flow.pkts_toclient`*::
+
--
type: alias

alias to: destination.packets

--

*`suricata.eve.flow.age`*::
+
--
type: long

--

*`suricata.eve.flow.state`*::
+
--
type: keyword

--

*`suricata.eve.flow.bytes_toserver`*::
+
--
type: alias

alias to: source.bytes

--

*`suricata.eve.flow.reason`*::
+
--
type: keyword

--

*`suricata.eve.flow.pkts_toserver`*::
+
--
type: alias

alias to: source.packets

--

*`suricata.eve.flow.end`*::
+
--
type: date

--

*`suricata.eve.flow.alerted`*::
+
--
type: boolean

--

*`suricata.eve.app_proto`*::
+
--
type: alias

alias to: network.protocol

--

*`suricata.eve.tx_id`*::
+
--
type: long

--

*`suricata.eve.app_proto_tc`*::
+
--
type: keyword

--


*`suricata.eve.smtp.rcpt_to`*::
+
--
type: keyword

--

*`suricata.eve.smtp.mail_from`*::
+
--
type: keyword

--

*`suricata.eve.smtp.helo`*::
+
--
type: keyword

--

*`suricata.eve.app_proto_expected`*::
+
--
type: keyword

--

[[exported-fields-symantec]]
== Symantec AntiVirus/Endpoint Protection fields

symantec fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-system]]
== System fields

Module for parsing system log files.



[float]
=== system

Fields from the system log files.



[float]
=== auth

Fields from the Linux authorization logs.



*`system.auth.timestamp`*::
+
--
type: alias

alias to: @timestamp

--

*`system.auth.hostname`*::
+
--
type: alias

alias to: host.hostname

--

*`system.auth.program`*::
+
--
type: alias

alias to: process.name

--

*`system.auth.pid`*::
+
--
type: alias

alias to: process.pid

--

*`system.auth.message`*::
+
--
type: alias

alias to: message

--

*`system.auth.user`*::
+
--
type: alias

alias to: user.name

--


*`system.auth.ssh.method`*::
+
--
The SSH authentication method. Can be one of "password" or "publickey".


--

*`system.auth.ssh.signature`*::
+
--
The signature of the client public key.


--

*`system.auth.ssh.dropped_ip`*::
+
--
The client IP from SSH connections that are open and immediately dropped.


type: ip

--

*`system.auth.ssh.event`*::
+
--
The SSH event as found in the logs (Accepted, Invalid, Failed, etc.)


example: Accepted

--

*`system.auth.ssh.ip`*::
+
--
type: alias

alias to: source.ip

--

*`system.auth.ssh.port`*::
+
--
type: alias

alias to: source.port

--


*`system.auth.ssh.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`system.auth.ssh.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`system.auth.ssh.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`system.auth.ssh.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`system.auth.ssh.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`system.auth.ssh.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

[float]
=== sudo

Fields specific to events created by the `sudo` command.



*`system.auth.sudo.error`*::
+
--
The error message in case the sudo command failed.


example: user NOT in sudoers

--

*`system.auth.sudo.tty`*::
+
--
The TTY where the sudo command is executed.


--

*`system.auth.sudo.pwd`*::
+
--
The current directory where the sudo command is executed.


--

*`system.auth.sudo.user`*::
+
--
The target user to which the sudo command is switching.


example: root

--

*`system.auth.sudo.command`*::
+
--
The command executed via sudo.


--

[float]
=== useradd

Fields specific to events created by the `useradd` command.



*`system.auth.useradd.home`*::
+
--
The home folder for the new user.

--

*`system.auth.useradd.shell`*::
+
--
The default shell for the new user.

--

*`system.auth.useradd.name`*::
+
--
type: alias

alias to: user.name

--

*`system.auth.useradd.uid`*::
+
--
type: alias

alias to: user.id

--

*`system.auth.useradd.gid`*::
+
--
type: alias

alias to: group.id

--

[float]
=== groupadd

Fields specific to events created by the `groupadd` command.



*`system.auth.groupadd.name`*::
+
--
type: alias

alias to: group.name

--

*`system.auth.groupadd.gid`*::
+
--
type: alias

alias to: group.id

--

[float]
=== syslog

Contains fields from the syslog system logs.



*`system.syslog.timestamp`*::
+
--
type: alias

alias to: @timestamp

--

*`system.syslog.hostname`*::
+
--
type: alias

alias to: host.hostname

--

*`system.syslog.program`*::
+
--
type: alias

alias to: process.name

--

*`system.syslog.pid`*::
+
--
type: alias

alias to: process.pid

--

*`system.syslog.message`*::
+
--
type: alias

alias to: message

--

[[exported-fields-tomcat]]
== Apache Tomcat fields

tomcat fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

[[exported-fields-traefik]]
== Traefik fields

Module for parsing the Traefik log files.



[float]
=== traefik

Fields from the Traefik log files.



[float]
=== access

Contains fields for the Traefik access logs.



*`traefik.access.user_identifier`*::
+
--
Is the RFC 1413 identity of the client


type: keyword

--

*`traefik.access.request_count`*::
+
--
The number of requests


type: long

--

*`traefik.access.frontend_name`*::
+
--
The name of the frontend used


type: keyword

--

*`traefik.access.backend_url`*::
+
--
The url of the backend where request is forwarded

type: keyword

--

*`traefik.access.body_sent.bytes`*::
+
--
type: alias

alias to: http.response.body.bytes

--

*`traefik.access.remote_ip`*::
+
--
type: alias

alias to: source.address

--

*`traefik.access.user_name`*::
+
--
type: alias

alias to: user.name

--

*`traefik.access.method`*::
+
--
type: alias

alias to: http.request.method

--

*`traefik.access.url`*::
+
--
type: alias

alias to: url.original

--

*`traefik.access.http_version`*::
+
--
type: alias

alias to: http.version

--

*`traefik.access.response_code`*::
+
--
type: alias

alias to: http.response.status_code

--

*`traefik.access.referrer`*::
+
--
type: alias

alias to: http.request.referrer

--

*`traefik.access.agent`*::
+
--
type: alias

alias to: user_agent.original

--


*`traefik.access.user_agent.device`*::
+
--
type: alias

alias to: user_agent.device.name

--

*`traefik.access.user_agent.name`*::
+
--
type: alias

alias to: user_agent.name

--

*`traefik.access.user_agent.os`*::
+
--
type: alias

alias to: user_agent.os.full_name

--

*`traefik.access.user_agent.os_name`*::
+
--
type: alias

alias to: user_agent.os.name

--

*`traefik.access.user_agent.original`*::
+
--
type: alias

alias to: user_agent.original

--


*`traefik.access.geoip.continent_name`*::
+
--
type: alias

alias to: source.geo.continent_name

--

*`traefik.access.geoip.country_iso_code`*::
+
--
type: alias

alias to: source.geo.country_iso_code

--

*`traefik.access.geoip.location`*::
+
--
type: alias

alias to: source.geo.location

--

*`traefik.access.geoip.region_name`*::
+
--
type: alias

alias to: source.geo.region_name

--

*`traefik.access.geoip.city_name`*::
+
--
type: alias

alias to: source.geo.city_name

--

*`traefik.access.geoip.region_iso_code`*::
+
--
type: alias

alias to: source.geo.region_iso_code

--

[[exported-fields-zeek]]
== Zeek fields

Module for handling logs produced by Zeek/Bro



[float]
=== zeek

Fields from Zeek/Bro logs after normalization



*`zeek.session_id`*::
+
--
A unique identifier of the session


type: keyword

--

[float]
=== capture_loss

Fields exported by the Zeek capture_loss log



*`zeek.capture_loss.ts_delta`*::
+
--
The time delay between this measurement and the last.


type: integer

--

*`zeek.capture_loss.peer`*::
+
--
In the event that there are multiple Bro instances logging to the same host, this distinguishes each peer with its individual name.


type: keyword

--

*`zeek.capture_loss.gaps`*::
+
--
Number of missed ACKs from the previous measurement interval.


type: integer

--

*`zeek.capture_loss.acks`*::
+
--
Total number of ACKs seen in the previous measurement interval.


type: integer

--

*`zeek.capture_loss.percent_lost`*::
+
--
Percentage of ACKs seen where the data being ACKed wasn't seen.


type: double

--

[float]
=== connection

Fields exported by the Zeek Connection log



*`zeek.connection.local_orig`*::
+
--
Indicates whether the session is originated locally.


type: boolean

--

*`zeek.connection.local_resp`*::
+
--
Indicates whether the session is responded locally.


type: boolean

--

*`zeek.connection.missed_bytes`*::
+
--
Missed bytes for the session.


type: long

--

*`zeek.connection.state`*::
+
--
Code indicating the state of the session.


type: keyword

--

*`zeek.connection.state_message`*::
+
--
The state of the session.


type: keyword

--


*`zeek.connection.icmp.type`*::
+
--
ICMP message type.


type: integer

--

*`zeek.connection.icmp.code`*::
+
--
ICMP message code.


type: integer

--

*`zeek.connection.history`*::
+
--
Flags indicating the history of the session.


type: keyword

--

*`zeek.connection.vlan`*::
+
--
VLAN identifier.


type: integer

--

*`zeek.connection.inner_vlan`*::
+
--
VLAN identifier.


type: integer

--

[float]
=== dce_rpc

Fields exported by the Zeek DCE_RPC log



*`zeek.dce_rpc.rtt`*::
+
--
Round trip time from the request to the response. If either the request or response wasn't seen, this will be null.


type: integer

--

*`zeek.dce_rpc.named_pipe`*::
+
--
Remote pipe name.


type: keyword

--

*`zeek.dce_rpc.endpoint`*::
+
--
Endpoint name looked up from the uuid.


type: keyword

--

*`zeek.dce_rpc.operation`*::
+
--
Operation seen in the call.


type: keyword

--

[float]
=== dhcp

Fields exported by the Zeek DHCP log



*`zeek.dhcp.domain`*::
+
--
Domain given by the server in option 15.


type: keyword

--

*`zeek.dhcp.duration`*::
+
--
Duration of the DHCP session representing the time from the first
message to the last, in seconds.


type: double

--

*`zeek.dhcp.hostname`*::
+
--
Name given by client in Hostname option 12.


type: keyword

--

*`zeek.dhcp.client_fqdn`*::
+
--
FQDN given by client in Client FQDN option 81.


type: keyword

--

*`zeek.dhcp.lease_time`*::
+
--
IP address lease interval in seconds.


type: integer

--

[float]
=== address

Addresses seen in this DHCP exchange.



*`zeek.dhcp.address.assigned`*::
+
--
IP address assigned by the server.


type: ip

--

*`zeek.dhcp.address.client`*::
+
--
IP address of the client. If a transaction is only a client sending
INFORM messages then there is no lease information exchanged so this
is helpful to know who sent the messages. Getting an address in this
field does require that the client sources at least one DHCP message
using a non-broadcast address.


type: ip

--

*`zeek.dhcp.address.mac`*::
+
--
Client's hardware address.


type: keyword

--

*`zeek.dhcp.address.requested`*::
+
--
IP address requested by the client.


type: ip

--

*`zeek.dhcp.address.server`*::
+
--
IP address of the DHCP server.


type: ip

--


*`zeek.dhcp.msg.types`*::
+
--
List of DHCP message types seen in this exchange.


type: keyword

--

*`zeek.dhcp.msg.origin`*::
+
--
(present if policy/protocols/dhcp/msg-orig.bro is loaded)
The address that originated each message from the msg.types field.


type: ip

--

*`zeek.dhcp.msg.client`*::
+
--
Message typically accompanied with a DHCP_DECLINE so the client can
tell the server why it rejected an address.


type: keyword

--

*`zeek.dhcp.msg.server`*::
+
--
Message typically accompanied with a DHCP_NAK to let the client know
why it rejected the request.


type: keyword

--


*`zeek.dhcp.software.client`*::
+
--
(present if policy/protocols/dhcp/software.bro is loaded)
Software reported by the client in the vendor_class option.


type: keyword

--

*`zeek.dhcp.software.server`*::
+
--
(present if policy/protocols/dhcp/software.bro is loaded)
Software reported by the client in the vendor_class option.


type: keyword

--


*`zeek.dhcp.id.circuit`*::
+
--
(present if policy/protocols/dhcp/sub-opts.bro is loaded)
Added by DHCP relay agents which terminate switched or permanent
circuits. It encodes an agent-local identifier of the circuit from
which a DHCP client-to-server packet was received. Typically it
should represent a router or switch interface number.


type: keyword

--

*`zeek.dhcp.id.remote_agent`*::
+
--
(present if policy/protocols/dhcp/sub-opts.bro is loaded)
A globally unique identifier added by relay agents to identify the
remote host end of the circuit.


type: keyword

--

*`zeek.dhcp.id.subscriber`*::
+
--
(present if policy/protocols/dhcp/sub-opts.bro is loaded)
The subscriber ID is a value independent of the physical network
configuration so that a customer's DHCP configuration can be given
to them correctly no matter where they are physically connected.


type: keyword

--

[float]
=== dnp3

Fields exported by the Zeek DNP3 log




*`zeek.dnp3.function.request`*::
+
--
The name of the function message in the request.


type: keyword

--

*`zeek.dnp3.function.reply`*::
+
--
The name of the function message in the reply.


type: keyword

--

*`zeek.dnp3.id`*::
+
--
The response's internal indication number.


type: integer

--

[float]
=== dns

Fields exported by the Zeek DNS log



*`zeek.dns.trans_id`*::
+
--
DNS transaction identifier.


type: keyword

--

*`zeek.dns.rtt`*::
+
--
Round trip time for the query and response.


type: double

--

*`zeek.dns.query`*::
+
--
The domain name that is the subject of the DNS query.


type: keyword

--

*`zeek.dns.qclass`*::
+
--
The QCLASS value specifying the class of the query.


type: long

--

*`zeek.dns.qclass_name`*::
+
--
A descriptive name for the class of the query.


type: keyword

--

*`zeek.dns.qtype`*::
+
--
A QTYPE value specifying the type of the query.


type: long

--

*`zeek.dns.qtype_name`*::
+
--
A descriptive name for the type of the query.


type: keyword

--

*`zeek.dns.rcode`*::
+
--
The response code value in DNS response messages.


type: long

--

*`zeek.dns.rcode_name`*::
+
--
A descriptive name for the response code value.


type: keyword

--

*`zeek.dns.AA`*::
+
--
The Authoritative Answer bit for response messages specifies that the responding
name server is an authority for the domain name in the question section.


type: boolean

--

*`zeek.dns.TC`*::
+
--
The Truncation bit specifies that the message was truncated.


type: boolean

--

*`zeek.dns.RD`*::
+
--
The Recursion Desired bit in a request message indicates that the client
wants recursive service for this query.


type: boolean

--

*`zeek.dns.RA`*::
+
--
The Recursion Available bit in a response message indicates that the name
server supports recursive queries.


type: boolean

--

*`zeek.dns.answers`*::
+
--
The set of resource descriptions in the query answer.


type: keyword

--

*`zeek.dns.TTLs`*::
+
--
The caching intervals of the associated RRs described by the answers field.


type: double

--

*`zeek.dns.rejected`*::
+
--
Indicates whether the DNS query was rejected by the server.


type: boolean

--

*`zeek.dns.total_answers`*::
+
--
The total number of resource records in the reply.


type: integer

--

*`zeek.dns.total_replies`*::
+
--
The total number of resource records in the reply message.


type: integer

--

*`zeek.dns.saw_query`*::
+
--
Whether the full DNS query has been seen.


type: boolean

--

*`zeek.dns.saw_reply`*::
+
--
Whether the full DNS reply has been seen.


type: boolean

--

[float]
=== dpd

Fields exported by the Zeek DPD log



*`zeek.dpd.analyzer`*::
+
--
The analyzer that generated the violation.


type: keyword

--

*`zeek.dpd.failure_reason`*::
+
--
The textual reason for the analysis failure.


type: keyword

--

*`zeek.dpd.packet_segment`*::
+
--
(present if policy/frameworks/dpd/packet-segment-logging.bro is loaded)
A chunk of the payload that most likely resulted in the protocol violation.


type: keyword

--

[float]
=== files

Fields exported by the Zeek Files log.



*`zeek.files.fuid`*::
+
--
A file unique identifier.


type: keyword

--

*`zeek.files.tx_host`*::
+
--
The host that transferred the file.


type: ip

--

*`zeek.files.rx_host`*::
+
--
The host that received the file.


type: ip

--

*`zeek.files.session_ids`*::
+
--
The sessions that have this file.


type: keyword

--

*`zeek.files.source`*::
+
--
An identification of the source of the file data. E.g. it may be a network protocol
over which it was transferred, or a local file path which was read, or some other
input source.


type: keyword

--

*`zeek.files.depth`*::
+
--
A value to represent the depth of this file in relation to its source. In SMTP, it
is the depth of the MIME attachment on the message. In HTTP, it is the depth of the
request within the TCP connection.


type: long

--

*`zeek.files.analyzers`*::
+
--
A set of analysis types done during the file analysis.


type: keyword

--

*`zeek.files.mime_type`*::
+
--
Mime type of the file.


type: keyword

--

*`zeek.files.filename`*::
+
--
Name of the file if available.


type: keyword

--

*`zeek.files.local_orig`*::
+
--
If the source of this file is a network connection, this field indicates if the data
originated from the local network or not.


type: boolean

--

*`zeek.files.is_orig`*::
+
--
If the source of this file is a network connection, this field indicates if the file is
being sent by the originator of the connection or the responder.


type: boolean

--

*`zeek.files.duration`*::
+
--
The duration the file was analyzed for. Not the duration of the session.


type: double

--

*`zeek.files.seen_bytes`*::
+
--
Number of bytes provided to the file analysis engine for the file.


type: long

--

*`zeek.files.total_bytes`*::
+
--
Total number of bytes that are supposed to comprise the full file.


type: long

--

*`zeek.files.missing_bytes`*::
+
--
The number of bytes in the file stream that were completely missed during the process
of analysis.


type: long

--

*`zeek.files.overflow_bytes`*::
+
--
The number of bytes in the file stream that were not delivered to stream file analyzers.
This could be overlapping bytes or bytes that couldn't be reassembled.


type: long

--

*`zeek.files.timedout`*::
+
--
Whether the file analysis timed out at least once for the file.


type: boolean

--

*`zeek.files.parent_fuid`*::
+
--
Identifier associated with a container file from which this one was extracted as part of
the file analysis.


type: keyword

--

*`zeek.files.md5`*::
+
--
An MD5 digest of the file contents.


type: keyword

--

*`zeek.files.sha1`*::
+
--
A SHA1 digest of the file contents.


type: keyword

--

*`zeek.files.sha256`*::
+
--
A SHA256 digest of the file contents.


type: keyword

--

*`zeek.files.extracted`*::
+
--
Local filename of extracted file.


type: keyword

--

*`zeek.files.extracted_cutoff`*::
+
--
Indicate whether the file being extracted was cut off hence not extracted completely.


type: boolean

--

*`zeek.files.extracted_size`*::
+
--
The number of bytes extracted to disk.


type: long

--

*`zeek.files.entropy`*::
+
--
The information density of the contents of the file.


type: double

--

[float]
=== ftp

Fields exported by the Zeek FTP log



*`zeek.ftp.user`*::
+
--
User name for the current FTP session.


type: keyword

--

*`zeek.ftp.password`*::
+
--
Password for the current FTP session if captured.


type: keyword

--

*`zeek.ftp.command`*::
+
--
Command given by the client.


type: keyword

--

*`zeek.ftp.arg`*::
+
--
Argument for the command if one is given.


type: keyword

--


*`zeek.ftp.file.size`*::
+
--
Size of the file if the command indicates a file transfer.


type: long

--

*`zeek.ftp.file.mime_type`*::
+
--
Sniffed mime type of file.


type: keyword

--

*`zeek.ftp.file.fuid`*::
+
--
(present if base/protocols/ftp/files.bro is loaded)
File unique ID.


type: keyword

--


*`zeek.ftp.reply.code`*::
+
--
Reply code from the server in response to the command.


type: integer

--

*`zeek.ftp.reply.msg`*::
+
--
Reply message from the server in response to the command.


type: keyword

--

[float]
=== data_channel

Expected FTP data channel.



*`zeek.ftp.data_channel.passive`*::
+
--
Whether PASV mode is toggled for control channel.


type: boolean

--

*`zeek.ftp.data_channel.originating_host`*::
+
--
The host that will be initiating the data connection.


type: ip

--

*`zeek.ftp.data_channel.response_host`*::
+
--
The host that will be accepting the data connection.


type: ip

--

*`zeek.ftp.data_channel.response_port`*::
+
--
The port at which the acceptor is listening for the data connection.


type: integer

--

*`zeek.ftp.cwd`*::
+
--
Current working directory that this session is in. By making the default value '.', we can indicate that unless something more concrete is discovered that the existing but unknown directory is ok to use.


type: keyword

--

[float]
=== cmdarg

Command that is currently waiting for a response.



*`zeek.ftp.cmdarg.cmd`*::
+
--
Command.


type: keyword

--

*`zeek.ftp.cmdarg.arg`*::
+
--
Argument for the command if one was given.


type: keyword

--

*`zeek.ftp.cmdarg.seq`*::
+
--
Counter to track how many commands have been executed.


type: integer

--

*`zeek.ftp.pending_commands`*::
+
--
Queue for commands that have been sent but not yet responded to are tracked here.


type: integer

--

*`zeek.ftp.passive`*::
+
--
Indicates if the session is in active or passive mode.


type: boolean

--

*`zeek.ftp.capture_password`*::
+
--
Determines if the password will be captured for this request.


type: boolean

--

*`zeek.ftp.last_auth_requested`*::
+
--
present if base/protocols/ftp/gridftp.bro is loaded.
Last authentication/security mechanism that was used.


type: keyword

--

[float]
=== http

Fields exported by the Zeek HTTP log



*`zeek.http.trans_depth`*::
+
--
Represents the pipelined depth into the connection of this request/response transaction.


type: integer

--

*`zeek.http.status_msg`*::
+
--
Status message returned by the server.


type: keyword

--

*`zeek.http.info_code`*::
+
--
Last seen 1xx informational reply code returned by the server.


type: integer

--

*`zeek.http.info_msg`*::
+
--
Last seen 1xx informational reply message returned by the server.


type: keyword

--

*`zeek.http.tags`*::
+
--
A set of indicators of various attributes discovered and related to a particular
request/response pair.


type: keyword

--

*`zeek.http.password`*::
+
--
Password if basic-auth is performed for the request.


type: keyword

--

*`zeek.http.captured_password`*::
+
--
Determines if the password will be captured for this request.


type: boolean

--

*`zeek.http.proxied`*::
+
--
All of the headers that may indicate if the HTTP request was proxied.


type: keyword

--

*`zeek.http.range_request`*::
+
--
Indicates if this request can assume 206 partial content in response.


type: boolean

--

*`zeek.http.client_header_names`*::
+
--
The vector of HTTP header names sent by the client. No header values
are included here, just the header names.


type: keyword

--

*`zeek.http.server_header_names`*::
+
--
The vector of HTTP header names sent by the server. No header values
are included here, just the header names.


type: keyword

--

*`zeek.http.orig_fuids`*::
+
--
An ordered vector of file unique IDs from the originator.


type: keyword

--

*`zeek.http.orig_mime_types`*::
+
--
An ordered vector of mime types from the originator.


type: keyword

--

*`zeek.http.orig_filenames`*::
+
--
An ordered vector of filenames from the originator.


type: keyword

--

*`zeek.http.resp_fuids`*::
+
--
An ordered vector of file unique IDs from the responder.


type: keyword

--

*`zeek.http.resp_mime_types`*::
+
--
An ordered vector of mime types from the responder.


type: keyword

--

*`zeek.http.resp_filenames`*::
+
--
An ordered vector of filenames from the responder.


type: keyword

--

*`zeek.http.orig_mime_depth`*::
+
--
Current number of MIME entities in the HTTP request message body.


type: integer

--

*`zeek.http.resp_mime_depth`*::
+
--
Current number of MIME entities in the HTTP response message body.


type: integer

--

[float]
=== intel

Fields exported by the Zeek Intel log.




*`zeek.intel.seen.indicator`*::
+
--
The intelligence indicator.


type: keyword

--

*`zeek.intel.seen.indicator_type`*::
+
--
The type of data the indicator represents.


type: keyword

--

*`zeek.intel.seen.host`*::
+
--
If the indicator type was Intel::ADDR, then this field will be present.


type: keyword

--

*`zeek.intel.seen.conn`*::
+
--
If the data was discovered within a connection, the connection record should go here to give context to the data.


type: keyword

--

*`zeek.intel.seen.where`*::
+
--
Where the data was discovered.


type: keyword

--

*`zeek.intel.seen.node`*::
+
--
The name of the node where the match was discovered.


type: keyword

--

*`zeek.intel.seen.uid`*::
+
--
If the data was discovered within a connection, the connection uid should go here to give context to the data. If the conn field is provided, this will be automatically filled out.


type: keyword

--

*`zeek.intel.seen.f`*::
+
--
If the data was discovered within a file, the file record should go here to provide context to the data.


type: object

--

*`zeek.intel.seen.fuid`*::
+
--
If the data was discovered within a file, the file uid should go here to provide context to the data. If the file record f is provided, this will be automatically filled out.


type: keyword

--

*`zeek.intel.matched`*::
+
--
Event to represent a match in the intelligence data from data that was seen.


type: keyword

--

*`zeek.intel.sources`*::
+
--
Sources which supplied data for this match.


type: keyword

--

*`zeek.intel.fuid`*::
+
--
If a file was associated with this intelligence hit, this is the uid for the file.


type: keyword

--

*`zeek.intel.file_mime_type`*::
+
--
A mime type if the intelligence hit is related to a file. If the $f field is provided this will be automatically filled out.


type: keyword

--

*`zeek.intel.file_desc`*::
+
--
Frequently files can be described to give a bit more context. If the $f field is provided this field will be automatically filled out.


type: keyword

--

[float]
=== irc

Fields exported by the Zeek IRC log



*`zeek.irc.nick`*::
+
--
Nickname given for the connection.


type: keyword

--

*`zeek.irc.user`*::
+
--
Username given for the connection.


type: keyword

--

*`zeek.irc.command`*::
+
--
Command given by the client.


type: keyword

--

*`zeek.irc.value`*::
+
--
Value for the command given by the client.


type: keyword

--

*`zeek.irc.addl`*::
+
--
Any additional data for the command.


type: keyword

--



*`zeek.irc.dcc.file.name`*::
+
--
Present if base/protocols/irc/dcc-send.bro is loaded.
DCC filename requested.


type: keyword

--

*`zeek.irc.dcc.file.size`*::
+
--
Present if base/protocols/irc/dcc-send.bro is loaded.
Size of the DCC transfer as indicated by the sender.


type: long

--

*`zeek.irc.dcc.mime_type`*::
+
--
present if base/protocols/irc/dcc-send.bro is loaded.
Sniffed mime type of the file.


type: keyword

--

*`zeek.irc.fuid`*::
+
--
present if base/protocols/irc/files.bro is loaded.
File unique ID.


type: keyword

--

[float]
=== kerberos

Fields exported by the Zeek Kerberos log



*`zeek.kerberos.request_type`*::
+
--
Request type - Authentication Service (AS) or Ticket Granting Service (TGS).


type: keyword

--

*`zeek.kerberos.client`*::
+
--
Client name.


type: keyword

--

*`zeek.kerberos.service`*::
+
--
Service name.


type: keyword

--

*`zeek.kerberos.success`*::
+
--
Request result.


type: boolean

--


*`zeek.kerberos.error.code`*::
+
--
Error code.


type: integer

--

*`zeek.kerberos.error.msg`*::
+
--
Error message.


type: keyword

--


*`zeek.kerberos.valid.from`*::
+
--
Ticket valid from.


type: date

--

*`zeek.kerberos.valid.until`*::
+
--
Ticket valid until.


type: date

--

*`zeek.kerberos.valid.days`*::
+
--
Number of days the ticket is valid for.


type: integer

--

*`zeek.kerberos.cipher`*::
+
--
Ticket encryption type.


type: keyword

--

*`zeek.kerberos.forwardable`*::
+
--
Forwardable ticket requested.


type: boolean

--

*`zeek.kerberos.renewable`*::
+
--
Renewable ticket requested.


type: boolean

--


*`zeek.kerberos.ticket.auth`*::
+
--
Hash of ticket used to authorize request/transaction.


type: keyword

--

*`zeek.kerberos.ticket.new`*::
+
--
Hash of ticket returned by the KDC.


type: keyword

--



*`zeek.kerberos.cert.client.value`*::
+
--
Client certificate.


type: keyword

--

*`zeek.kerberos.cert.client.fuid`*::
+
--
File unique ID of client cert.


type: keyword

--

*`zeek.kerberos.cert.client.subject`*::
+
--
Subject of client certificate.


type: keyword

--


*`zeek.kerberos.cert.server.value`*::
+
--
Server certificate.


type: keyword

--

*`zeek.kerberos.cert.server.fuid`*::
+
--
File unique ID of server certificate.


type: keyword

--

*`zeek.kerberos.cert.server.subject`*::
+
--
Subject of server certificate.


type: keyword

--

[float]
=== modbus

Fields exported by the Zeek modbus log.



*`zeek.modbus.function`*::
+
--
The name of the function message that was sent.


type: keyword

--

*`zeek.modbus.exception`*::
+
--
The exception if the response was a failure.


type: keyword

--

*`zeek.modbus.track_address`*::
+
--
Present if policy/protocols/modbus/track-memmap.bro is loaded.
Modbus track address.


type: integer

--

[float]
=== mysql

Fields exported by the Zeek MySQL log.



*`zeek.mysql.cmd`*::
+
--
The command that was issued.


type: keyword

--

*`zeek.mysql.arg`*::
+
--
The argument issued to the command.


type: keyword

--

*`zeek.mysql.success`*::
+
--
Whether the command succeeded.


type: boolean

--

*`zeek.mysql.rows`*::
+
--
The number of affected rows, if any.


type: integer

--

*`zeek.mysql.response`*::
+
--
Server message, if any.


type: keyword

--

[float]
=== notice

Fields exported by the Zeek Notice log.



*`zeek.notice.connection_id`*::
+
--
Identifier of the related connection session.


type: keyword

--

*`zeek.notice.icmp_id`*::
+
--
Identifier of the related ICMP session.


type: keyword

--

*`zeek.notice.file.id`*::
+
--
An identifier associated with a single file that is related to this notice.


type: keyword

--

*`zeek.notice.file.parent_id`*::
+
--
Identifier associated with a container file from which this one was extracted.


type: keyword

--

*`zeek.notice.file.source`*::
+
--
An identification of the source of the file data. E.g. it may be a network protocol
over which it was transferred, or a local file path which was read, or some other
input source.


type: keyword

--

*`zeek.notice.file.mime_type`*::
+
--
A mime type if the notice is related to a file.


type: keyword

--

*`zeek.notice.file.is_orig`*::
+
--
If the source of this file is a network connection, this field indicates if the file is
being sent by the originator of the connection or the responder.


type: boolean

--

*`zeek.notice.file.seen_bytes`*::
+
--
Number of bytes provided to the file analysis engine for the file.


type: long

--

*`zeek.notice.ffile.total_bytes`*::
+
--
Total number of bytes that are supposed to comprise the full file.


type: long

--

*`zeek.notice.file.missing_bytes`*::
+
--
The number of bytes in the file stream that were completely missed during the process
of analysis.


type: long

--

*`zeek.notice.file.overflow_bytes`*::
+
--
The number of bytes in the file stream that were not delivered to stream file analyzers.
This could be overlapping bytes or bytes that couldn't be reassembled.


type: long

--

*`zeek.notice.fuid`*::
+
--
A file unique ID if this notice is related to a file.


type: keyword

--

*`zeek.notice.note`*::
+
--
The type of the notice.


type: keyword

--

*`zeek.notice.msg`*::
+
--
The human readable message for the notice.


type: keyword

--

*`zeek.notice.sub`*::
+
--
The human readable sub-message.


type: keyword

--

*`zeek.notice.n`*::
+
--
Associated count, or a status code.


type: long

--

*`zeek.notice.peer_name`*::
+
--
Name of remote peer that raised this notice.


type: keyword

--

*`zeek.notice.peer_descr`*::
+
--
Textual description for the peer that raised this notice.


type: text

--

*`zeek.notice.actions`*::
+
--
The actions which have been applied to this notice.


type: keyword

--

*`zeek.notice.email_body_sections`*::
+
--
By adding chunks of text into this element, other scripts can expand on notices
that are being emailed.


type: text

--

*`zeek.notice.email_delay_tokens`*::
+
--
Adding a string token to this set will cause the built-in emailing functionality
to delay sending the email either the token has been removed or the email
has been delayed for the specified time duration.


type: keyword

--

*`zeek.notice.identifier`*::
+
--
This field is provided when a notice is generated for the purpose of deduplicating notices.


type: keyword

--

*`zeek.notice.suppress_for`*::
+
--
This field indicates the length of time that this unique notice should be suppressed.


type: double

--

*`zeek.notice.dropped`*::
+
--
Indicate if the source IP address was dropped and denied network access.


type: boolean

--

[float]
=== ntlm

Fields exported by the Zeek NTLM log.



*`zeek.ntlm.domain`*::
+
--
Domain name given by the client.


type: keyword

--

*`zeek.ntlm.hostname`*::
+
--
Hostname given by the client.


type: keyword

--

*`zeek.ntlm.success`*::
+
--
Indicate whether or not the authentication was successful.


type: boolean

--

*`zeek.ntlm.username`*::
+
--
Username given by the client.


type: keyword

--



*`zeek.ntlm.server.name.dns`*::
+
--
DNS name given by the server in a CHALLENGE.


type: keyword

--

*`zeek.ntlm.server.name.netbios`*::
+
--
NetBIOS name given by the server in a CHALLENGE.


type: keyword

--

*`zeek.ntlm.server.name.tree`*::
+
--
Tree name given by the server in a CHALLENGE.


type: keyword

--

[float]
=== ocsp

Fields exported by the Zeek OCSP log
Online Certificate Status Protocol (OCSP). Only created if policy script is loaded.



*`zeek.ocsp.file_id`*::
+
--
File id of the OCSP reply.


type: keyword

--


*`zeek.ocsp.hash.algorithm`*::
+
--
Hash algorithm used to generate issuerNameHash and issuerKeyHash.


type: keyword

--


*`zeek.ocsp.hash.issuer.name`*::
+
--
Hash of the issuer's distingueshed name.


type: keyword

--

*`zeek.ocsp.hash.issuer.key`*::
+
--
Hash of the issuer's public key.


type: keyword

--

*`zeek.ocsp.serial_number`*::
+
--
Serial number of the affected certificate.


type: keyword

--

*`zeek.ocsp.status`*::
+
--
Status of the affected certificate.


type: keyword

--


*`zeek.ocsp.revoke.time`*::
+
--
Time at which the certificate was revoked.


type: date

--

*`zeek.ocsp.revoke.reason`*::
+
--
Reason for which the certificate was revoked.


type: keyword

--


*`zeek.ocsp.update.this`*::
+
--
The time at which the status being shows is known to have been correct.


type: date

--

*`zeek.ocsp.update.next`*::
+
--
The latest time at which new information about the status of the certificate will be available.


type: date

--

[float]
=== pe

Fields exported by the Zeek pe log.



*`zeek.pe.client`*::
+
--
The client's version string.


type: keyword

--

*`zeek.pe.id`*::
+
--
File id of this portable executable file.


type: keyword

--

*`zeek.pe.machine`*::
+
--
The target machine that the file was compiled for.


type: keyword

--

*`zeek.pe.compile_time`*::
+
--
The time that the file was created at.


type: date

--

*`zeek.pe.os`*::
+
--
The required operating system.


type: keyword

--

*`zeek.pe.subsystem`*::
+
--
The subsystem that is required to run this file.


type: keyword

--

*`zeek.pe.is_exe`*::
+
--
Is the file an executable, or just an object file?


type: boolean

--

*`zeek.pe.is_64bit`*::
+
--
Is the file a 64-bit executable?


type: boolean

--

*`zeek.pe.uses_aslr`*::
+
--
Does the file support Address Space Layout Randomization?


type: boolean

--

*`zeek.pe.uses_dep`*::
+
--
Does the file support Data Execution Prevention?


type: boolean

--

*`zeek.pe.uses_code_integrity`*::
+
--
Does the file enforce code integrity checks?


type: boolean

--

*`zeek.pe.uses_seh`*::
+
--
Does the file use structured exception handing?


type: boolean

--

*`zeek.pe.has_import_table`*::
+
--
Does the file have an import table?


type: boolean

--

*`zeek.pe.has_export_table`*::
+
--
Does the file have an export table?


type: boolean

--

*`zeek.pe.has_cert_table`*::
+
--
Does the file have an attribute certificate table?


type: boolean

--

*`zeek.pe.has_debug_data`*::
+
--
Does the file have a debug table?


type: boolean

--

*`zeek.pe.section_names`*::
+
--
The names of the sections, in order.


type: keyword

--

[float]
=== radius

Fields exported by the Zeek Radius log.



*`zeek.radius.username`*::
+
--
The username, if present.


type: keyword

--

*`zeek.radius.mac`*::
+
--
MAC address, if present.


type: keyword

--

*`zeek.radius.framed_addr`*::
+
--
The address given to the network access server, if present. This is only a hint from the RADIUS server and the network access server is not required to honor the address.


type: ip

--

*`zeek.radius.remote_ip`*::
+
--
Remote IP address, if present. This is collected from the Tunnel-Client-Endpoint attribute.


type: ip

--

*`zeek.radius.connect_info`*::
+
--
Connect info, if present.


type: keyword

--

*`zeek.radius.reply_msg`*::
+
--
Reply message from the server challenge. This is frequently shown to the user authenticating.


type: keyword

--

*`zeek.radius.result`*::
+
--
Successful or failed authentication.


type: keyword

--

*`zeek.radius.ttl`*::
+
--
The duration between the first request and either the "Access-Accept" message or an error. If the field is empty, it means that either the request or response was not seen.


type: integer

--

*`zeek.radius.logged`*::
+
--
Whether this has already been logged and can be ignored.


type: boolean

--

[float]
=== rdp

Fields exported by the Zeek RDP log.



*`zeek.rdp.cookie`*::
+
--
Cookie value used by the client machine. This is typically a username.


type: keyword

--

*`zeek.rdp.result`*::
+
--
Status result for the connection. It's a mix between RDP negotation failure messages and GCC server create response messages.


type: keyword

--

*`zeek.rdp.security_protocol`*::
+
--
Security protocol chosen by the server.


type: keyword

--

*`zeek.rdp.keyboard_layout`*::
+
--
Keyboard layout (language) of the client machine.


type: keyword

--


*`zeek.rdp.client.build`*::
+
--
RDP client version used by the client machine.


type: keyword

--

*`zeek.rdp.client.client_name`*::
+
--
Name of the client machine.


type: keyword

--

*`zeek.rdp.client.product_id`*::
+
--
Product ID of the client machine.


type: keyword

--


*`zeek.rdp.desktop.width`*::
+
--
Desktop width of the client machine.


type: integer

--

*`zeek.rdp.desktop.height`*::
+
--
Desktop height of the client machine.


type: integer

--

*`zeek.rdp.desktop.color_depth`*::
+
--
The color depth requested by the client in the high_color_depth field.


type: keyword

--


*`zeek.rdp.cert.type`*::
+
--
If the connection is being encrypted with native RDP encryption, this is the type of cert being used.


type: keyword

--

*`zeek.rdp.cert.count`*::
+
--
The number of certs seen. X.509 can transfer an entire certificate chain.


type: integer

--

*`zeek.rdp.cert.permanent`*::
+
--
Indicates if the provided certificate or certificate chain is permanent or temporary.


type: boolean

--


*`zeek.rdp.encryption.level`*::
+
--
Encryption level of the connection.


type: keyword

--

*`zeek.rdp.encryption.method`*::
+
--
Encryption method of the connection.


type: keyword

--

*`zeek.rdp.done`*::
+
--
Track status of logging RDP connections.


type: boolean

--

*`zeek.rdp.ssl`*::
+
--
(present if policy/protocols/rdp/indicate_ssl.bro is loaded)
Flag the connection if it was seen over SSL.


type: boolean

--

[float]
=== rfb

Fields exported by the Zeek RFB log.





*`zeek.rfb.version.client.major`*::
+
--
Major version of the client.


type: keyword

--

*`zeek.rfb.version.client.minor`*::
+
--
Minor version of the client.


type: keyword

--


*`zeek.rfb.version.server.major`*::
+
--
Major version of the server.


type: keyword

--

*`zeek.rfb.version.server.minor`*::
+
--
Minor version of the server.


type: keyword

--


*`zeek.rfb.auth.success`*::
+
--
Whether or not authentication was successful.


type: boolean

--

*`zeek.rfb.auth.method`*::
+
--
Identifier of authentication method used.


type: keyword

--

*`zeek.rfb.share_flag`*::
+
--
Whether the client has an exclusive or a shared session.


type: boolean

--

*`zeek.rfb.desktop_name`*::
+
--
Name of the screen that is being shared.


type: keyword

--

*`zeek.rfb.width`*::
+
--
Width of the screen that is being shared.


type: integer

--

*`zeek.rfb.height`*::
+
--
Height of the screen that is being shared.


type: integer

--

[float]
=== sip

Fields exported by the Zeek SIP log.



*`zeek.sip.transaction_depth`*::
+
--
Represents the pipelined depth into the connection of this request/response transaction.


type: integer

--


*`zeek.sip.sequence.method`*::
+
--
Verb used in the SIP request (INVITE, REGISTER etc.).


type: keyword

--

*`zeek.sip.sequence.number`*::
+
--
Contents of the CSeq: header from the client.


type: keyword

--

*`zeek.sip.uri`*::
+
--
URI used in the request.


type: keyword

--

*`zeek.sip.date`*::
+
--
Contents of the Date: header from the client.


type: keyword

--


*`zeek.sip.request.from`*::
+
--
Contents of the request From: header Note: The tag= value that's usually appended to the sender is stripped off and not logged.


type: keyword

--

*`zeek.sip.request.to`*::
+
--
Contents of the To: header.


type: keyword

--

*`zeek.sip.request.path`*::
+
--
The client message transmission path, as extracted from the headers.


type: keyword

--

*`zeek.sip.request.body_length`*::
+
--
Contents of the Content-Length: header from the client.


type: long

--


*`zeek.sip.response.from`*::
+
--
Contents of the response From: header Note: The tag= value that's usually appended to the sender is stripped off and not logged.


type: keyword

--

*`zeek.sip.response.to`*::
+
--
Contents of the response To: header.


type: keyword

--

*`zeek.sip.response.path`*::
+
--
The server message transmission path, as extracted from the headers.


type: keyword

--

*`zeek.sip.response.body_length`*::
+
--
Contents of the Content-Length: header from the server.


type: long

--

*`zeek.sip.reply_to`*::
+
--
Contents of the Reply-To: header.


type: keyword

--

*`zeek.sip.call_id`*::
+
--
Contents of the Call-ID: header from the client.


type: keyword

--

*`zeek.sip.subject`*::
+
--
Contents of the Subject: header from the client.


type: keyword

--

*`zeek.sip.user_agent`*::
+
--
Contents of the User-Agent: header from the client.


type: keyword

--


*`zeek.sip.status.code`*::
+
--
Status code returned by the server.


type: integer

--

*`zeek.sip.status.msg`*::
+
--
Status message returned by the server.


type: keyword

--

*`zeek.sip.warning`*::
+
--
Contents of the Warning: header.


type: keyword

--

*`zeek.sip.content_type`*::
+
--
Contents of the Content-Type: header from the server.


type: keyword

--

[float]
=== smb_cmd

Fields exported by the Zeek smb_cmd log.



*`zeek.smb_cmd.command`*::
+
--
The command sent by the client.


type: keyword

--

*`zeek.smb_cmd.sub_command`*::
+
--
The subcommand sent by the client, if present.


type: keyword

--

*`zeek.smb_cmd.argument`*::
+
--
Command argument sent by the client, if any.


type: keyword

--

*`zeek.smb_cmd.status`*::
+
--
Server reply to the client's command.


type: keyword

--

*`zeek.smb_cmd.rtt`*::
+
--
Round trip time from the request to the response.


type: double

--

*`zeek.smb_cmd.version`*::
+
--
Version of SMB for the command.


type: keyword

--

*`zeek.smb_cmd.username`*::
+
--
Authenticated username, if available.


type: keyword

--

*`zeek.smb_cmd.tree`*::
+
--
If this is related to a tree, this is the tree that was used for the current command.


type: keyword

--

*`zeek.smb_cmd.tree_service`*::
+
--
The type of tree (disk share, printer share, named pipe, etc.).


type: keyword

--

[float]
=== file

If the command referenced a file, store it here.



*`zeek.smb_cmd.file.name`*::
+
--
Filename if one was seen.


type: keyword

--

*`zeek.smb_cmd.file.action`*::
+
--
Action this log record represents.


type: keyword

--

*`zeek.smb_cmd.file.uid`*::
+
--
UID of the referenced file.


type: keyword

--


*`zeek.smb_cmd.file.host.tx`*::
+
--
Address of the transmitting host.


type: ip

--

*`zeek.smb_cmd.file.host.rx`*::
+
--
Address of the receiving host.


type: ip

--

*`zeek.smb_cmd.smb1_offered_dialects`*::
+
--
Present if base/protocols/smb/smb1-main.bro is loaded.
Dialects offered by the client.


type: keyword

--

*`zeek.smb_cmd.smb2_offered_dialects`*::
+
--
Present if base/protocols/smb/smb2-main.bro is loaded.
Dialects offered by the client.


type: integer

--

[float]
=== smb_files

Fields exported by the Zeek SMB Files log.



*`zeek.smb_files.action`*::
+
--
Action this log record represents.


type: keyword

--

*`zeek.smb_files.fid`*::
+
--
ID referencing this file.


type: integer

--

*`zeek.smb_files.name`*::
+
--
Filename if one was seen.


type: keyword

--

*`zeek.smb_files.path`*::
+
--
Path pulled from the tree this file was transferred to or from.


type: keyword

--

*`zeek.smb_files.previous_name`*::
+
--
If the rename action was seen, this will be the file's previous name.


type: keyword

--

*`zeek.smb_files.size`*::
+
--
Byte size of the file.


type: long

--

[float]
=== times

Timestamps of the file.



*`zeek.smb_files.times.accessed`*::
+
--
The file's access time.


type: date

--

*`zeek.smb_files.times.changed`*::
+
--
The file's change time.


type: date

--

*`zeek.smb_files.times.created`*::
+
--
The file's create time.


type: date

--

*`zeek.smb_files.times.modified`*::
+
--
The file's modify time.


type: date

--

*`zeek.smb_files.uuid`*::
+
--
UUID referencing this file if DCE/RPC.


type: keyword

--

[float]
=== smb_mapping

Fields exported by the Zeek SMB_Mapping log.



*`zeek.smb_mapping.path`*::
+
--
Name of the tree path.


type: keyword

--

*`zeek.smb_mapping.service`*::
+
--
The type of resource of the tree (disk share, printer share, named pipe, etc.).


type: keyword

--

*`zeek.smb_mapping.native_file_system`*::
+
--
File system of the tree.


type: keyword

--

*`zeek.smb_mapping.share_type`*::
+
--
If this is SMB2, a share type will be included. For SMB1, the type of share
will be deduced and included as well.


type: keyword

--

[float]
=== smtp

Fields exported by the Zeek SMTP log.



*`zeek.smtp.transaction_depth`*::
+
--
A count to represent the depth of this message transaction in a single connection where multiple messages were transferred.


type: integer

--

*`zeek.smtp.helo`*::
+
--
Contents of the Helo header.


type: keyword

--

*`zeek.smtp.mail_from`*::
+
--
Email addresses found in the MAIL FROM header.


type: keyword

--

*`zeek.smtp.rcpt_to`*::
+
--
Email addresses found in the RCPT TO header.


type: keyword

--

*`zeek.smtp.date`*::
+
--
Contents of the Date header.


type: date

--

*`zeek.smtp.from`*::
+
--
Contents of the From header.


type: keyword

--

*`zeek.smtp.to`*::
+
--
Contents of the To header.


type: keyword

--

*`zeek.smtp.cc`*::
+
--
Contents of the CC header.


type: keyword

--

*`zeek.smtp.reply_to`*::
+
--
Contents of the ReplyTo header.


type: keyword

--

*`zeek.smtp.msg_id`*::
+
--
Contents of the MsgID header.


type: keyword

--

*`zeek.smtp.in_reply_to`*::
+
--
Contents of the In-Reply-To header.


type: keyword

--

*`zeek.smtp.subject`*::
+
--
Contents of the Subject header.


type: keyword

--

*`zeek.smtp.x_originating_ip`*::
+
--
Contents of the X-Originating-IP header.


type: keyword

--

*`zeek.smtp.first_received`*::
+
--
Contents of the first Received header.


type: keyword

--

*`zeek.smtp.second_received`*::
+
--
Contents of the second Received header.


type: keyword

--

*`zeek.smtp.last_reply`*::
+
--
The last message that the server sent to the client.


type: keyword

--

*`zeek.smtp.path`*::
+
--
The message transmission path, as extracted from the headers.


type: ip

--

*`zeek.smtp.user_agent`*::
+
--
Value of the User-Agent header from the client.


type: keyword

--

*`zeek.smtp.tls`*::
+
--
Indicates that the connection has switched to using TLS.


type: boolean

--

*`zeek.smtp.process_received_from`*::
+
--
Indicates if the "Received: from" headers should still be processed.


type: boolean

--

*`zeek.smtp.has_client_activity`*::
+
--
Indicates if client activity has been seen, but not yet logged.


type: boolean

--

*`zeek.smtp.fuids`*::
+
--
(present if base/protocols/smtp/files.bro is loaded)
An ordered vector of file unique IDs seen attached to the message.


type: keyword

--

*`zeek.smtp.is_webmail`*::
+
--
Indicates if the message was sent through a webmail interface.


type: boolean

--

[float]
=== snmp

Fields exported by the Zeek SNMP log.



*`zeek.snmp.duration`*::
+
--
The amount of time between the first packet beloning to the SNMP session and the latest one seen.


type: double

--

*`zeek.snmp.version`*::
+
--
The version of SNMP being used.


type: keyword

--

*`zeek.snmp.community`*::
+
--
The community string of the first SNMP packet associated with the session. This is used as part of SNMP's (v1 and v2c) administrative/security framework. See RFC 1157 or RFC 1901.


type: keyword

--


*`zeek.snmp.get.requests`*::
+
--
The number of variable bindings in GetRequest/GetNextRequest PDUs seen for the session.


type: integer

--

*`zeek.snmp.get.bulk_requests`*::
+
--
The number of variable bindings in GetBulkRequest PDUs seen for the session.


type: integer

--

*`zeek.snmp.get.responses`*::
+
--
The number of variable bindings in GetResponse/Response PDUs seen for the session.


type: integer

--


*`zeek.snmp.set.requests`*::
+
--
The number of variable bindings in SetRequest PDUs seen for the session.


type: integer

--

*`zeek.snmp.display_string`*::
+
--
A system description of the SNMP responder endpoint.


type: keyword

--

*`zeek.snmp.up_since`*::
+
--
The time at which the SNMP responder endpoint claims it's been up since.


type: date

--

[float]
=== socks

Fields exported by the Zeek SOCKS log.



*`zeek.socks.version`*::
+
--
Protocol version of SOCKS.


type: integer

--

*`zeek.socks.user`*::
+
--
Username used to request a login to the proxy.


type: keyword

--

*`zeek.socks.password`*::
+
--
Password used to request a login to the proxy.


type: keyword

--

*`zeek.socks.status`*::
+
--
Server status for the attempt at using the proxy.


type: keyword

--


*`zeek.socks.request.host`*::
+
--
Client requested SOCKS address. Could be an address, a name or both.


type: keyword

--

*`zeek.socks.request.port`*::
+
--
Client requested port.


type: integer

--


*`zeek.socks.bound.host`*::
+
--
Server bound address. Could be an address, a name or both.


type: keyword

--

*`zeek.socks.bound.port`*::
+
--
Server bound port.


type: integer

--

*`zeek.socks.capture_password`*::
+
--
Determines if the password will be captured for this request.


type: boolean

--

[float]
=== ssh

Fields exported by the Zeek SSH log.



*`zeek.ssh.client`*::
+
--
The client's version string.


type: keyword

--

*`zeek.ssh.direction`*::
+
--
Direction of the connection. If the client was a local host logging into
an external host, this would be OUTBOUND. INBOUND would be set for the
opposite situation.


type: keyword

--

*`zeek.ssh.host_key`*::
+
--
The server's key thumbprint.


type: keyword

--

*`zeek.ssh.server`*::
+
--
The server's version string.


type: keyword

--

*`zeek.ssh.version`*::
+
--
SSH major version (1 or 2).


type: integer

--

[float]
=== algorithm

Cipher algorithms used in this session.



*`zeek.ssh.algorithm.cipher`*::
+
--
The encryption algorithm in use.


type: keyword

--

*`zeek.ssh.algorithm.compression`*::
+
--
The compression algorithm in use.


type: keyword

--

*`zeek.ssh.algorithm.host_key`*::
+
--
The server host key's algorithm.


type: keyword

--

*`zeek.ssh.algorithm.key_exchange`*::
+
--
The key exchange algorithm in use.


type: keyword

--

*`zeek.ssh.algorithm.mac`*::
+
--
The signing (MAC) algorithm in use.


type: keyword

--


*`zeek.ssh.auth.attempts`*::
+
--
The number of authentication attemps we observed. There's always at
least one, since some servers might support no authentication at all.
It's important to note that not all of these are failures, since some
servers require two-factor auth (e.g. password AND pubkey).


type: integer

--

*`zeek.ssh.auth.success`*::
+
--
Authentication result.


type: boolean

--

[float]
=== ssl

Fields exported by the Zeek SSL log.



*`zeek.ssl.version`*::
+
--
SSL/TLS version that was logged.


type: keyword

--

*`zeek.ssl.cipher`*::
+
--
SSL/TLS cipher suite that was logged.


type: keyword

--

*`zeek.ssl.curve`*::
+
--
Elliptic curve that was logged when using ECDH/ECDHE.


type: keyword

--

*`zeek.ssl.resumed`*::
+
--
Flag to indicate if the session was resumed reusing the key material exchanged in an
earlier connection.


type: boolean

--

*`zeek.ssl.next_protocol`*::
+
--
Next protocol the server chose using the application layer next protocol extension.


type: keyword

--

*`zeek.ssl.established`*::
+
--
Flag to indicate if this ssl session has been established successfully.


type: boolean

--


*`zeek.ssl.validation.status`*::
+
--
Result of certificate validation for this connection.


type: keyword

--

*`zeek.ssl.validation.code`*::
+
--
Result of certificate validation for this connection, given as OpenSSL validation code.


type: keyword

--

*`zeek.ssl.last_alert`*::
+
--
Last alert that was seen during the connection.


type: keyword

--


*`zeek.ssl.server.name`*::
+
--
Value of the Server Name Indicator SSL/TLS extension. It indicates the server name
that the client was requesting.


type: keyword

--

*`zeek.ssl.server.cert_chain`*::
+
--
Chain of certificates offered by the server to validate its complete signing chain.


type: keyword

--

*`zeek.ssl.server.cert_chain_fuids`*::
+
--
An ordered vector of certificate file identifiers for the certificates offered by the server.


type: keyword

--

[float]
=== issuer

Subject of the signer of the X.509 certificate offered by the server.



*`zeek.ssl.server.issuer.common_name`*::
+
--
Common name of the signer of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.issuer.country`*::
+
--
Country code of the signer of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.issuer.locality`*::
+
--
Locality of the signer of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.issuer.organization`*::
+
--
Organization of the signer of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.issuer.organizational_unit`*::
+
--
Organizational unit of the signer of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.issuer.state`*::
+
--
State or province name of the signer of the X.509 certificate offered by the server.


type: keyword

--

[float]
=== subject

Subject of the X.509 certificate offered by the server.



*`zeek.ssl.server.subject.common_name`*::
+
--
Common name of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.subject.country`*::
+
--
Country code of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.subject.locality`*::
+
--
Locality of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.subject.organization`*::
+
--
Organization of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.subject.organizational_unit`*::
+
--
Organizational unit of the X.509 certificate offered by the server.


type: keyword

--

*`zeek.ssl.server.subject.state`*::
+
--
State or province name of the X.509 certificate offered by the server.


type: keyword

--


*`zeek.ssl.client.cert_chain`*::
+
--
Chain of certificates offered by the client to validate its complete signing chain.


type: keyword

--

*`zeek.ssl.client.cert_chain_fuids`*::
+
--
An ordered vector of certificate file identifiers for the certificates offered by the client.


type: keyword

--

[float]
=== issuer

Subject of the signer of the X.509 certificate offered by the client.



*`zeek.ssl.client.issuer.common_name`*::
+
--
Common name of the signer of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.issuer.country`*::
+
--
Country code of the signer of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.issuer.locality`*::
+
--
Locality of the signer of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.issuer.organization`*::
+
--
Organization of the signer of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.issuer.organizational_unit`*::
+
--
Organizational unit of the signer of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.issuer.state`*::
+
--
State or province name of the signer of the X.509 certificate offered by the client.


type: keyword

--

[float]
=== subject

Subject of the X.509 certificate offered by the client.



*`zeek.ssl.client.subject.common_name`*::
+
--
Common name of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.subject.country`*::
+
--
Country code of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.subject.locality`*::
+
--
Locality of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.subject.organization`*::
+
--
Organization of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.subject.organizational_unit`*::
+
--
Organizational unit of the X.509 certificate offered by the client.


type: keyword

--

*`zeek.ssl.client.subject.state`*::
+
--
State or province name of the X.509 certificate offered by the client.


type: keyword

--

[float]
=== stats

Fields exported by the Zeek stats log.



*`zeek.stats.peer`*::
+
--
Peer that generated this log. Mostly for clusters.


type: keyword

--

*`zeek.stats.memory`*::
+
--
Amount of memory currently in use in MB.


type: integer

--


*`zeek.stats.packets.processed`*::
+
--
Number of packets processed since the last stats interval.


type: long

--

*`zeek.stats.packets.dropped`*::
+
--
Number of packets dropped since the last stats interval if reading live traffic.


type: long

--

*`zeek.stats.packets.received`*::
+
--
Number of packets seen on the link since the last stats interval if reading live traffic.


type: long

--


*`zeek.stats.bytes.received`*::
+
--
Number of bytes received since the last stats interval if reading live traffic.


type: long

--



*`zeek.stats.connections.tcp.active`*::
+
--
TCP connections currently in memory.


type: integer

--

*`zeek.stats.connections.tcp.count`*::
+
--
TCP connections seen since last stats interval.


type: integer

--


*`zeek.stats.connections.udp.active`*::
+
--
UDP connections currently in memory.


type: integer

--

*`zeek.stats.connections.udp.count`*::
+
--
UDP connections seen since last stats interval.


type: integer

--


*`zeek.stats.connections.icmp.active`*::
+
--
ICMP connections currently in memory.


type: integer

--

*`zeek.stats.connections.icmp.count`*::
+
--
ICMP connections seen since last stats interval.


type: integer

--


*`zeek.stats.events.processed`*::
+
--
Number of events processed since the last stats interval.


type: integer

--

*`zeek.stats.events.queued`*::
+
--
Number of events that have been queued since the last stats interval.


type: integer

--


*`zeek.stats.timers.count`*::
+
--
Number of timers scheduled since last stats interval.


type: integer

--

*`zeek.stats.timers.active`*::
+
--
Current number of scheduled timers.


type: integer

--


*`zeek.stats.files.count`*::
+
--
Number of files seen since last stats interval.


type: integer

--

*`zeek.stats.files.active`*::
+
--
Current number of files actively being seen.


type: integer

--


*`zeek.stats.dns_requests.count`*::
+
--
Number of DNS requests seen since last stats interval.


type: integer

--

*`zeek.stats.dns_requests.active`*::
+
--
Current number of DNS requests awaiting a reply.


type: integer

--


*`zeek.stats.reassembly_size.tcp`*::
+
--
Current size of TCP data in reassembly.


type: integer

--

*`zeek.stats.reassembly_size.file`*::
+
--
Current size of File data in reassembly.


type: integer

--

*`zeek.stats.reassembly_size.frag`*::
+
--
Current size of packet fragment data in reassembly.


type: integer

--

*`zeek.stats.reassembly_size.unknown`*::
+
--
Current size of unknown data in reassembly (this is only PIA buffer right now).


type: integer

--

*`zeek.stats.timestamp_lag`*::
+
--
Lag between the wall clock and packet timestamps if reading live traffic.


type: integer

--

[float]
=== syslog

Fields exported by the Zeek syslog log.



*`zeek.syslog.facility`*::
+
--
Syslog facility for the message.


type: keyword

--

*`zeek.syslog.severity`*::
+
--
Syslog severity for the message.


type: keyword

--

*`zeek.syslog.message`*::
+
--
The plain text message.


type: keyword

--

[float]
=== tunnel

Fields exported by the Zeek SSH log.



*`zeek.tunnel.type`*::
+
--
The type of tunnel.


type: keyword

--

*`zeek.tunnel.action`*::
+
--
The type of activity that occurred.


type: keyword

--

[float]
=== weird

Fields exported by the Zeek Weird log.



*`zeek.weird.name`*::
+
--
The name of the weird that occurred.


type: keyword

--

*`zeek.weird.additional_info`*::
+
--
Additional information accompanying the weird if any.


type: keyword

--

*`zeek.weird.notice`*::
+
--
Indicate if this weird was also turned into a notice.


type: boolean

--

*`zeek.weird.peer`*::
+
--
The peer that originated this weird. This is helpful in cluster deployments if a particular cluster node is having trouble to help identify which node is having trouble.


type: keyword

--

*`zeek.weird.identifier`*::
+
--
This field is to be provided when a weird is generated for the purpose of deduplicating weirds. The identifier string should be unique for a single instance of the weird. This field is used to define when a weird is conceptually a duplicate of a previous weird.


type: keyword

--

[float]
=== x509

Fields exported by the Zeek x509 log.



*`zeek.x509.id`*::
+
--
File id of this certificate.


type: keyword

--

[float]
=== certificate

Basic information about the certificate.



*`zeek.x509.certificate.version`*::
+
--
Version number.


type: integer

--

*`zeek.x509.certificate.serial`*::
+
--
Serial number.


type: keyword

--

[float]
=== subject

Subject.



*`zeek.x509.certificate.subject.country`*::
+
--
Country provided in the certificate subject.


type: keyword

--

*`zeek.x509.certificate.subject.common_name`*::
+
--
Common name provided in the certificate subject.


type: keyword

--

*`zeek.x509.certificate.subject.locality`*::
+
--
Locality provided in the certificate subject.


type: keyword

--

*`zeek.x509.certificate.subject.organization`*::
+
--
Organization provided in the certificate subject.


type: keyword

--

*`zeek.x509.certificate.subject.organizational_unit`*::
+
--
Organizational unit provided in the certificate subject.


type: keyword

--

*`zeek.x509.certificate.subject.state`*::
+
--
State or province provided in the certificate subject.


type: keyword

--

[float]
=== issuer

Issuer.



*`zeek.x509.certificate.issuer.country`*::
+
--
Country provided in the certificate issuer field.


type: keyword

--

*`zeek.x509.certificate.issuer.common_name`*::
+
--
Common name provided in the certificate issuer field.


type: keyword

--

*`zeek.x509.certificate.issuer.locality`*::
+
--
Locality provided in the certificate issuer field.


type: keyword

--

*`zeek.x509.certificate.issuer.organization`*::
+
--
Organization provided in the certificate issuer field.


type: keyword

--

*`zeek.x509.certificate.issuer.organizational_unit`*::
+
--
Organizational unit provided in the certificate issuer field.


type: keyword

--

*`zeek.x509.certificate.issuer.state`*::
+
--
State or province provided in the certificate issuer field.


type: keyword

--

*`zeek.x509.certificate.common_name`*::
+
--
Last (most specific) common name.


type: keyword

--

[float]
=== valid

Certificate validity timestamps



*`zeek.x509.certificate.valid.from`*::
+
--
Timestamp before when certificate is not valid.


type: date

--

*`zeek.x509.certificate.valid.until`*::
+
--
Timestamp after when certificate is not valid.


type: date

--


*`zeek.x509.certificate.key.algorithm`*::
+
--
Name of the key algorithm.


type: keyword

--

*`zeek.x509.certificate.key.type`*::
+
--
Key type, if key parseable by openssl (either rsa, dsa or ec).


type: keyword

--

*`zeek.x509.certificate.key.length`*::
+
--
Key length in bits.


type: integer

--

*`zeek.x509.certificate.signature_algorithm`*::
+
--
Name of the signature algorithm.


type: keyword

--

*`zeek.x509.certificate.exponent`*::
+
--
Exponent, if RSA-certificate.


type: keyword

--

*`zeek.x509.certificate.curve`*::
+
--
Curve, if EC-certificate.


type: keyword

--

[float]
=== san

Subject alternative name extension of the certificate.



*`zeek.x509.san.dns`*::
+
--
List of DNS entries in SAN.


type: keyword

--

*`zeek.x509.san.uri`*::
+
--
List of URI entries in SAN.


type: keyword

--

*`zeek.x509.san.email`*::
+
--
List of email entries in SAN.


type: keyword

--

*`zeek.x509.san.ip`*::
+
--
List of IP entries in SAN.


type: ip

--

*`zeek.x509.san.other_fields`*::
+
--
True if the certificate contained other, not recognized or parsed name fields.


type: boolean

--

[float]
=== basic_constraints

Basic constraints extension of the certificate.



*`zeek.x509.basic_constraints.certificate_authority`*::
+
--
CA flag set or not.


type: boolean

--

*`zeek.x509.basic_constraints.path_length`*::
+
--
Maximum path length.


type: integer

--

*`zeek.x509.log_cert`*::
+
--
Present if policy/protocols/ssl/log-hostcerts-only.bro is loaded
Logging of certificate is suppressed if set to F.


type: boolean

--

[[exported-fields-zoom]]
== Zoom fields

Module for handling incoming Zoom webhook requests



[float]
=== zoom

Module for parsing Zoom API Webhooks.



*`zoom.master_account_id`*::
+
--
Master Account related to a specific Sub Account


type: keyword

--

*`zoom.sub_account_id`*::
+
--
Related Sub Account


type: keyword

--

*`zoom.operator_id`*::
+
--
UserID that triggered the event


type: keyword

--

*`zoom.operator`*::
+
--
Username/Email related to the user that triggered the event


type: keyword

--

*`zoom.account_id`*::
+
--
Related accountID to the event


type: keyword

--

*`zoom.timestamp`*::
+
--
Timestamp related to the event


type: date

--

*`zoom.creation_type`*::
+
--
Creation type


type: keyword

--

*`zoom.account.owner_id`*::
+
--
UserID of the user whose sub account was created/disassociated


type: keyword

--

*`zoom.account.email`*::
+
--
Email related to the user the action was performed on


type: keyword

--

*`zoom.account.owner_email`*::
+
--
Email of the user whose sub account was created/disassociated


type: keyword

--

*`zoom.account.account_name`*::
+
--
When an account name is updated, this is the new value set


type: keyword

--

*`zoom.account.account_alias`*::
+
--
When an account alias is updated, this is the new value set


type: keyword

--

*`zoom.account.account_support_name`*::
+
--
When an account support_name is updated, this is the new value set


type: keyword

--

*`zoom.account.account_support_email`*::
+
--
When an account support_email is updated, this is the new value set


type: keyword

--

*`zoom.chat_channel.name`*::
+
--
The name of the channel that has been added/modified/deleted


type: keyword

--

*`zoom.chat_channel.id`*::
+
--
The ID of the channel that has been added/modified/deleted


type: keyword

--

*`zoom.chat_channel.type`*::
+
--
Type of channel related to the event. Can be 1(Invite-Only), 2(Private) or 3(Public)


type: keyword

--

*`zoom.chat_message.id`*::
+
--
Unique ID of the related chat message


type: keyword

--

*`zoom.chat_message.type`*::
+
--
Type of message, can be either "to_contact" or "to_channel"


type: keyword

--

*`zoom.chat_message.session_id`*::
+
--
SessionID for the channel related to the message


type: keyword

--

*`zoom.chat_message.contact_email`*::
+
--
Email address related to the user sending the message


type: keyword

--

*`zoom.chat_message.contact_id`*::
+
--
UserID belonging to the user receiving a message


type: keyword

--

*`zoom.chat_message.channel_id`*::
+
--
ChannelID related to the message


type: keyword

--

*`zoom.chat_message.channel_name`*::
+
--
Channel name related to the message


type: keyword

--

*`zoom.chat_message.message`*::
+
--
A string containing the full message that was sent


type: keyword

--

*`zoom.meeting.id`*::
+
--
Unique ID of the related meeting


type: keyword

--

*`zoom.meeting.uuid`*::
+
--
The UUID of the related meeting


type: keyword

--

*`zoom.meeting.host_id`*::
+
--
The UserID of the configured meeting host


type: keyword

--

*`zoom.meeting.topic`*::
+
--
Topic of the related meeting


type: keyword

--

*`zoom.meeting.type`*::
+
--
Type of meeting created


type: keyword

--

*`zoom.meeting.start_time`*::
+
--
Date and time the meeting started


type: date

--

*`zoom.meeting.timezone`*::
+
--
Which timezone is used for the meeting timestamps


type: keyword

--

*`zoom.meeting.duration`*::
+
--
The duration of a meeting in minutes


type: long

--

*`zoom.meeting.issues`*::
+
--
When a user reports an issue with the meeting, for example: "Unstable audio quality"


type: keyword

--

*`zoom.meeting.password`*::
+
--
Password related to the meeting


type: keyword

--

*`zoom.phone.id`*::
+
--
Unique ID for the phone or conversation


type: keyword

--

*`zoom.phone.user_id`*::
+
--
UserID for the phone owner related to a Call Log being completed


type: keyword

--

*`zoom.phone.download_url`*::
+
--
Download URL for the voicemail


type: keyword

--

*`zoom.phone.ringing_start_time`*::
+
--
The timestamp when a ringtone was established to the callee


type: date

--

*`zoom.phone.connected_start_time`*::
+
--
The date and time when a ringtone was established to the callee


type: date

--

*`zoom.phone.answer_start_time`*::
+
--
The date and time when the call was answered


type: date

--

*`zoom.phone.call_end_time`*::
+
--
The date and time when the call ended


type: date

--

*`zoom.phone.call_id`*::
+
--
Unique ID of the related call


type: keyword

--

*`zoom.phone.duration`*::
+
--
Duration of a voicemail in minutes


type: long

--

*`zoom.phone.caller.id`*::
+
--
UserID of the caller related to the voicemail/call


type: keyword

--

*`zoom.phone.caller.user_id`*::
+
--
UserID of the person which initiated the call


type: keyword

--

*`zoom.phone.caller.number_type`*::
+
--
The type of number, can be 1(Internal) or 2(External)


type: keyword

--

*`zoom.phone.caller.name`*::
+
--
The name of the related callee


type: keyword

--

*`zoom.phone.caller.phone_number`*::
+
--
Phone Number of the caller related to the call


type: keyword

--

*`zoom.phone.caller.extension_type`*::
+
--
Extension type of the caller number, can be user, callQueue, autoReceptionist or shareLineGroup


type: keyword

--

*`zoom.phone.caller.extension_number`*::
+
--
Extension number of the caller


type: keyword

--

*`zoom.phone.caller.timezone`*::
+
--
Timezone of the caller


type: keyword

--

*`zoom.phone.caller.device_type`*::
+
--
Device type used by the caller


type: keyword

--

*`zoom.phone.callee.id`*::
+
--
UserID of the callee related to the voicemail/call


type: keyword

--

*`zoom.phone.callee.user_id`*::
+
--
UserID of the related callee of a voicemail/call


type: keyword

--

*`zoom.phone.callee.name`*::
+
--
The name of the related callee


type: keyword

--

*`zoom.phone.callee.number_type`*::
+
--
The type of number, can be 1(Internal) or 2(External)


type: keyword

--

*`zoom.phone.callee.phone_number`*::
+
--
Phone Number of the callee related to the call


type: keyword

--

*`zoom.phone.callee.extension_type`*::
+
--
Extension type of the callee number, can be user, callQueue, autoReceptionist or shareLineGroup


type: keyword

--

*`zoom.phone.callee.extension_number`*::
+
--
Extension number of the callee related to the call


type: keyword

--

*`zoom.phone.callee.timezone`*::
+
--
Timezone of the callee related to the call


type: keyword

--

*`zoom.phone.callee.device_type`*::
+
--
Device type used by the callee related to the call


type: keyword

--

*`zoom.phone.date_time`*::
+
--
Date and time of the related phone event


type: date

--

*`zoom.recording.id`*::
+
--
Unique ID of the related recording


type: keyword

--

*`zoom.recording.uuid`*::
+
--
UUID of the related recording


type: keyword

--

*`zoom.recording.host_id`*::
+
--
UserID of the host of the meeting that was recorded


type: keyword

--

*`zoom.recording.topic`*::
+
--
Topic of the meeting related to the recording


type: keyword

--

*`zoom.recording.type`*::
+
--
Type of recording, can be multiple type of values, please check Zoom documentation


type: keyword

--

*`zoom.recording.start_time`*::
+
--
The date and time when the recording started


type: date

--

*`zoom.recording.timezone`*::
+
--
The timezone used for the recording date


type: keyword

--

*`zoom.recording.duration`*::
+
--
Duration of the recording in minutes


type: long

--

*`zoom.recording.share_url`*::
+
--
The URL to access the recording


type: keyword

--

*`zoom.recording.total_size`*::
+
--
Total size of the recording in bytes


type: long

--

*`zoom.recording.recording_count`*::
+
--
Number of recording files related to the recording


type: long

--

*`zoom.recording.recording_file.recording_start`*::
+
--
The date and time the recording started


type: date

--

*`zoom.recording.recording_file.recording_end`*::
+
--
The date and time the recording finished


type: date

--

*`zoom.recording.host_email`*::
+
--
Email address of the host related to the meeting that was recorded


type: keyword

--

*`zoom.user.id`*::
+
--
UserID related to the user event


type: keyword

--

*`zoom.user.first_name`*::
+
--
User first name related to the user event


type: keyword

--

*`zoom.user.last_name`*::
+
--
User last name related to the user event


type: keyword

--

*`zoom.user.email`*::
+
--
User email related to the user event


type: keyword

--

*`zoom.user.type`*::
+
--
User type related to the user event


type: keyword

--

*`zoom.user.phone_number`*::
+
--
User phone number related to the user event


type: keyword

--

*`zoom.user.phone_country`*::
+
--
User country code related to the user event


type: keyword

--

*`zoom.user.company`*::
+
--
User company related to the user event


type: keyword

--

*`zoom.user.pmi`*::
+
--
User personal meeting ID related to the user event


type: keyword

--

*`zoom.user.use_pmi`*::
+
--
If a user has PMI enabled


type: boolean

--

*`zoom.user.pic_url`*::
+
--
Full URL to the profile picture used by the user


type: keyword

--

*`zoom.user.vanity_name`*::
+
--
Name of the personal meeting room related to the user event


type: keyword

--

*`zoom.user.timezone`*::
+
--
Timezone configured for the user


type: keyword

--

*`zoom.user.language`*::
+
--
Language configured for the user


type: keyword

--

*`zoom.user.host_key`*::
+
--
Host key set for the user


type: keyword

--

*`zoom.user.role`*::
+
--
The configured role for the user


type: keyword

--

*`zoom.user.dept`*::
+
--
The configured departement for the user


type: keyword

--

*`zoom.user.presence_status`*::
+
--
Current presence status of user


type: keyword

--

*`zoom.user.personal_notes`*::
+
--
Personal notes for the User


type: keyword

--

*`zoom.user.client_type`*::
+
--
Type of client used by the user. Can be browser, mac, win, iphone or android


type: keyword

--

*`zoom.user.version`*::
+
--
Version of the client used by the user


type: keyword

--

*`zoom.webinar.id`*::
+
--
Unique ID for the related webinar


type: keyword

--

*`zoom.webinar.join_url`*::
+
--
The URL configured to join the webinar


type: keyword

--

*`zoom.webinar.uuid`*::
+
--
UUID for the related webinar


type: keyword

--

*`zoom.webinar.host_id`*::
+
--
UserID for the configured host of the webinar


type: keyword

--

*`zoom.webinar.topic`*::
+
--
Meeting topic of the related webinar


type: keyword

--

*`zoom.webinar.type`*::
+
--
Type of webinar created. Can be either 5(Webinar), 6(Recurring webinar without fixed time) or 9(Recurring webinar with fixed time)


type: keyword

--

*`zoom.webinar.start_time`*::
+
--
The date and time when the webinar started


type: date

--

*`zoom.webinar.timezone`*::
+
--
Timezone used for the dates related to the webinar


type: keyword

--

*`zoom.webinar.duration`*::
+
--
Duration of the webinar in minutes


type: long

--

*`zoom.webinar.agenda`*::
+
--
The configured agenda of the webinar


type: keyword

--

*`zoom.webinar.password`*::
+
--
Password configured to access the webinar


type: keyword

--

*`zoom.webinar.issues`*::
+
--
Any reported issues about a webinar is reported in this field


type: keyword

--

*`zoom.zoomroom.id`*::
+
--
Unique ID of the Zoom room


type: keyword

--

*`zoom.zoomroom.room_name`*::
+
--
The configured name of the Zoom room


type: keyword

--

*`zoom.zoomroom.calendar_name`*::
+
--
Calendar name of the Zoom room


type: keyword

--

*`zoom.zoomroom.calendar_id`*::
+
--
Unique ID of the calendar used by the Zoom room


type: keyword

--

*`zoom.zoomroom.event_id`*::
+
--
Unique ID of the calendar event associated with the Zoom Room


type: keyword

--

*`zoom.zoomroom.change_key`*::
+
--
Key used by Microsoft products integration that represents a specific version of a calendar


type: keyword

--

*`zoom.zoomroom.resource_email`*::
+
--
Email address associated with the calendar in use by the Zoom room


type: keyword

--

*`zoom.zoomroom.email`*::
+
--
Email address associated with the Zoom room itself


type: keyword

--

*`zoom.zoomroom.issue`*::
+
--
Any reported alerts or issues related to the Zoom room or its equipment


type: keyword

--

*`zoom.zoomroom.alert_type`*::
+
--
An integer value representing the type of alert. The list of alert types can be found in the Zoom documentation


type: keyword

--

*`zoom.zoomroom.component`*::
+
--
An integer value representing the type of equipment or component, The list of component types can be found in the Zoom documentation


type: keyword

--

*`zoom.zoomroom.alert_kind`*::
+
--
An integer value showing if the Zoom room alert has been either 1(Triggered) or 2(Cleared)


type: keyword

--

*`zoom.registrant.id`*::
+
--
Unique ID of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.status`*::
+
--
Status of the specific user registration


type: keyword

--

*`zoom.registrant.email`*::
+
--
Email of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.first_name`*::
+
--
First name of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.last_name`*::
+
--
Last name of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.address`*::
+
--
Address of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.city`*::
+
--
City of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.country`*::
+
--
Country of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.zip`*::
+
--
Zip code of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.state`*::
+
--
State of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.phone`*::
+
--
Phone number of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.industry`*::
+
--
Related industry of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.org`*::
+
--
Organization related to the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.job_title`*::
+
--
Job title of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.purchasing_time_frame`*::
+
--
Choosen purchase timeframe of the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.role_in_purchase_process`*::
+
--
Choosen role in a purchase process related to the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.no_of_employees`*::
+
--
Number of employees choosen by the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.comments`*::
+
--
Comments left by the user registering to a meeting or webinar


type: keyword

--

*`zoom.registrant.join_url`*::
+
--
The URL that the registrant can use to join the webinar


type: keyword

--

*`zoom.participant.id`*::
+
--
Unique ID of the participant related to a meeting


type: keyword

--

*`zoom.participant.user_id`*::
+
--
UserID of the participant related to a meeting


type: keyword

--

*`zoom.participant.user_name`*::
+
--
Username of the participant related to a meeting


type: keyword

--

*`zoom.participant.join_time`*::
+
--
The date and time a participant joined a meeting


type: date

--

*`zoom.participant.leave_time`*::
+
--
The date and time a participant left a meeting


type: date

--

*`zoom.participant.sharing_details.link_source`*::
+
--
Method of sharing with dropbox integration


type: keyword

--

*`zoom.participant.sharing_details.content`*::
+
--
Type of content that was shared


type: keyword

--

*`zoom.participant.sharing_details.file_link`*::
+
--
The file link that was shared


type: keyword

--

*`zoom.participant.sharing_details.date_time`*::
+
--
Timestamp the sharing started


type: keyword

--

*`zoom.participant.sharing_details.source`*::
+
--
The file source that was share


type: keyword

--

*`zoom.old_values`*::
+
--
Includes the old values when updating a object like user, meeting, account or webinar


type: flattened

--

*`zoom.settings`*::
+
--
The current active settings related to a object like user, meeting, account or webinar


type: flattened

--

[[exported-fields-zscaler]]
== Zscaler NSS fields

zscaler fields.



*`network.interface.name`*::
+
--
Name of the network interface where the traffic has been observed.


type: keyword

--



*`rsa.internal.msg`*::
+
--
This key is used to capture the raw message that comes into the Log Decoder

type: keyword

--

*`rsa.internal.messageid`*::
+
--
type: keyword

--

*`rsa.internal.event_desc`*::
+
--
type: keyword

--

*`rsa.internal.message`*::
+
--
This key captures the contents of instant messages

type: keyword

--

*`rsa.internal.time`*::
+
--
This is the time at which a session hits a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness.

type: date

--

*`rsa.internal.level`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.msg_id`*::
+
--
This is the Message ID1 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.msg_vid`*::
+
--
This is the Message ID2 value that identifies the exact log parser definition which parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.data`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_server`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_val`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.resource`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.obj_id`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.statement`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.audit_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.entry`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.hcode`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.inode`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.resource_class`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.dead`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.feed_desc`*::
+
--
This is used to capture the description of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.feed_name`*::
+
--
This is used to capture the name of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.cid`*::
+
--
This is the unique identifier used to identify a NetWitness Concentrator. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_class`*::
+
--
This is the Classification of the Log Event Source under a predefined fixed set of Event Source Classifications. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_group`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_host`*::
+
--
This is the Hostname of the log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_ip`*::
+
--
This is the IPv4 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_ipv6`*::
+
--
This is the IPv6 address of the Log Event Source sending the logs to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.device_type`*::
+
--
This is the name of the log parser which parsed a given session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.device_type_id`*::
+
--
Deprecated key defined only in table map.

type: long

--

*`rsa.internal.did`*::
+
--
This is the unique identifier used to identify a NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.entropy_req`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.entropy_res`*::
+
--
This key is only used by the Entropy Parser, the Meta Type can be either UInt16 or Float32 based on the configuration

type: long

--

*`rsa.internal.event_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.feed_category`*::
+
--
This is used to capture the category of the feed. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.forward_ip`*::
+
--
This key should be used to capture the IPV4 address of a relay system which forwarded the events from the original system to NetWitness.

type: ip

--

*`rsa.internal.forward_ipv6`*::
+
--
This key is used to capture the IPV6 address of a relay system which forwarded the events from the original system to NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: ip

--

*`rsa.internal.header_id`*::
+
--
This is the Header ID value that identifies the exact log parser header definition that parses a particular log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_cid`*::
+
--
This is a unique Identifier of a Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.lc_ctime`*::
+
--
This is the time at which a log is collected in a NetWitness Log Collector. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: date

--

*`rsa.internal.mcb_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte request is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcb_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte response is simply which byte for each side (0 thru 255) was seen the most

type: long

--

*`rsa.internal.mcbc_req`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.mcbc_res`*::
+
--
This key is only used by the Entropy Parser, the most common byte count is the number of times the most common byte (above) was seen in the session streams

type: long

--

*`rsa.internal.medium`*::
+
--
This key is used to identify if it’s a log/packet session or Layer 2 Encapsulation Type. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness. 32 = log, 33 = correlation session, &lt; 32 is packet session

type: long

--

*`rsa.internal.node_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.nwe_callback_id`*::
+
--
This key denotes that event is endpoint related

type: keyword

--

*`rsa.internal.parse_error`*::
+
--
This is a special key that stores any Meta key validation error found while parsing a log session. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.payload_req`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.payload_res`*::
+
--
This key is only used by the Entropy Parser, the payload size metrics are the payload sizes of each session side at the time of parsing. However, in order to keep

type: long

--

*`rsa.internal.process_vid_dst`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the target process.

type: keyword

--

*`rsa.internal.process_vid_src`*::
+
--
Endpoint generates and uses a unique virtual ID to identify any similar group of process. This ID represents the source process.

type: keyword

--

*`rsa.internal.rid`*::
+
--
This is a special ID of the Remote Session created by NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.session_split`*::
+
--
This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.site`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.internal.size`*::
+
--
This is the size of the session as seen by the NetWitness Decoder. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: long

--

*`rsa.internal.sourcefile`*::
+
--
This is the name of the log file or PCAPs that can be imported into NetWitness. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.internal.ubc_req`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.ubc_res`*::
+
--
This key is only used by the Entropy Parser, Unique byte count is the number of unique bytes seen in each stream. 256 would mean all byte values of 0 thru 255 were seen at least once

type: long

--

*`rsa.internal.word`*::
+
--
This is used by the Word Parsing technology to capture the first 5 character of every word in an unparsed log

type: keyword

--


*`rsa.time.event_time`*::
+
--
This key is used to capture the time mentioned in a raw session that represents the actual time an event occured in a standard normalized form

type: date

--

*`rsa.time.duration_time`*::
+
--
This key is used to capture the normalized duration/lifetime in seconds.

type: double

--

*`rsa.time.event_time_str`*::
+
--
This key is used to capture the incomplete time mentioned in a session as a string

type: keyword

--

*`rsa.time.starttime`*::
+
--
This key is used to capture the Start time mentioned in a session in a standard form

type: date

--

*`rsa.time.month`*::
+
--
type: keyword

--

*`rsa.time.day`*::
+
--
type: keyword

--

*`rsa.time.endtime`*::
+
--
This key is used to capture the End time mentioned in a session in a standard form

type: date

--

*`rsa.time.timezone`*::
+
--
This key is used to capture the timezone of the Event Time

type: keyword

--

*`rsa.time.duration_str`*::
+
--
A text string version of the duration

type: keyword

--

*`rsa.time.date`*::
+
--
type: keyword

--

*`rsa.time.year`*::
+
--
type: keyword

--

*`rsa.time.recorded_time`*::
+
--
The event time as recorded by the system the event is collected from. The usage scenario is a multi-tier application where the management layer of the system records it's own timestamp at the time of collection from its child nodes. Must be in timestamp format.

type: date

--

*`rsa.time.datetime`*::
+
--
type: keyword

--

*`rsa.time.effective_time`*::
+
--
This key is the effective time referenced by an individual event in a Standard Timestamp format

type: date

--

*`rsa.time.expire_time`*::
+
--
This key is the timestamp that explicitly refers to an expiration.

type: date

--

*`rsa.time.process_time`*::
+
--
Deprecated, use duration.time

type: keyword

--

*`rsa.time.hour`*::
+
--
type: keyword

--

*`rsa.time.min`*::
+
--
type: keyword

--

*`rsa.time.timestamp`*::
+
--
type: keyword

--

*`rsa.time.event_queue_time`*::
+
--
This key is the Time that the event was queued.

type: date

--

*`rsa.time.p_time1`*::
+
--
type: keyword

--

*`rsa.time.tzone`*::
+
--
type: keyword

--

*`rsa.time.eventtime`*::
+
--
type: keyword

--

*`rsa.time.gmtdate`*::
+
--
type: keyword

--

*`rsa.time.gmttime`*::
+
--
type: keyword

--

*`rsa.time.p_date`*::
+
--
type: keyword

--

*`rsa.time.p_month`*::
+
--
type: keyword

--

*`rsa.time.p_time`*::
+
--
type: keyword

--

*`rsa.time.p_time2`*::
+
--
type: keyword

--

*`rsa.time.p_year`*::
+
--
type: keyword

--

*`rsa.time.expire_time_str`*::
+
--
This key is used to capture incomplete timestamp that explicitly refers to an expiration.

type: keyword

--

*`rsa.time.stamp`*::
+
--
Deprecated key defined only in table map.

type: date

--


*`rsa.misc.action`*::
+
--
type: keyword

--

*`rsa.misc.result`*::
+
--
This key is used to capture the outcome/result string value of an action in a session.

type: keyword

--

*`rsa.misc.severity`*::
+
--
This key is used to capture the severity given the session

type: keyword

--

*`rsa.misc.event_type`*::
+
--
This key captures the event category type as specified by the event source.

type: keyword

--

*`rsa.misc.reference_id`*::
+
--
This key is used to capture an event id from the session directly

type: keyword

--

*`rsa.misc.version`*::
+
--
This key captures Version of the application or OS which is generating the event.

type: keyword

--

*`rsa.misc.disposition`*::
+
--
This key captures the The end state of an action.

type: keyword

--

*`rsa.misc.result_code`*::
+
--
This key is used to capture the outcome/result numeric value of an action in a session

type: keyword

--

*`rsa.misc.category`*::
+
--
This key is used to capture the category of an event given by the vendor in the session

type: keyword

--

*`rsa.misc.obj_name`*::
+
--
This is used to capture name of object

type: keyword

--

*`rsa.misc.obj_type`*::
+
--
This is used to capture type of object

type: keyword

--

*`rsa.misc.event_source`*::
+
--
This key captures Source of the event that’s not a hostname

type: keyword

--

*`rsa.misc.log_session_id`*::
+
--
This key is used to capture a sessionid from the session directly

type: keyword

--

*`rsa.misc.group`*::
+
--
This key captures the Group Name value

type: keyword

--

*`rsa.misc.policy_name`*::
+
--
This key is used to capture the Policy Name only.

type: keyword

--

*`rsa.misc.rule_name`*::
+
--
This key captures the Rule Name

type: keyword

--

*`rsa.misc.context`*::
+
--
This key captures Information which adds additional context to the event.

type: keyword

--

*`rsa.misc.change_new`*::
+
--
This key is used to capture the new values of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.space`*::
+
--
type: keyword

--

*`rsa.misc.client`*::
+
--
This key is used to capture only the name of the client application requesting resources of the server. See the user.agent meta key for capture of the specific user agent identifier or browser identification string.

type: keyword

--

*`rsa.misc.msgIdPart1`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart2`*::
+
--
type: keyword

--

*`rsa.misc.change_old`*::
+
--
This key is used to capture the old value of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.operation_id`*::
+
--
An alert number or operation number. The values should be unique and non-repeating.

type: keyword

--

*`rsa.misc.event_state`*::
+
--
This key captures the current state of the object/item referenced within the event. Describing an on-going event.

type: keyword

--

*`rsa.misc.group_object`*::
+
--
This key captures a collection/grouping of entities. Specific usage

type: keyword

--

*`rsa.misc.node`*::
+
--
Common use case is the node name within a cluster. The cluster name is reflected by the host name.

type: keyword

--

*`rsa.misc.rule`*::
+
--
This key captures the Rule number

type: keyword

--

*`rsa.misc.device_name`*::
+
--
This is used to capture name of the Device associated with the node Like: a physical disk, printer, etc

type: keyword

--

*`rsa.misc.param`*::
+
--
This key is the parameters passed as part of a command or application, etc.

type: keyword

--

*`rsa.misc.change_attrib`*::
+
--
This key is used to capture the name of the attribute that’s changing in a session

type: keyword

--

*`rsa.misc.event_computer`*::
+
--
This key is a windows only concept, where this key is used to capture fully qualified domain name in a windows log.

type: keyword

--

*`rsa.misc.reference_id1`*::
+
--
This key is for Linked ID to be used as an addition to "reference.id"

type: keyword

--

*`rsa.misc.event_log`*::
+
--
This key captures the Name of the event log

type: keyword

--

*`rsa.misc.OS`*::
+
--
This key captures the Name of the Operating System

type: keyword

--

*`rsa.misc.terminal`*::
+
--
This key captures the Terminal Names only

type: keyword

--

*`rsa.misc.msgIdPart3`*::
+
--
type: keyword

--

*`rsa.misc.filter`*::
+
--
This key captures Filter used to reduce result set

type: keyword

--

*`rsa.misc.serial_number`*::
+
--
This key is the Serial number associated with a physical asset.

type: keyword

--

*`rsa.misc.checksum`*::
+
--
This key is used to capture the checksum or hash of the entity such as a file or process. Checksum should be used over checksum.src or checksum.dst when it is unclear whether the entity is a source or target of an action.

type: keyword

--

*`rsa.misc.event_user`*::
+
--
This key is a windows only concept, where this key is used to capture combination of domain name and username in a windows log.

type: keyword

--

*`rsa.misc.virusname`*::
+
--
This key captures the name of the virus

type: keyword

--

*`rsa.misc.content_type`*::
+
--
This key is used to capture Content Type only.

type: keyword

--

*`rsa.misc.group_id`*::
+
--
This key captures Group ID Number (related to the group name)

type: keyword

--

*`rsa.misc.policy_id`*::
+
--
This key is used to capture the Policy ID only, this should be a numeric value, use policy.name otherwise

type: keyword

--

*`rsa.misc.vsys`*::
+
--
This key captures Virtual System Name

type: keyword

--

*`rsa.misc.connection_id`*::
+
--
This key captures the Connection ID

type: keyword

--

*`rsa.misc.reference_id2`*::
+
--
This key is for the 2nd Linked ID. Can be either linked to "reference.id" or "reference.id1" value but should not be used unless the other two variables are in play.

type: keyword

--

*`rsa.misc.sensor`*::
+
--
This key captures Name of the sensor. Typically used in IDS/IPS based devices

type: keyword

--

*`rsa.misc.sig_id`*::
+
--
This key captures IDS/IPS Int Signature ID

type: long

--

*`rsa.misc.port_name`*::
+
--
This key is used for Physical or logical port connection but does NOT include a network port. (Example: Printer port name).

type: keyword

--

*`rsa.misc.rule_group`*::
+
--
This key captures the Rule group name

type: keyword

--

*`rsa.misc.risk_num`*::
+
--
This key captures a Numeric Risk value

type: double

--

*`rsa.misc.trigger_val`*::
+
--
This key captures the Value of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.log_session_id1`*::
+
--
This key is used to capture a Linked (Related) Session ID from the session directly

type: keyword

--

*`rsa.misc.comp_version`*::
+
--
This key captures the Version level of a sub-component of a product.

type: keyword

--

*`rsa.misc.content_version`*::
+
--
This key captures Version level of a signature or database content.

type: keyword

--

*`rsa.misc.hardware_id`*::
+
--
This key is used to capture unique identifier for a device or system (NOT a Mac address)

type: keyword

--

*`rsa.misc.risk`*::
+
--
This key captures the non-numeric risk value

type: keyword

--

*`rsa.misc.event_id`*::
+
--
type: keyword

--

*`rsa.misc.reason`*::
+
--
type: keyword

--

*`rsa.misc.status`*::
+
--
type: keyword

--

*`rsa.misc.mail_id`*::
+
--
This key is used to capture the mailbox id/name

type: keyword

--

*`rsa.misc.rule_uid`*::
+
--
This key is the Unique Identifier for a rule.

type: keyword

--

*`rsa.misc.trigger_desc`*::
+
--
This key captures the Description of the trigger or threshold condition.

type: keyword

--

*`rsa.misc.inout`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid`*::
+
--
type: keyword

--

*`rsa.misc.data_type`*::
+
--
type: keyword

--

*`rsa.misc.msgIdPart4`*::
+
--
type: keyword

--

*`rsa.misc.error`*::
+
--
This key captures All non successful Error codes or responses

type: keyword

--

*`rsa.misc.index`*::
+
--
type: keyword

--

*`rsa.misc.listnum`*::
+
--
This key is used to capture listname or listnumber, primarily for collecting access-list

type: keyword

--

*`rsa.misc.ntype`*::
+
--
type: keyword

--

*`rsa.misc.observed_val`*::
+
--
This key captures the Value observed (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.policy_value`*::
+
--
This key captures the contents of the policy. This contains details about the policy

type: keyword

--

*`rsa.misc.pool_name`*::
+
--
This key captures the name of a resource pool

type: keyword

--

*`rsa.misc.rule_template`*::
+
--
A default set of parameters which are overlayed onto a rule (or rulename) which efffectively constitutes a template

type: keyword

--

*`rsa.misc.count`*::
+
--
type: keyword

--

*`rsa.misc.number`*::
+
--
type: keyword

--

*`rsa.misc.sigcat`*::
+
--
type: keyword

--

*`rsa.misc.type`*::
+
--
type: keyword

--

*`rsa.misc.comments`*::
+
--
Comment information provided in the log message

type: keyword

--

*`rsa.misc.doc_number`*::
+
--
This key captures File Identification number

type: long

--

*`rsa.misc.expected_val`*::
+
--
This key captures the Value expected (from the perspective of the device generating the log).

type: keyword

--

*`rsa.misc.job_num`*::
+
--
This key captures the Job Number

type: keyword

--

*`rsa.misc.spi_dst`*::
+
--
Destination SPI Index

type: keyword

--

*`rsa.misc.spi_src`*::
+
--
Source SPI Index

type: keyword

--

*`rsa.misc.code`*::
+
--
type: keyword

--

*`rsa.misc.agent_id`*::
+
--
This key is used to capture agent id

type: keyword

--

*`rsa.misc.message_body`*::
+
--
This key captures the The contents of the message body.

type: keyword

--

*`rsa.misc.phone`*::
+
--
type: keyword

--

*`rsa.misc.sig_id_str`*::
+
--
This key captures a string object of the sigid variable.

type: keyword

--

*`rsa.misc.cmd`*::
+
--
type: keyword

--

*`rsa.misc.misc`*::
+
--
type: keyword

--

*`rsa.misc.name`*::
+
--
type: keyword

--

*`rsa.misc.cpu`*::
+
--
This key is the CPU time used in the execution of the event being recorded.

type: long

--

*`rsa.misc.event_desc`*::
+
--
This key is used to capture a description of an event available directly or inferred

type: keyword

--

*`rsa.misc.sig_id1`*::
+
--
This key captures IDS/IPS Int Signature ID. This must be linked to the sig.id

type: long

--

*`rsa.misc.im_buddyid`*::
+
--
type: keyword

--

*`rsa.misc.im_client`*::
+
--
type: keyword

--

*`rsa.misc.im_userid`*::
+
--
type: keyword

--

*`rsa.misc.pid`*::
+
--
type: keyword

--

*`rsa.misc.priority`*::
+
--
type: keyword

--

*`rsa.misc.context_subject`*::
+
--
This key is to be used in an audit context where the subject is the object being identified

type: keyword

--

*`rsa.misc.context_target`*::
+
--
type: keyword

--

*`rsa.misc.cve`*::
+
--
This key captures CVE (Common Vulnerabilities and Exposures) - an identifier for known information security vulnerabilities.

type: keyword

--

*`rsa.misc.fcatnum`*::
+
--
This key captures Filter Category Number. Legacy Usage

type: keyword

--

*`rsa.misc.library`*::
+
--
This key is used to capture library information in mainframe devices

type: keyword

--

*`rsa.misc.parent_node`*::
+
--
This key captures the Parent Node Name. Must be related to node variable.

type: keyword

--

*`rsa.misc.risk_info`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.tcp_flags`*::
+
--
This key is captures the TCP flags set in any packet of session

type: long

--

*`rsa.misc.tos`*::
+
--
This key describes the type of service

type: long

--

*`rsa.misc.vm_target`*::
+
--
VMWare Target **VMWARE** only varaible.

type: keyword

--

*`rsa.misc.workspace`*::
+
--
This key captures Workspace Description

type: keyword

--

*`rsa.misc.command`*::
+
--
type: keyword

--

*`rsa.misc.event_category`*::
+
--
type: keyword

--

*`rsa.misc.facilityname`*::
+
--
type: keyword

--

*`rsa.misc.forensic_info`*::
+
--
type: keyword

--

*`rsa.misc.jobname`*::
+
--
type: keyword

--

*`rsa.misc.mode`*::
+
--
type: keyword

--

*`rsa.misc.policy`*::
+
--
type: keyword

--

*`rsa.misc.policy_waiver`*::
+
--
type: keyword

--

*`rsa.misc.second`*::
+
--
type: keyword

--

*`rsa.misc.space1`*::
+
--
type: keyword

--

*`rsa.misc.subcategory`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr2`*::
+
--
type: keyword

--

*`rsa.misc.alert_id`*::
+
--
Deprecated, New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.checksum_dst`*::
+
--
This key is used to capture the checksum or hash of the the target entity such as a process or file.

type: keyword

--

*`rsa.misc.checksum_src`*::
+
--
This key is used to capture the checksum or hash of the source entity such as a file or process.

type: keyword

--

*`rsa.misc.fresult`*::
+
--
This key captures the Filter Result

type: long

--

*`rsa.misc.payload_dst`*::
+
--
This key is used to capture destination payload

type: keyword

--

*`rsa.misc.payload_src`*::
+
--
This key is used to capture source payload

type: keyword

--

*`rsa.misc.pool_id`*::
+
--
This key captures the identifier (typically numeric field) of a resource pool

type: keyword

--

*`rsa.misc.process_id_val`*::
+
--
This key is a failure key for Process ID when it is not an integer value

type: keyword

--

*`rsa.misc.risk_num_comm`*::
+
--
This key captures Risk Number Community

type: double

--

*`rsa.misc.risk_num_next`*::
+
--
This key captures Risk Number NextGen

type: double

--

*`rsa.misc.risk_num_sand`*::
+
--
This key captures Risk Number SandBox

type: double

--

*`rsa.misc.risk_num_static`*::
+
--
This key captures Risk Number Static

type: double

--

*`rsa.misc.risk_suspicious`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.risk_warning`*::
+
--
Deprecated, use New Hunting Model (inv.*, ioc, boc, eoc, analysis.*)

type: keyword

--

*`rsa.misc.snmp_oid`*::
+
--
SNMP Object Identifier

type: keyword

--

*`rsa.misc.sql`*::
+
--
This key captures the SQL query

type: keyword

--

*`rsa.misc.vuln_ref`*::
+
--
This key captures the Vulnerability Reference details

type: keyword

--

*`rsa.misc.acl_id`*::
+
--
type: keyword

--

*`rsa.misc.acl_op`*::
+
--
type: keyword

--

*`rsa.misc.acl_pos`*::
+
--
type: keyword

--

*`rsa.misc.acl_table`*::
+
--
type: keyword

--

*`rsa.misc.admin`*::
+
--
type: keyword

--

*`rsa.misc.alarm_id`*::
+
--
type: keyword

--

*`rsa.misc.alarmname`*::
+
--
type: keyword

--

*`rsa.misc.app_id`*::
+
--
type: keyword

--

*`rsa.misc.audit`*::
+
--
type: keyword

--

*`rsa.misc.audit_object`*::
+
--
type: keyword

--

*`rsa.misc.auditdata`*::
+
--
type: keyword

--

*`rsa.misc.benchmark`*::
+
--
type: keyword

--

*`rsa.misc.bypass`*::
+
--
type: keyword

--

*`rsa.misc.cache`*::
+
--
type: keyword

--

*`rsa.misc.cache_hit`*::
+
--
type: keyword

--

*`rsa.misc.cefversion`*::
+
--
type: keyword

--

*`rsa.misc.cfg_attr`*::
+
--
type: keyword

--

*`rsa.misc.cfg_obj`*::
+
--
type: keyword

--

*`rsa.misc.cfg_path`*::
+
--
type: keyword

--

*`rsa.misc.changes`*::
+
--
type: keyword

--

*`rsa.misc.client_ip`*::
+
--
type: keyword

--

*`rsa.misc.clustermembers`*::
+
--
type: keyword

--

*`rsa.misc.cn_acttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_asn_src`*::
+
--
type: keyword

--

*`rsa.misc.cn_bgpv4nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cn_ctr_dst_code`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_dst_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_engine_type`*::
+
--
type: keyword

--

*`rsa.misc.cn_f_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampid`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampintv`*::
+
--
type: keyword

--

*`rsa.misc.cn_flowsampmode`*::
+
--
type: keyword

--

*`rsa.misc.cn_inacttimeout`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermbyts`*::
+
--
type: keyword

--

*`rsa.misc.cn_inpermpckts`*::
+
--
type: keyword

--

*`rsa.misc.cn_invalid`*::
+
--
type: keyword

--

*`rsa.misc.cn_ip_proto_ver`*::
+
--
type: keyword

--

*`rsa.misc.cn_ipv4_ident`*::
+
--
type: keyword

--

*`rsa.misc.cn_l_switch`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_did`*::
+
--
type: keyword

--

*`rsa.misc.cn_log_rid`*::
+
--
type: keyword

--

*`rsa.misc.cn_max_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_maxpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_min_ttl`*::
+
--
type: keyword

--

*`rsa.misc.cn_minpcktlen`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_1`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_10`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_2`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_3`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_4`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_5`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_6`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_7`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_8`*::
+
--
type: keyword

--

*`rsa.misc.cn_mpls_lbl_9`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_mplstoplabip`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_byt`*::
+
--
type: keyword

--

*`rsa.misc.cn_mul_dst_pks`*::
+
--
type: keyword

--

*`rsa.misc.cn_muligmptype`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampalgo`*::
+
--
type: keyword

--

*`rsa.misc.cn_sampint`*::
+
--
type: keyword

--

*`rsa.misc.cn_seqctr`*::
+
--
type: keyword

--

*`rsa.misc.cn_spackets`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_tos`*::
+
--
type: keyword

--

*`rsa.misc.cn_src_vlan`*::
+
--
type: keyword

--

*`rsa.misc.cn_sysuptime`*::
+
--
type: keyword

--

*`rsa.misc.cn_template_id`*::
+
--
type: keyword

--

*`rsa.misc.cn_totbytsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totflowexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_totpcktsexp`*::
+
--
type: keyword

--

*`rsa.misc.cn_unixnanosecs`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6flowlabel`*::
+
--
type: keyword

--

*`rsa.misc.cn_v6optheaders`*::
+
--
type: keyword

--

*`rsa.misc.comp_class`*::
+
--
type: keyword

--

*`rsa.misc.comp_name`*::
+
--
type: keyword

--

*`rsa.misc.comp_rbytes`*::
+
--
type: keyword

--

*`rsa.misc.comp_sbytes`*::
+
--
type: keyword

--

*`rsa.misc.cpu_data`*::
+
--
type: keyword

--

*`rsa.misc.criticality`*::
+
--
type: keyword

--

*`rsa.misc.cs_agency_dst`*::
+
--
type: keyword

--

*`rsa.misc.cs_analyzedby`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_other`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_primary`*::
+
--
type: keyword

--

*`rsa.misc.cs_av_secondary`*::
+
--
type: keyword

--

*`rsa.misc.cs_bgpv6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_bit9status`*::
+
--
type: keyword

--

*`rsa.misc.cs_context`*::
+
--
type: keyword

--

*`rsa.misc.cs_control`*::
+
--
type: keyword

--

*`rsa.misc.cs_data`*::
+
--
type: keyword

--

*`rsa.misc.cs_datecret`*::
+
--
type: keyword

--

*`rsa.misc.cs_dst_tld`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_dst_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_eth_src_ven`*::
+
--
type: keyword

--

*`rsa.misc.cs_event_uuid`*::
+
--
type: keyword

--

*`rsa.misc.cs_filetype`*::
+
--
type: keyword

--

*`rsa.misc.cs_fld`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_desc`*::
+
--
type: keyword

--

*`rsa.misc.cs_if_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_ip_next_hop`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4dstpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_ipv4srcpre`*::
+
--
type: keyword

--

*`rsa.misc.cs_lifetime`*::
+
--
type: keyword

--

*`rsa.misc.cs_log_medium`*::
+
--
type: keyword

--

*`rsa.misc.cs_loginname`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulescore`*::
+
--
type: keyword

--

*`rsa.misc.cs_modulesign`*::
+
--
type: keyword

--

*`rsa.misc.cs_opswatresult`*::
+
--
type: keyword

--

*`rsa.misc.cs_payload`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrant`*::
+
--
type: keyword

--

*`rsa.misc.cs_registrar`*::
+
--
type: keyword

--

*`rsa.misc.cs_represult`*::
+
--
type: keyword

--

*`rsa.misc.cs_rpayload`*::
+
--
type: keyword

--

*`rsa.misc.cs_sampler_name`*::
+
--
type: keyword

--

*`rsa.misc.cs_sourcemodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_streams`*::
+
--
type: keyword

--

*`rsa.misc.cs_targetmodule`*::
+
--
type: keyword

--

*`rsa.misc.cs_v6nxthop`*::
+
--
type: keyword

--

*`rsa.misc.cs_whois_server`*::
+
--
type: keyword

--

*`rsa.misc.cs_yararesult`*::
+
--
type: keyword

--

*`rsa.misc.description`*::
+
--
type: keyword

--

*`rsa.misc.devvendor`*::
+
--
type: keyword

--

*`rsa.misc.distance`*::
+
--
type: keyword

--

*`rsa.misc.dstburb`*::
+
--
type: keyword

--

*`rsa.misc.edomain`*::
+
--
type: keyword

--

*`rsa.misc.edomaub`*::
+
--
type: keyword

--

*`rsa.misc.euid`*::
+
--
type: keyword

--

*`rsa.misc.facility`*::
+
--
type: keyword

--

*`rsa.misc.finterface`*::
+
--
type: keyword

--

*`rsa.misc.flags`*::
+
--
type: keyword

--

*`rsa.misc.gaddr`*::
+
--
type: keyword

--

*`rsa.misc.id3`*::
+
--
type: keyword

--

*`rsa.misc.im_buddyname`*::
+
--
type: keyword

--

*`rsa.misc.im_croomid`*::
+
--
type: keyword

--

*`rsa.misc.im_croomtype`*::
+
--
type: keyword

--

*`rsa.misc.im_members`*::
+
--
type: keyword

--

*`rsa.misc.im_username`*::
+
--
type: keyword

--

*`rsa.misc.ipkt`*::
+
--
type: keyword

--

*`rsa.misc.ipscat`*::
+
--
type: keyword

--

*`rsa.misc.ipspri`*::
+
--
type: keyword

--

*`rsa.misc.latitude`*::
+
--
type: keyword

--

*`rsa.misc.linenum`*::
+
--
type: keyword

--

*`rsa.misc.list_name`*::
+
--
type: keyword

--

*`rsa.misc.load_data`*::
+
--
type: keyword

--

*`rsa.misc.location_floor`*::
+
--
type: keyword

--

*`rsa.misc.location_mark`*::
+
--
type: keyword

--

*`rsa.misc.log_id`*::
+
--
type: keyword

--

*`rsa.misc.log_type`*::
+
--
type: keyword

--

*`rsa.misc.logid`*::
+
--
type: keyword

--

*`rsa.misc.logip`*::
+
--
type: keyword

--

*`rsa.misc.logname`*::
+
--
type: keyword

--

*`rsa.misc.longitude`*::
+
--
type: keyword

--

*`rsa.misc.lport`*::
+
--
type: keyword

--

*`rsa.misc.mbug_data`*::
+
--
type: keyword

--

*`rsa.misc.misc_name`*::
+
--
type: keyword

--

*`rsa.misc.msg_type`*::
+
--
type: keyword

--

*`rsa.misc.msgid`*::
+
--
type: keyword

--

*`rsa.misc.netsessid`*::
+
--
type: keyword

--

*`rsa.misc.num`*::
+
--
type: keyword

--

*`rsa.misc.number1`*::
+
--
type: keyword

--

*`rsa.misc.number2`*::
+
--
type: keyword

--

*`rsa.misc.nwwn`*::
+
--
type: keyword

--

*`rsa.misc.object`*::
+
--
type: keyword

--

*`rsa.misc.operation`*::
+
--
type: keyword

--

*`rsa.misc.opkt`*::
+
--
type: keyword

--

*`rsa.misc.orig_from`*::
+
--
type: keyword

--

*`rsa.misc.owner_id`*::
+
--
type: keyword

--

*`rsa.misc.p_action`*::
+
--
type: keyword

--

*`rsa.misc.p_filter`*::
+
--
type: keyword

--

*`rsa.misc.p_group_object`*::
+
--
type: keyword

--

*`rsa.misc.p_id`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid1`*::
+
--
type: keyword

--

*`rsa.misc.p_msgid2`*::
+
--
type: keyword

--

*`rsa.misc.p_result1`*::
+
--
type: keyword

--

*`rsa.misc.password_chg`*::
+
--
type: keyword

--

*`rsa.misc.password_expire`*::
+
--
type: keyword

--

*`rsa.misc.permgranted`*::
+
--
type: keyword

--

*`rsa.misc.permwanted`*::
+
--
type: keyword

--

*`rsa.misc.pgid`*::
+
--
type: keyword

--

*`rsa.misc.policyUUID`*::
+
--
type: keyword

--

*`rsa.misc.prog_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.program`*::
+
--
type: keyword

--

*`rsa.misc.real_data`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_device`*::
+
--
type: keyword

--

*`rsa.misc.rec_asp_num`*::
+
--
type: keyword

--

*`rsa.misc.rec_library`*::
+
--
type: keyword

--

*`rsa.misc.recordnum`*::
+
--
type: keyword

--

*`rsa.misc.ruid`*::
+
--
type: keyword

--

*`rsa.misc.sburb`*::
+
--
type: keyword

--

*`rsa.misc.sdomain_fld`*::
+
--
type: keyword

--

*`rsa.misc.sec`*::
+
--
type: keyword

--

*`rsa.misc.sensorname`*::
+
--
type: keyword

--

*`rsa.misc.seqnum`*::
+
--
type: keyword

--

*`rsa.misc.session`*::
+
--
type: keyword

--

*`rsa.misc.sessiontype`*::
+
--
type: keyword

--

*`rsa.misc.sigUUID`*::
+
--
type: keyword

--

*`rsa.misc.spi`*::
+
--
type: keyword

--

*`rsa.misc.srcburb`*::
+
--
type: keyword

--

*`rsa.misc.srcdom`*::
+
--
type: keyword

--

*`rsa.misc.srcservice`*::
+
--
type: keyword

--

*`rsa.misc.state`*::
+
--
type: keyword

--

*`rsa.misc.status1`*::
+
--
type: keyword

--

*`rsa.misc.svcno`*::
+
--
type: keyword

--

*`rsa.misc.system`*::
+
--
type: keyword

--

*`rsa.misc.tbdstr1`*::
+
--
type: keyword

--

*`rsa.misc.tgtdom`*::
+
--
type: keyword

--

*`rsa.misc.tgtdomain`*::
+
--
type: keyword

--

*`rsa.misc.threshold`*::
+
--
type: keyword

--

*`rsa.misc.type1`*::
+
--
type: keyword

--

*`rsa.misc.udb_class`*::
+
--
type: keyword

--

*`rsa.misc.url_fld`*::
+
--
type: keyword

--

*`rsa.misc.user_div`*::
+
--
type: keyword

--

*`rsa.misc.userid`*::
+
--
type: keyword

--

*`rsa.misc.username_fld`*::
+
--
type: keyword

--

*`rsa.misc.utcstamp`*::
+
--
type: keyword

--

*`rsa.misc.v_instafname`*::
+
--
type: keyword

--

*`rsa.misc.virt_data`*::
+
--
type: keyword

--

*`rsa.misc.vpnid`*::
+
--
type: keyword

--

*`rsa.misc.autorun_type`*::
+
--
This is used to capture Auto Run type

type: keyword

--

*`rsa.misc.cc_number`*::
+
--
Valid Credit Card Numbers only

type: long

--

*`rsa.misc.content`*::
+
--
This key captures the content type from protocol headers

type: keyword

--

*`rsa.misc.ein_number`*::
+
--
Employee Identification Numbers only

type: long

--

*`rsa.misc.found`*::
+
--
This is used to capture the results of regex match

type: keyword

--

*`rsa.misc.language`*::
+
--
This is used to capture list of languages the client support and what it prefers

type: keyword

--

*`rsa.misc.lifetime`*::
+
--
This key is used to capture the session lifetime in seconds.

type: long

--

*`rsa.misc.link`*::
+
--
This key is used to link the sessions together. This key should never be used to parse Meta data from a session (Logs/Packets) Directly, this is a Reserved key in NetWitness

type: keyword

--

*`rsa.misc.match`*::
+
--
This key is for regex match name from search.ini

type: keyword

--

*`rsa.misc.param_dst`*::
+
--
This key captures the command line/launch argument of the target process or file

type: keyword

--

*`rsa.misc.param_src`*::
+
--
This key captures source parameter

type: keyword

--

*`rsa.misc.search_text`*::
+
--
This key captures the Search Text used

type: keyword

--

*`rsa.misc.sig_name`*::
+
--
This key is used to capture the Signature Name only.

type: keyword

--

*`rsa.misc.snmp_value`*::
+
--
SNMP set request value

type: keyword

--

*`rsa.misc.streams`*::
+
--
This key captures number of streams in session

type: long

--


*`rsa.db.index`*::
+
--
This key captures IndexID of the index.

type: keyword

--

*`rsa.db.instance`*::
+
--
This key is used to capture the database server instance name

type: keyword

--

*`rsa.db.database`*::
+
--
This key is used to capture the name of a database or an instance as seen in a session

type: keyword

--

*`rsa.db.transact_id`*::
+
--
This key captures the SQL transantion ID of the current session

type: keyword

--

*`rsa.db.permissions`*::
+
--
This key captures permission or privilege level assigned to a resource.

type: keyword

--

*`rsa.db.table_name`*::
+
--
This key is used to capture the table name

type: keyword

--

*`rsa.db.db_id`*::
+
--
This key is used to capture the unique identifier for a database

type: keyword

--

*`rsa.db.db_pid`*::
+
--
This key captures the process id of a connection with database server

type: long

--

*`rsa.db.lread`*::
+
--
This key is used for the number of logical reads

type: long

--

*`rsa.db.lwrite`*::
+
--
This key is used for the number of logical writes

type: long

--

*`rsa.db.pread`*::
+
--
This key is used for the number of physical writes

type: long

--


*`rsa.network.alias_host`*::
+
--
This key should be used when the source or destination context of a hostname is not clear.Also it captures the Device Hostname. Any Hostname that isnt ad.computer.

type: keyword

--

*`rsa.network.domain`*::
+
--
type: keyword

--

*`rsa.network.host_dst`*::
+
--
This key should only be used when it’s a Destination Hostname

type: keyword

--

*`rsa.network.network_service`*::
+
--
This is used to capture layer 7 protocols/service names

type: keyword

--

*`rsa.network.interface`*::
+
--
This key should be used when the source or destination context of an interface is not clear

type: keyword

--

*`rsa.network.network_port`*::
+
--
Deprecated, use port. NOTE: There is a type discrepancy as currently used, TM: Int32, INDEX: UInt64 (why neither chose the correct UInt16?!)

type: long

--

*`rsa.network.eth_host`*::
+
--
Deprecated, use alias.mac

type: keyword

--

*`rsa.network.sinterface`*::
+
--
This key should only be used when it’s a Source Interface

type: keyword

--

*`rsa.network.dinterface`*::
+
--
This key should only be used when it’s a Destination Interface

type: keyword

--

*`rsa.network.vlan`*::
+
--
This key should only be used to capture the ID of the Virtual LAN

type: long

--

*`rsa.network.zone_src`*::
+
--
This key should only be used when it’s a Source Zone.

type: keyword

--

*`rsa.network.zone`*::
+
--
This key should be used when the source or destination context of a Zone is not clear

type: keyword

--

*`rsa.network.zone_dst`*::
+
--
This key should only be used when it’s a Destination Zone.

type: keyword

--

*`rsa.network.gateway`*::
+
--
This key is used to capture the IP Address of the gateway

type: keyword

--

*`rsa.network.icmp_type`*::
+
--
This key is used to capture the ICMP type only

type: long

--

*`rsa.network.mask`*::
+
--
This key is used to capture the device network IPmask.

type: keyword

--

*`rsa.network.icmp_code`*::
+
--
This key is used to capture the ICMP code only

type: long

--

*`rsa.network.protocol_detail`*::
+
--
This key should be used to capture additional protocol information

type: keyword

--

*`rsa.network.dmask`*::
+
--
This key is used for Destionation Device network mask

type: keyword

--

*`rsa.network.port`*::
+
--
This key should only be used to capture a Network Port when the directionality is not clear

type: long

--

*`rsa.network.smask`*::
+
--
This key is used for capturing source Network Mask

type: keyword

--

*`rsa.network.netname`*::
+
--
This key is used to capture the network name associated with an IP range. This is configured by the end user.

type: keyword

--

*`rsa.network.paddr`*::
+
--
Deprecated

type: ip

--

*`rsa.network.faddr`*::
+
--
type: keyword

--

*`rsa.network.lhost`*::
+
--
type: keyword

--

*`rsa.network.origin`*::
+
--
type: keyword

--

*`rsa.network.remote_domain_id`*::
+
--
type: keyword

--

*`rsa.network.addr`*::
+
--
type: keyword

--

*`rsa.network.dns_a_record`*::
+
--
type: keyword

--

*`rsa.network.dns_ptr_record`*::
+
--
type: keyword

--

*`rsa.network.fhost`*::
+
--
type: keyword

--

*`rsa.network.fport`*::
+
--
type: keyword

--

*`rsa.network.laddr`*::
+
--
type: keyword

--

*`rsa.network.linterface`*::
+
--
type: keyword

--

*`rsa.network.phost`*::
+
--
type: keyword

--

*`rsa.network.ad_computer_dst`*::
+
--
Deprecated, use host.dst

type: keyword

--

*`rsa.network.eth_type`*::
+
--
This key is used to capture Ethernet Type, Used for Layer 3 Protocols Only

type: long

--

*`rsa.network.ip_proto`*::
+
--
This key should be used to capture the Protocol number, all the protocol nubers are converted into string in UI

type: long

--

*`rsa.network.dns_cname_record`*::
+
--
type: keyword

--

*`rsa.network.dns_id`*::
+
--
type: keyword

--

*`rsa.network.dns_opcode`*::
+
--
type: keyword

--

*`rsa.network.dns_resp`*::
+
--
type: keyword

--

*`rsa.network.dns_type`*::
+
--
type: keyword

--

*`rsa.network.domain1`*::
+
--
type: keyword

--

*`rsa.network.host_type`*::
+
--
type: keyword

--

*`rsa.network.packet_length`*::
+
--
type: keyword

--

*`rsa.network.host_orig`*::
+
--
This is used to capture the original hostname in case of a Forwarding Agent or a Proxy in between.

type: keyword

--

*`rsa.network.rpayload`*::
+
--
This key is used to capture the total number of payload bytes seen in the retransmitted packets.

type: keyword

--

*`rsa.network.vlan_name`*::
+
--
This key should only be used to capture the name of the Virtual LAN

type: keyword

--


*`rsa.investigations.ec_activity`*::
+
--
This key captures the particular event activity(Ex:Logoff)

type: keyword

--

*`rsa.investigations.ec_theme`*::
+
--
This key captures the Theme of a particular Event(Ex:Authentication)

type: keyword

--

*`rsa.investigations.ec_subject`*::
+
--
This key captures the Subject of a particular Event(Ex:User)

type: keyword

--

*`rsa.investigations.ec_outcome`*::
+
--
This key captures the outcome of a particular Event(Ex:Success)

type: keyword

--

*`rsa.investigations.event_cat`*::
+
--
This key captures the Event category number

type: long

--

*`rsa.investigations.event_cat_name`*::
+
--
This key captures the event category name corresponding to the event cat code

type: keyword

--

*`rsa.investigations.event_vcat`*::
+
--
This is a vendor supplied category. This should be used in situations where the vendor has adopted their own event_category taxonomy.

type: keyword

--

*`rsa.investigations.analysis_file`*::
+
--
This is used to capture all indicators used in a File Analysis. This key should be used to capture an analysis of a file

type: keyword

--

*`rsa.investigations.analysis_service`*::
+
--
This is used to capture all indicators used in a Service Analysis. This key should be used to capture an analysis of a service

type: keyword

--

*`rsa.investigations.analysis_session`*::
+
--
This is used to capture all indicators used for a Session Analysis. This key should be used to capture an analysis of a session

type: keyword

--

*`rsa.investigations.boc`*::
+
--
This is used to capture behaviour of compromise

type: keyword

--

*`rsa.investigations.eoc`*::
+
--
This is used to capture Enablers of Compromise

type: keyword

--

*`rsa.investigations.inv_category`*::
+
--
This used to capture investigation category

type: keyword

--

*`rsa.investigations.inv_context`*::
+
--
This used to capture investigation context

type: keyword

--

*`rsa.investigations.ioc`*::
+
--
This is key capture indicator of compromise

type: keyword

--


*`rsa.counters.dclass_c1`*::
+
--
This is a generic counter key that should be used with the label dclass.c1.str only

type: long

--

*`rsa.counters.dclass_c2`*::
+
--
This is a generic counter key that should be used with the label dclass.c2.str only

type: long

--

*`rsa.counters.event_counter`*::
+
--
This is used to capture the number of times an event repeated

type: long

--

*`rsa.counters.dclass_r1`*::
+
--
This is a generic ratio key that should be used with the label dclass.r1.str only

type: keyword

--

*`rsa.counters.dclass_c3`*::
+
--
This is a generic counter key that should be used with the label dclass.c3.str only

type: long

--

*`rsa.counters.dclass_c1_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c1 only

type: keyword

--

*`rsa.counters.dclass_c2_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c2 only

type: keyword

--

*`rsa.counters.dclass_r1_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r1 only

type: keyword

--

*`rsa.counters.dclass_r2`*::
+
--
This is a generic ratio key that should be used with the label dclass.r2.str only

type: keyword

--

*`rsa.counters.dclass_c3_str`*::
+
--
This is a generic counter string key that should be used with the label dclass.c3 only

type: keyword

--

*`rsa.counters.dclass_r3`*::
+
--
This is a generic ratio key that should be used with the label dclass.r3.str only

type: keyword

--

*`rsa.counters.dclass_r2_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r2 only

type: keyword

--

*`rsa.counters.dclass_r3_str`*::
+
--
This is a generic ratio string key that should be used with the label dclass.r3 only

type: keyword

--


*`rsa.identity.auth_method`*::
+
--
This key is used to capture authentication methods used only

type: keyword

--

*`rsa.identity.user_role`*::
+
--
This key is used to capture the Role of a user only

type: keyword

--

*`rsa.identity.dn`*::
+
--
X.500 (LDAP) Distinguished Name

type: keyword

--

*`rsa.identity.logon_type`*::
+
--
This key is used to capture the type of logon method used.

type: keyword

--

*`rsa.identity.profile`*::
+
--
This key is used to capture the user profile

type: keyword

--

*`rsa.identity.accesses`*::
+
--
This key is used to capture actual privileges used in accessing an object

type: keyword

--

*`rsa.identity.realm`*::
+
--
Radius realm or similar grouping of accounts

type: keyword

--

*`rsa.identity.user_sid_dst`*::
+
--
This key captures Destination User Session ID

type: keyword

--

*`rsa.identity.dn_src`*::
+
--
An X.500 (LDAP) Distinguished name that is used in a context that indicates a Source dn

type: keyword

--

*`rsa.identity.org`*::
+
--
This key captures the User organization

type: keyword

--

*`rsa.identity.dn_dst`*::
+
--
An X.500 (LDAP) Distinguished name that used in a context that indicates a Destination dn

type: keyword

--

*`rsa.identity.firstname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.lastname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.user_dept`*::
+
--
User's Department Names only

type: keyword

--

*`rsa.identity.user_sid_src`*::
+
--
This key captures Source User Session ID

type: keyword

--

*`rsa.identity.federated_sp`*::
+
--
This key is the Federated Service Provider. This is the application requesting authentication.

type: keyword

--

*`rsa.identity.federated_idp`*::
+
--
This key is the federated Identity Provider. This is the server providing the authentication.

type: keyword

--

*`rsa.identity.logon_type_desc`*::
+
--
This key is used to capture the textual description of an integer logon type as stored in the meta key 'logon.type'.

type: keyword

--

*`rsa.identity.middlename`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.identity.password`*::
+
--
This key is for Passwords seen in any session, plain text or encrypted

type: keyword

--

*`rsa.identity.host_role`*::
+
--
This key should only be used to capture the role of a Host Machine

type: keyword

--

*`rsa.identity.ldap`*::
+
--
This key is for Uninterpreted LDAP values. Ldap Values that don’t have a clear query or response context

type: keyword

--

*`rsa.identity.ldap_query`*::
+
--
This key is the Search criteria from an LDAP search

type: keyword

--

*`rsa.identity.ldap_response`*::
+
--
This key is to capture Results from an LDAP search

type: keyword

--

*`rsa.identity.owner`*::
+
--
This is used to capture username the process or service is running as, the author of the task

type: keyword

--

*`rsa.identity.service_account`*::
+
--
This key is a windows specific key, used for capturing name of the account a service (referenced in the event) is running under. Legacy Usage

type: keyword

--


*`rsa.email.email_dst`*::
+
--
This key is used to capture the Destination email address only, when the destination context is not clear use email

type: keyword

--

*`rsa.email.email_src`*::
+
--
This key is used to capture the source email address only, when the source context is not clear use email

type: keyword

--

*`rsa.email.subject`*::
+
--
This key is used to capture the subject string from an Email only.

type: keyword

--

*`rsa.email.email`*::
+
--
This key is used to capture a generic email address where the source or destination context is not clear

type: keyword

--

*`rsa.email.trans_from`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.email.trans_to`*::
+
--
Deprecated key defined only in table map.

type: keyword

--


*`rsa.file.privilege`*::
+
--
Deprecated, use permissions

type: keyword

--

*`rsa.file.attachment`*::
+
--
This key captures the attachment file name

type: keyword

--

*`rsa.file.filesystem`*::
+
--
type: keyword

--

*`rsa.file.binary`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.file.filename_dst`*::
+
--
This is used to capture name of the file targeted by the action

type: keyword

--

*`rsa.file.filename_src`*::
+
--
This is used to capture name of the parent filename, the file which performed the action

type: keyword

--

*`rsa.file.filename_tmp`*::
+
--
type: keyword

--

*`rsa.file.directory_dst`*::
+
--
<span>This key is used to capture the directory of the target process or file</span>

type: keyword

--

*`rsa.file.directory_src`*::
+
--
This key is used to capture the directory of the source process or file

type: keyword

--

*`rsa.file.file_entropy`*::
+
--
This is used to capture entropy vale of a file

type: double

--

*`rsa.file.file_vendor`*::
+
--
This is used to capture Company name of file located in version_info

type: keyword

--

*`rsa.file.task_name`*::
+
--
This is used to capture name of the task

type: keyword

--


*`rsa.web.fqdn`*::
+
--
Fully Qualified Domain Names

type: keyword

--

*`rsa.web.web_cookie`*::
+
--
This key is used to capture the Web cookies specifically.

type: keyword

--

*`rsa.web.alias_host`*::
+
--
type: keyword

--

*`rsa.web.reputation_num`*::
+
--
Reputation Number of an entity. Typically used for Web Domains

type: double

--

*`rsa.web.web_ref_domain`*::
+
--
Web referer's domain

type: keyword

--

*`rsa.web.web_ref_query`*::
+
--
This key captures Web referer's query portion of the URL

type: keyword

--

*`rsa.web.remote_domain`*::
+
--
type: keyword

--

*`rsa.web.web_ref_page`*::
+
--
This key captures Web referer's page information

type: keyword

--

*`rsa.web.web_ref_root`*::
+
--
Web referer's root URL path

type: keyword

--

*`rsa.web.cn_asn_dst`*::
+
--
type: keyword

--

*`rsa.web.cn_rpackets`*::
+
--
type: keyword

--

*`rsa.web.urlpage`*::
+
--
type: keyword

--

*`rsa.web.urlroot`*::
+
--
type: keyword

--

*`rsa.web.p_url`*::
+
--
type: keyword

--

*`rsa.web.p_user_agent`*::
+
--
type: keyword

--

*`rsa.web.p_web_cookie`*::
+
--
type: keyword

--

*`rsa.web.p_web_method`*::
+
--
type: keyword

--

*`rsa.web.p_web_referer`*::
+
--
type: keyword

--

*`rsa.web.web_extension_tmp`*::
+
--
type: keyword

--

*`rsa.web.web_page`*::
+
--
type: keyword

--


*`rsa.threat.threat_category`*::
+
--
This key captures Threat Name/Threat Category/Categorization of alert

type: keyword

--

*`rsa.threat.threat_desc`*::
+
--
This key is used to capture the threat description from the session directly or inferred

type: keyword

--

*`rsa.threat.alert`*::
+
--
This key is used to capture name of the alert

type: keyword

--

*`rsa.threat.threat_source`*::
+
--
This key is used to capture source of the threat

type: keyword

--


*`rsa.crypto.crypto`*::
+
--
This key is used to capture the Encryption Type or Encryption Key only

type: keyword

--

*`rsa.crypto.cipher_src`*::
+
--
This key is for Source (Client) Cipher

type: keyword

--

*`rsa.crypto.cert_subject`*::
+
--
This key is used to capture the Certificate organization only

type: keyword

--

*`rsa.crypto.peer`*::
+
--
This key is for Encryption peer's IP Address

type: keyword

--

*`rsa.crypto.cipher_size_src`*::
+
--
This key captures Source (Client) Cipher Size

type: long

--

*`rsa.crypto.ike`*::
+
--
IKE negotiation phase.

type: keyword

--

*`rsa.crypto.scheme`*::
+
--
This key captures the Encryption scheme used

type: keyword

--

*`rsa.crypto.peer_id`*::
+
--
This key is for Encryption peer’s identity

type: keyword

--

*`rsa.crypto.sig_type`*::
+
--
This key captures the Signature Type

type: keyword

--

*`rsa.crypto.cert_issuer`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_name`*::
+
--
Deprecated key defined only in table map.

type: keyword

--

*`rsa.crypto.cert_error`*::
+
--
This key captures the Certificate Error String

type: keyword

--

*`rsa.crypto.cipher_dst`*::
+
--
This key is for Destination (Server) Cipher

type: keyword

--

*`rsa.crypto.cipher_size_dst`*::
+
--
This key captures Destination (Server) Cipher Size

type: long

--

*`rsa.crypto.ssl_ver_src`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.d_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.s_certauth`*::
+
--
type: keyword

--

*`rsa.crypto.ike_cookie1`*::
+
--
ID of the negotiation — sent for ISAKMP Phase One

type: keyword

--

*`rsa.crypto.ike_cookie2`*::
+
--
ID of the negotiation — sent for ISAKMP Phase Two

type: keyword

--

*`rsa.crypto.cert_checksum`*::
+
--
type: keyword

--

*`rsa.crypto.cert_host_cat`*::
+
--
This key is used for the hostname category value of a certificate

type: keyword

--

*`rsa.crypto.cert_serial`*::
+
--
This key is used to capture the Certificate serial number only

type: keyword

--

*`rsa.crypto.cert_status`*::
+
--
This key captures Certificate validation status

type: keyword

--

*`rsa.crypto.ssl_ver_dst`*::
+
--
Deprecated, use version

type: keyword

--

*`rsa.crypto.cert_keysize`*::
+
--
type: keyword

--

*`rsa.crypto.cert_username`*::
+
--
type: keyword

--

*`rsa.crypto.https_insact`*::
+
--
type: keyword

--

*`rsa.crypto.https_valid`*::
+
--
type: keyword

--

*`rsa.crypto.cert_ca`*::
+
--
This key is used to capture the Certificate signing authority only

type: keyword

--

*`rsa.crypto.cert_common`*::
+
--
This key is used to capture the Certificate common name only

type: keyword

--


*`rsa.wireless.wlan_ssid`*::
+
--
This key is used to capture the ssid of a Wireless Session

type: keyword

--

*`rsa.wireless.access_point`*::
+
--
This key is used to capture the access point name.

type: keyword

--

*`rsa.wireless.wlan_channel`*::
+
--
This is used to capture the channel names

type: long

--

*`rsa.wireless.wlan_name`*::
+
--
This key captures either WLAN number/name

type: keyword

--


*`rsa.storage.disk_volume`*::
+
--
A unique name assigned to logical units (volumes) within a physical disk

type: keyword

--

*`rsa.storage.lun`*::
+
--
Logical Unit Number.This key is a very useful concept in Storage.

type: keyword

--

*`rsa.storage.pwwn`*::
+
--
This uniquely identifies a port on a HBA.

type: keyword

--


*`rsa.physical.org_dst`*::
+
--
This is used to capture the destination organization based on the GEOPIP Maxmind database.

type: keyword

--

*`rsa.physical.org_src`*::
+
--
This is used to capture the source organization based on the GEOPIP Maxmind database.

type: keyword

--


*`rsa.healthcare.patient_fname`*::
+
--
This key is for First Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_id`*::
+
--
This key captures the unique ID for a patient

type: keyword

--

*`rsa.healthcare.patient_lname`*::
+
--
This key is for Last Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--

*`rsa.healthcare.patient_mname`*::
+
--
This key is for Middle Names only, this is used for Healthcare predominantly to capture Patients information

type: keyword

--


*`rsa.endpoint.host_state`*::
+
--
This key is used to capture the current state of the machine, such as <strong>blacklisted</strong>, <strong>infected</strong>, <strong>firewall disabled</strong> and so on

type: keyword

--

*`rsa.endpoint.registry_key`*::
+
--
This key captures the path to the registry key

type: keyword

--

*`rsa.endpoint.registry_value`*::
+
--
This key captures values or decorators used within a registry entry

type: keyword

--

