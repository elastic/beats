:modulename: system nginx mysql
:release-state: released

[[filebeat-getting-started]]
== Get started

//TODO: We need to add a separate topic that provides a summary of the different
//ways to parse log lines: ingest node, dissect processor, Logstash, etc. That
//is beyond the scope of a quick start, IMO.

++++
<titleabbrev>Get started</titleabbrev>
++++

This guide describes how to get up and running quickly with log collection.
You'll learn how to:

* install {beatname_uc} on each system you want to monitor
* specify the location of your log files
* parse log data into fields and send it to {es}
* visualize the log data in {kib}

[float]
=== Before you begin

You need {es} for storing and searching your data, and {kib} for visualizing and
managing it.

// TODO: We might want to provide the instructions for spinning up a deployment
// here. See
// https://github.com/elastic/docs/pull/1815/files#diff-934228d98950ff95c8c53444966daeaeR10
// Or link to the topic that's available for cloud.

include::{libbeat-dir}/tab-widgets/spinup-stack-widget.asciidoc[]

[float]
[[filebeat-installation]]
=== Step 1: Install {beatname_uc}

//REVIEWERS: We don't currently say anything about licensing here. Should we?

To download and install {beatname_uc}, use the commands that work with your
system.

include::{libbeat-dir}/tab-widgets/install-widget.asciidoc[]

[float]
[[other-installation-options]]
==== Other installation options

* <<setup-repositories>>
* https://www.elastic.co/downloads/beats/{beatname_lc}[Download page] 
* <<running-on-docker>>
* <<running-on-kubernetes>> 
* <<running-on-cloudfoundry>> 

[float]
[[set-connection]]
=== Step 2: Set the connection information

include::{libbeat-dir}/shared/connecting-to-es.asciidoc[]

[float]
[[enable-modules]]
=== Step 3: Enable and configure data collection modules

{beatname_uc} uses modules to collect and parse log data.

. Identify the modules you need to enable.
+
To see the list of available <<filebeat-modules,modules>>,
run:
+
--
include::{libbeat-dir}/tab-widgets/list-modules-widget.asciidoc[]
--
+
Can't find a module for your file type? You'll need to
<<configuration-filebeat-options,configure the input>> manually.

. From the installation directory, enable one or more modules. For example, the
following command enables the `system`, `nginx`, and `mysql` module
configs:
+
--
include::{libbeat-dir}/tab-widgets/enable-modules-widget.asciidoc[]
--
+
In the module configs under `modules.d`, change the module settings to match
your environment.
+
The default log locations are set based on the OS. If your logs aren't in
default locations, set the `paths` variable. For example:
+
--
[source,yaml]
----
- module: nginx
  access:
    var.paths: ["/var/log/nginx/access.log*"] <1> 
----
--
+
See <<configuration-filebeat-modules>> for more information about setting
variables and advanced options.

// REVIEWERS: I've collapsed the content about setting up Beats into one section
// to make the setup easier and moved the detailed content to "how-to" topics.

[float]
[[setup-modules]]
=== Step 4: Set up assets

include::{libbeat-dir}/shared/setup.asciidoc[]

The ingest pipelines used to parse log lines are set up automatically the first
time you run the module and connect to {es}. If you're sending events to {ls},
you need to <<load-ingest-pipelines>>.

// REVIEWERS: I wonder if we should even mention Logstash in this guide. I think
// it might be better to have a full topic in the  how-to section that describes
// how to route events through Logstash (then we could cover all the
// requirements without exposing users to a product they might not need).

[float]
[[filebeat-starting]]
=== Step 5: Start {beatname_uc}

include::{libbeat-dir}/shared/start-beat.asciidoc[]

[float]
[[view-kibana-dashboards]]
=== Step 6: View your data in {kib}

include::{libbeat-dir}/shared/opendashboards.asciidoc[]

Example dashboard:

[role="screenshot"]
image::./images/kibana-system.png[]

[float]
=== What's next?

Now that you have log data streaming into {es}, learn how to unify your logs,
metrics, uptime, and application performance data:

* Add infrastructure metrics:
{metricbeat-ref}/metricbeat-getting-started.html[Get started with {metricbeat}]
* Add uptime info:
{heartbeat-ref}/heartbeat-getting-started.html[Get Started with {heartbeat}]
* Add application metrics:
{apm-get-started-ref}/index.html[APM overview]

Then use the Observability apps in {kib} to search across all your data:

** Explore metrics about systems and services across your ecosystem: 
{kibana-ref}/xpack-infra[Metrics app]
** Drill down into related log data and tail your logs in real time:
{kibana-ref}/xpack-logs.html[Logs app]
** View related traces and monitor application performance:
{kibana-ref}/xpack-apm.html[APM app]
