////
This file is generated! See scripts/docs_collector.py
////

[[filebeat-module-gsuite]]
[role="xpack"]

:modulename: gsuite
:has-dashboards: true

== GSuite module

This is a module for ingesting data from the different GSuite audit reports API's.

include::../include/gs-link.asciidoc[]

[float]
=== Compatibility

It is compatible with a subset of applications under the https://developers.google.com/admin-sdk/reports/v1/get-start/getting-started[Google Reports API v1]. As of today it supports:

- https://developers.google.com/admin-sdk/reports/v1/appendix/activity/saml[SAML Audit Activity Events]
- https://developers.google.com/admin-sdk/reports/v1/appendix/activity/user-accounts[User Accounts Activity Events]

include::../include/configuring-intro.asciidoc[]

To allow the filebeat module to ingest data from the Google Reports API, you would need to create application credentials following the instructions from https://developers.google.com/admin-sdk/reports/v1/guides/authorizing[Google authorization guide], https://developers.google.com/identity/protocols/oauth2/service-account[Google OAuth2 guide for services] and https://cloud.google.com/docs/authentication/production[Google Authentication for Server to Server Applications]

This module will make use of the following `oauth2 scopes`:

- `https://www.googleapis.com/auth/admin.reports.audit.readonly`

This module supports different ways to provide `oauth2` credentials to it:

- `credentials_file`
- `credentials_json`
- `jwt_file`

They are equivalent, and which one to use will depend on how you set up the authorization and your preference.

If none of them is provided, the module will fallback to authorize using the Application Default Credentials (ADC) mechanism.

[float]
===== Configuration options

[source,yaml]
----
- module: gsuite
  saml:
    enabled: true
    var.credentials_file: "./credentials_file.json"
  user_accounts:
    enabled: true
    var.credentials_file: "./credentials_file.json"
----

Every fileset has the following configuration options:

*`var.credentials_file`*::

Specifies the path to the credentials file.

*`var.jwt_file`*::

Specifies the path to the JWT credentials file.

*`var.credentials_json`*::

Raw JSON containing the credentials. It can be either the content of `var.credentials_file` or `var.jwt_file`.


*`var.http_client_timeout`*::

Duration of the time limit on HTTP requests made by the module. Defaults to
`60s`.

*`var.interval`*::

Duration between requests to the API. Defaults to `60s`.

*`var.user_key`*::

Specifies the user key to fetch reports from. Defaults to `all`.

[float]
==== GSuite Reports ECS fields

This is a list of GSuite Reports fields that are mapped to ECS.

[options="header"]
|================================================================================
| GSuite Reports             | ECS Fields                                       |
| items[].id.time            | @timestamp                                       |
| items[].id.uniqueQualifier | event.id                                         |
| items[].id.applicationName | event.provider                                   |
| items[].events[].name      | event.action                                     |
| items[].ipAddress          | client.ip, related.ip, client.as.*, client.geo.* |
| items[].actor.email        | client.user.email                                |
| items[].actor.profileId    | client.user.id                                   |
|================================================================================

These are the common ones to all filesets.

[float]
=== Example dashboard

This module comes with a sample dashboard. For example:

TODO: include an image of a sample dashboard. If you do not include a dashboard,
remove this section and set `:has-dashboards: false` at the top of this file.

:has-dashboards!:

:modulename!:


[float]
=== Fields

For a description of each field in the module, see the
<<exported-fields-gsuite,exported fields>> section.

