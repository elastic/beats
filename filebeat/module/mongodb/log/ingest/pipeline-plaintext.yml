description: Pipeline for parsing MongoDB logs in plaintext
processors:
- grok:
    field: message
    patterns:
    - '%{TIMESTAMP_ISO8601:mongodb.log.timestamp}%{SPACE}%{MONGO3_SEVERITY:log.level}%{SPACE}%{MONGO3_COMPONENT:mongodb.log.component}%{SPACE}(?:\[%{DATA:mongodb.log.context}\])?%{SPACE}%{GREEDYDATA:message}'
    ignore_missing: true
- date:
    field: mongodb.log.timestamp
    target_field: '@timestamp'
    formats:
    - yyyy-MM-dd'T'HH:mm:ss.SSSZZ
- remove:
    field: mongodb.log.timestamp
- append:
    field: event.type
    value: access
    if: "ctx?.mongodb?.log?.component == 'ACCESS'"
- append:
    field: event.type
    value: change
    if: "ctx?.mongodb?.log?.component == 'WRITE'"
- append:
    field: event.type
    value: info
    if: "ctx?.mongodb?.log?.component != 'WRITE' && ctx?.mongodb?.log?.component != 'ACCESS'"
- append:
    field: event.type
    value: error
    if: "ctx?.log?.level == 'F' || ctx?.log?.level == 'E'"
- grok:
    field: message
    trace_match: true
    patterns:
      - "^%{DATA} %{MONGODB_AUTH_FAILURE:tmp.auth_failure} for %{NOTSPACE:user.name} on %{NOTSPACE} from client %{NOTSPACE:source.address} ;%{GREEDYDATA}"
      - "^Unauthorized: %{MONGODB_NOT_AUTHORIZED:tmp.not_authorized} %{NOTSPACE} to execute command"
      - "^%{MONGODB_AUTH_SUCCESSFUL:tmp.auth_successful} as principal %{USERNAME:user.name} on %{NOTSPACE}"
    pattern_definitions:
      MONGODB_AUTH_FAILURE: authentication failed
      MONGODB_NOT_AUTHORIZED: not authorized on
      MONGODB_AUTH_SUCCESSFUL: Successfully authenticated
    ignore_failure: true
- append:
    field: related.user
    value: '{{ user.name }}'
    if: ctx?.user?.name != null
- grok:
    field: source.address
    patterns:
      - ^%{IP:source.ip}:%{NUMBER:source.port}
    ignore_failure: true
- geoip:
    field: source.ip
    target_field: source.geo
    ignore_missing: true
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: source.ip
    target_field: source.as
    properties:
      - asn
      - organization_name
    ignore_missing: true
- rename:
    field: source.as.asn
    target_field: source.as.number
    ignore_missing: true
- rename:
    field: source.as.organization_name
    target_field: source.as.organization.name
    ignore_missing: true
- append: 
    field: related.ip
    value: '{{ source.ip }}'
    if: "ctx.source?.ip != null"
- append:
    field: event.category
    value: authentication
    if: ctx?.tmp?.auth_failure != null || ctx?.tmp?.auth_successful != null
- append:
    field: event.type
    value: logon-failed
    if: ctx?.tmp?.auth_failure != null
- append:
    field: event.type
    value: logged-in
    if: ctx?.tmp?.auth_successful != null
- set:
    field: event.outcome
    value: failure
    if: ctx?.tmp?.auth_failure != null || ctx?.tmp?.not_authorized != null
- set:
    field: event.outcome
    value: success
    if: ctx?.tmp?.auth_successful != null
- remove: 
    field: tmp
    ignore_missing: true
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
