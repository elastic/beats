// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded zlib format compressed contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
}
