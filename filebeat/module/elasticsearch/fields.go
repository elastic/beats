// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
		panic(err)
	}
}

// AssetElasticsearch returns asset data.
// This is the base64 encoded zlib format compressed contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "eJzUWutz2zYS/56/AqMv187YPPlRt9bM3UyrJI4zzaORnVyreDgrYEUhAgEaACWrnfzvNwAoWaRI6tE2l9MXm8Rjf/veBXFMprjoERRgLKcGQdPJE0IstwJ7pPNs/X3nCSEaBYLBHkngCSEMDdU8s1zJHvn3E0JIeSfySrFc4BNCxhwFMz0/5ZhISHGTqPvZReY21yrPijc1NMrbrW9JVZopidKuRioblDl6nE/GWqVkPkGNxE6QCJUQnLkBpXnCJVhknbVN8QHSzItIRRjRKI1eoYWnYKGvESxeS4YPA9QzTnF9XeBviou50mwTvsiNRR3lOWeNHNzeXj8lauxhFgvqkV2lMz16IV7f8MH7X/nb8Q/Th+Qy2R+Ne2pE8xpS3AkNU3SK+rhmTjsKqRhGLeJ4FIabWU/76YB/oDcLvJl8sLf/+fmny5fdn17N98Swsxiaccw+vH5pfjvbnTB3ZtRO2Vuan15Pc8wFjhDssUVjj7nMcrsv/Tbpe+q8wTfgzVXydD66fTfuv//u+x8H9H7UT/aQu5mAZq3k2VLofmo9iu7uBIuQFGdasZzaODj/1uUbLmqQkdGCFMGGGAt0SqwinKG0fLwg8wkvhZ8lF36icW/co8b7HI2tZ2vKRyChs8HDxNosKlZGD7HK4D7HuC2glNEWodEqYidaWSuQgGSEIcszwSlYJAwzjRTcejIHLblMTIPFfw9Ztof8XciNHI1E6UUj4n4xYSm2dTx+i3owTtxg+UhgDBnfHRXkjNuN2etJitTkpPUdBCxQl0aqLN24pONmLTORsw874WYjDfWIRmOPiNUgTaa0GyM8i8dcVAJrmXtdsaQ2c65oJHbztsJ3k5xGAmA7AUsUpbnWDjNIJRepyk0MlKIxMUPJkR0RyO3EOUVQXzwGLvzryqzwmGiQ1j1TJSVSv6Lu3XKZhTRDjSwu/OGI6FzGsLZR8RwWNAuvTH9/MQb1RVvl+GFVgRSINxRPvtkcCTYD5N2zwQ358e31cvG361ayWjcHQzRS5DNkRElP7XEanYCUKL49IkJRELHLZuSbUBNRED67EW5Mjmwd57fNsnvcZ3+5aQSRbrW8sg2FRR5cZcBxPgPBmRcaJMDlpk8UwDuuZsEx5MI61zoAe25QR7sx4Kb+w9TycUT4eH2g0Uo73kwtn2HMuEZqlV4cCloJNK2g37kZLkcsAxWSTHNJeQaCjFCoSkYoWcRwmbxiYCmXnSPScRWKKR7J3YGovStXq6X9N6hT2fYd6lqP3VaCj1lbbUSulZhhSYixzqjxAWnebBou94W6u5cqya3S/0yBywOsQ4soAw3pFutwcej23TXxc9GibjaGzh9O9m77f30COpWcTk4/d2qpc8k43WKY12FOkTBCYROk1WaOY6WOT7snl1H3JOqeO4MsvTnbeHNxiJUuizLOWlm4lfw+RxIam5oSsCy+D7//HE9HF+8HszeTH++7dv529uLNL4dE2gCuxn2aU/0ypexhiH2BoAdUKyHe1fO2M9Z4pNiidjEIDlU7ycBOKtWxWx9RJe2m26Y80RA4tjrHlqQeA2MaTZXcNiBG5ZpixLMDCOea70nNOW5RL4gDCK5i+75kzeb5wa40UzQGkvpQbvHBNoSIZX6PIONTXJhIzSWyeLSIS0k0dtBq9x4pJRBkfaguJei6cm6HUrCmIWvgbLlkrb/Z2obUnpeRljOzhB6+JyFXfeKqI4O2IBDt2BJlEzD1wqtS34LA/Z57QsRkSPmYU1eYXPUDiagyuQ7TOq4aayWtet0JoPutnxFd9QlVQoR2pR7omvrz4CyxQdoIbSwUVIPYjsD6FSQrgi6LKs24TMJxAJKXMAMy49rmIEgKdMJlC3BDdT6KzSIdKRFbcI235Sn+XXyQt5AbJI4E4ZIYpEoyQ6hzZ8dDnpGAhXgsZitwq7lMvgDwHXB7KFtxzxGmscaxiTOtXAHk8f+NyG8cZpO5hv+RoodBNI5Ro3TF2CNTzdBdqSgEilijoSC/FOo1eaegpw694DMkavQJqTWuvxFIIAtHX84nuCHGqixD1swMFWBMnEuhgH0pTgI1by8yd5WvB7Gj9GmWe5yNGOuC8o4Y3wbDIP23t8HGC3tBPVY6dYAfQ2ENxOaQTSoNXIOQyVZB78iI+1WYULk1nIUTmylqiaKOgbXAsjD/A5RcVkGSVpSuA/4SMG+UBUFQQObstQLaKt9TC7QB+Vq+9MddxoL2s8ZccjOJaquMT7M01rlscMFmRrYw4HsgB9Ujefn+VYEmz9a87YiAIRC2d1aeKS4tkXk6Ql2P1k40AjOxdXKJXZRpCh4HI78CPYKkJM2CKvFUfWwr1FAXNFaG7EKgzy5LzH+1iB0Eq5T/bhJAFThbcQmcYX2XUl+7bRNX338K9rs26AyS+tbvT9BLQq5PGnicIFRD8cGV8wuEjIAQqshuINnSEPjvexfPbk08HTVmES4tJht91w4wySpaOOY9HedpUy7UaGHbSiKXCv82SP7TmUfUDGbV9wkWJ1g95ztYcW8EIwlKLCp1RWmegaSLr1+DXnlq7ASyzsFXoM5GmW7X7kLlMvkr9fur2/D/XMOLKg9fgY5b5FqPbiU31LMS0fKx6MAP+2xR/Vy06/fix9wKdGo10HI5vkav0yODcKfAzXLAqevb1Zig1kqXE5K/xNEjYxClA5fa858qVyEflU9om0y67bTHW0KbA3SCXq76zSfH9efEda5V7wKrQCw325wyliqlNhRLHEJtMLgqEebqSxBc8TdDPUFgscH7VpEP8D53DXpRkzZK/uz8/PLy8rRW/I0oHgvMeHmcFG35bFRuy6/6R+5PyoXgRcnXiPDkotvdsfBcSWnkHBr2A+ijmy+OnZBXt3hWpfQcTLExsj3Q/7AT+lV4EGouVNIcicJ4uIdhQouycZFzA0RneNo9+eG4e3F8enlz0u11L3on50eXZ2d3w+vXz9+Qu2G4DBa2iAoQ0X2OenFHhrP4/cvJp/d3ZJii1Zz6K2cX0VnUPXb7Rt2L6PTibti98zX98Dz6LjV3R/4hDkIanvtn1/lMuDXDk8vzs+/cq0WGZnh35MKiDf94CP5SyvCX22fvfo1vXjx7HT9/dtN/sdrDXwgzwxM3339qGf7xsePRfuz0/vjYScHSSQxChMeRUsZ+7PROou7nz5/vjv5M/HYVfCU9lTX0s5+wcWlvXRu1wh6jLWuvuddYxR6lpi1IvMtxu2q0iu93vuH2wmrCd9btpmZPKE6RbVjceBO9/Uh5U2khNXDjQaONFP3oyZ50Hy2zjXpxw26RNaq/atZ7wvAGH3sFtuEQat6u5T1cZj+E+GA1xAFnC8JnblrBDuFyrHQKm9/yD7WSx2DTZpWh6+S2yVDOTw8gGqLTVrJO+BxZuN3aBOB0PwBa5ZZXknb1co+f0SRk0z158dvpLz9NLz/NzxObwHMr9xN85dtnifo1+2t02+6CNy2+xxQ9xN2aqQ2C/aoxYYrm6ep2pKsWfJxH1kLvvwEAAP//v+l0gQ=="
}
