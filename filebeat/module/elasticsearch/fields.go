// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package elasticsearch

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
<<<<<<< HEAD
	if err := asset.SetFields("filebeat", "elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
=======
	if err := asset.SetFields("filebeat", "Elasticsearch", asset.ModuleFieldsPri, AssetElasticsearch); err != nil {
>>>>>>> Introduce local fields generation
		panic(err)
	}
}

<<<<<<< HEAD
// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
=======
<<<<<<< HEAD
// Asset returns asset data
func Asset() string {
	return "eJzUmt9v2zgSx9/7Vwz8tAUSnfOjuY0fDtjzpmmL649N0i523UCgybHEhiIVkrLjW/R/P5CUHVmWZDtNc12/tLYofj8zQw6HZPbhBucDQEGM5dQg0TR9BmC5FTiA3srvvWcADA3VPLdcyQH86xkArL4LbxUrBD4DmHAUzAx8k32QJMN1Gfex8xwHkGhV5OUvDRqr3VW7lIph5P67fFLroPeOZAhqAjZF37pXaYl3JMu9pdPf370xfx5VHwayG5zPlGZrwlwyvOtWfu2a+ObNmhMucIzE7ls0dp/LvLC76nO2QZ2zZm3y/jz5dTb+eDEZfnrxz18u6e14mMy2lzcp0axTni2c7ps2U/S3FyQF43atdXXctI4daBg/1a4FmaNeeVI35irF0AomWmUwSzlNwabcAE5RWlCaJ1wSi2wAGo3dA6uJNLnS7hnwPJ5wYVH3air3nnBv1Z82O6RKHnRj17CT//cUNfpgaLwt0KwTw0/rT4KxBC7OLq/glw+vFy8/r5q3fG9GDGikyKfIQEmvdt+MpkRKFM/3QChKROxmIvzk2vjvfmYCN6ZAVuV83u6x+3529xuhzjEbQy4rqSO8AjYlwVS8Q1pYZO2AVBTGoh5kSnKr9D8ywuXuqKUjNrK6nhzrIhw7gA4FEn1JtRLiIry9HWYjr58QTSMy9EEEJ6b2JCc2LV+MGl7MeKJJsNTqArsmAmFMo6n3v0nZqEJTjHj+AOFC8x3VCi2ico6JBwiW8Y3His13VE6tzaPy/ci9H1ElLcr64NoGI9dcUp6vmbDReoO6vmp2aS70GOYaKalN229cBBadJ/ThfQKcD8Gt5AZtKRBtue7kKTHNs6SuvoHAfV56ITA5Uj7hFKxyYF4iqjVuYqpyNYQHOnPVVoDuU63FzodAlRAY8mojaCX8RRgdsUHaijYRitTH8pZgwxrJUhAIpUozLhPnUcf9hkwJTLm2BRGQEZpy2QFuqC7GsZlnYyViS8YCY8sz/F52wAdSGAQnAVyCQaokM0AFEulsKHIILOBZzEZwq7lMngB8C26PspF7huQm1jgxca4VRWM8/3ckv3LMJndl4L2ixwCNE9QoKZqKUe3oOdFECBSxRkOJfCrqir8zom8cveBTBDX+gtQaV+0KBJLngocEDNyAsSrPkbUbQwUxJi6kUIQ9lSVBzY8XWRhkAWJL79O88JytjE1JeUvGD2FgwPDDxzDGy/GCeqJ05oDvU2EDYnvKrhrgltYWJ8NGR29piPvUjFCFNZyF3cUNaomiyYBKYpmb/wMll3VI6KTUSMRTYF4pSwSgILkbrzVoq4AqV6TbQF5ZL/3WzFiifasJl9ykUWOV8WWaxbqQLVOw3ZANBvg9h0P1JG8+vS1pirwy2/aAGCChezfKc8WlBVlkY9TNtDbVSJiJrfNL7LJMW/J4MPk50WOSrHizVAWv6nNbGYampLEcyC4F+tVlwfzYLnYIVqkbF+IAVXJ2clmSNO+Amku3Td4aglBJEpbepEUyRVLPjA8uZF8hyYEIt70PBZhki7jw/+5cy7p34ptxa1Ln0mKydvqzBSYsJ68z3uu4gX/DhRrPbVeF4lam74b00aURT9QOs9w0CxYnWD8GeXDg3gsGCUosC2dFaZETSec/fgR98NTEOaRqwQ8Qzlafbo7uXBUyecz4/uE6/JtHeF634QeIcYdfm+mWfkM9XRFdPRW89I9d9vbnE+tH7fUxsB6nZW2sslzJ+knRqtx/VHLfbvUA8f6oUUUY0SiL3qIlvxJLhhqJRX9V4XA5rR3mti1cjSc3daKwdDV1uD76u85p/KDpmiu9EMLzYfsZa/OJatMsbJ4ty5wt1zcoqyx1pS6KBYdQawYuq4mZegrBpX1T1CkSFhu87XT5Jd4WbmtdVpOtnj86Pj49PT1sdH8rxX1pGC8OgqKsXlTVzuBXNtTnwz33T8aF4GWx1kp4cNLvb1kyLr00dnOf7AboE6Eva52Ty0usShE8I6bsGNkO9D9vRb/MWULNhErak1Z4Hm4DTNhcnNVvodcgeqPD/sHP+/2T/cPTq4P+oH8yODjeOz06uh69fvfyPVyPwnVp6CIqIaLbAvX8GkbT+NOb9MunaxhlaDWn/lL2JDqK+vuu36h/Eh2eXI/6174aHx1HLzJzvee/xMFJo2P/3e1ZUm7N6OD0+OiF+2meoxld77nNkQ3/8Qj+gmT028eziz/iq1dn7+KXZ1fDV8s+/JWpGR249v5yYvTX556n/dwb/PW5lxFL05gIEb6OlTL2c29wEPW/fv16vfctqd4V+7WVbC3PJ6jXrrWr0Wh09gTtavQ2Z3fn4A4SP+W4XW6Rypsuv1X2zmrjO+r3M9OEYvHONnG4KHaBuOdtYruZ7MdJh9SlJZb72bCLXotdlbHYJRn+ssO1atOsD+QdbfZDPPYh6+IQatYd1x0myQ5ewjurSRwgO/DOXLPSFuByonTm8/IjxKmSaDZNBz8XOnP3kuD4cMfJuMhuXQxhR8zto4qGdLhR1sWeIwt/cNIGcLgbgFaF5bUqYVX7IrRoC7PpH7z68/C3f9+cfpkdJzYhL63cbXpw1q7+mj1K1tmQAa46pj5TtEvrfwEAAP//K1Eplw=="
=======
// AssetElasticsearch returns asset data.
// This is the base64 encoded gzipped contents of module/elasticsearch.
func AssetElasticsearch() string {
	return "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"
>>>>>>> Introduce local fields generation
>>>>>>> Introduce local fields generation
}
