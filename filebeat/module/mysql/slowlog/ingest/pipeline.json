{
  "description": "Pipeline for parsing MySQL slow logs.",
  "processors": [{
    "grok": {
      "field": "message",
      "patterns":[
        "^# User@Host: %{USER:user.name}(\\[[^\\]]+\\])? @ (%{HOSTNAME:source.domain})? \\[(%{IP:source.ip})?\\](\\s*Id:\\s* %{NUMBER:mysql.slowlog.id:long})?\n# Query_time: %{NUMBER:mysql.slowlog.query_time.sec:float}\\s* Lock_time: %{NUMBER:mysql.slowlog.lock_time.sec:float}\\s* Rows_sent: %{NUMBER:mysql.slowlog.rows_sent:long}\\s* Rows_examined: %{NUMBER:mysql.slowlog.rows_examined:long}\n(SET timestamp=%{NUMBER:mysql.slowlog.timestamp:long};\n)?%{GREEDYMULTILINE:mysql.slowlog.query}",
        "^# User@Host: %{USER:user.name}\\[%{USER:mysql.slowlog.current_user}\\] @ %{HOSTNAME:source.domain}? \\[%{IP:source.ip}?\\]\n# Thread_id:%{SPACE}%{NUMBER:mysql.slowlog.thread_id}  Schema: %{WORD:mysql.slowlog.schema}?  QC_hit: %{WORD:mysql.slowlog.query_cache_hit}\n# Query_time: %{NUMBER:mysql.slowlog.query_time.sec:float}  Lock_time: %{NUMBER:mysql.slowlog.lock_time.sec:float}  Rows_sent: %{NUMBER:mysql.slowlog.rows_sent:long}  Rows_examined: %{NUMBER:mysql.slowlog.rows_examined:long}\n(# Rows_affected: %{NUMBER:mysql.slowlog.rows_affected:long}\n)?(# Full_scan: %{WORD:mysql.slowlog.full_scan}  Full_join: %{WORD:mysql.slowlog.full_join}  Tmp_table: %{WORD:mysql.slowlog.tmp_table}  Tmp_table_on_disk: %{WORD:mysql.slowlog.tmp_table_on_disk}\n)?(# Filesort: %{WORD:mysql.slowlog.filesort}  Filesort_on_disk: %{WORD:mysql.slowlog.filesort_on_disk}  Merge_passes: %{NUMBER:mysql.slowlog.merge_passes}  Priority_queue: %{WORD:mysql.slowlog.priority_queue}\n)?SET timestamp=%{NUMBER:mysql.slowlog.timestamp:long};\n%{GREEDYMULTILINE:mysql.slowlog.query}"
        ],
      "pattern_definitions" : {
        "GREEDYMULTILINE" : "(.|\n)*"
      },
      "ignore_missing": true
    }
  }, {
    "remove":{
      "field": "message"
    }
  }, {
    "script":{
      "lang": "painless",
      "source": "ctx.event.duration = Math.round(ctx.mysql.slowlog.query_time.sec * 1000000) * 1000",
      "if": "ctx.mysql.slowlog.query_time?.sec != null"
    }
  }, {
    "date": {
      "field": "mysql.slowlog.timestamp",
      "target_field": "@timestamp",
      "formats": ["UNIX"],
      "ignore_failure": true
    }
  }, {
    "gsub": {
      "field": "mysql.slowlog.query",
       "pattern": "\n# Time: [0-9]+ [0-9][0-9]:[0-9][0-9]:[0-9][0-9](\\.[0-9]+)?$",
       "replacement": "",
       "ignore_failure": true
    }
  }],
  "on_failure" : [{
    "set" : {
      "field" : "error.message",
      "value" : "{{ _ingest.on_failure_message }}"
    }
  }]
}
