#!/bin/bash

set -eo pipefail

# Environment variables used
# FLEET_ENROLLMENT_TOKEN - existing enrollment token to be used for enroll
# FLEET_ENROLL - if set to 1 enroll will be performed
# FLEET_SETUP - if  set to 1 fleet setup will be performed
# FLEET_TOKEN_NAME - token name for a token to be created
# KIBANA_HOST - actual kibana host [http://localhost:5601]
# KIBANA_PASSWORD - password for accessing kibana API [changeme]
# KIBANA_USERNAME - username for accessing kibana API [elastic]

function setup(){
  curl -X POST  ${KIBANA_HOST:-http://localhost:5601}/api/ingest_manager/setup -H 'kbn-xsrf: true' -u ${KIBANA_USERNAME:-elastic}:${KIBANA_PASSWORD:-changeme}
  curl -X POST  ${KIBANA_HOST:-http://localhost:5601}/api/ingest_manager/fleet/setup \
    -H 'Content-Type: application/json' \
    -H 'kbn-xsrf: true' \
    -u ${KIBANA_USERNAME:-elastic}:${KIBANA_PASSWORD:-changeme}
}

function enroll(){
    local enrollResp
    local apiKey

    if [[ -n "${FLEET_ENROLLMENT_TOKEN}" ]]; then
      apikey="${FLEET_ENROLLMENT_TOKEN}"
    else
      enrollResp=$(curl ${KIBANA_HOST:-http://localhost:5601}/api/ingest_manager/fleet/enrollment-api-keys \
        -H 'Content-Type: application/json' \
        -H 'kbn-xsrf: true' \
        -u ${KIBANA_USERNAME:-elastic}:${KIBANA_PASSWORD:-changeme} )

      local exitCode=$?
      if [ $exitCode -ne 0 ]; then
        exit $exitCode
      fi
      echo $enrollResp
      local apikeyId=$(echo $enrollResp | jq -r '.list[0].id')
      echo $apikeyId

      enrollResp=$(curl ${KIBANA_HOST:-http://localhost:5601}/api/ingest_manager/fleet/enrollment-api-keys/$apikeyId \
        -H 'Content-Type: application/json' \
        -H 'kbn-xsrf: true' \
        -u ${KIBANA_USERNAME:-elastic}:${KIBANA_PASSWORD:-changeme} )

      exitCode=$?
      if [ $exitCode -ne 0 ]; then
        exit $exitCode
      fi

      apikey=$(echo $enrollResp | jq -r '.item.api_key')
    fi
    echo $apikey

    ./{{ .BeatName }} enroll ${KIBANA_HOST:-http://localhost:5601} $apikey -f
}

if [[ -n "${FLEET_SETUP}" ]] && [[ ${FLEET_SETUP} == 1 ]]; then setup; fi
if [[ -n "${FLEET_ENROLL}" ]] && [[ ${FLEET_ENROLL} == 1 ]]; then enroll; fi

exec {{ .BeatName }} run "$@"
