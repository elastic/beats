#!/usr/bin/env python
import os
import re
import argparse

pattern = re.compile(r'(const\s|)\w*(v|V)ersion\s=\s"(?P<version>.*)"')

def main():
    parser = argparse.ArgumentParser(
        description="Prints the current version at stdout.")
    parser.add_argument(
        '--gofile',
        metavar="version.go",
        default=os.path.join(os.path.dirname(os.path.realpath(__file__)), "..", "libbeat","beat","version.go"),
        help="the path of the go file that contains the version number")
    args = parser.parse_args()

    goversion_filepath = os.path.abspath(args.gofile)

    try:
        with open(goversion_filepath, "r") as f:
            for line in f:
                match = pattern.match(line)
                if match:
                    print(match.group('version'))
                    return
            print ("No version found in file {}".format(goversion_filepath))
    except:
        print ("Can't read file {}".format(goversion_filepath))    
    

if __name__ == "__main__":
    main()
