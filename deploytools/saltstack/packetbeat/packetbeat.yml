################### Packetbeat Configuration Example #########################

# This file contains an overview of various configuration settings. Please consult
# the docs at https://www.elastic.co/guide/en/beats/packetbeat/current/_configuration.html
# for more details.

# The Packetbeat shipper works by sniffing the network traffic between your
# application components. It inserts meta-data about each transaction into
# Elasticsearch.

############################# Shipper ############################################
shipper:

 # The name of the shipper that publishes the network data. It can be used to group
 # all the transactions sent by a single shipper in the web interface.
 # If this options is not defined, the hostname is used.
 name:

 # The tags of the shipper are included in their own field with each
 # transaction published. Tags make it easy to group transactions by different
 # logical properties.
 #tags: ["service1"]

 # Uncomment the following if you want to ignore transactions created
 # by the server on which the shipper is installed. This option is useful
 # to remove duplicates if shippers are installed on multiple servers.
 ignore_outgoing: {{ ignore_outgoing }}

############################# Sniffer ############################################

# Select the network interfaces to sniff the data. You can use the "any"
# keyword to sniff on all connected interfaces.
interfaces:
 device: any


############################# Protocols ######################################
protocols:
  dns:
    # Configure the ports where to listen for DNS traffic. You can disable
    # the DNS protocol by commenting out the list of ports.
    ports: [53]

    # include_authorities controls whether or not the dns.authorities field
    # (authority resource records) is added to messages. The default is false.
    include_authorities: true
    # include_additionals controls whether or not the dns.additionals field
    # (additional resource records) is added to messages. The default is false.
    include_additionals: true

    # send_request and send_response control whether or not the stringified DNS
    # request and response message are added to the result. The default is false.
    # Nearly all data about the request/response is available in the dns.*
    # fields, but this can be useful if you need visibility specifically
    # into the request or the response.
    #send_request:  true
    #send_response: true

  http:

    # Configure the ports where to listen for HTTP traffic. You can disable
    # the http protocol by commenting the list of ports.
    ports: [80, 8080, 8000, 5000, 8002]

    # Uncomment the following to hide certain parameters in URL or forms attached
    # to HTTP requests. The names of the parameters are case insensitive.
    # The value of the parameters will be replaced with the 'xxxxx' string.
    # This is generally useful for avoiding storing user passwords or other
    # sensitive information.
    # Only query parameters and top level form parameters are replaced.
    # hide_keywords: ['pass', 'password', 'passwd']

  memcache:
    # Configure the ports where to listen for memcache traffic. You can disable
    # the memcache protocol by commenting out the list of ports.
    ports: [11211]

    # Uncomment the parseunknown option to force the memcache text protocol parse
    # to parse unknown commands.
    # Default: false
    # Note: All unknown commands MUST not contain any data parts!
    # parseunknown: true


    # Update the maxvalue option to store the values - base64 encoded - in the
    # json output.
    # possible values:
    #    maxvalue: -1  # store all values (text based protocol multi-get)
    #    maxvalue: 0   # store no values at all (default)
    #    maxvalue: N   # store up to N values
    # maxvalues: 0

    # Use maxbytespervalue to limit the number of bytes to be copied per value element.
    # Notes: values will be base64 encoded, so actual size in json document
    #        will be 4 times maxbytespervalue
    #
    # Default: unlimited
    # maxbytespervalue: 100

    # Udp transaction timeout in milliseconds.
    # Default: 200
    # Note: Quiet messages in UDP binary protocol will get response only in error case.
    #       The memcached analyzer will wait for udptransactiontimeout
    #       milliseconds before publishing quiet messages.
    #       Non quiet messages or quiet requests with error response will not
    #       have to wait for the timeout
    # udptransactiontimeout: 200


  mysql:
    # Configure the ports where to listen for MySQL traffic. You can disable
    # the MySQL protocol by commenting out the list of ports.
    ports: [3306]

  pgsql:

    # Configure the ports where to listen for Pgsql traffic. You can disable
    # the Pgsql protocol by commenting out the list of ports.
    ports: [5432]

  redis:

    # Configure the ports where to listen for Redis traffic. You can disable
    # the Redis protocol by commenting out the list of ports.
    ports: [6379]

  thrift:

    # Configure the ports where to listen for Thrift traffic. You can disable
    # the Thrift protocol by commenting out the list of ports.
    ports: [9090]

  mongodb:
    # Configure the ports where to listen for Mongodb traffic. You can disable
    # the Mongodb protocol by commenting out the list of ports.
    ports: [27017]

############################# Output ############################################

# Configure what outputs to use when sending the data collected by packetbeat.
# You can enable one or multiple outputs by setting enabled option to true.
output:

  # Elasticsearch as output
  # Options:
  # host, port: where Elasticsearch is listening on
  # save_topology: specify if the topology is saved in Elasticsearch
  elasticsearch:
    enabled: true
    hosts: ["{{ elasticsearch }}"]
    save_topology: true

  # Redis as output
  # Options:
  # host, port: where Redis is listening on
  # save_topology: specify if the topology is saved in Redis
  #redis:
  #  enabled: true
  #  host: localhost
  #  port: 6379
  #  save_topology: true

  # File as output
  # Options:
  # path: where to save the files
  # filename: name of the files
  # rotate_every_kb: maximum size of the files in path
  # number of files: maximum number of files in path
  #file:
  #  enabled: true
  #  path: "/tmp/packetbeat"
  #  filename: packetbeat
  #  rotate_every_kb: 1000
  #  number_of_files: 7

############################# Processes ############################################

# Configure the processes to be monitored and how to find them. If a process is
# monitored than Packetbeat attempts to use it's name to fill in the `proc` and
# `client_proc` fields.
# The processes can be found by searching their command line by a given string.
#
# Process matching is optional and can be enabled by uncommenting the following
# lines.
#
procs:
  enabled: true
  monitored:
{% for  proc in procs %}
    - process: {{proc}}
      cmdline_grep: {{proc}}
{% endfor %}
