---
outputs:
  default:
    type: elasticsearch
    hosts:
      - >-
        ${ELASTICSEARCH_HOST}
    username: ${ELASTICSEARCH_USERNAME}
    password: ${ELASTICSEARCH_PASSWORD}
agent:
  monitoring:
    enabled: true
    use_output: default
    logs: true
    metrics: true
providers.kubernetes:
  node: ${NODE_NAME}
  scope: node
inputs:
  - name: kubernetes-cluster-metrics
    condition: ${kubernetes_leaderelection.leader} == true
    type: kubernetes/metrics
    use_output: default
    meta:
      package:
        name: kubernetes
        version: {{ .Values.packages.kubernetes }}
    data_stream:
      namespace: default
    streams:
      - data_stream:
          dataset: kubernetes.apiserver
          type: metrics
        metricsets:
          - apiserver
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        hosts:
          - 'https://${env.KUBERNETES_SERVICE_HOST}:${env.KUBERNETES_SERVICE_PORT}'
        period: 30s
        ssl.certificate_authorities:
          - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - data_stream:
          dataset: kubernetes.event
          type: metrics
        metricsets:
          - event
        period: 10s
        add_metadata: true
      - data_stream:
          dataset: kubernetes.state_container
          type: metrics
        metricsets:
          - state_container
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_cronjob
          type: metrics
        metricsets:
          - state_cronjob
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_deployment
          type: metrics
        metricsets:
          - state_deployment
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_job
          type: metrics
        metricsets:
          - state_job
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_node
          type: metrics
        metricsets:
          - state_node
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_persistentvolume
          type: metrics
        metricsets:
          - state_persistentvolume
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_persistentvolumeclaim
          type: metrics
        metricsets:
          - state_persistentvolumeclaim
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_pod
          type: metrics
        metricsets:
          - state_pod
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_replicaset
          type: metrics
        metricsets:
          - state_replicaset
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_resourcequota
          type: metrics
        metricsets:
          - state_resourcequota
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_service
          type: metrics
        metricsets:
          - state_service
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_statefulset
          type: metrics
        metricsets:
          - state_statefulset
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
      - data_stream:
          dataset: kubernetes.state_storageclass
          type: metrics
        metricsets:
          - state_storageclass
        add_metadata: true
        hosts:
          - 'kube-state-metrics:8080'
        period: 10s
  - name: system-logs
    type: logfile
    use_output: default
    meta:
      package:
        name: system
        version: {{ .Values.packages.system }}
    data_stream:
      namespace: default
    streams:
      - data_stream:
          dataset: system.auth
          type: logs
        paths:
          - /var/log/auth.log*
          - /var/log/secure*
        exclude_files:
          - .gz$
        multiline:
          pattern: ^\s
          match: after
        processors:
          - add_fields:
              target: ''
              fields:
                ecs.version: {{ .Values.fields.ecs.version }}
      - data_stream:
          dataset: system.syslog
          type: logs
        paths:
          - /var/log/messages*
          - /var/log/syslog*
        exclude_files:
          - .gz$
        multiline:
          pattern: ^\s
          match: after
        processors:
          - add_fields:
              target: ''
              fields:
                ecs.version: {{ .Values.fields.ecs.version }}
  - name: container-log
    type: logfile
    use_output: default
    meta:
      package:
        name: log
        version: {{ .Values.packages.log }}
    data_stream:
      namespace: default
    streams:
      - data_stream:
          dataset: generic
        symlinks: true
        paths:
          # - /var/lib/docker/containers/*/*-json.log
          # - /var/log/pods/*${kubernetes.container.id}/*/*.log
          - /var/log/containers/*${kubernetes.container.id}.log
  - name: system-metrics
    type: system/metrics
    use_output: default
    meta:
      package:
        name: system
        version: {{ .Values.packages.system }}
    data_stream:
      namespace: default
    streams:
      - data_stream:
          dataset: system.core
          type: metrics
        metricsets:
          - core
        core.metrics:
          - percentages
      - data_stream:
          dataset: system.cpu
          type: metrics
        period: 10s
        cpu.metrics:
          - percentages
          - normalized_percentages
        metricsets:
          - cpu
      - data_stream:
          dataset: system.diskio
          type: metrics
        period: 10s
        diskio.include_devices: null
        metricsets:
          - diskio
      - data_stream:
          dataset: system.filesystem
          type: metrics
        period: 1m
        metricsets:
          - filesystem
        processors:
          - drop_event.when.regexp:
              system.filesystem.mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)
      - data_stream:
          dataset: system.fsstat
          type: metrics
        period: 1m
        metricsets:
          - fsstat
        processors:
          - drop_event.when.regexp:
              system.fsstat.mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)
      - data_stream:
          dataset: system.load
          type: metrics
        period: 10s
        metricsets:
          - load
      - data_stream:
          dataset: system.memory
          type: metrics
        period: 10s
        metricsets:
          - memory
      - data_stream:
          dataset: system.network
          type: metrics
        period: 10s
        network.interfaces: null
        metricsets:
          - network
      - data_stream:
          dataset: system.process
          type: metrics
        process.include_top_n.by_memory: 5
        period: 10s
        processes:
          - .*
        process.include_top_n.by_cpu: 5
        process.cgroups.enabled: false
        process.cmdline.cache.enabled: true
        metricsets:
          - process
        process.include_cpu_ticks: false
        system.hostfs: /hostfs
      - data_stream:
          dataset: system.process_summary
          type: metrics
        period: 10s
        metricsets:
          - process_summary
        system.hostfs: /hostfs
      - data_stream:
          dataset: system.socket_summary
          type: metrics
        period: 10s
        metricsets:
          - socket_summary
        system.hostfs: /hostfs
  - name: kubernetes-node-metrics
    type: kubernetes/metrics
    use_output: default
    meta:
      package:
        name: kubernetes
        version: {{ .Values.packages.kubernetes }}
    data_stream:
      namespace: default
    streams:
      - data_stream:
          dataset: kubernetes.controllermanager
          type: metrics
        metricsets:
          - controllermanager
        hosts:
          - '${kubernetes.pod.ip}:10252'
        period: 10s
        condition: ${kubernetes.pod.labels.component} == 'kube-controller-manager'
      - data_stream:
          dataset: kubernetes.scheduler
          type: metrics
        metricsets:
          - scheduler
        hosts:
          - '${kubernetes.pod.ip}:10251'
        period: 10s
        condition: ${kubernetes.pod.labels.component} == 'kube-scheduler'
      - data_stream:
          dataset: kubernetes.proxy
          type: metrics
        metricsets:
          - proxy
        hosts:
          - 'localhost:10249'
        period: 10s
      - data_stream:
          dataset: kubernetes.container
          type: metrics
        metricsets:
          - container
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        hosts:
          - 'https://${env.NODE_NAME}:10250'
        period: 10s
        ssl.verification_mode: none
      - data_stream:
          dataset: kubernetes.node
          type: metrics
        metricsets:
          - node
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        hosts:
          - 'https://${env.NODE_NAME}:10250'
        period: 10s
        ssl.verification_mode: none
      - data_stream:
          dataset: kubernetes.pod
          type: metrics
        metricsets:
          - pod
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        hosts:
          - 'https://${env.NODE_NAME}:10250'
        period: 10s
        ssl.verification_mode: none
      - data_stream:
          dataset: kubernetes.system
          type: metrics
        metricsets:
          - system
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        hosts:
          - 'https://${env.NODE_NAME}:10250'
        period: 10s
        ssl.verification_mode: none
      - data_stream:
          dataset: kubernetes.volume
          type: metrics
        metricsets:
          - volume
        add_metadata: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        hosts:
          - 'https://${env.NODE_NAME}:10250'
        period: 10s
        ssl.verification_mode: none
{{ if .Values.extraInputs }}
{{- toYaml .Values.extraInputs | nindent 6 }}
{{- end }}
